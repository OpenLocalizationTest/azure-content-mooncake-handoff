<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">76d943eec6829feab1c1488ee66fcd5ac2507fd4</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>通知中心 - 企业推送架构</source>
          <target state="new">通知中心 - 企业推送架构</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>有关在企业环境中使用 Azure 通知中心的指南</source>
          <target state="new">有关在企业环境中使用 Azure 通知中心的指南</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>企业推送架构指南</source>
          <target state="new">企业推送架构指南</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>当今企业正在逐渐趋向为其最终用户（外部）或员工（内部）创建移动应用程序。它们已经拥有现成的后端系统，无论是大型机还是一些 LoB 应用程序都必须集成到移动应用程序体系结构中。本指南将介绍如何最好地实现此集成，并针对常见场景建议可能的解决方案。</source>
          <target state="new">当今企业正在逐渐趋向为其最终用户（外部）或员工（内部）创建移动应用程序。它们已经拥有现成的后端系统，无论是大型机还是一些 LoB 应用程序都必须集成到移动应用程序体系结构中。本指南将介绍如何最好地实现此集成，并针对常见场景建议可能的解决方案。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>一个常见需求是在后端系统中发生了用户感兴趣的事件时，通过其移动应用程序向用户发送推送通知。例如，某个在 iPhone 上安装了银行应用的客户想要在记入她帐户的借方金额超过特定值时收到通知，或者在 Intranet 方案中，某个在 Windows Phone 上安装了预算审批应用的财务部门员工，希望在收到审批请求时获得通知。</source>
          <target state="new">一个常见需求是在后端系统中发生了用户感兴趣的事件时，通过其移动应用程序向用户发送推送通知。例如，某个在 iPhone 上安装了银行应用的客户想要在记入她帐户的借方金额超过特定值时收到通知，或者在 Intranet 方案中，某个在 Windows Phone 上安装了预算审批应用的财务部门员工，希望在收到审批请求时获得通知。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>银行帐户或审批处理很可能要在某个后端系统中完成，该系统必须启动到用户的推送。可能有多个此类后端系统，所有这些系统在事件触发通知时都必须生成同样的逻辑来实现推送。此处的复杂性在于将多个后端系统与单个推送系统集成在一起，在此系统中，最终用户可能已订阅不同通知，甚至可能存在多个移动应用程序，例如，对于 Intranet 移动应用来说，一个移动应用程序可能需要从多个此类后端系统接收通知。后端系统不知道或不需要知道推送语义/技术，因此在这里常见的解决方案通常是引入一个组件，该组件轮询后端系统是否有任何感兴趣的事件并负责将推送消息发送到客户端。在这里我们将讨论一个更好的解决方案，该解决方案使用 Azure Service Bus - 主题/订阅模型，在使解决方案可缩放的同时降低了复杂性。</source>
          <target state="new">银行帐户或审批处理很可能要在某个后端系统中完成，该系统必须启动到用户的推送。可能有多个此类后端系统，所有这些系统在事件触发通知时都必须生成同样的逻辑来实现推送。此处的复杂性在于将多个后端系统与单个推送系统集成在一起，在此系统中，最终用户可能已订阅不同通知，甚至可能存在多个移动应用程序，例如，对于 Intranet 移动应用来说，一个移动应用程序可能需要从多个此类后端系统接收通知。后端系统不知道或不需要知道推送语义/技术，因此在这里常见的解决方案通常是引入一个组件，该组件轮询后端系统是否有任何感兴趣的事件并负责将推送消息发送到客户端。在这里我们将讨论一个更好的解决方案，该解决方案使用 Azure Service Bus - 主题/订阅模型，在使解决方案可缩放的同时降低了复杂性。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>下面是该解决方案的一般体系结构（普遍用于多个移动应用，但在只有一个移动应用时也同样适用）</source>
          <target state="new">下面是该解决方案的一般体系结构（普遍用于多个移动应用，但在只有一个移动应用时也同样适用）</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>体系结构</source>
          <target state="new">体系结构</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>此体系结构图中的关键部分是 Azure 服务总线，它提供了主题/订阅编程模型（可在<bpt id="p1">[</bpt><ept id="p1">服务总线 Pub/Sub 编程]</ept>中找到有关它的更多内容）。接收方，在本示例中是移动后端（通常是 <bpt id="p2">[</bpt><ept id="p2">Azure 移动服务]</ept>，它将启动到移动应用的推送）不直接从后端系统接收消息，我们改用 <bpt id="p3">[</bpt><ept id="p3">Azure 服务总线]</ept>提供的中间抽象层，移动后端通过它可从一个或多个后端系统接收消息。需要为每个后端系统（例如，帐户、人力资源、财务，这些基本上是感兴趣的“主题”，将启动要作为推送通知发送的消息）创建一个服务总线主题。后端系统会将消息发送到这些主题。移动后端可以通过创建服务总线订阅来订阅一个或多个此类主题。这将授权移动后端从相应的后端系统接收通知。移动后端将继续在其订阅上侦听消息，一条消息到达后，它将立即返回并将该消息作为通知发送到通知中心。然后，通知中心最终将该消息传送到移动应用。因此，若要汇总关键组件，我们使用了：</source>
          <target state="new">此体系结构图中的关键部分是 Azure 服务总线，它提供了主题/订阅编程模型（可在<bpt id="p1">[</bpt><ept id="p1">服务总线 Pub/Sub 编程]</ept>中找到有关它的更多内容）。接收方，在本示例中是移动后端（通常是 <bpt id="p2">[</bpt><ept id="p2">Azure 移动服务]</ept>，它将启动到移动应用的推送）不直接从后端系统接收消息，我们改用 <bpt id="p3">[</bpt><ept id="p3">Azure 服务总线]</ept>提供的中间抽象层，移动后端通过它可从一个或多个后端系统接收消息。需要为每个后端系统（例如，帐户、人力资源、财务，这些基本上是感兴趣的“主题”，将启动要作为推送通知发送的消息）创建一个服务总线主题。后端系统会将消息发送到这些主题。移动后端可以通过创建服务总线订阅来订阅一个或多个此类主题。这将授权移动后端从相应的后端系统接收通知。移动后端将继续在其订阅上侦听消息，一条消息到达后，它将立即返回并将该消息作为通知发送到通知中心。然后，通知中心最终将该消息传送到移动应用。因此，若要汇总关键组件，我们使用了：</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>后端系统（LoB/旧系统）</source>
          <target state="new">后端系统（LoB/旧系统）</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>创建服务总线主题</source>
          <target state="new">创建服务总线主题</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>发送消息</source>
          <target state="new">发送消息</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>移动后端</source>
          <target state="new">移动后端</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>创建服务订阅</source>
          <target state="new">创建服务订阅</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>接收消息（来自后端系统）</source>
          <target state="new">接收消息（来自后端系统）</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>将通知发送到客户端（通过 Azure 通知中心）</source>
          <target state="new">将通知发送到客户端（通过 Azure 通知中心）</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>移动 应用程序</source>
          <target state="new">移动 应用程序</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>接收并显示通知</source>
          <target state="new">接收并显示通知</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>好处：</source>
          <target state="new">好处：</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>接收方（通过通知中心的移动应用/服务）和发送方（后端系统）之间的这种解耦使得只需要最小的更改即可集成其他后端系统。</source>
          <target state="new">接收方（通过通知中心的移动应用/服务）和发送方（后端系统）之间的这种解耦使得只需要最小的更改即可集成其他后端系统。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>这还使得采用多个移动应用的方案能够从一个或多个后端系统接收事件。</source>
          <target state="new">这还使得采用多个移动应用的方案能够从一个或多个后端系统接收事件。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>先决条件</source>
          <target state="new">先决条件</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>你应完成以下教程以熟悉相关概念以及常见的创建和配置步骤：</source>
          <target state="new">你应完成以下教程以熟悉相关概念以及常见的创建和配置步骤：</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">服务总线 Pub/Sub 编程]</ept> - 此教程说明了使用服务总线主题/订阅的详细信息、如何创建命名空间以包含主题/订阅、如何通过它们发送和接收消息。</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">服务总线 Pub/Sub 编程]</ept> - 此教程说明了使用服务总线主题/订阅的详细信息、如何创建命名空间以包含主题/订阅、如何通过它们发送和接收消息。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">通知中心 - Windows 通用教程]</ept> - 此教程说明了如何设置 Windows 应用商店应用以及如何使用通知中心注册，然后接收通知。</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">通知中心 - Windows 通用教程]</ept> - 此教程说明了如何设置 Windows 应用商店应用以及如何使用通知中心注册，然后接收通知。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>代码示例</source>
          <target state="new">代码示例</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>完整的示例代码可在<bpt id="p1">[</bpt><ept id="p1">通知中心示例]</ept>中找到。它分为三个组件：</source>
          <target state="new">完整的示例代码可在<bpt id="p1">[</bpt><ept id="p1">通知中心示例]</ept>中找到。它分为三个组件：</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>EnterprisePushBackendSystem</source>
          <target state="new">EnterprisePushBackendSystem</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>a.此项目使用 <bpt id="p1">*</bpt>WindowsAzure.ServiceBus<ept id="p1">*</ept> Nuget 包，并基于<bpt id="p2">[</bpt><ept id="p2">服务总线 Pub/Sub 编程]</ept>构建。</source>
          <target state="new">a.此项目使用 <bpt id="p1">*</bpt>WindowsAzure.ServiceBus<ept id="p1">*</ept> Nuget 包，并基于<bpt id="p2">[</bpt><ept id="p2">服务总线 Pub/Sub 编程]</ept>构建。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>b.这是一个简单 C# 控制台应用，模拟启动要传送到移动应用的消息的 LoB 系统。</source>
          <target state="new">b.这是一个简单 C# 控制台应用，模拟启动要传送到移动应用的消息的 LoB 系统。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>c.</source>
          <target state="new">c.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CreateTopic`</ph> 用于创建我们将消息发送到的服务总线主题。</source>
          <target state="new"><ph id="ph1">`CreateTopic`</ph> 用于创建我们将消息发送到的服务总线主题。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>d.</source>
          <target state="new">d.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SendMessage`</ph> 用于将消息发送到此服务总线主题。出于本示例的目的，此处我们只定期向此主题发送一组随机消息。通常将有在事件发生时发送消息的后端系统。</source>
          <target state="new"><ph id="ph1">`SendMessage`</ph> 用于将消息发送到此服务总线主题。出于本示例的目的，此处我们只定期向此主题发送一组随机消息。通常将有在事件发生时发送消息的后端系统。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>ReceiveAndSendNotification</source>
          <target state="new">ReceiveAndSendNotification</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>a.此项目使用 <bpt id="p1">*</bpt>WindowsAzure.ServiceBus<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>Microsoft.Web.WebJobs.Publish<ept id="p2">*</ept> Nuget 包，并基于<bpt id="p3">[</bpt><ept id="p3">服务总线 Pub/Sub 编程]</ept>构建。</source>
          <target state="new">a.此项目使用 <bpt id="p1">*</bpt>WindowsAzure.ServiceBus<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>Microsoft.Web.WebJobs.Publish<ept id="p2">*</ept> Nuget 包，并基于<bpt id="p3">[</bpt><ept id="p3">服务总线 Pub/Sub 编程]</ept>构建。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>b.这是另一个 C# 控制台应用，我们将它作为 <bpt id="p1">[</bpt><ept id="p1">Azure WebJob]</ept> 运行，因为它必须连续运行以侦听来自 LoB/后端系统的消息。它将是移动后端的一部分。</source>
          <target state="new">b.这是另一个 C# 控制台应用，我们将它作为 <bpt id="p1">[</bpt><ept id="p1">Azure WebJob]</ept> 运行，因为它必须连续运行以侦听来自 LoB/后端系统的消息。它将是移动后端的一部分。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>c.</source>
          <target state="new">c.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CreateSubscription`</ph> 用于为后端系统将消息发送到的主题创建服务总线订阅。此组件将根据业务方案，为相应主题创建一个或多个订阅（例如，一些订阅可能从人力资源系统接收消息，一些订阅从财务系统接收消息，等等）</source>
          <target state="new"><ph id="ph1">`CreateSubscription`</ph> 用于为后端系统将消息发送到的主题创建服务总线订阅。此组件将根据业务方案，为相应主题创建一个或多个订阅（例如，一些订阅可能从人力资源系统接收消息，一些订阅从财务系统接收消息，等等）</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>d.ReceiveMessageAndSendNotification 用于从使用其订阅的主题读取消息，如果读取成功，则构建要使用 Azure 通知中心发送到移动应用程序的通知（在此示例方案中为 Windows 本机 toast 通知）。</source>
          <target state="new">d.ReceiveMessageAndSendNotification 用于从使用其订阅的主题读取消息，如果读取成功，则构建要使用 Azure 通知中心发送到移动应用程序的通知（在此示例方案中为 Windows 本机 toast 通知）。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>e.若要将此项发布为 <bpt id="p1">**</bpt>WebJob<ept id="p1">**</ept>，请右键单击 Visual Studio 中的解决方案，然后选择“发布为 WebJob”</source>
          <target state="new">e.若要将此项发布为 <bpt id="p1">**</bpt>WebJob<ept id="p1">**</ept>，请右键单击 Visual Studio 中的解决方案，然后选择“发布为 WebJob”</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>f.选择发布配置文件并创建新的 Azure 网站（如果它尚未存在），该网站将托管此 WebJob，拥有该网站后，单击“发布”。</source>
          <target state="new">f.选择发布配置文件并创建新的 Azure 网站（如果它尚未存在），该网站将托管此 WebJob，拥有该网站后，单击“发布”。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>g.将该作业配置为“连续运行”，以便在你登录到 Azure 管理门户时，应看到如下内容：</source>
          <target state="new">g.将该作业配置为“连续运行”，以便在你登录到 Azure 管理门户时，应看到如下内容：</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>EnterprisePushMobileApp</source>
          <target state="new">EnterprisePushMobileApp</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>a.这是一个 Windows 应用商店应用程序，它将从作为移动后端的一部分运行的 WebJob 接收 toast 通知并显示它。这基于<bpt id="p1">[</bpt><ept id="p1">通知中心 - Windows 通用教程]</ept>构建。</source>
          <target state="new">a.这是一个 Windows 应用商店应用程序，它将从作为移动后端的一部分运行的 WebJob 接收 toast 通知并显示它。这基于<bpt id="p1">[</bpt><ept id="p1">通知中心 - Windows 通用教程]</ept>构建。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>b.确保应用程序已启用接收 toast 通知。</source>
          <target state="new">b.确保应用程序已启用接收 toast 通知。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>c.确保在应用启动时（替换 <bpt id="p1">*</bpt>HubName<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>DefaultListenSharedAccessSignature<ept id="p2">*</ept> 后）调用以下通知中心注册代码：</source>
          <target state="new">c.确保在应用启动时（替换 <bpt id="p1">*</bpt>HubName<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>DefaultListenSharedAccessSignature<ept id="p2">*</ept> 后）调用以下通知中心注册代码：</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>运行示例：</source>
          <target state="new">运行示例：</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>确保你的 WebJob 成功运行并且计划为“连续运行”。</source>
          <target state="new">确保你的 WebJob 成功运行并且计划为“连续运行”。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>运行 <bpt id="p1">**</bpt>EnterprisePushMobileApp<ept id="p1">**</ept>，这将启动 Windows 应用商店应用。</source>
          <target state="new">运行 <bpt id="p1">**</bpt>EnterprisePushMobileApp<ept id="p1">**</ept>，这将启动 Windows 应用商店应用。</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>运行 <bpt id="p1">**</bpt>EnterprisePushBackendSystem<ept id="p1">**</ept> 控制台应用程序，这将模拟 LoB 后端并将开始发送消息，你应该会看到如下所示的 toast 通知：</source>
          <target state="new">运行 <bpt id="p1">**</bpt>EnterprisePushBackendSystem<ept id="p1">**</ept> 控制台应用程序，这将模拟 LoB 后端并将开始发送消息，你应该会看到如下所示的 toast 通知：</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>消息最初发送到正被 Web 作业中的服务总线订阅监视的服务总线主题。收到消息后，将创建通知并将其发送到移动应用。当你转到 Azure 管理门户中 Web 作业的“日志”链接时，可以仔细查看 WebJob 日志来确认处理：</source>
          <target state="new">消息最初发送到正被 Web 作业中的服务总线订阅监视的服务总线主题。收到消息后，将创建通知并将其发送到移动应用。当你转到 Azure 管理门户中 Web 作业的“日志”链接时，可以仔细查看 WebJob 日志来确认处理：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>