<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">43c3c84044880e305f36734e103922eb0b9a6b50</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>在通用 Windows 应用中使用脱机数据 | Microsoft Azure</source>
          <target state="new">在通用 Windows 应用中使用脱机数据 | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何在通用 Windows 应用中使用 Azure 移动服务缓存和同步脱机数据</source>
          <target state="new">了解如何在通用 Windows 应用中使用 Azure 移动服务缓存和同步脱机数据</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>在移动服务中使用脱机数据同步</source>
          <target state="new">在移动服务中使用脱机数据同步</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;</source>
          <target state="new">&amp;nbsp;</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>本教程说明如何使用 Azure 移动服务向通用 Windows 应用商店应用程序添加脱机支持。脱机支持将允许您在应用程序脱机的情况下与本地数据库交互。应用程序与后端数据库联机后，将使用脱机功能同步本地更改。</source>
          <target state="new">本教程说明如何使用 Azure 移动服务向通用 Windows 应用商店应用程序添加脱机支持。脱机支持将允许您在应用程序脱机的情况下与本地数据库交互。应用程序与后端数据库联机后，将使用脱机功能同步本地更改。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>在本教程中，你将更新<bpt id="p1">[</bpt><ept id="p1">移动服务入门]</ept>教程中的通用应用项目，以支持 Azure 移动服务的脱机功能。随后，你将在断开连接的脱机情况下添加数据，将这些项目同步到联机数据库，然后登录到 <bpt id="p2">[</bpt><ept id="p2">Azure 经典门户]</ept>，查看在运行应用程序时对数据所做的更改。</source>
          <target state="new">在本教程中，你将更新<bpt id="p1">[</bpt><ept id="p1">移动服务入门]</ept>教程中的通用应用项目，以支持 Azure 移动服务的脱机功能。随后，你将在断开连接的脱机情况下添加数据，将这些项目同步到联机数据库，然后登录到 <bpt id="p2">[</bpt><ept id="p2">Azure 经典门户]</ept>，查看在运行应用程序时对数据所做的更改。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>本教程旨在帮助你更好地了解如何使用移动服务通过 Azure 在 Windows 应用商店应用程序中存储和检索数据。如果这是你第一次体验移动服务，则应先完成<bpt id="p1">[</bpt><ept id="p1">移动服务入门]</ept>教程。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>本教程旨在帮助你更好地了解如何使用移动服务通过 Azure 在 Windows 应用商店应用程序中存储和检索数据。如果这是你第一次体验移动服务，则应先完成<bpt id="p1">[</bpt><ept id="p1">移动服务入门]</ept>教程。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>先决条件</source>
          <target state="new">先决条件</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>本教程需要的内容如下：</source>
          <target state="new">本教程需要的内容如下：</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>在 Windows 8.1 上运行的 Visual Studio 2013。</source>
          <target state="new">在 Windows 8.1 上运行的 Visual Studio 2013。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>完成<bpt id="p1">[</bpt><ept id="p1">移动服务入门]</ept>。</source>
          <target state="new">完成<bpt id="p1">[</bpt><ept id="p1">移动服务入门]</ept>。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Azure 移动服务 SDK 版本 1.3.0（或更高版本）</source>
          <target state="new">Azure 移动服务 SDK 版本 1.3.0（或更高版本）</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Azure 移动服务 SQLite Store 版本 1.0.0（或更高版本）</source>
          <target state="new">Azure 移动服务 SQLite Store 版本 1.0.0（或更高版本）</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>SQLite for Windows 8.1</source>
          <target state="new">SQLite for Windows 8.1</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>一个 Azure 帐户。如果你没有帐户，可以注册 Azure 试用版并取得多达 10 个免费的移动服务，即使在试用期结束之后仍可继续使用这些服务。有关详细信息，请参阅 <bpt id="p1">[</bpt>Azure 试用<ept id="p1">](/pricing/1rmb-trial/)</ept>。</source>
          <target state="new">一个 Azure 帐户。如果你没有帐户，可以注册 Azure 试用版并取得多达 10 个免费的移动服务，即使在试用期结束之后仍可继续使用这些服务。有关详细信息，请参阅 <bpt id="p1">[</bpt>Azure 试用<ept id="p1">](/pricing/1rmb-trial/)</ept>。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="enable-offline-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>更新应用程序以支持脱机功能</source>
          <target state="new"><ph id="ph1">&lt;a name="enable-offline-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>更新应用程序以支持脱机功能</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>当你的移动服务处于脱机情况时，可使用 Azure 移动服务脱机功能与本地数据库交互。若要在你的应用中使用这些功能，请将 <ph id="ph1">`MobileServiceClient.SyncContext`</ph> 初始化到本地存储。然后，通过 <ph id="ph2">`IMobileServiceSyncTable`</ph> 接口引用你的表。在本教程中，我们要将 SQLite 用于本地存储。</source>
          <target state="new">当你的移动服务处于脱机情况时，可使用 Azure 移动服务脱机功能与本地数据库交互。若要在你的应用中使用这些功能，请将 <ph id="ph1">`MobileServiceClient.SyncContext`</ph> 初始化到本地存储。然后，通过 <ph id="ph2">`IMobileServiceSyncTable`</ph> 接口引用你的表。在本教程中，我们要将 SQLite 用于本地存储。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>你可以跳过此部分，直接从移动服务的 GitHub 示例存储库中获取已有脱机支持的示例项目。启用了脱机支持的示例项目位于此处：<bpt id="p1">[</bpt><ept id="p1">TodoList 脱机示例]</ept>。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>你可以跳过此部分，直接从移动服务的 GitHub 示例存储库中获取已有脱机支持的示例项目。启用了脱机支持的示例项目位于此处：<bpt id="p1">[</bpt><ept id="p1">TodoList 脱机示例]</ept>。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>安装适用于 Windows 8.1 和 Windows Phone 8.1 的 SQLite 运行时。</source>
          <target state="new">安装适用于 Windows 8.1 和 Windows Phone 8.1 的 SQLite 运行时。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Windows 8.1 运行时：<ept id="p1">**</ept>安装 <bpt id="p2">[</bpt><ept id="p2">SQLite for Windows 8.1]</ept>。</source>
          <target state="new"><bpt id="p1">**</bpt>Windows 8.1 运行时：<ept id="p1">**</ept>安装 <bpt id="p2">[</bpt><ept id="p2">SQLite for Windows 8.1]</ept>。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Windows Phone 8.1：<ept id="p1">**</ept>安装 <bpt id="p2">[</bpt><ept id="p2">SQLite for Windows Phone 8.1]</ept>。</source>
          <target state="new"><bpt id="p1">**</bpt>Windows Phone 8.1：<ept id="p1">**</ept>安装 <bpt id="p2">[</bpt><ept id="p2">SQLite for Windows Phone 8.1]</ept>。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>如果你使用的是 Internet Explorer，则单击用于安装 SQLite 的链接可能会提示你下载 .zip 文件形式的 .vsix。使用 .vsix 扩展名而不是 .zip 将文件保存到硬盘上的某一位置。在 Windows 资源管理器中双击 .vsix 文件以运行安装程序。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>如果你使用的是 Internet Explorer，则单击用于安装 SQLite 的链接可能会提示你下载 .zip 文件形式的 .vsix。使用 .vsix 扩展名而不是 .zip 将文件保存到硬盘上的某一位置。在 Windows 资源管理器中双击 .vsix 文件以运行安装程序。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 中，打开在<bpt id="p1">[</bpt><ept id="p1">移动服务入门]</ept>教程中完成的项目。安装适用于 Windows 8.1 运行时和 Windows Phone 8.1 项目的 <bpt id="p2">**</bpt>WindowsAzure.MobileServices.SQLiteStore<ept id="p2">**</ept> NuGet 包。</source>
          <target state="new">在 Visual Studio 中，打开在<bpt id="p1">[</bpt><ept id="p1">移动服务入门]</ept>教程中完成的项目。安装适用于 Windows 8.1 运行时和 Windows Phone 8.1 项目的 <bpt id="p2">**</bpt>WindowsAzure.MobileServices.SQLiteStore<ept id="p2">**</ept> NuGet 包。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Windows 8.1：<ept id="p1">**</ept>在解决方案资源管理器中，右键单击 Windows 8.1 项目，然后单击“管理 Nuget 包”以运行 NuGet 包管理器。搜索 <bpt id="p2">**</bpt>SQLiteStore<ept id="p2">**</ept> 以安装 <ph id="ph1">`WindowsAzure.MobileServices.SQLiteStore`</ph> 包。</source>
          <target state="new"><bpt id="p1">**</bpt>Windows 8.1：<ept id="p1">**</ept>在解决方案资源管理器中，右键单击 Windows 8.1 项目，然后单击“管理 Nuget 包”以运行 NuGet 包管理器。搜索 <bpt id="p2">**</bpt>SQLiteStore<ept id="p2">**</ept> 以安装 <ph id="ph1">`WindowsAzure.MobileServices.SQLiteStore`</ph> 包。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Windows Phone 8.1：<ept id="p1">**</ept>右键单击 Windows Phone 8.1 项目，然后单击“管理 Nuget 包”以运行 NuGet 包管理器。搜索 <bpt id="p2">**</bpt>SQLiteStore<ept id="p2">**</ept> 以安装 <ph id="ph1">`WindowsAzure.MobileServices.SQLiteStore`</ph> 包。</source>
          <target state="new"><bpt id="p1">**</bpt>Windows Phone 8.1：<ept id="p1">**</ept>右键单击 Windows Phone 8.1 项目，然后单击“管理 Nuget 包”以运行 NuGet 包管理器。搜索 <bpt id="p2">**</bpt>SQLiteStore<ept id="p2">**</ept> 以安装 <ph id="ph1">`WindowsAzure.MobileServices.SQLiteStore`</ph> 包。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>如果安装过程中创建了对较旧版本的 SQLite 的引用，可以直接删除该重复引用。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>如果安装过程中创建了对较旧版本的 SQLite 的引用，可以直接删除该重复引用。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>在解决方案资源管理器中，右键单击适用于 Windows 8.1 运行时和 Windows Phone 8.1 平台项目的“引用”，并确保存在对位于“扩展”部分的 SQLite 的引用。</source>
          <target state="new">在解决方案资源管理器中，右键单击适用于 Windows 8.1 运行时和 Windows Phone 8.1 平台项目的“引用”，并确保存在对位于“扩展”部分的 SQLite 的引用。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Windows 8.1 运行时</source>
          <target state="new">Windows 8.1 运行时</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Windows Phone 8.1</source>
          <target state="new">Windows Phone 8.1</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>SQLite 运行时要求你将所生成的项目的处理器体系结构更改为“x86”、“x64”或“ARM”。不支持“任何 CPU”。在解决方案资源管理器中，单击顶部的“解决方案”，然后将处理器体系结构下拉框更改为要测试的受支持设置之一。</source>
          <target state="new">SQLite 运行时要求你将所生成的项目的处理器体系结构更改为“x86”、“x64”或“ARM”。不支持“任何 CPU”。在解决方案资源管理器中，单击顶部的“解决方案”，然后将处理器体系结构下拉框更改为要测试的受支持设置之一。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>在解决方案资源管理器中，在共享项目中打开 MainPage.cs 文件。使用文件顶部的语句取消注释以下内容：</source>
          <target state="new">在解决方案资源管理器中，在共享项目中打开 MainPage.cs 文件。使用文件顶部的语句取消注释以下内容：</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>在 MainPage.cs 中，注释 <ph id="ph1">`todoTable`</ph> 的定义，取消注释以下调用 <ph id="ph2">`MobileServicesClient.GetSyncTable()`</ph> 的行上的定义：</source>
          <target state="new">在 MainPage.cs 中，注释 <ph id="ph1">`todoTable`</ph> 的定义，取消注释以下调用 <ph id="ph2">`MobileServicesClient.GetSyncTable()`</ph> 的行上的定义：</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>在 MainPage.cs 中，在标记为 <ph id="ph1">`Offline sync`</ph> 的区域中取消注释方法 <ph id="ph2">`InitLocalStoreAsync`</ph> 和 <ph id="ph3">`SyncAsync`</ph>。方法 <ph id="ph4">`InitLocalStoreAsync`</ph> 使用 SQLite 存储初始化客户端同步上下文。</source>
          <target state="new">在 MainPage.cs 中，在标记为 <ph id="ph1">`Offline sync`</ph> 的区域中取消注释方法 <ph id="ph2">`InitLocalStoreAsync`</ph> 和 <ph id="ph3">`SyncAsync`</ph>。方法 <ph id="ph4">`InitLocalStoreAsync`</ph> 使用 SQLite 存储初始化客户端同步上下文。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>在 <ph id="ph1">`OnNavigatedTo`</ph> 事件处理程序中，取消注释对 <ph id="ph2">`InitLocalStoreAsync`</ph> 的调用：</source>
          <target state="new">在 <ph id="ph1">`OnNavigatedTo`</ph> 事件处理程序中，取消注释对 <ph id="ph2">`InitLocalStoreAsync`</ph> 的调用：</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>在方法 <ph id="ph1">`InsertTodoItem`</ph>、<ph id="ph2">`UpdateCheckedTodoItem`</ph> 和 <ph id="ph3">`ButtonRefresh_Click`</ph> 中取消注释对 <ph id="ph4">`SyncAsync`</ph> 的 3 次调用：</source>
          <target state="new">在方法 <ph id="ph1">`InsertTodoItem`</ph>、<ph id="ph2">`UpdateCheckedTodoItem`</ph> 和 <ph id="ph3">`ButtonRefresh_Click`</ph> 中取消注释对 <ph id="ph4">`SyncAsync`</ph> 的 3 次调用：</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>在 <ph id="ph1">`SyncAsync`</ph> 方法中添加异常处理程序：</source>
          <target state="new">在 <ph id="ph1">`SyncAsync`</ph> 方法中添加异常处理程序：</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>在此示例中，我们将检索远程 <ph id="ph1">`todoTable`</ph> 中的所有记录，但也可以通过传递查询来筛选记录。<ph id="ph2">`PullAsync`</ph> 的第一个参数是用于增量同步的查询 ID；增量同步使用 <ph id="ph3">`UpdatedAt`</ph> 时间戳以仅获取自上次同步以来修改的记录。查询 ID 应对于你的应用程序中的每个逻辑查询都是唯一的描述性字符串。若选择不要增量同步，请传递 <ph id="ph4">`null`</ph> 作为查询 ID。此命令会检索每个请求的操作，这是可能效率低下上的所有记录。</source>
          <target state="new">在此示例中，我们将检索远程 <ph id="ph1">`todoTable`</ph> 中的所有记录，但也可以通过传递查询来筛选记录。<ph id="ph2">`PullAsync`</ph> 的第一个参数是用于增量同步的查询 ID；增量同步使用 <ph id="ph3">`UpdatedAt`</ph> 时间戳以仅获取自上次同步以来修改的记录。查询 ID 应对于你的应用程序中的每个逻辑查询都是唯一的描述性字符串。若选择不要增量同步，请传递 <ph id="ph4">`null`</ph> 作为查询 ID。此命令会检索每个请求的操作，这是可能效率低下上的所有记录。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>* 若要从设备本地存储中删除已在移动设备数据库中删除的记录，应启用“<bpt id="p1">[</bpt><ept id="p1">软删除]</ept>”。否则，你的应用程序应定期调用 <ph id="ph2">`IMobileServiceSyncTable.PurgeAsync()`</ph> 以清除本地存储。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>* 若要从设备本地存储中删除已在移动设备数据库中删除的记录，应启用“<bpt id="p1">[</bpt><ept id="p1">软删除]</ept>”。否则，你的应用程序应定期调用 <ph id="ph2">`IMobileServiceSyncTable.PurgeAsync()`</ph> 以清除本地存储。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>请注意，推送和请求操作可能会发生 <ph id="ph1">`MobileServicePushFailedException`</ph>。由于拉取操作会内部执行推送来确保所有表及所有关系都一致，因此也可能发生该调用。下一篇教程<bpt id="p1">[</bpt><ept id="p1">使用移动服务脱机支持处理冲突]</ept>说明了如何处理这些同步相关的异常。</source>
          <target state="new">请注意，推送和请求操作可能会发生 <ph id="ph1">`MobileServicePushFailedException`</ph>。由于拉取操作会内部执行推送来确保所有表及所有关系都一致，因此也可能发生该调用。下一篇教程<bpt id="p1">[</bpt><ept id="p1">使用移动服务脱机支持处理冲突]</ept>说明了如何处理这些同步相关的异常。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 中，按 <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> 键重新生成并运行应用程序。应用程序的行为将与其脱机同步更改前相同，因为它对插入、更新和刷新操作执行了同步操作。</source>
          <target state="new">在 Visual Studio 中，按 <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> 键重新生成并运行应用程序。应用程序的行为将与其脱机同步更改前相同，因为它对插入、更新和刷新操作执行了同步操作。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="update-sync"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>更新应用程序的同步行为</source>
          <target state="new"><ph id="ph1">&lt;a name="update-sync"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>更新应用程序的同步行为</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>在本部分中，你将修改应用，使其不对插入和更新操作同步，而仅在按“刷新”按钮时同步。然后，将中断与移动服务以模拟脱机情况下的应用程序连接。在添加数据项时，数据项将保存在本地存储区中，而不同步到移动服务。</source>
          <target state="new">在本部分中，你将修改应用，使其不对插入和更新操作同步，而仅在按“刷新”按钮时同步。然后，将中断与移动服务以模拟脱机情况下的应用程序连接。在添加数据项时，数据项将保存在本地存储区中，而不同步到移动服务。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>打开共享项目中的 MainPage.cs。编辑方法 <ph id="ph1">`InsertTodoItem`</ph> 和 <ph id="ph2">`UpdateCheckedTodoItem`</ph> 以注释掉对 <ph id="ph3">`SyncAsync`</ph> 的调用。</source>
          <target state="new">打开共享项目中的 MainPage.cs。编辑方法 <ph id="ph1">`InsertTodoItem`</ph> 和 <ph id="ph2">`UpdateCheckedTodoItem`</ph> 以注释掉对 <ph id="ph3">`SyncAsync`</ph> 的调用。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>编辑共享项目中的 App.xaml.cs。注释掉 <bpt id="p1">**</bpt>MobileServiceClient<ept id="p1">**</ept> 的初始化并添加使用无效移动服务 URL 的以下行：</source>
          <target state="new">编辑共享项目中的 App.xaml.cs。注释掉 <bpt id="p1">**</bpt>MobileServiceClient<ept id="p1">**</ept> 的初始化并添加使用无效移动服务 URL 的以下行：</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>在 <ph id="ph1">`InitLocalStoreAsync()`</ph> 中，注释掉对 <ph id="ph2">`SyncAsync()`</ph> 的调用，使应用不在启动时执行同步。</source>
          <target state="new">在 <ph id="ph1">`InitLocalStoreAsync()`</ph> 中，注释掉对 <ph id="ph2">`SyncAsync()`</ph> 的调用，使应用不在启动时执行同步。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>按 <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> 生成并运行应用。输入一些新的 todo 项目，然后为每个项目单击“保存”。新的 Todo 项目在推送到移动服务之前，只存在于本地存储中。客户端应用程序的行为就像它已连接到支持所有创建、读取、更新、删除 (CRUD) 操作的移动服务一样。</source>
          <target state="new">按 <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> 生成并运行应用。输入一些新的 todo 项目，然后为每个项目单击“保存”。新的 Todo 项目在推送到移动服务之前，只存在于本地存储中。客户端应用程序的行为就像它已连接到支持所有创建、读取、更新、删除 (CRUD) 操作的移动服务一样。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>关闭应用程序并重新启动它，以验证你创建的新项目是否已永久保存到本地存储中。</source>
          <target state="new">关闭应用程序并重新启动它，以验证你创建的新项目是否已永久保存到本地存储中。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="update-online-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>更新应用程序以重新连接移动服务</source>
          <target state="new"><ph id="ph1">&lt;a name="update-online-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>更新应用程序以重新连接移动服务</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>在本节中，你会将应用程序重新连接到移动服务。这模拟的是通过移动服务从脱机状态转为联机状态的应用程序。当您按“刷新”按钮时，数据将同步到您的移动服务。</source>
          <target state="new">在本节中，你会将应用程序重新连接到移动服务。这模拟的是通过移动服务从脱机状态转为联机状态的应用程序。当您按“刷新”按钮时，数据将同步到您的移动服务。</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>打开共享项目中的 App.xaml.cs。取消注释之前的 <ph id="ph1">`MobileServiceClient`</ph> 初始化，重新添加正确的移动服务 URL 和应用密钥。</source>
          <target state="new">打开共享项目中的 App.xaml.cs。取消注释之前的 <ph id="ph1">`MobileServiceClient`</ph> 初始化，重新添加正确的移动服务 URL 和应用密钥。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>按 <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> 键重新生成并运行应用。请注意，数据看上去与脱机情况下相同，即使应用程序现已连接到移动服务。这是因为此应用程序始终使用指向本地存储区的 <ph id="ph1">`IMobileServiceSyncTable`</ph>。</source>
          <target state="new">按 <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> 键重新生成并运行应用。请注意，数据看上去与脱机情况下相同，即使应用程序现已连接到移动服务。这是因为此应用程序始终使用指向本地存储区的 <ph id="ph1">`IMobileServiceSyncTable`</ph>。</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>登录到 <bpt id="p1">[</bpt><ept id="p1">Azure 经典门户]</ept>，查看你的移动服务数据库。如果你的服务将 JavaScript 后端用于移动服务，则可以通过移动服务的“数据”选项卡来游览数据。</source>
          <target state="new">登录到 <bpt id="p1">[</bpt><ept id="p1">Azure 经典门户]</ept>，查看你的移动服务数据库。如果你的服务将 JavaScript 后端用于移动服务，则可以通过移动服务的“数据”选项卡来游览数据。</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>如果将 .NET 后端用于移动服务，请在 Visual Studio 中，转到“服务器资源管理器”-&gt;“Azure”-&gt;“SQL 数据库”。右键单击数据库并选择“在 SQL Server 对象资源管理器中打开”。</source>
          <target state="new">如果将 .NET 后端用于移动服务，请在 Visual Studio 中，转到“服务器资源管理器”-&gt;“Azure”-&gt;“SQL 数据库”。右键单击数据库并选择“在 SQL Server 对象资源管理器中打开”。</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>请注意，数据尚未在数据库和本地存储之间进行同步。</source>
          <target state="new">请注意，数据尚未在数据库和本地存储之间进行同步。</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>在应用中，按“刷新”按钮。这将导致应用调用 <ph id="ph1">`PushAsync`</ph> 和 <ph id="ph2">`PullAsync`</ph>。此推送操作会将本地存储项发送到移动服务，然后从移动服务检索新数据。</source>
          <target state="new">在应用中，按“刷新”按钮。这将导致应用调用 <ph id="ph1">`PushAsync`</ph> 和 <ph id="ph2">`PullAsync`</ph>。此推送操作会将本地存储项发送到移动服务，然后从移动服务检索新数据。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>推送操作从 <ph id="ph1">`MobileServiceClient.SyncContext`</ph> 而非 <ph id="ph2">`IMobileServicesSyncTable`</ph> 执行，并将更改推送到与该同步上下文关联的所有表中。这是为了应对表之间存在关系的情况。</source>
          <target state="new">推送操作从 <ph id="ph1">`MobileServiceClient.SyncContext`</ph> 而非 <ph id="ph2">`IMobileServicesSyncTable`</ph> 执行，并将更改推送到与该同步上下文关联的所有表中。这是为了应对表之间存在关系的情况。</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>在应用程序中，单击要在本地存储区中完成的几个项旁边的复选框。</source>
          <target state="new">在应用程序中，单击要在本地存储区中完成的几个项旁边的复选框。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>再次按“刷新”按钮，这将导致调用 <ph id="ph1">`SyncAsync`</ph>。<ph id="ph2">`SyncAsync`</ph> 同时调用推送和拉取，但在本例中，我们可能已删除了对 <ph id="ph3">`PushAsync`</ph> 的调用。这是因为“拉取时始终先执行推送操作”。这是为了确保本地存储中的所有表以及关系都保持一致。</source>
          <target state="new">再次按“刷新”按钮，这将导致调用 <ph id="ph1">`SyncAsync`</ph>。<ph id="ph2">`SyncAsync`</ph> 同时调用推送和拉取，但在本例中，我们可能已删除了对 <ph id="ph3">`PushAsync`</ph> 的调用。这是因为“拉取时始终先执行推送操作”。这是为了确保本地存储中的所有表以及关系都保持一致。</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>摘要</source>
          <target state="new">摘要</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>使用移动服务脱机支持处理冲突</source>
          <target state="new">使用移动服务脱机支持处理冲突</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>使用移动服务中的软删除</source>
          <target state="new">使用移动服务中的软删除</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>