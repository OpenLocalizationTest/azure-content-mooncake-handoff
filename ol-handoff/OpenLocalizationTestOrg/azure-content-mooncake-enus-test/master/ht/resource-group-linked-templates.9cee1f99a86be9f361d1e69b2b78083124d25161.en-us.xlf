<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">805e1a5af4bd91c24a0b870ae934084f1252baec</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>将已链接的模版与 Azure 资源管理器配合使用</source>
          <target state="new">将已链接的模版与 Azure 资源管理器配合使用</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>介绍如何使用 Azure 资源管理器模板中的链接模板创建一个模块化的模板的解决方案。演示如何传递参数值、指定参数文件和动态创建的 URL。</source>
          <target state="new">介绍如何使用 Azure 资源管理器模板中的链接模板创建一个模块化的模板的解决方案。演示如何传递参数值、指定参数文件和动态创建的 URL。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>将已链接的模版与 Azure 资源管理器配合使用</source>
          <target state="new">将已链接的模版与 Azure 资源管理器配合使用</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>从一个 Azure 资源管理器模板中，您可以链接到能使您将部署分解成一组有针对性并且有特定用途的模板的另一个模板。就像将一个应用程序分解为多个代码类那样，分解可提供测试、重用和可读性方面的好处。</source>
          <target state="new">从一个 Azure 资源管理器模板中，您可以链接到能使您将部署分解成一组有针对性并且有特定用途的模板的另一个模板。就像将一个应用程序分解为多个代码类那样，分解可提供测试、重用和可读性方面的好处。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>可以将参数从主模板传递到链接的模板，并可以直接将这些参数映射到由调用模板公开提供的参数或变量。链接模板还可以将输出变量传递回源模板中，启用模板之间的双向数据交换。</source>
          <target state="new">可以将参数从主模板传递到链接的模板，并可以直接将这些参数映射到由调用模板公开提供的参数或变量。链接模板还可以将输出变量传递回源模板中，启用模板之间的双向数据交换。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>链接到模板</source>
          <target state="new">链接到模板</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>通过在主模板内添加部署源，从而在两个模板间创建指向链接模板的链接。对链接模版的 URI 设置 <bpt id="p1">**</bpt>templateLink<ept id="p1">**</ept> 属性。您可以通过直接在您的模板中指定值或通过链接到参数文件，为链接模板提供参数值。以下示例使用 <bpt id="p2">**</bpt>parameters<ept id="p2">**</ept> 属性直接指定参数值。</source>
          <target state="new">通过在主模板内添加部署源，从而在两个模板间创建指向链接模板的链接。对链接模版的 URI 设置 <bpt id="p1">**</bpt>templateLink<ept id="p1">**</ept> 属性。您可以通过直接在您的模板中指定值或通过链接到参数文件，为链接模板提供参数值。以下示例使用 <bpt id="p2">**</bpt>parameters<ept id="p2">**</ept> 属性直接指定参数值。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>资源管理器服务必须能够访问链接模板，这意味着，你不能为链接模板指定本地文件或只能在本地网络上使用的文件。只能提供包含 <bpt id="p1">**</bpt>http<ept id="p1">**</ept> 或 <bpt id="p2">**</bpt>https<ept id="p2">**</ept> 的 URI 值。一种做法是将链接模板放在存储帐户中并对该项使用 URI，如下所示。</source>
          <target state="new">资源管理器服务必须能够访问链接模板，这意味着，你不能为链接模板指定本地文件或只能在本地网络上使用的文件。只能提供包含 <bpt id="p1">**</bpt>http<ept id="p1">**</ept> 或 <bpt id="p2">**</bpt>https<ept id="p2">**</ept> 的 URI 值。一种做法是将链接模板放在存储帐户中并对该项使用 URI，如下所示。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>链接到参数文件</source>
          <target state="new">链接到参数文件</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>以下示例使用 <bpt id="p1">**</bpt>parametersLink<ept id="p1">**</ept> 属性链接到参数文件。</source>
          <target state="new">以下示例使用 <bpt id="p1">**</bpt>parametersLink<ept id="p1">**</ept> 属性链接到参数文件。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>链接参数文件的 URI 值不能是本地文件，并且必须包含 <bpt id="p1">**</bpt>http<ept id="p1">**</ept> 或 <bpt id="p2">**</bpt>https<ept id="p2">**</ept>。</source>
          <target state="new">链接参数文件的 URI 值不能是本地文件，并且必须包含 <bpt id="p1">**</bpt>http<ept id="p1">**</ept> 或 <bpt id="p2">**</bpt>https<ept id="p2">**</ept>。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>使用变量来链接模板</source>
          <target state="new">使用变量来链接模板</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>前面的示例演示了用于模板链接的硬编码 URL 值。这种方法可能适用于简单的模板，但如果使用一组大型模块化模板时，将无法正常工作。相反，可以创建一个存储主模板的基 URL 的静态变量，然后从基 URL 动态创建用于链接模板的 URL。这种方法的好处是可以轻松地移动或派生模板，因为您只需在主模板中更改静态变量。主模板将在整个分解后的模板中传递正确的 URI。</source>
          <target state="new">前面的示例演示了用于模板链接的硬编码 URL 值。这种方法可能适用于简单的模板，但如果使用一组大型模块化模板时，将无法正常工作。相反，可以创建一个存储主模板的基 URL 的静态变量，然后从基 URL 动态创建用于链接模板的 URL。这种方法的好处是可以轻松地移动或派生模板，因为您只需在主模板中更改静态变量。主模板将在整个分解后的模板中传递正确的 URI。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>以下示例演示如何使用基 URL 来创建两个用于链接模板的 URL（<bpt id="p1">**</bpt>sharedTemplateUrl<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>vmTemplate<ept id="p2">**</ept>）。</source>
          <target state="new">以下示例演示如何使用基 URL 来创建两个用于链接模板的 URL（<bpt id="p1">**</bpt>sharedTemplateUrl<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>vmTemplate<ept id="p2">**</ept>）。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>你还可以使用 <bpt id="p1">[</bpt>deployment()<ept id="p1">](../resource-group-template-functions/#deployment)</ept> 获取当前模板的基 URL，并使用该 URL 来获取同一位置其他模板的 URL。如果你的模板位置发生变化（原因可能是改版）或者你想要避免对模板文件中的 URL 进行硬编码，则此操作非常有用。</source>
          <target state="new">你还可以使用 <bpt id="p1">[</bpt>deployment()<ept id="p1">](../resource-group-template-functions/#deployment)</ept> 获取当前模板的基 URL，并使用该 URL 来获取同一位置其他模板的 URL。如果你的模板位置发生变化（原因可能是改版）或者你想要避免对模板文件中的 URL 进行硬编码，则此操作非常有用。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>将值传递回链接模板</source>
          <target state="new">将值传递回链接模板</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>如果你需要将值从链接模板传递到主模板，则可以在链接模板的<bpt id="p1">**</bpt>输出<ept id="p1">**</ept>部分创建一个值。</source>
          <target state="new">如果你需要将值从链接模板传递到主模板，则可以在链接模板的<bpt id="p1">**</bpt>输出<ept id="p1">**</ept>部分创建一个值。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>创作模板</source>
          <target state="new">创作模板</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>部署模板</source>
          <target state="new">部署模板</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>