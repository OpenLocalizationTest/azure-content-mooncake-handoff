<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a32f74b797a78b9b4db98dd47f9dfe60c0396f2</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>我在 Azure 自动化中的第一个 PowerShell 工作流 Runbook | Azure</source>
          <target state="new">我在 Azure 自动化中的第一个 PowerShell 工作流 Runbook | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>本教程指导你使用 PowerShell 工作流创建、测试和发布一个简单的文本 Runbook。文中涵盖了多个概念，例如，对 Azure 资源进行身份验证和输入参数。</source>
          <target state="new">本教程指导你使用 PowerShell 工作流创建、测试和发布一个简单的文本 Runbook。文中涵盖了多个概念，例如，对 Azure 资源进行身份验证和输入参数。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>我的第一个 PowerShell 工作流 Runbook</source>
          <target state="new">我的第一个 PowerShell 工作流 Runbook</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>本教程将指导你在 Azure 自动化中创建 PowerShell 工作流 Runbook。我们将从一个简单的 Runbook 开始，我们将测试和发布该 Runbook，同时介绍如何跟踪 Runbook 作业的状态。然后我们将通过修改 Runbook 来实际管理 Azure 资源，这种情况下将启动 Azure 虚拟机。然后我们将通过添加 Runbook 参数来使该 Runbook 更稳健。</source>
          <target state="new">本教程将指导你在 Azure 自动化中创建 PowerShell 工作流 Runbook。我们将从一个简单的 Runbook 开始，我们将测试和发布该 Runbook，同时介绍如何跟踪 Runbook 作业的状态。然后我们将通过修改 Runbook 来实际管理 Azure 资源，这种情况下将启动 Azure 虚拟机。然后我们将通过添加 Runbook 参数来使该 Runbook 更稳健。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>先决条件</source>
          <target state="new">先决条件</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>为了完成本教程，你需要满足以下条件。</source>
          <target state="new">为了完成本教程，你需要满足以下条件。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Azure 订阅创建新存储帐户。如果你没有订阅，可以<bpt id="p1">[</bpt>注册免费试用版<ept id="p1">](/pricing/1rmb-trial/)</ept>。</source>
          <target state="new">Azure 订阅创建新存储帐户。如果你没有订阅，可以<bpt id="p1">[</bpt>注册免费试用版<ept id="p1">](/pricing/1rmb-trial/)</ept>。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>用于保存 Runbook 的<bpt id="p1">[</bpt>自动化帐户<ept id="p1">](/documentation/articles/automation-configuring)</ept>。</source>
          <target state="new">用于保存 Runbook 的<bpt id="p1">[</bpt>自动化帐户<ept id="p1">](/documentation/articles/automation-configuring)</ept>。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Azure 虚拟机。我们将停止并启动该计算机，因此其不应为生产用计算机。</source>
          <target state="new">Azure 虚拟机。我们将停止并启动该计算机，因此其不应为生产用计算机。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>用于对 Azure 资源进行身份验证的 <bpt id="p1">[</bpt>Azure Active Directory 和自动化资产<ept id="p1">](/documentation/articles/automation-configuring)</ept>。此用户必须有权启动和停止虚拟机。</source>
          <target state="new">用于对 Azure 资源进行身份验证的 <bpt id="p1">[</bpt>Azure Active Directory 和自动化资产<ept id="p1">](/documentation/articles/automation-configuring)</ept>。此用户必须有权启动和停止虚拟机。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>步骤 1 - 创建新的 Runbook</source>
          <target state="new">步骤 1 - 创建新的 Runbook</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>我们首先创建一个输出文本 <bpt id="p1">*</bpt>Hello World<ept id="p1">*</ept> 的简单 Runbook 。</source>
          <target state="new">我们首先创建一个输出文本 <bpt id="p1">*</bpt>Hello World<ept id="p1">*</ept> 的简单 Runbook 。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>在 Azure 管理门户中，单击“新建”&gt;“应用程序服务”&gt;“自动化”&gt;“RUNBOOK”&gt;“快速创建”。</source>
          <target state="new">在 Azure 管理门户中，单击“新建”&gt;“应用程序服务”&gt;“自动化”&gt;“RUNBOOK”&gt;“快速创建”。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>输入 <bpt id="p1">**</bpt>RUNBOOK 名称<ept id="p1">**</ept>和<bpt id="p2">**</bpt>说明<ept id="p2">**</ept>，然后选择一个<bpt id="p3">**</bpt>自动化帐户<ept id="p3">**</ept>。如果你没有自动化帐户，可以通过选择“创建新的自动化帐户”并输入“帐户名”来创建一个</source>
          <target state="new">输入 <bpt id="p1">**</bpt>RUNBOOK 名称<ept id="p1">**</ept>和<bpt id="p2">**</bpt>说明<ept id="p2">**</ept>，然后选择一个<bpt id="p3">**</bpt>自动化帐户<ept id="p3">**</ept>。如果你没有自动化帐户，可以通过选择“创建新的自动化帐户”并输入“帐户名”来创建一个</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>创建 Runbook 后，可以在自动化帐户的“RUNBOOK”磁贴中找到它。</source>
          <target state="new">创建 Runbook 后，可以在自动化帐户的“RUNBOOK”磁贴中找到它。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>单击 Runbook 的“创作”磁贴以启用文本编辑器。</source>
          <target state="new">单击 Runbook 的“创作”磁贴以启用文本编辑器。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>步骤 2 - 将代码添加到 Runbook</source>
          <target state="new">步骤 2 - 将代码添加到 Runbook</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>你可以直接将代码键入 Runbook 中，或者通过“库”控件选择 cmdlet、Runbook 和资产，并使用任何相关的参数将它们添加到 Runbook。在本演练中，我们将直接键入 Runbook。</source>
          <target state="new">你可以直接将代码键入 Runbook 中，或者通过“库”控件选择 cmdlet、Runbook 和资产，并使用任何相关的参数将它们添加到 Runbook。在本演练中，我们将直接键入 Runbook。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>我们的 Runbook 目前是空的，只有必需的<bpt id="p1">*</bpt>工作流<ept id="p1">*</ept>关键字、Runbook 名称以及括住整个工作流的大括号。</source>
          <target state="new">我们的 Runbook 目前是空的，只有必需的<bpt id="p1">*</bpt>工作流<ept id="p1">*</ept>关键字、Runbook 名称以及括住整个工作流的大括号。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Runbook 控制<ph id="ph2">](./media/automation-first-runbook-textual/empty-runbook.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Runbook 控制<ph id="ph2">](./media/automation-first-runbook-textual/empty-runbook.png)</ph></target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>在括号之间键入 <bpt id="p1">*</bpt>Write-Output "Hello World"<ept id="p1">*</ept>。</source>
          <target state="new">在括号之间键入 <bpt id="p1">*</bpt>Write-Output "Hello World"<ept id="p1">*</ept>。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Hello world<ph id="ph2">](./media/automation-first-runbook-textual/hello-world.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Hello world<ph id="ph2">](./media/automation-first-runbook-textual/hello-world.png)</ph></target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>通过单击“保存”来保存 Runbook。</source>
          <target state="new">通过单击“保存”来保存 Runbook。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>步骤 3 - 测试 Runbook</source>
          <target state="new">步骤 3 - 测试 Runbook</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>在我们发布 Runbook 使其可在生产中使用之前，我们要对其进行测试以确保其能正常工作。测试 Runbook 时，你可以运行其“草稿”版本并以交互方式查看其输出。</source>
          <target state="new">在我们发布 Runbook 使其可在生产中使用之前，我们要对其进行测试以确保其能正常工作。测试 Runbook 时，你可以运行其“草稿”版本并以交互方式查看其输出。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>单击“测试”打开“测试”窗格。然后单击“是”确认。</source>
          <target state="new">单击“测试”打开“测试”窗格。然后单击“是”确认。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>几秒钟后，你将看到输出窗格中显示消息“Hello World”。</source>
          <target state="new">几秒钟后，你将看到输出窗格中显示消息“Hello World”。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>步骤 4 - 发布和启动 Runbook</source>
          <target state="new">步骤 4 - 发布和启动 Runbook</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>我们刚刚创建的 Runbook 仍处于草稿模式。我们需要发布该 Runbook，然后才可将其用于生产。当发布 Runbook 时，你可以用草稿版本覆盖现有的已发布版本。在本例中，我们还没有已发布版本，因为我们刚刚创建 Runbook。</source>
          <target state="new">我们刚刚创建的 Runbook 仍处于草稿模式。我们需要发布该 Runbook，然后才可将其用于生产。当发布 Runbook 时，你可以用草稿版本覆盖现有的已发布版本。在本例中，我们还没有已发布版本，因为我们刚刚创建 Runbook。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>单击“发布”以发布该 Runbook，然后在出现提示时单击“是”。</source>
          <target state="new">单击“发布”以发布该 Runbook，然后在出现提示时单击“是”。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>如果你在自动化帐户的“Runbook”磁贴中查看该 Runbook，它的“创作状态”会显示为“已发布”。</source>
          <target state="new">如果你在自动化帐户的“Runbook”磁贴中查看该 Runbook，它的“创作状态”会显示为“已发布”。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>单击“启动”以启动 Runbook，然后在出现提示时单击“是”。</source>
          <target state="new">单击“启动”以启动 Runbook，然后在出现提示时单击“是”。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>单击“查看作业”以查看刚刚启动的作业的摘要。</source>
          <target state="new">单击“查看作业”以查看刚刚启动的作业的摘要。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>作业状态显示在“作业摘要”中，几秒钟后，“输出”下面会显示前面执行测试后的相同输出。</source>
          <target state="new">作业状态显示在“作业摘要”中，几秒钟后，“输出”下面会显示前面执行测试后的相同输出。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>返回到你的 Runbook。在“作业”磁贴下，你可以看到创建的作业列表将筛选上述 Runbook。</source>
          <target state="new">返回到你的 Runbook。在“作业”磁贴下，你可以看到创建的作业列表将筛选上述 Runbook。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>单击一个作业，你可以看到该作业的“摘要”和“历史记录”。</source>
          <target state="new">单击一个作业，你可以看到该作业的“摘要”和“历史记录”。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>步骤 5 - 添加身份验证来管理 Azure 资源</source>
          <target state="new">步骤 5 - 添加身份验证来管理 Azure 资源</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>我们已经测试并发布 Runbook，但到目前为止它不执行任何有用的操作。我们想要让其管理 Azure 资源。然而，除非使用“先决条件”中引用的凭据对其进行身份验证，否则它将无法进行管理<bpt id="p1">[</bpt><ept id="p1">](#prerequisites)</ept>。我们使用 <bpt id="p2">**</bpt>Add-AzureAccount<ept id="p2">**</ept> cmdlet 实现此目的。</source>
          <target state="new">我们已经测试并发布 Runbook，但到目前为止它不执行任何有用的操作。我们想要让其管理 Azure 资源。然而，除非使用“先决条件”中引用的凭据对其进行身份验证，否则它将无法进行管理<bpt id="p1">[</bpt><ept id="p1">](#prerequisites)</ept>。我们使用 <bpt id="p2">**</bpt>Add-AzureAccount<ept id="p2">**</ept> cmdlet 实现此目的。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>通过单击“创作”磁贴 &gt;“草稿”标记 &gt;“编辑 Runbook”打开文本编辑器。</source>
          <target state="new">通过单击“创作”磁贴 &gt;“草稿”标记 &gt;“编辑 Runbook”打开文本编辑器。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>我们不再需要 <bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> 行，因此请直接删除它。</source>
          <target state="new">我们不再需要 <bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> 行，因此请直接删除它。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>将光标放在大括号之间的空白行上。</source>
          <target state="new">将光标放在大括号之间的空白行上。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>单击“插入”&gt;“设置”&gt;“获取 Windows PowerShell 凭据”，然后选择所需的凭据。</source>
          <target state="new">单击“插入”&gt;“设置”&gt;“获取 Windows PowerShell 凭据”，然后选择所需的凭据。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>如果你没有凭据，可以通过单击“管理”&gt;“添加凭据”来创建一个凭据。有关详细信息，请参阅 <bpt id="p1">[</bpt>Azure Active Directory 用户和自动化凭据资产<ept id="p1">](/documentation/articles/automation-configuring)</ept>。</source>
          <target state="new">如果你没有凭据，可以通过单击“管理”&gt;“添加凭据”来创建一个凭据。有关详细信息，请参阅 <bpt id="p1">[</bpt>Azure Active Directory 用户和自动化凭据资产<ept id="p1">](/documentation/articles/automation-configuring)</ept>。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>Get-AutomationPSCredential<ept id="p1">**</ept> 前面，输入 <bpt id="p2">*</bpt>$Credential =<ept id="p2">*</ept> 以将凭据分配给变量。</source>
          <target state="new">在 <bpt id="p1">**</bpt>Get-AutomationPSCredential<ept id="p1">**</ept> 前面，输入 <bpt id="p2">*</bpt>$Credential =<ept id="p2">*</ept> 以将凭据分配给变量。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>在下一行中键入 <bpt id="p1">*</bpt>Add-AzureAccount -Credential $Credential –Environment AzureChinaCloud<ept id="p1">*</ept>。</source>
          <target state="new">在下一行中键入 <bpt id="p1">*</bpt>Add-AzureAccount -Credential $Credential –Environment AzureChinaCloud<ept id="p1">*</ept>。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>单击“测试”，然后在出现提示时单击“是”。</source>
          <target state="new">单击“测试”，然后在出现提示时单击“是”。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>完成后，你应会收到类似于下面的输出，这是向凭据中的用户返回的信息。其中确认凭据有效。</source>
          <target state="new">完成后，你应会收到类似于下面的输出，这是向凭据中的用户返回的信息。其中确认凭据有效。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>身份验证</source>
          <target state="new">身份验证</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>步骤 6 – 添加用于启动虚拟机的代码</source>
          <target state="new">步骤 6 – 添加用于启动虚拟机的代码</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>在 Runbook 对 Azure 订阅进行身份验证后，我们可以管理资源。我们将添加一个命令用于启动虚拟机。你可以在你的 Azure 订阅中选取任何虚拟机，现在我们会将该名称硬编码到 cmdlet 中。</source>
          <target state="new">在 Runbook 对 Azure 订阅进行身份验证后，我们可以管理资源。我们将添加一个命令用于启动虚拟机。你可以在你的 Azure 订阅中选取任何虚拟机，现在我们会将该名称硬编码到 cmdlet 中。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">*</bpt>Add-AzureAccount<ept id="p1">*</ept> 后面，键入 <bpt id="p2">*</bpt>Start-AzureVM -Name 'VMName' -ServiceName 'VMServiceName'<ept id="p2">*</ept> 并提供要启动的虚拟机的名称和服务名称。</source>
          <target state="new">在 <bpt id="p1">*</bpt>Add-AzureAccount<ept id="p1">*</ept> 后面，键入 <bpt id="p2">*</bpt>Start-AzureVM -Name 'VMName' -ServiceName 'VMServiceName'<ept id="p2">*</ept> 并提供要启动的虚拟机的名称和服务名称。</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>保存 Runbook，然后单击“测试”，以便我们可以测试 Runbook。</source>
          <target state="new">保存 Runbook，然后单击“测试”，以便我们可以测试 Runbook。</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>步骤 7 - 将输入参数添加到 Runbook</source>
          <target state="new">步骤 7 - 将输入参数添加到 Runbook</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>我们的 Runbook 目前会启动我们在 Runbook 中硬编码的虚拟机，但如果可以在启动 Runbook 时指定虚拟机，它会更有用。我们现在将输入参数添加到 Runbook，以提供该功能。</source>
          <target state="new">我们的 Runbook 目前会启动我们在 Runbook 中硬编码的虚拟机，但如果可以在启动 Runbook 时指定虚拟机，它会更有用。我们现在将输入参数添加到 Runbook，以提供该功能。</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>将 <bpt id="p1">*</bpt>VMName<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>VMServiceName<ept id="p2">*</ept> 的参数添加到 Runbook，并将这些变量与 <bpt id="p3">**</bpt>Start-AzureVM<ept id="p3">**</ept> cmdlet 配合使用，如下图所示。</source>
          <target state="new">将 <bpt id="p1">*</bpt>VMName<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>VMServiceName<ept id="p2">*</ept> 的参数添加到 Runbook，并将这些变量与 <bpt id="p3">**</bpt>Start-AzureVM<ept id="p3">**</ept> cmdlet 配合使用，如下图所示。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>保存 Runbook 并打开“测试”窗格。请注意，现在可以为将在测试中使用的两个输入变量提供值。</source>
          <target state="new">保存 Runbook 并打开“测试”窗格。请注意，现在可以为将在测试中使用的两个输入变量提供值。</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>关闭“测试”窗格。</source>
          <target state="new">关闭“测试”窗格。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>单击“发布”以发布 Runbook 的新版本。</source>
          <target state="new">单击“发布”以发布 Runbook 的新版本。</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>停止在上一步中启动的虚拟机。</source>
          <target state="new">停止在上一步中启动的虚拟机。</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>单击“启动”以启动 Runbook。键入要启动的虚拟机的 <bpt id="p1">**</bpt>VMName<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>VMServiceName<ept id="p2">**</ept>。</source>
          <target state="new">单击“启动”以启动 Runbook。键入要启动的虚拟机的 <bpt id="p1">**</bpt>VMName<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>VMServiceName<ept id="p2">**</ept>。</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>一旦 Runbook 完成后，检查已启动的虚拟机。</source>
          <target state="new">一旦 Runbook 完成后，检查已启动的虚拟机。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>