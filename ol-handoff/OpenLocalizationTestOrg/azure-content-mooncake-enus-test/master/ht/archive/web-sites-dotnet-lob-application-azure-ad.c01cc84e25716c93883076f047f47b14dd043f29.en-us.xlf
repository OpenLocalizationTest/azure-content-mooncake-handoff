<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f73a4e18addab894143cc919e54016306f8a837e</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>在 Azure 中创建使用 Azure Active Directory 身份验证的 .NET MVC Web 应用</source>
          <target state="new">在 Azure 中创建使用 Azure Active Directory 身份验证的 .NET MVC Web 应用</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>学习如何在使用 Azure Active Directory 进行身份验证的 Azure 中创建 ASP.NET MVC 业务线应用程序</source>
          <target state="new">学习如何在使用 Azure Active Directory 进行身份验证的 Azure 中创建 ASP.NET MVC 业务线应用程序</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>在 Azure 中创建使用 Azure Active Directory 身份验证的 .NET MVC Web 应用</source>
          <target state="new">在 Azure 中创建使用 Azure Active Directory 身份验证的 .NET MVC Web 应用</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>在本文中，你将了解如何在使用本地 <bpt id="p1">[</bpt>Azure Active Directory<ept id="p1">](/home/features/identity/)</ept> 作为标识提供者的 <bpt id="p2">[</bpt>Azure Web 应用<ept id="p2">](/documentation/services/web-sites/)</ept>中创建 ASP.NET MVC 业务线应用程序。你还将了解如何使用 <bpt id="p3">[</bpt>Azure Active Directory Graph 客户端库<ept id="p3">](http://blogs.msdn.com/b/aadgraphteam/archive/2014/06/02/azure-active-directory-graph-client-library-1-0-publish.aspx)</ept>查询应用程序中的目录数据。</source>
          <target state="new">在本文中，你将了解如何在使用本地 <bpt id="p1">[</bpt>Azure Active Directory<ept id="p1">](/home/features/identity/)</ept> 作为标识提供者的 <bpt id="p2">[</bpt>Azure Web 应用<ept id="p2">](/documentation/services/web-sites/)</ept>中创建 ASP.NET MVC 业务线应用程序。你还将了解如何使用 <bpt id="p3">[</bpt>Azure Active Directory Graph 客户端库<ept id="p3">](http://blogs.msdn.com/b/aadgraphteam/archive/2014/06/02/azure-active-directory-graph-client-library-1-0-publish.aspx)</ept>查询应用程序中的目录数据。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>使用的 Azure Active Directory 租户可以是仅限 Azure 的目录，或者与本地 Active Directory (AD) 进行目录同步，以便为本地或远程的辅助角色创建单一登录体验。</source>
          <target state="new">使用的 Azure Active Directory 租户可以是仅限 Azure 的目录，或者与本地 Active Directory (AD) 进行目录同步，以便为本地或远程的辅助角色创建单一登录体验。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>对于 Azure Web 应用，只需单击几下鼠标，就能配置针对 Azure Active Directory 租户的身份验证。有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Active Directory 在 Azure 中进行身份验证<ept id="p1">](/documentation/articles/web-sites-authentication-authorization)</ept>。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>对于 Azure Web 应用，只需单击几下鼠标，就能配置针对 Azure Active Directory 租户的身份验证。有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Active Directory 在 Azure 中进行身份验证<ept id="p1">](/documentation/articles/web-sites-authentication-authorization)</ept>。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>要生成的项目</source>
          <target state="new">要生成的项目</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>你将在 Azure 中生成用于跟踪工作项并具有以下功能的简单的业务线创建-读取-更新-删除 (CRUD) 应用程序：</source>
          <target state="new">你将在 Azure 中生成用于跟踪工作项并具有以下功能的简单的业务线创建-读取-更新-删除 (CRUD) 应用程序：</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>根据 Azure Active Directory 对用户进行身份验证</source>
          <target state="new">根据 Azure Active Directory 对用户进行身份验证</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>实现登录和注销功能</source>
          <target state="new">实现登录和注销功能</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>使用 <ph id="ph1">`[Authorize]`</ph> 授权用户执行不同的 CRUD 操作</source>
          <target state="new">使用 <ph id="ph1">`[Authorize]`</ph> 授权用户执行不同的 CRUD 操作</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>使用 <bpt id="p1">[</bpt>Azure Active Directory 图形 API<ept id="p1">](http://msdn.microsoft.com/zh-cn/library/azure/hh974476.aspx)</ept> 查询 Azure Active Directory 数据</source>
          <target state="new">使用 <bpt id="p1">[</bpt>Azure Active Directory 图形 API<ept id="p1">](http://msdn.microsoft.com/zh-cn/library/azure/hh974476.aspx)</ept> 查询 Azure Active Directory 数据</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>使用 <bpt id="p1">[</bpt>Microsoft.Owin<ept id="p1">](http://www.asp.net/aspnet/overview/owin-and-katana/an-overview-of-project-katana)</ept>（而不是 Windows Identity Foundation (WIF)），它代表了 ASP.NET 的未来发展方向，与 WIF 相比，它的身份验证和授权设置要简单得多</source>
          <target state="new">使用 <bpt id="p1">[</bpt>Microsoft.Owin<ept id="p1">](http://www.asp.net/aspnet/overview/owin-and-katana/an-overview-of-project-katana)</ept>（而不是 Windows Identity Foundation (WIF)），它代表了 ASP.NET 的未来发展方向，与 WIF 相比，它的身份验证和授权设置要简单得多</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>所需的项目</source>
          <target state="new">所需的项目</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>若要完成本教程，你需要以下项目：</source>
          <target state="new">若要完成本教程，你需要以下项目：</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>一个 Azure Active Directory 租户，其中的用户已分配到不同的组</source>
          <target state="new">一个 Azure Active Directory 租户，其中的用户已分配到不同的组</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>在 Azure Active Directory 租户上创建应用程序的权限</source>
          <target state="new">在 Azure Active Directory 租户上创建应用程序的权限</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Visual Studio 2013</source>
          <target state="new">Visual Studio 2013</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Azure SDK 2.5.1<ept id="p1">](https://www.microsoft.com/web/handlers/webpi.ashx/getinstaller/VWDOrVs2013AzurePack.appids)</ept> 或更高版本</source>
          <target state="new"><bpt id="p1">[</bpt>Azure SDK 2.5.1<ept id="p1">](https://www.microsoft.com/web/handlers/webpi.ashx/getinstaller/VWDOrVs2013AzurePack.appids)</ept> 或更高版本</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>将示例应用程序用作业务线模板</source>
          <target state="new">将示例应用程序用作业务线模板</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>本教程中的示例应用程序 <bpt id="p1">[</bpt>WebApp-RoleClaims-DotNet<ept id="p1">](https://github.com/Azure-Samples/active-directory-dotnet-webapp-roleclaims)</ept> 由 Azure Active Directory 团队创建，可用作模板来轻松创建新的业务线应用程序。该示例应用程序具有以下内置功能：</source>
          <target state="new">本教程中的示例应用程序 <bpt id="p1">[</bpt>WebApp-RoleClaims-DotNet<ept id="p1">](https://github.com/Azure-Samples/active-directory-dotnet-webapp-roleclaims)</ept> 由 Azure Active Directory 团队创建，可用作模板来轻松创建新的业务线应用程序。该示例应用程序具有以下内置功能：</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>使用 <bpt id="p1">[</bpt>OpenID Connect<ept id="p1">](http://openid.net/connect/)</ept> 通过 Azure Active Directory 进行身份验证</source>
          <target state="new">使用 <bpt id="p1">[</bpt>OpenID Connect<ept id="p1">](http://openid.net/connect/)</ept> 通过 Azure Active Directory 进行身份验证</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>示例 <ph id="ph1">`TaskTracker`</ph> 控制器演示了如何才能授权对应用程序，其中包括 <ph id="ph2">`[Authorize]`</ph> 的标准用法中的特定操作的不同角色的控制器。</source>
          <target state="new">示例 <ph id="ph1">`TaskTracker`</ph> 控制器演示了如何才能授权对应用程序，其中包括 <ph id="ph2">`[Authorize]`</ph> 的标准用法中的特定操作的不同角色的控制器。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>一个多租户应用程序，其中包含可立即分配给用户和组的预定义角色。</source>
          <target state="new">一个多租户应用程序，其中包含可立即分配给用户和组的预定义角色。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>运行示例应用程序</source>
          <target state="new">运行示例应用程序</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>克隆或下载 <bpt id="p1">[</bpt>WebApp-RoleClaims-DotNet<ept id="p1">](https://github.com/Azure-Samples/active-directory-dotnet-webapp-roleclaims)</ept> 中的示例解决方案到本地目录。</source>
          <target state="new">克隆或下载 <bpt id="p1">[</bpt>WebApp-RoleClaims-DotNet<ept id="p1">](https://github.com/Azure-Samples/active-directory-dotnet-webapp-roleclaims)</ept> 中的示例解决方案到本地目录。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>根据<bpt id="p1">[</bpt>如何将示例作为单租户应用运行<ept id="p1">](https://github.com/Azure-Samples/active-directory-dotnet-webapp-roleclaims#how-to-run-the-sample-as-a-single-tenant-app)</ept>中的说明设置 Azure Active Directory 应用程序和项目。请务必遵照所有有关将多租户应用程序转换为单租户应用程序的说明。</source>
          <target state="new">根据<bpt id="p1">[</bpt>如何将示例作为单租户应用运行<ept id="p1">](https://github.com/Azure-Samples/active-directory-dotnet-webapp-roleclaims#how-to-run-the-sample-as-a-single-tenant-app)</ept>中的说明设置 Azure Active Directory 应用程序和项目。请务必遵照所有有关将多租户应用程序转换为单租户应用程序的说明。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>在刚刚创建的 Azure Active Directory 应用程序的 <bpt id="p1">[</bpt>Azure 管理门户<ept id="p1">](https://manage.windowsazure.cn)</ept>视图中，单击“用户”选项卡。然后，将所需的用户分配到所需的角色。</source>
          <target state="new">在刚刚创建的 Azure Active Directory 应用程序的 <bpt id="p1">[</bpt>Azure 管理门户<ept id="p1">](https://manage.windowsazure.cn)</ept>视图中，单击“用户”选项卡。然后，将所需的用户分配到所需的角色。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>如果除了分配到用户以外，还要将角色分配到组，则必须将你的 Azure Active Directory 租户升级到 <bpt id="p1">[</bpt>Active Directory Premium<ept id="p1">](/home/features/identity/#price)</ept>。在应用程序的门户 UI 中，如果你看到的是“用户”选项卡而不是“用户和组”选项卡，你可以转到 Azure Active Directory 租户的“许可证”选项卡来试用 Azure Active Directory Premium。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>如果除了分配到用户以外，还要将角色分配到组，则必须将你的 Azure Active Directory 租户升级到 <bpt id="p1">[</bpt>Active Directory Premium<ept id="p1">](/home/features/identity/#price)</ept>。在应用程序的门户 UI 中，如果你看到的是“用户”选项卡而不是“用户和组”选项卡，你可以转到 Azure Active Directory 租户的“许可证”选项卡来试用 Azure Active Directory Premium。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>配置完应用程序后，在 Visual Studio 中键入 <ph id="ph1">`F5`</ph> 以运行 ASP.NET 应用程序。</source>
          <target state="new">配置完应用程序后，在 Visual Studio 中键入 <ph id="ph1">`F5`</ph> 以运行 ASP.NET 应用程序。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>加载应用程序后，单击“登录”，并使用在 Azure 管理门户中具有管理员角色的用户身份登录。</source>
          <target state="new">加载应用程序后，单击“登录”，并使用在 Azure 管理门户中具有管理员角色的用户身份登录。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>如果你已正确配置 Azure Active Directory 应用程序，并在 Web.config 中设置了相应的设置，则应会重定向到登录页。你只需使用在 Azure 管理门户中创建 Azure Active Directory 应用程序时所用的帐户登录，因为该帐户是 Azure Active Directory 应用程序的默认所有者。</source>
          <target state="new">如果你已正确配置 Azure Active Directory 应用程序，并在 Web.config 中设置了相应的设置，则应会重定向到登录页。你只需使用在 Azure 管理门户中创建 Azure Active Directory 应用程序时所用的帐户登录，因为该帐户是 Azure Active Directory 应用程序的默认所有者。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>将示例应用程序部署到 Azure Web 应用</source>
          <target state="new">将示例应用程序部署到 Azure Web 应用</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>现在，你需要将应用程序发布到 Azure 中的 Web 应用。<bpt id="p1">[</bpt>README.md<ept id="p1">](https://github.com/Azure-Samples/active-directory-dotnet-webapp-roleclaims/blob/master/README.md)</ept> 中已经提供了有关部署到 Azure Web 应用的说明，但这些步骤还取消了本地调试环境的配置。下面将介绍如何在保留调试配置的同时进行部署。</source>
          <target state="new">现在，你需要将应用程序发布到 Azure 中的 Web 应用。<bpt id="p1">[</bpt>README.md<ept id="p1">](https://github.com/Azure-Samples/active-directory-dotnet-webapp-roleclaims/blob/master/README.md)</ept> 中已经提供了有关部署到 Azure Web 应用的说明，但这些步骤还取消了本地调试环境的配置。下面将介绍如何在保留调试配置的同时进行部署。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>右键单击您的项目，然后选择“发布”。</source>
          <target state="new">右键单击您的项目，然后选择“发布”。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>单机“导入”，选择已下载的“发布配置文件”。</source>
          <target state="new">单机“导入”，选择已下载的“发布配置文件”。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>如果还没有创建 Web 应用，可以登录 <bpt id="p1">[</bpt>Azure 管理门户<ept id="p1">](https://manage.windowsazure.cn/)</ept>创建一个，然后再“仪表板”的“速览”下，下载“发布配置文件”。</source>
          <target state="new">如果还没有创建 Web 应用，可以登录 <bpt id="p1">[</bpt>Azure 管理门户<ept id="p1">](https://manage.windowsazure.cn/)</ept>创建一个，然后再“仪表板”的“速览”下，下载“发布配置文件”。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>在“目标 URL”中，将 <bpt id="p1">**</bpt>http<ept id="p1">**</ept> 更改为 <bpt id="p2">**</bpt>https<ept id="p2">**</ept>。将整个 URL 复制到文本编辑器。稍后将要用到它。然后，单击“下一步”。</source>
          <target state="new">在“目标 URL”中，将 <bpt id="p1">**</bpt>http<ept id="p1">**</ept> 更改为 <bpt id="p2">**</bpt>https<ept id="p2">**</ept>。将整个 URL 复制到文本编辑器。稍后将要用到它。然后，单击“下一步”。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>清除“启用组织身份验证”复选框。</source>
          <target state="new">清除“启用组织身份验证”复选框。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>展开“RoleClaimContext”并选择“执行 Code First 迁移(应用程序启动时运行)”复选框。稍后当你定义其他 Code First 数据模型时，<bpt id="p1">[</bpt>Code First 迁移<ept id="p1">](https://msdn.microsoft.com/data/jj591621.aspx)</ept>会帮助你在 Azure 中更新应用的数据库架构。</source>
          <target state="new">展开“RoleClaimContext”并选择“执行 Code First 迁移(应用程序启动时运行)”复选框。稍后当你定义其他 Code First 数据模型时，<bpt id="p1">[</bpt>Code First 迁移<ept id="p1">](https://msdn.microsoft.com/data/jj591621.aspx)</ept>会帮助你在 Azure 中更新应用的数据库架构。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>此时请不要单击“发布”转到 Web 发布过程，而是单击“关闭”。单击“是”保存对发布配置文件所做的更改。</source>
          <target state="new">此时请不要单击“发布”转到 Web 发布过程，而是单击“关闭”。单击“是”保存对发布配置文件所做的更改。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">[</bpt>Azure 管理门户<ept id="p1">](https://manage.windowsazure.cn)</ept>中转到你的 Azure Active Directory 租户，然后单击“应用程序”选项卡。</source>
          <target state="new">在 <bpt id="p1">[</bpt>Azure 管理门户<ept id="p1">](https://manage.windowsazure.cn)</ept>中转到你的 Azure Active Directory 租户，然后单击“应用程序”选项卡。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>单击页面底部的“添加”。</source>
          <target state="new">单击页面底部的“添加”。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>单击“添加我的组织正在开发的应用程序”。</source>
          <target state="new">单击“添加我的组织正在开发的应用程序”。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>选择“ Web 应用和/或 Web API”。</source>
          <target state="new">选择“ Web 应用和/或 Web API”。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>为应用程序提供一个名称，然后单击“下一步”。</source>
          <target state="new">为应用程序提供一个名称，然后单击“下一步”。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>在“应用程序属性”中，将“登录 URL”设置为你前面保存的 Web 应用URL（例如 <ph id="ph1">`https://&lt;site-name&gt;.chinacloudsites.cn/`</ph>），并将“应用 ID URI”设置为 <ph id="ph2">`https://&lt;aad-tenanet-name&gt;/&lt;app-name&gt;`</ph>。然后，单击“完成”。</source>
          <target state="new">在“应用程序属性”中，将“登录 URL”设置为你前面保存的 Web 应用URL（例如 <ph id="ph1">`https://&lt;site-name&gt;.chinacloudsites.cn/`</ph>），并将“应用 ID URI”设置为 <ph id="ph2">`https://&lt;aad-tenanet-name&gt;/&lt;app-name&gt;`</ph>。然后，单击“完成”。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>创建应用程序后，根据前面<bpt id="p1">[</bpt>定义应用程序角色<ept id="p1">](https://github.com/Azure-Samples/active-directory-dotnet-webapp-roleclaims#step-2-define-your-application-roles)</ept>中的说明以相同的方式更新应用程序清单。</source>
          <target state="new">创建应用程序后，根据前面<bpt id="p1">[</bpt>定义应用程序角色<ept id="p1">](https://github.com/Azure-Samples/active-directory-dotnet-webapp-roleclaims#step-2-define-your-application-roles)</ept>中的说明以相同的方式更新应用程序清单。</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>在刚刚创建的 Azure Active Directory 应用程序的 <bpt id="p1">[</bpt>Azure 管理门户<ept id="p1">](https://manage.windowsazure.cn)</ept>视图中，单击“用户”选项卡。然后，将所需的用户分配到所需的角色。</source>
          <target state="new">在刚刚创建的 Azure Active Directory 应用程序的 <bpt id="p1">[</bpt>Azure 管理门户<ept id="p1">](https://manage.windowsazure.cn)</ept>视图中，单击“用户”选项卡。然后，将所需的用户分配到所需的角色。</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>单击“配置”选项卡。</source>
          <target state="new">单击“配置”选项卡。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>在“键”下，通过从下拉列表中选择“1 年”创建新键。</source>
          <target state="new">在“键”下，通过从下拉列表中选择“1 年”创建新键。</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>在“Azure Active Directory”条目的“对其他应用程序的权限”下，从“委派权限”下拉列表中选择“登录和读取用户配置文件”与“读取目录数据”。</source>
          <target state="new">在“Azure Active Directory”条目的“对其他应用程序的权限”下，从“委派权限”下拉列表中选择“登录和读取用户配置文件”与“读取目录数据”。</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>此处需要的确切权限取决于你的应用程序所需的功能。某些权限需要“全局管理员”角色才能设置，但本教程只需要“用户”角色。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>此处需要的确切权限取决于你的应用程序所需的功能。某些权限需要“全局管理员”角色才能设置，但本教程只需要“用户”角色。</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>单击“保存”。</source>
          <target state="new">单击“保存”。</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>你通过导航离开已保存的配置页之前，请将以下信息复制到文本编辑器中。</source>
          <target state="new">你通过导航离开已保存的配置页之前，请将以下信息复制到文本编辑器中。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 中，在项目中打开 <bpt id="p1">**</bpt>Web.Release.config<ept id="p1">**</ept>。将以下 XML 插入 <ph id="ph1">`&lt;configuration&gt;`</ph> 标记，并将每个键的值替换为新的 Azure Active Directory 应用程序保存的信息。</source>
          <target state="new">在 Visual Studio 中，在项目中打开 <bpt id="p1">**</bpt>Web.Release.config<ept id="p1">**</ept>。将以下 XML 插入 <ph id="ph1">`&lt;configuration&gt;`</ph> 标记，并将每个键的值替换为新的 Azure Active Directory 应用程序保存的信息。</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>&amp;lt;appSettings&gt;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">&amp;lt;appSettings&gt;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>&amp;lt;add key="ida:ClientId" value="</source>
          <target state="new">&amp;lt;add key="ida:ClientId" value="</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>[e.g. 82692da5-a86f-44c9-9d53-2f88d52b478b]</source>
          <target state="new">[e.g. 82692da5-a86f-44c9-9d53-2f88d52b478b]</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>" xdt:Transform="SetAttributes" xdt:Locator="Match(key)" /&gt;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">" xdt:Transform="SetAttributes" xdt:Locator="Match(key)" /&gt;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>&amp;lt;add key="ida:AppKey" value="</source>
          <target state="new">&amp;lt;add key="ida:AppKey" value="</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>[e.g. rZJJ9bHSi/cYnYwmQFxLYDn/6EfnrnIfKoNzv9NKgbo=]</source>
          <target state="new">[e.g. rZJJ9bHSi/cYnYwmQFxLYDn/6EfnrnIfKoNzv9NKgbo=]</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>" xdt:Transform="SetAttributes" xdt:Locator="Match(key)" /&gt;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">" xdt:Transform="SetAttributes" xdt:Locator="Match(key)" /&gt;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>&amp;lt;add key="ida:PostLogoutRedirectUri" value="</source>
          <target state="new">&amp;lt;add key="ida:PostLogoutRedirectUri" value="</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>[e.g. https://mylobapp.chinacloudsites.cn/]</source>
          <target state="new">[e.g. https://mylobapp.chinacloudsites.cn/]</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>" xdt:Transform="SetAttributes" xdt:Locator="Match(key)" /&gt;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">" xdt:Transform="SetAttributes" xdt:Locator="Match(key)" /&gt;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>&amp;lt;/appSettings&gt;</source>
          <target state="new">&amp;lt;/appSettings&gt;</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>请确保 ida:PostLogoutRedirectUri 的值以斜杠“/”结尾。</source>
          <target state="new">请确保 ida:PostLogoutRedirectUri 的值以斜杠“/”结尾。</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>右键单击您的项目，然后选择“发布”。</source>
          <target state="new">右键单击您的项目，然后选择“发布”。</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>单击“发布”以发布到 Azure Web 应用。</source>
          <target state="new">单击“发布”以发布到 Azure Web 应用。</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>完成此操作后，将在 Azure 管理门户中配置两个 Azure Active Directory 应用程序，一个用于 Visual Studio 中的调试环境，另一个用于 Azure 中发布的 Web 应用。在调试期间，将使用 Web.config 中的应用程序设置来使<bpt id="p1">**</bpt>调试<ept id="p1">**</ept>配置适用于 Azure Active Directory，发布配置（默认情况下，会发布<bpt id="p2">**</bpt>版本<ept id="p2">**</ept>配置）后，将上载转换的 Web.config，其中包含 Web.Release.config 中的应用程序设置更改。</source>
          <target state="new">完成此操作后，将在 Azure 管理门户中配置两个 Azure Active Directory 应用程序，一个用于 Visual Studio 中的调试环境，另一个用于 Azure 中发布的 Web 应用。在调试期间，将使用 Web.config 中的应用程序设置来使<bpt id="p1">**</bpt>调试<ept id="p1">**</ept>配置适用于 Azure Active Directory，发布配置（默认情况下，会发布<bpt id="p2">**</bpt>版本<ept id="p2">**</ept>配置）后，将上载转换的 Web.config，其中包含 Web.Release.config 中的应用程序设置更改。</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>如果你想要附加到已发布的 Web 应用调试器（必须上载的已发布的 Web 应用中的代码的调试符号），你可以创建的调试配置对于 Azure 调试，但使用的 Azure Active Directory 设置从 Web.Release.config 自己自定义 Web.config 转换（例如 Web.AzureDebug.config）克隆。这样，你可以跨不同的环境中维护静态配置。</source>
          <target state="new">如果你想要附加到已发布的 Web 应用调试器（必须上载的已发布的 Web 应用中的代码的调试符号），你可以创建的调试配置对于 Azure 调试，但使用的 Azure Active Directory 设置从 Web.Release.config 自己自定义 Web.config 转换（例如 Web.AzureDebug.config）克隆。这样，你可以跨不同的环境中维护静态配置。</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>将业务线功能添加到示例应用程序</source>
          <target state="new">将业务线功能添加到示例应用程序</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>在本教程的本部分，你将学习如何基于示例应用程序生成所需的业务线功能。你将创建一个简单 CRUD 的工作项跟踪程序，类似于 TaskTracker 控制器，但使用标准的 CRUD 基架和设计模式。你还将使用包含的 Scripts\\AadPickerLibrary.js 从 Azure Active Directory 图形 API 丰富应用程序与数据。</source>
          <target state="new">在本教程的本部分，你将学习如何基于示例应用程序生成所需的业务线功能。你将创建一个简单 CRUD 的工作项跟踪程序，类似于 TaskTracker 控制器，但使用标准的 CRUD 基架和设计模式。你还将使用包含的 Scripts\\AadPickerLibrary.js 从 Azure Active Directory 图形 API 丰富应用程序与数据。</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>在 Models 文件夹中创建名为 WorkItem.cs 的新 <bpt id="p1">[</bpt>Code First<ept id="p1">](http://www.asp.net/mvc/overview/getting-started/getting-started-with-ef-using-mvc/creating-an-entity-framework-data-model-for-an-asp-net-mvc-application)</ept> 模型，并将代码替换为以下代码：</source>
          <target state="new">在 Models 文件夹中创建名为 WorkItem.cs 的新 <bpt id="p1">[</bpt>Code First<ept id="p1">](http://www.asp.net/mvc/overview/getting-started/getting-started-with-ef-using-mvc/creating-an-entity-framework-data-model-for-an-asp-net-mvc-application)</ept> 模型，并将代码替换为以下代码：</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>打开 DAL\\RoleClaimContext.cs 并添加突出显示的代码：</source>
          <target state="new">打开 DAL\\RoleClaimContext.cs 并添加突出显示的代码：</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>public class RoleClaimContext : DbContext<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">public class RoleClaimContext : DbContext<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>{<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">{<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>public RoleClaimContext() : base("RoleClaimContext") { }<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">public RoleClaimContext() : base("RoleClaimContext") { }<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>生成项目，以便能够通过 Visual Studio 中的基架逻辑访问你的新模型。</source>
          <target state="new">生成项目，以便能够通过 Visual Studio 中的基架逻辑访问你的新模型。</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>将新的基架项 <ph id="ph1">`WorkItemsController`</ph> 添加到 Controllers 文件夹。为此，请右键单击“控制器”，指向“添加”，然后选择“新的基架项”。</source>
          <target state="new">将新的基架项 <ph id="ph1">`WorkItemsController`</ph> 添加到 Controllers 文件夹。为此，请右键单击“控制器”，指向“添加”，然后选择“新的基架项”。</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>选择“使用实体框架的包含视图的 MVC 5 控制器”并单击“添加”。</source>
          <target state="new">选择“使用实体框架的包含视图的 MVC 5 控制器”并单击“添加”。</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>选择刚创建的模型并单击“添加”。</source>
          <target state="new">选择刚创建的模型并单击“添加”。</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>打开 Controllers\\WorkItemsController.cs</source>
          <target state="new">打开 Controllers\\WorkItemsController.cs</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>将突出显示的 [Authorize] 修饰添加到下面的相应操作。</source>
          <target state="new">将突出显示的 [Authorize] 修饰添加到下面的相应操作。</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>...<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">...<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>[Authorize(Roles = "Admin, Observer, Writer, Approver")]</source>
          <target state="new">[Authorize(Roles = "Admin, Observer, Writer, Approver")]</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new"><ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>public class WorkItemsController : Controller<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">public class WorkItemsController : Controller<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>{<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">{<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>...<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">...<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>你可能已注意到某些操作带有 <ph id="ph2">&lt;code&gt;</ph><ph id="ph3">[ValidateAntiForgeryToken]</ph><ph id="ph4">&lt;/code&gt;</ph> 修饰。由于存在 <bpt id="p1">[</bpt>Brock Allen<ept id="p1">](https://twitter.com/BrockLAllen)</ept> 在 <bpt id="p2">[</bpt>MVC 4、AntiForgeryToken 和声明<ept id="p2">](http://brockallen.com/2012/07/08/mvc-4-antiforgerytoken-and-claims/)</ept>中所述的行为，HTTP POST 可能无法完成防伪令牌验证，因为： + Azure Active Directory 不会发送 http://schemas.microsoft.com/accesscontrolservice/2010/07/claims/identityprovider，而默认情况下防伪令牌需要此项。+ 如果 Azure Active Directory 是与 AD FS 进行同步处理的目录，则默认情况下 AD FS 信任不发送 http://schemas.microsoft.com/accesscontrolservice/2010/07/claims/identityprovider 声明，不过你可以手动将 AD FS 配置为发送此声明。你将在下一步对此进行处理。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>你可能已注意到某些操作带有 <ph id="ph2">&lt;code&gt;</ph><ph id="ph3">[ValidateAntiForgeryToken]</ph><ph id="ph4">&lt;/code&gt;</ph> 修饰。由于存在 <bpt id="p1">[</bpt>Brock Allen<ept id="p1">](https://twitter.com/BrockLAllen)</ept> 在 <bpt id="p2">[</bpt>MVC 4、AntiForgeryToken 和声明<ept id="p2">](http://brockallen.com/2012/07/08/mvc-4-antiforgerytoken-and-claims/)</ept>中所述的行为，HTTP POST 可能无法完成防伪令牌验证，因为： + Azure Active Directory 不会发送 http://schemas.microsoft.com/accesscontrolservice/2010/07/claims/identityprovider，而默认情况下防伪令牌需要此项。+ 如果 Azure Active Directory 是与 AD FS 进行同步处理的目录，则默认情况下 AD FS 信任不发送 http://schemas.microsoft.com/accesscontrolservice/2010/07/claims/identityprovider 声明，不过你可以手动将 AD FS 配置为发送此声明。你将在下一步对此进行处理。</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>在 App\_Start\\Startup.Auth.cs 中，将以下代码行添加到 <ph id="ph1">`ConfigureAuth`</ph> 方法中。右键单击每个命名解析错误并修复错误。</source>
          <target state="new">在 App\_Start\\Startup.Auth.cs 中，将以下代码行添加到 <ph id="ph1">`ConfigureAuth`</ph> 方法中。右键单击每个命名解析错误并修复错误。</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>AntiForgeryConfig.UniqueClaimTypeIdentifier = ClaimTypes.NameIdentifier;</source>
          <target state="new">AntiForgeryConfig.UniqueClaimTypeIdentifier = ClaimTypes.NameIdentifier;</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>在 Create() 和 Edit() 中添加以下代码，使某些变量可在后面的 JavaScript 中使用。右键单击每个命名解析错误并修复错误。</source>
          <target state="new">在 Create() 和 Edit() 中添加以下代码，使某些变量可在后面的 JavaScript 中使用。右键单击每个命名解析错误并修复错误。</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AcquireToken()`</ph> 方法尚未定义，现在请在 <ph id="ph2">`WorkItemsController`</ph> 类中定义它。右键单击每个命名解析错误并修复错误。</source>
          <target state="new"><ph id="ph1">`AcquireToken()`</ph> 方法尚未定义，现在请在 <ph id="ph2">`WorkItemsController`</ph> 类中定义它。右键单击每个命名解析错误并修复错误。</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>在 Views\\WorkItems\\Create.cshtml（自动搭建基架的项）中，找到 <ph id="ph1">`Html.BeginForm`</ph> 帮助器方法并对其进行如下修改：</source>
          <target state="new">在 Views\\WorkItems\\Create.cshtml（自动搭建基架的项）中，找到 <ph id="ph1">`Html.BeginForm`</ph> 帮助器方法并对其进行如下修改：</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>@using (Html.BeginForm(</source>
          <target state="new">@using (Html.BeginForm(</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>"Create", "WorkItems", FormMethod.Post, new { id = "main-form" }</source>
          <target state="new">"Create", "WorkItems", FormMethod.Post, new { id = "main-form" }</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>))<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">))<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>{<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">{<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>@Html.AntiForgeryToken()<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">@Html.AntiForgeryToken()<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>&amp;lt;div class="form-horizontal"&gt;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">&amp;lt;div class="form-horizontal"&gt;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>&amp;lt;h4&gt;WorkItem&amp;lt;/h4&gt;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">&amp;lt;h4&gt;WorkItem&amp;lt;/h4&gt;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>&amp;lt;hr /&gt;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">&amp;lt;hr /&gt;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>@Html.ValidationSummary(true, "", new { @class = "text-danger" })<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">@Html.ValidationSummary(true, "", new { @class = "text-danger" })<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>&amp;lt;/div&gt;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">&amp;lt;/div&gt;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>&amp;lt;script&gt;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">&amp;lt;script&gt;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>// People/Group Picker Code<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">// People/Group Picker Code<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>var maxResultsPerPage = 14;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">var maxResultsPerPage = 14;<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>var input = document.getElementById("AssignedToName");<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">var input = document.getElementById("AssignedToName");<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>var token = "@ViewData["token"]";<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">var token = "@ViewData["token"]";<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>var tenant = "@ViewData["tenant"]";<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">var tenant = "@ViewData["tenant"]";<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>&amp;lt;/script&gt;</source>
          <target state="new">&amp;lt;/script&gt;</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>}<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></source>
          <target state="new">}<ph id="ph1">&lt;span&gt;</ph>&amp;#13;<ph id="ph2">&lt;/span&gt;</ph></target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>在脚本中，AadPicker 对象将调用 <bpt id="p1">[</bpt>Azure Active Directory 图形 API<ept id="p1">](https://msdn.microsoft.com/Library/Azure/Ad/Graph/api/api-catalog)</ept> 来搜索与输入内容匹配的用户和组。</source>
          <target state="new">在脚本中，AadPicker 对象将调用 <bpt id="p1">[</bpt>Azure Active Directory 图形 API<ept id="p1">](https://msdn.microsoft.com/Library/Azure/Ad/Graph/api/api-catalog)</ept> 来搜索与输入内容匹配的用户和组。</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>打开<bpt id="p1">[</bpt>包管理器控制台<ept id="p1">](http://docs.nuget.org/Consume/Package-Manager-Console)</ept>并运行 <bpt id="p2">**</bpt>Enable-migrations-EnableAutomaticMigrations<ept id="p2">**</ept>。与你在将应用发布到 Azure 时选择的选项类似，当你在 Visual Studio 中调试应用时，此命令将帮助你在 <bpt id="p3">[</bpt>LocalDB<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/hh510202.aspx)</ept> 中更新应用的数据库架构。</source>
          <target state="new">打开<bpt id="p1">[</bpt>包管理器控制台<ept id="p1">](http://docs.nuget.org/Consume/Package-Manager-Console)</ept>并运行 <bpt id="p2">**</bpt>Enable-migrations-EnableAutomaticMigrations<ept id="p2">**</ept>。与你在将应用发布到 Azure 时选择的选项类似，当你在 Visual Studio 中调试应用时，此命令将帮助你在 <bpt id="p3">[</bpt>LocalDB<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/hh510202.aspx)</ept> 中更新应用的数据库架构。</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>现在，在 Visual Studio 调试器中运行应用程序，或者再次发布到 Azure Web 应用。以应用程序所有者的身份登录并导航到 <ph id="ph1">`https://&lt;webappname&gt;.chinacloudsites.cn/WorkItems/Create`</ph>。现在你会发现，你可以从下拉列表中选择 Azure Active Directory 用户或组，或者键入一些内容来筛选列表。</source>
          <target state="new">现在，在 Visual Studio 调试器中运行应用程序，或者再次发布到 Azure Web 应用。以应用程序所有者的身份登录并导航到 <ph id="ph1">`https://&lt;webappname&gt;.chinacloudsites.cn/WorkItems/Create`</ph>。现在你会发现，你可以从下拉列表中选择 Azure Active Directory 用户或组，或者键入一些内容来筛选列表。</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>填写表单的其余部分并单击“创建”。~/WorkItems/Index 页现在将显示新建的工作项。你还会发现，在下面的屏幕截图中，我删除了 Views\\WorkItems\\Index.cshtml 中的 <ph id="ph1">`AssignedToID`</ph> 列。</source>
          <target state="new">填写表单的其余部分并单击“创建”。~/WorkItems/Index 页现在将显示新建的工作项。你还会发现，在下面的屏幕截图中，我删除了 Views\\WorkItems\\Index.cshtml 中的 <ph id="ph1">`AssignedToID`</ph> 列。</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>现在，请对“编辑”视图进行类似的更改。在 Views\\WorkItems\\Edit.cshtml 中，更改与上一步中 Views\\WorkItems\\Create.cshtml 相同的 <ph id="ph1">`Html.BeginForm`</ph> 帮助器方法（在上面突出显示的“Create”替换为“Edit”）。</source>
          <target state="new">现在，请对“编辑”视图进行类似的更改。在 Views\\WorkItems\\Edit.cshtml 中，更改与上一步中 Views\\WorkItems\\Create.cshtml 相同的 <ph id="ph1">`Html.BeginForm`</ph> 帮助器方法（在上面突出显示的“Create”替换为“Edit”）。</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>就这么简单！</source>
          <target state="new">就这么简单！</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>在 WorkItems 控制器中配置授权和不同操作的业务线功能后，你可以尝试以不同应用程序角色用户身份登录，以查看应用程序如何做出响应。</source>
          <target state="new">在 WorkItems 控制器中配置授权和不同操作的业务线功能后，你可以尝试以不同应用程序角色用户身份登录，以查看应用程序如何做出响应。</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>其他资源</source>
          <target state="new">其他资源</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>通过 SSL 和 Authorize 属性保护应用程序</source>
          <target state="new">通过 SSL 和 Authorize 属性保护应用程序</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>使用 Active Directory 在 Azure 中进行身份验证</source>
          <target state="new">使用 Active Directory 在 Azure 中进行身份验证</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>在 Azure 中创建使用 AD FS 身份验证的 .NET MVC Web 应用</source>
          <target state="new">在 Azure 中创建使用 AD FS 身份验证的 .NET MVC Web 应用</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Azure Active Directory 示例和文档</source>
          <target state="new">Azure Active Directory 示例和文档</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Vittorio Bertocci 的博客</source>
          <target state="new">Vittorio Bertocci 的博客</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>将 VS2013 Web 项目从 WIF 迁移到 Katana</source>
          <target state="new">将 VS2013 Web 项目从 WIF 迁移到 Katana</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Active Directory 与 Azure Active Directory 之间的相似之处</source>
          <target state="new">Active Directory 与 Azure Active Directory 之间的相似之处</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>使用单一登录方案进行目录同步</source>
          <target state="new">使用单一登录方案进行目录同步</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Azure Active Directory 支持的令牌和声明类型</source>
          <target state="new">Azure Active Directory 支持的令牌和声明类型</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>