<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf0f9cf846b6d54a0a9187ac285ff04c05aebb7a</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Cordova 移动服务项目（Visual Studio 连接服务）入门 | Microsoft Azure</source>
          <target state="new">Cordova 移动服务项目（Visual Studio 连接服务）入门 | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>描述使用 Visual Studio 连接服务将 Cordova 项目连接到 Azure 移动服务后可以执行的前几个步骤。</source>
          <target state="new">描述使用 Visual Studio 连接服务将 Cordova 项目连接到 Azure 移动服务后可以执行的前几个步骤。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>移动服务入门（Cordova 项目）</source>
          <target state="new">移动服务入门（Cordova 项目）</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>前几个步骤</source>
          <target state="new">前几个步骤</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>为了跟踪这些代码，您需要首先执行的步骤取决于您连接的移动服务类型。</source>
          <target state="new">为了跟踪这些代码，您需要首先执行的步骤取决于您连接的移动服务类型。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>对于 JavaScript 后端移动服务，需创建一个名为“TodoItem”表。创建表的方法：在服务器资源管理器中的 Azure node 下定位移动服务，右键单击该移动服务的 Node 打开上下文菜单，然后选择<bpt id="p1">**</bpt>创建表<ept id="p1">**</ept>。输入“TodoItem”作为表名称。</source>
          <target state="new">对于 JavaScript 后端移动服务，需创建一个名为“TodoItem”表。创建表的方法：在服务器资源管理器中的 Azure node 下定位移动服务，右键单击该移动服务的 Node 打开上下文菜单，然后选择<bpt id="p1">**</bpt>创建表<ept id="p1">**</ept>。输入“TodoItem”作为表名称。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>如果你使用的是 .NET 后端移动服务，那么 Visual Studio 为你创建的默认项目模板中已经有一个 TodoItem 表，但你需要将其发布到 Azure。发布方法：在解决方案资源管理器中打开移动服务项目的上下文菜单，然后选择<bpt id="p1">**</bpt>发布 Web<ept id="p1">**</ept>。接受默认设置，然后选择<bpt id="p2">**</bpt>发布<ept id="p2">**</ept>。</source>
          <target state="new">如果你使用的是 .NET 后端移动服务，那么 Visual Studio 为你创建的默认项目模板中已经有一个 TodoItem 表，但你需要将其发布到 Azure。发布方法：在解决方案资源管理器中打开移动服务项目的上下文菜单，然后选择<bpt id="p1">**</bpt>发布 Web<ept id="p1">**</ept>。接受默认设置，然后选择<bpt id="p2">**</bpt>发布<ept id="p2">**</ept>。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>创建对表的引用</source>
          <target state="new">创建对表的引用</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>以下代码将获取对表（包含 TodoItem 数据）的引用，您可以将该引用用于后续操作以便读取和更新数据表。在您创建移动服务时，将自动创建 TodoItem 表。</source>
          <target state="new">以下代码将获取对表（包含 TodoItem 数据）的引用，您可以将该引用用于后续操作以便读取和更新数据表。在您创建移动服务时，将自动创建 TodoItem 表。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>var todoTable = mobileServiceClient.getTable('TodoItem');</source>
          <target state="new">var todoTable = mobileServiceClient.getTable('TodoItem');</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>要使这些示例工作，表的权限必须设置为<bpt id="p1">**</bpt>具有应用程序密钥的任何人<ept id="p1">**</ept>。稍后，您可以设置身份验证。请参阅<bpt id="p2">[</bpt>身份验证入门<ept id="p2">](/documentation/articles/mobile-services-html-get-started-users)</ept>。</source>
          <target state="new">要使这些示例工作，表的权限必须设置为<bpt id="p1">**</bpt>具有应用程序密钥的任何人<ept id="p1">**</ept>。稍后，您可以设置身份验证。请参阅<bpt id="p2">[</bpt>身份验证入门<ept id="p2">](/documentation/articles/mobile-services-html-get-started-users)</ept>。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>向表中添加项</source>
          <target state="new">向表中添加项</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>将新的项目插入数据表。ID（类型字符串的 GUID）将自动创建为新行的主密钥。对返回的 <bpt id="p1">[</bpt>Promise<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/dn802826.aspx)</ept> 对象调用 <bpt id="p2">**</bpt>done<ept id="p2">**</ept> 方法以获取插入对象的副本并处理任何错误。</source>
          <target state="new">将新的项目插入数据表。ID（类型字符串的 GUID）将自动创建为新行的主密钥。对返回的 <bpt id="p1">[</bpt>Promise<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/dn802826.aspx)</ept> 对象调用 <bpt id="p2">**</bpt>done<ept id="p2">**</ept> 方法以获取插入对象的副本并处理任何错误。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>读取或查询表</source>
          <target state="new">读取或查询表</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>以下代码将查询表以获取所有项目，按文本字段排序。您可以添加代码以处理 success 处理程序中的查询结果。在此情况下，将更新这些项目的本地数组。</source>
          <target state="new">以下代码将查询表以获取所有项目，按文本字段排序。您可以添加代码以处理 success 处理程序中的查询结果。在此情况下，将更新这些项目的本地数组。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>您可以使用 where 方法来修改查询。下面是筛选出已完成项目的示例。</source>
          <target state="new">您可以使用 where 方法来修改查询。下面是筛选出已完成项目的示例。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>有关您可以使用的查询的更多示例，请参阅<bpt id="p1">[</bpt>查询<ept id="p1">](http://msdn.microsoft.com/zh-cn/library/azure/jj613353.aspx)</ept>对象。</source>
          <target state="new">有关您可以使用的查询的更多示例，请参阅<bpt id="p1">[</bpt>查询<ept id="p1">](http://msdn.microsoft.com/zh-cn/library/azure/jj613353.aspx)</ept>对象。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>更新表项</source>
          <target state="new">更新表项</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>更新数据表中的行。在此代码中，当移动服务响应时，将从列表中删除项目。对返回的 <bpt id="p1">[</bpt>Promise<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/dn802826.aspx)</ept> 对象调用 <bpt id="p2">**</bpt>done<ept id="p2">**</ept> 方法以获取插入对象的副本并处理任何错误。</source>
          <target state="new">更新数据表中的行。在此代码中，当移动服务响应时，将从列表中删除项目。对返回的 <bpt id="p1">[</bpt>Promise<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/dn802826.aspx)</ept> 对象调用 <bpt id="p2">**</bpt>done<ept id="p2">**</ept> 方法以获取插入对象的副本并处理任何错误。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>删除表项</source>
          <target state="new">删除表项</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>使用 <bpt id="p1">**</bpt>del<ept id="p1">**</ept> 方法删除数据表中的行。对返回的 <bpt id="p2">[</bpt>Promise<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/dn802826.aspx)</ept> 对象调用 <bpt id="p3">**</bpt>done<ept id="p3">**</ept> 方法以获取插入对象的副本并处理任何错误。</source>
          <target state="new">使用 <bpt id="p1">**</bpt>del<ept id="p1">**</ept> 方法删除数据表中的行。对返回的 <bpt id="p2">[</bpt>Promise<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/dn802826.aspx)</ept> 对象调用 <bpt id="p3">**</bpt>done<ept id="p3">**</ept> 方法以获取插入对象的副本并处理任何错误。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>详细了解移动服务</source>
          <target state="new">详细了解移动服务</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>