<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f4db1651bf11e4f286fced1e489b0be39dece48</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>在移动服务项目中安装存储客户端</source>
          <target state="new">在移动服务项目中安装存储客户端</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>要可以生成 SAS 来将图像上载到 Blob 存储，必须先添加 NuGet 软件包，该软件包将存储客户端库安装在移动服务项目中。</source>
          <target state="new">要可以生成 SAS 来将图像上载到 Blob 存储，必须先添加 NuGet 软件包，该软件包将存储客户端库安装在移动服务项目中。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 中的“解决方案资源管理器”内，右键单击移动服务项目，然后选择“管理 NuGet 包”。</source>
          <target state="new">在 Visual Studio 中的“解决方案资源管理器”内，右键单击移动服务项目，然后选择“管理 NuGet 包”。</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>在左窗格中，选择“联机”类别，选择“仅限稳定版”，搜索 <bpt id="p1">**</bpt>WindowsAzure.Storage<ept id="p1">**</ept>，在“Azure 存储空间”包上单击“安装”，然后接受许可协议。</source>
          <target state="new">在左窗格中，选择“联机”类别，选择“仅限稳定版”，搜索 <bpt id="p1">**</bpt>WindowsAzure.Storage<ept id="p1">**</ept>，在“Azure 存储空间”包上单击“安装”，然后接受许可协议。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>这会将 Azure 存储服务的客户端库添加到移动服务项目。</source>
          <target state="new">这会将 Azure 存储服务的客户端库添加到移动服务项目。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>更新数据模型中的 TodoItem 定义</source>
          <target state="new">更新数据模型中的 TodoItem 定义</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>TodoItem 类定义数据对象，并且您需要将相同属性添加到此类，正如您在客户端上的操作一样。</source>
          <target state="new">TodoItem 类定义数据对象，并且您需要将相同属性添加到此类，正如您在客户端上的操作一样。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 2013 中，打开您的移动服务项目，展开 DataObjects 文件夹，然后打开 TodoItem.cs 项目文件。</source>
          <target state="new">在 Visual Studio 2013 中，打开您的移动服务项目，展开 DataObjects 文件夹，然后打开 TodoItem.cs 项目文件。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>将以下新属性添加到 <bpt id="p1">**</bpt>TodoItem<ept id="p1">**</ept> 类：</source>
          <target state="new">将以下新属性添加到 <bpt id="p1">**</bpt>TodoItem<ept id="p1">**</ept> 类：</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>这些属性用于生成 SAS 并存储映像信息。请注意，这些属性的大小写与 JavaScript 后端版本相匹配。</source>
          <target state="new">这些属性用于生成 SAS 并存储映像信息。请注意，这些属性的大小写与 JavaScript 后端版本相匹配。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>使用默认数据库初始程序时，如果实体框架在代码优先模型定义中检测到数据模型更改，它就会删除并重新创建数据库。若要进行此数据模型更改并维护数据库中的现有数据，必须使用代码优先迁移。不能为 Azure 中的 SQL 数据库使用默认的初始值设定项。有关更多信息，请参阅<bpt id="p1">[</bpt>如何使用代码优先迁移来更新数据模型<ept id="p1">](/zh-cn/documentation/articles/mobile-services-dotnet-backend-how-to-use-code-first-migrations)</ept>。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>使用默认数据库初始程序时，如果实体框架在代码优先模型定义中检测到数据模型更改，它就会删除并重新创建数据库。若要进行此数据模型更改并维护数据库中的现有数据，必须使用代码优先迁移。不能为 Azure 中的 SQL 数据库使用默认的初始值设定项。有关更多信息，请参阅<bpt id="p1">[</bpt>如何使用代码优先迁移来更新数据模型<ept id="p1">](/zh-cn/documentation/articles/mobile-services-dotnet-backend-how-to-use-code-first-migrations)</ept>。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>更新 TodoItem 控制器以生成共享的访问签名</source>
          <target state="new">更新 TodoItem 控制器以生成共享的访问签名</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>现有 <bpt id="p1">**</bpt>TodoItemController<ept id="p1">**</ept> 已更新，以便在插入新的 TodoItem 时 <bpt id="p2">**</bpt>PostTodoItem<ept id="p2">**</ept> 方法生成 SAS。您还</source>
          <target state="new">现有 <bpt id="p1">**</bpt>TodoItemController<ept id="p1">**</ept> 已更新，以便在插入新的 TodoItem 时 <bpt id="p2">**</bpt>PostTodoItem<ept id="p2">**</ept> 方法生成 SAS。您还</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>如果你尚未创建你的存储帐户，请参阅<bpt id="p1">[</bpt><ept id="p1">如何创建存储帐户]</ept>。</source>
          <target state="new">如果你尚未创建你的存储帐户，请参阅<bpt id="p1">[</bpt><ept id="p1">如何创建存储帐户]</ept>。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">[</bpt>Azure 经典门户<ept id="p1">](https://manage.windowsazure.cn/)</ept>中，单击“存储”，单击存储帐户，然后单击“管理密钥”。</source>
          <target state="new">在 <bpt id="p1">[</bpt>Azure 经典门户<ept id="p1">](https://manage.windowsazure.cn/)</ept>中，单击“存储”，单击存储帐户，然后单击“管理密钥”。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>记下“存储帐户名称”和“访问密钥”。</source>
          <target state="new">记下“存储帐户名称”和“访问密钥”。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>在你的移动服务中，单击“配置”选项卡、向下滚动到“应用设置”、输入你从存储帐户获取的下述每个项的“名称”和“值”对，然后单击“保存”。</source>
          <target state="new">在你的移动服务中，单击“配置”选项卡、向下滚动到“应用设置”、输入你从存储帐户获取的下述每个项的“名称”和“值”对，然后单击“保存”。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>存储帐户访问密钥将会加密存储在应用设置中。你可在运行时从任何服务器脚本访问此密钥。有关详细信息，请参阅<bpt id="p1">[</bpt><ept id="p1">应用设置]</ept>。</source>
          <target state="new">存储帐户访问密钥将会加密存储在应用设置中。你可在运行时从任何服务器脚本访问此密钥。有关详细信息，请参阅<bpt id="p1">[</bpt><ept id="p1">应用设置]</ept>。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 中的 Solution Explorer 内，打开移动服务项目的 Web.config 文件并添加以下新应用设置，将占位符替换为您刚才在门户中设置的存储帐户名称和访问密钥：</source>
          <target state="new">在 Visual Studio 中的 Solution Explorer 内，打开移动服务项目的 Web.config 文件并添加以下新应用设置，将占位符替换为您刚才在门户中设置的存储帐户名称和访问密钥：</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>移动服务在本地计算机上运行时将使用这些存储的设置，这让你在发布代码之前对代码进行测试。在 Azure 中运行时，移动服务将改用门户中设置的应用设置值，并忽略这些项目设置。</source>
          <target state="new">移动服务在本地计算机上运行时将使用这些存储的设置，这让你在发布代码之前对代码进行测试。在 Azure 中运行时，移动服务将改用门户中设置的应用设置值，并忽略这些项目设置。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>在控制器文件夹中，打开 TodoItemController.cs 文件并添加以下 <bpt id="p1">**</bpt>using<ept id="p1">**</ept> 指令：</source>
          <target state="new">在控制器文件夹中，打开 TodoItemController.cs 文件并添加以下 <bpt id="p1">**</bpt>using<ept id="p1">**</ept> 指令：</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>将现有 <bpt id="p1">**</bpt>PostTodoItem<ept id="p1">**</ept> 方法替换为以下代码：</source>
          <target state="new">将现有 <bpt id="p1">**</bpt>PostTodoItem<ept id="p1">**</ept> 方法替换为以下代码：</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>此 POST 方法现在为插入项生成新的 SAS，有效时间为 5 分钟，然后将生成的 SAS 的值分配给所返回项目的 <ph id="ph1">`sasQueryString`</ph> 属性。还将 <ph id="ph2">`imageUri`</ph> 属性设置为新 BLOB 的资源路径，以便在绑定时在客户端 UI 中启用图像显示。</source>
          <target state="new">此 POST 方法现在为插入项生成新的 SAS，有效时间为 5 分钟，然后将生成的 SAS 的值分配给所返回项目的 <ph id="ph1">`sasQueryString`</ph> 属性。还将 <ph id="ph2">`imageUri`</ph> 属性设置为新 BLOB 的资源路径，以便在绑定时在客户端 UI 中启用图像显示。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>这段代码为单个 BLOB 创建 SAS。如果需要使用同一个 SAS 将多个 Blob 上载到容器，你可以使用空 Blob 资源名称来调用 <ph id="ph2">&lt;a href="http://go.microsoft.com/fwlink/?LinkId=390455" target="_blank"&gt;</ph>generateSharedAccessSignature 方法<ph id="ph3">&lt;/a&gt;</ph>，如下所示：</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>这段代码为单个 BLOB 创建 SAS。如果需要使用同一个 SAS 将多个 Blob 上载到容器，你可以使用空 Blob 资源名称来调用 <ph id="ph2">&lt;a href="http://go.microsoft.com/fwlink/?LinkId=390455" target="_blank"&gt;</ph>generateSharedAccessSignature 方法<ph id="ph3">&lt;/a&gt;</ph>，如下所示：</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>接下来，您将更新快速启动应用，通过使用在发生插入时生成的 SAS，添加图像上载功能。</source>
          <target state="new">接下来，您将更新快速启动应用，通过使用在发生插入时生成的 SAS，添加图像上载功能。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>