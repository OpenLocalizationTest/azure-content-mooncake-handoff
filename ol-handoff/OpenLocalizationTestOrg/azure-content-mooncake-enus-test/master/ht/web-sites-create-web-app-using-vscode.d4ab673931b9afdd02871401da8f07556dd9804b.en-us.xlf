<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f0be2d04659954e950f5db4c3ead96f8ab16c44</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>在 Visual Studio Code 中创建 ASP.NET 5 Web 应用</source>
          <target state="new">在 Visual Studio Code 中创建 ASP.NET 5 Web 应用</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>本教程演示了如何使用 Visual Studio Code 创建 ASP.NET 5 Web 应用。</source>
          <target state="new">本教程演示了如何使用 Visual Studio Code 创建 ASP.NET 5 Web 应用。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>在 Visual Studio Code 中创建 ASP.NET 5 Web 应用</source>
          <target state="new">在 Visual Studio Code 中创建 ASP.NET 5 Web 应用</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>概述</source>
          <target state="new">概述</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>本教程演示如何使用 <bpt id="p1">[</bpt>Visual Studio Code (VS Code)<ept id="p1">](http://code.visualstudio.com//Docs/whyvscode)</ept> 创建 ASP.NET 5 Web 应用，并将其部署到 <bpt id="p2">[</bpt>Azure Web 应用<ept id="p2">](/documentation/services/web-sites)</ept>。</source>
          <target state="new">本教程演示如何使用 <bpt id="p1">[</bpt>Visual Studio Code (VS Code)<ept id="p1">](http://code.visualstudio.com//Docs/whyvscode)</ept> 创建 ASP.NET 5 Web 应用，并将其部署到 <bpt id="p2">[</bpt>Azure Web 应用<ept id="p2">](/documentation/services/web-sites)</ept>。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>ASP.NET 5 是大幅重新设计的 ASP.NET。ASP.NET 5 是新的开源跨平台框架，用于通过 .NET 构建基于云的现代 Web 应用。有关详细信息，请参阅 <bpt id="p1">[</bpt>ASP.NET 5 简介<ept id="p1">](http://docs.asp.net/en/latest/conceptual-overview/aspnet.html)</ept>。有关 Azure Web 应用的信息，请参阅<bpt id="p2">[</bpt> Web 应用概述<ept id="p2">](/home/features/web-site/)</ept>。</source>
          <target state="new">ASP.NET 5 是大幅重新设计的 ASP.NET。ASP.NET 5 是新的开源跨平台框架，用于通过 .NET 构建基于云的现代 Web 应用。有关详细信息，请参阅 <bpt id="p1">[</bpt>ASP.NET 5 简介<ept id="p1">](http://docs.asp.net/en/latest/conceptual-overview/aspnet.html)</ept>。有关 Azure Web 应用的信息，请参阅<bpt id="p2">[</bpt> Web 应用概述<ept id="p2">](/home/features/web-site/)</ept>。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>先决条件</source>
          <target state="new">先决条件</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>安装 <bpt id="p1">[</bpt>VS Code<ept id="p1">](http://code.visualstudio.com/Docs/setup)</ept>。</source>
          <target state="new">安装 <bpt id="p1">[</bpt>VS Code<ept id="p1">](http://code.visualstudio.com/Docs/setup)</ept>。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>安装 <bpt id="p1">[</bpt>Node.js<ept id="p1">](http://nodejs.org)</ept> - Node.js 是一种平台，用于通过 JavaScript 构建快速、可缩放的服务器应用程序。Node 是运行时 (Node)，而 <bpt id="p2">[</bpt>npm<ept id="p2">](http://www.npmjs.com/)</ept> 是 Node 模块的程序包管理器。在本教程中，你将使用 npm 创建 ASP.NET 5 Web 应用的基架。</source>
          <target state="new">安装 <bpt id="p1">[</bpt>Node.js<ept id="p1">](http://nodejs.org)</ept> - Node.js 是一种平台，用于通过 JavaScript 构建快速、可缩放的服务器应用程序。Node 是运行时 (Node)，而 <bpt id="p2">[</bpt>npm<ept id="p2">](http://www.npmjs.com/)</ept> 是 Node 模块的程序包管理器。在本教程中，你将使用 npm 创建 ASP.NET 5 Web 应用的基架。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>安装 Git - 可以从以下位置安装：<bpt id="p1">[</bpt>Chocolatey<ept id="p1">](https://chocolatey.org/packages/git)</ept> 或 <bpt id="p2">[</bpt>git scm.com<ept id="p2">](http://git-scm.com/downloads)</ept>。如果你是 Git 新手，请选择 <bpt id="p3">[</bpt>git-scm.com<ept id="p3">](http://git-scm.com/downloads)</ept>，并选择“从 Windows 命令提示符使用 Git”的选项。安装 Git 后，还需要设置 Git 用户名和电子邮件，因为本教程稍后需要用到（从 VS Code 执行提交时）。</source>
          <target state="new">安装 Git - 可以从以下位置安装：<bpt id="p1">[</bpt>Chocolatey<ept id="p1">](https://chocolatey.org/packages/git)</ept> 或 <bpt id="p2">[</bpt>git scm.com<ept id="p2">](http://git-scm.com/downloads)</ept>。如果你是 Git 新手，请选择 <bpt id="p3">[</bpt>git-scm.com<ept id="p3">](http://git-scm.com/downloads)</ept>，并选择“从 Windows 命令提示符使用 Git”的选项。安装 Git 后，还需要设置 Git 用户名和电子邮件，因为本教程稍后需要用到（从 VS Code 执行提交时）。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>安装 ASP.NET 5 和 DNX</source>
          <target state="new">安装 ASP.NET 5 和 DNX</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>ASP.NET 5/DNX（.NET 执行环境）是精简的 .NET 堆栈，用于构建在 OS X、Linux 和 Windows 上运行的现代云 Web 应用。它已从头开始构建，可将优化的开发框架提供给已部署到云或本地运行的应用。它由系统开销最低的模块化组件构成，因此你可以在构建解决方案时保持弹性。</source>
          <target state="new">ASP.NET 5/DNX（.NET 执行环境）是精简的 .NET 堆栈，用于构建在 OS X、Linux 和 Windows 上运行的现代云 Web 应用。它已从头开始构建，可将优化的开发框架提供给已部署到云或本地运行的应用。它由系统开销最低的模块化组件构成，因此你可以在构建解决方案时保持弹性。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>本教程旨在帮助你使用最新开发版本的 ASP.NET 5 和 DNX 开始构建应用程序。以下说明特定于 Windows。有关 OS X、 Linux 和 Windows 的更详细安装说明，请参阅<bpt id="p1">[</bpt>安装 ASP.NET 5 和 DNX<ept id="p1">](https://code.visualstudio.com/Docs/ASPnet5#_installing-aspnet-5-and-dnx)</ept>。</source>
          <target state="new">本教程旨在帮助你使用最新开发版本的 ASP.NET 5 和 DNX 开始构建应用程序。以下说明特定于 Windows。有关 OS X、 Linux 和 Windows 的更详细安装说明，请参阅<bpt id="p1">[</bpt>安装 ASP.NET 5 和 DNX<ept id="p1">](https://code.visualstudio.com/Docs/ASPnet5#_installing-aspnet-5-and-dnx)</ept>。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>若要在 Windows 中安装 .NET 版本管理器 (DNVM)，请打开命令提示符并运行以下命令。</source>
          <target state="new">若要在 Windows 中安装 .NET 版本管理器 (DNVM)，请打开命令提示符并运行以下命令。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>这将下载 DNVM 脚本，并将其放入你的用户配置文件目录。</source>
          <target state="new">这将下载 DNVM 脚本，并将其放入你的用户配置文件目录。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>重新启动 Windows<ept id="p1">**</ept> 以完成 DNVM 安装。</source>
          <target state="new"><bpt id="p1">**</bpt>重新启动 Windows<ept id="p1">**</ept> 以完成 DNVM 安装。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>重新启动 Windows 后，你可以打开命令提示符，通过输入以下内容来验证 DNVM 的位置：</source>
          <target state="new">重新启动 Windows 后，你可以打开命令提示符，通过输入以下内容来验证 DNVM 的位置：</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>命令提示符将显示如下所示的路径。</source>
          <target state="new">命令提示符将显示如下所示的路径。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>dnvm 位置</source>
          <target state="new">dnvm 位置</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>安装 DNVM 后，必须使用它来下载 DNX 以运行应用程序。在命令提示符下运行以下命令：</source>
          <target state="new">安装 DNVM 后，必须使用它来下载 DNX 以运行应用程序。在命令提示符下运行以下命令：</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>验证你的 DNVM，并通过在命令提示符下输入以下命令，来查看活动的运行时：</source>
          <target state="new">验证你的 DNVM，并通过在命令提示符下输入以下命令，来查看活动的运行时：</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>命令提示符将显示活动运行时的详细信息。</source>
          <target state="new">命令提示符将显示活动运行时的详细信息。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>DNVM 位置</source>
          <target state="new">DNVM 位置</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>如果列出了多个 DNX 运行时，则可以选择在命令提示符下输入以下命令（或更新版本）来设置活动 DNX 运行时。稍后在本教程中创建 Web 应用时，请将其设置为 ASP.NET 5 生成器使用的同一版本。 <bpt id="p1">*</bpt>如果活动的运行时已设置为最新的可用运行时，你可能不需要更改运行时。<ept id="p1">*</ept></source>
          <target state="new">如果列出了多个 DNX 运行时，则可以选择在命令提示符下输入以下命令（或更新版本）来设置活动 DNX 运行时。稍后在本教程中创建 Web 应用时，请将其设置为 ASP.NET 5 生成器使用的同一版本。 <bpt id="p1">*</bpt>如果活动的运行时已设置为最新的可用运行时，你可能不需要更改运行时。<ept id="p1">*</ept></target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> 有关 OS X、 Linux 和 Windows 的更详细安装说明，请参阅<bpt id="p1">[</bpt>安装 ASP.NET 5 和 DNX<ept id="p1">](https://code.visualstudio.com/Docs/ASPnet5#_installing-aspnet-5-and-dnx)</ept>。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> 有关 OS X、 Linux 和 Windows 的更详细安装说明，请参阅<bpt id="p1">[</bpt>安装 ASP.NET 5 和 DNX<ept id="p1">](https://code.visualstudio.com/Docs/ASPnet5#_installing-aspnet-5-and-dnx)</ept>。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>创建 Web 应用</source>
          <target state="new">创建 Web 应用</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>本部分说明如何创建新应用 ASP.NET Web 应用的基架。你将使用 node 程序包管理器 (npm) 来安装 <bpt id="p1">[</bpt>Yeoman<ept id="p1">](http://yeoman.io/)</ept>（应用程序基架工具 - 相当于 Visual Studio“文件”&gt;“新建项目”操作的 VS Code）、<bpt id="p2">[</bpt>Grunt<ept id="p2">](http://gruntjs.com/)</ept>（JavaScript 任务运行程序）和 <bpt id="p3">[</bpt>Bower<ept id="p3">](http://bower.io/)</ept>（客户端程序包管理器）。</source>
          <target state="new">本部分说明如何创建新应用 ASP.NET Web 应用的基架。你将使用 node 程序包管理器 (npm) 来安装 <bpt id="p1">[</bpt>Yeoman<ept id="p1">](http://yeoman.io/)</ept>（应用程序基架工具 - 相当于 Visual Studio“文件”&gt;“新建项目”操作的 VS Code）、<bpt id="p2">[</bpt>Grunt<ept id="p2">](http://gruntjs.com/)</ept>（JavaScript 任务运行程序）和 <bpt id="p3">[</bpt>Bower<ept id="p3">](http://bower.io/)</ept>（客户端程序包管理器）。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>以管理员权限打开命令提示符，并导航到你要在其中创建 ASP.NET 项目的位置。例如，在 C: 根目录中创建一个 <bpt id="p1">*</bpt>vscodeprojects<ept id="p1">*</ept> 目录。</source>
          <target state="new">以管理员权限打开命令提示符，并导航到你要在其中创建 ASP.NET 项目的位置。例如，在 C: 根目录中创建一个 <bpt id="p1">*</bpt>vscodeprojects<ept id="p1">*</ept> 目录。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>在命令提示符下输入以下命令以安装 Yeoman 和支持工具。</source>
          <target state="new">在命令提示符下输入以下命令以安装 Yeoman 和支持工具。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> 你可能会收到警告，提示你 npm 版本已过期。此警告不会影响本教程。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> 你可能会收到警告，提示你 npm 版本已过期。此警告不会影响本教程。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>在命令提示符下输入以下命令，以创建项目文件夹，并创建应用的基架。</source>
          <target state="new">在命令提示符下输入以下命令，以创建项目文件夹，并创建应用的基架。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>使用箭头键从 ASP.NET 5 生成器菜单中选择“ Web 应用基本”类型，然后按 <bpt id="p1">**</bpt>&amp;lt;Enter&gt;<ept id="p1">**</ept>。</source>
          <target state="new">使用箭头键从 ASP.NET 5 生成器菜单中选择“ Web 应用基本”类型，然后按 <bpt id="p1">**</bpt>&amp;lt;Enter&gt;<ept id="p1">**</ept>。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Yeoman - ASP.NET 5 生成器</source>
          <target state="new">Yeoman - ASP.NET 5 生成器</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>将新的 ASP.NET Web 应用的名称设置为 <bpt id="p1">**</bpt>SampleWebApp<ept id="p1">**</ept>。由于整个教程将使用此名称，因此如果你选择不同的名称，则需要替换每个出现的 <bpt id="p2">**</bpt>SampleWebApp<ept id="p2">**</ept>。当你按 <bpt id="p3">**</bpt>&amp;lt;Enter&gt;<ept id="p3">**</ept> 时，Yeoman 将创建名为 <bpt id="p4">**</bpt>SampleWebApp<ept id="p4">**</ept> 的新文件夹，以及新应用的必要文件。</source>
          <target state="new">将新的 ASP.NET Web 应用的名称设置为 <bpt id="p1">**</bpt>SampleWebApp<ept id="p1">**</ept>。由于整个教程将使用此名称，因此如果你选择不同的名称，则需要替换每个出现的 <bpt id="p2">**</bpt>SampleWebApp<ept id="p2">**</ept>。当你按 <bpt id="p3">**</bpt>&amp;lt;Enter&gt;<ept id="p3">**</ept> 时，Yeoman 将创建名为 <bpt id="p4">**</bpt>SampleWebApp<ept id="p4">**</ept> 的新文件夹，以及新应用的必要文件。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>在命令提示符下，将目录更改为新的项目文件夹：</source>
          <target state="new">在命令提示符下，将目录更改为新的项目文件夹：</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>此外，在命令提示符下，输入以下命令安装必要的 NuGet 包，以便运行应用程序：</source>
          <target state="new">此外，在命令提示符下，输入以下命令安装必要的 NuGet 包，以便运行应用程序：</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>在命令提示符下输入以下命令打开 VS Code：</source>
          <target state="new">在命令提示符下输入以下命令打开 VS Code：</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>在本地运行该 Web 应用</source>
          <target state="new">在本地运行该 Web 应用</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>在创建 Web 应用并检索应用的所有 NuGet 包后，你可以在本地运行该 Web 应用。</source>
          <target state="new">在创建 Web 应用并检索应用的所有 NuGet 包后，你可以在本地运行该 Web 应用。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>在 VS Code 的“命令控制板”中，输入以下命令以显示可用的运行命令选项：</source>
          <target state="new">在 VS Code 的“命令控制板”中，输入以下命令以显示可用的运行命令选项：</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> 如果 Omnisharp 服务器当前未运行，则它将会启动。重新输入上述命令。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> 如果 Omnisharp 服务器当前未运行，则它将会启动。重新输入上述命令。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>接下来，选择以下命令以运行你的 Web 应用：</source>
          <target state="new">接下来，选择以下命令以运行你的 Web 应用：</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>命令窗口将显示该应用程序已启动。如果命令窗口未显示此消息，请检查 VS Code 左下角以找出项目中的错误。</source>
          <target state="new">命令窗口将显示该应用程序已启动。如果命令窗口未显示此消息，请检查 VS Code 左下角以找出项目中的错误。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> 从<bpt id="p1">**</bpt>命令控制板<ept id="p1">**</ept>发出命令需要在命令行的开头输入 <bpt id="p2">**</bpt>&gt;<ept id="p2">**</ept> 字符。你可以在 <bpt id="p3">*</bpt>project.json<ept id="p3">*</ept> 文件中查看与 <bpt id="p4">**</bpt>web<ept id="p4">**</ept> 命令相关的详细信息。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> 从<bpt id="p1">**</bpt>命令控制板<ept id="p1">**</ept>发出命令需要在命令行的开头输入 <bpt id="p2">**</bpt>&gt;<ept id="p2">**</ept> 字符。你可以在 <bpt id="p3">*</bpt>project.json<ept id="p3">*</ept> 文件中查看与 <bpt id="p4">**</bpt>web<ept id="p4">**</ept> 命令相关的详细信息。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>打开浏览器并导航到以下 URL。</source>
          <target state="new">打开浏览器并导航到以下 URL。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>http://localhost:5000</source>
          <target state="new">http://localhost:5000</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>将显示 Web 应用的默认页面，如下所示。</source>
          <target state="new">将显示 Web 应用的默认页面，如下所示。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>浏览器中的本地 Web 应用</source>
          <target state="new">浏览器中的本地 Web 应用</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>关闭你的浏览器。在<bpt id="p1">**</bpt>命令窗口<ept id="p1">**</ept>中，按 <bpt id="p2">**</bpt>Ctrl+C<ept id="p2">**</ept> 关闭应用程序并关闭<bpt id="p3">**</bpt>命令窗口<ept id="p3">**</ept>。</source>
          <target state="new">关闭你的浏览器。在<bpt id="p1">**</bpt>命令窗口<ept id="p1">**</ept>中，按 <bpt id="p2">**</bpt>Ctrl+C<ept id="p2">**</ept> 关闭应用程序并关闭<bpt id="p3">**</bpt>命令窗口<ept id="p3">**</ept>。</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>在 Azure 管理门户中创建 Web 应用</source>
          <target state="new">在 Azure 管理门户中创建 Web 应用</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>创建你的应用程序的第一步是通过 Azure 管理门户创建 Web 应用。为此，你将需要登录到该门户，然后单击左下角的新建按钮。将出现一个窗口。单击“快速创建”，输入 URL，然后选择“创建 Web 应用”。</source>
          <target state="new">创建你的应用程序的第一步是通过 Azure 管理门户创建 Web 应用。为此，你将需要登录到该门户，然后单击左下角的新建按钮。将出现一个窗口。单击“快速创建”，输入 URL，然后选择“创建 Web 应用”。</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>将快速设置 Web 应用。接下来，你要为通过 Git 进行发布提供相应支持。这一点可通过选择<bpt id="p1">**</bpt>从源代码控制设置部署<ept id="p1">**</ept>来完成。</source>
          <target state="new">将快速设置 Web 应用。接下来，你要为通过 Git 进行发布提供相应支持。这一点可通过选择<bpt id="p1">**</bpt>从源代码控制设置部署<ept id="p1">**</ept>来完成。</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>从“设置部署”对话框中，向下滚动并选择“本地 Git”选项。单击向右箭头以继续。</source>
          <target state="new">从“设置部署”对话框中，向下滚动并选择“本地 Git”选项。单击向右箭头以继续。</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>在设置 Git 发布之后，你将立即看到通知你正在创建存储库的页面。在存储库就绪时，会将你转至“部署”选项卡。“部署”选项卡包括有关如何连接的说明。</source>
          <target state="new">在设置 Git 发布之后，你将立即看到通知你正在创建存储库的页面。在存储库就绪时，会将你转至“部署”选项卡。“部署”选项卡包括有关如何连接的说明。</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>将 Web 应用发布到 Azure Web 应用</source>
          <target state="new">将 Web 应用发布到 Azure Web 应用</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>在本部分中，你将创建一个本地 Git 存储库，并从该存储库推送到 Azure，以将 Web 应用部署到 Azure。</source>
          <target state="new">在本部分中，你将创建一个本地 Git 存储库，并从该存储库推送到 Azure，以将 Web 应用部署到 Azure。</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>在 VS Code 的左侧导航栏中，选择“Git”选项。</source>
          <target state="new">在 VS Code 的左侧导航栏中，选择“Git”选项。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>VS Code 中的 Git 图标</source>
          <target state="new">VS Code 中的 Git 图标</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>选择“初始化 git 存储库”，确保你的工作区受 git 源代码管理。</source>
          <target state="new">选择“初始化 git 存储库”，确保你的工作区受 git 源代码管理。</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>初始化 Git</source>
          <target state="new">初始化 Git</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>打开命令窗口，并将目录更改为 Web 应用的目录。然后输入以下命令：</source>
          <target state="new">打开命令窗口，并将目录更改为 Web 应用的目录。然后输入以下命令：</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>此命令可防止包含 CRLF 结束符和 LF 结束符的文本出现问题。</source>
          <target state="new">此命令可防止包含 CRLF 结束符和 LF 结束符的文本出现问题。</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>在 VS Code 中，添加提交消息，然后单击“全部提交”复选图标。</source>
          <target state="new">在 VS Code 中，添加提交消息，然后单击“全部提交”复选图标。</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Git 全部提交</source>
          <target state="new">Git 全部提交</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>完成处理 Git 之后，你会发现，Git 窗口中的“更改”下面未列出任何文件。</source>
          <target state="new">完成处理 Git 之后，你会发现，Git 窗口中的“更改”下面未列出任何文件。</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Git 无更改</source>
          <target state="new">Git 无更改</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>更改回到命令窗口，其中的命令提示符指向 Web 应用所在的目录。</source>
          <target state="new">更改回到命令窗口，其中的命令提示符指向 Web 应用所在的目录。</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>使用前面复制的 Git URL（结尾是“.git”）创建远程引用，以便将更新推送到 Web 应用。</source>
          <target state="new">使用前面复制的 Git URL（结尾是“.git”）创建远程引用，以便将更新推送到 Web 应用。</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>配置 Git 以在本地保存你的凭据，以便自动将凭据附加到从 VS Code 生成的推送命令。</source>
          <target state="new">配置 Git 以在本地保存你的凭据，以便自动将凭据附加到从 VS Code 生成的推送命令。</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>输入以下命令，将更改推送到 Azure。在向 Azure 完成初始推送后，你可以从 VS Code 执行所有推送命令。</source>
          <target state="new">输入以下命令，将更改推送到 Azure。在向 Azure 完成初始推送后，你可以从 VS Code 执行所有推送命令。</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>系统将提示你输入之前在 Azure 中创建的密码。<bpt id="p1">**</bpt>注意：你的密码将不可见。<ept id="p1">**</ept></source>
          <target state="new">系统将提示你输入之前在 Azure 中创建的密码。<bpt id="p1">**</bpt>注意：你的密码将不可见。<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>上述命令的输出将以部署成功消息结尾。</source>
          <target state="new">上述命令的输出将以部署成功消息结尾。</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> 如果你更改了应用，可以通过依次选择“全部提交”选项和“推送”选项，直接在 VS Code 中使用内置 Git 功能重新发布应用。可以在“全部提交”和“刷新”按钮旁边的下拉菜单中找到可用的“推送”选项。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> 如果你更改了应用，可以通过依次选择“全部提交”选项和“推送”选项，直接在 VS Code 中使用内置 Git 功能重新发布应用。可以在“全部提交”和“刷新”按钮旁边的下拉菜单中找到可用的“推送”选项。</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>如果需要与其他人对项目进行协作，应该考虑在推送到 Azure 之前先推送到 GitHub。</source>
          <target state="new">如果需要与其他人对项目进行协作，应该考虑在推送到 Azure 之前先推送到 GitHub。</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>在 Azure 中运行应用</source>
          <target state="new">在 Azure 中运行应用</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>在部署 Web 应用后，让我们运行 Azure 中托管的该应用。</source>
          <target state="new">在部署 Web 应用后，让我们运行 Azure 中托管的该应用。</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>可以通过两种方法实现此目的：</source>
          <target state="new">可以通过两种方法实现此目的：</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>打开浏览器并输入 Web 应用的名称，如下所示。</source>
          <target state="new">打开浏览器并输入 Web 应用的名称，如下所示。</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>在 Azure 管理门户中，找到 Web 应用的 Web 应用边栏选项卡，然后单击“浏览”以查看应用</source>
          <target state="new">在 Azure 管理门户中，找到 Web 应用的 Web 应用边栏选项卡，然后单击“浏览”以查看应用</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>在默认浏览器中查看你的应用。</source>
          <target state="new">在默认浏览器中查看你的应用。</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Azure Web 应用</source>
          <target state="new">Azure Web 应用</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>摘要</source>
          <target state="new">摘要</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>在本教程中，你已学习如何在 VS Code 中创建 Web 应用并将其部署到 Azure。有关 VS Code 的详细信息，请参阅<bpt id="p1">[</bpt>为何使用 Visual Studio Code？<ept id="p1">](https://code.visualstudio.com/Docs/)</ept>一文 有关 Azure Web 应用的信息，请参阅<bpt id="p2">[</bpt> Web 应用概述<ept id="p2">](/home/features/web-site/)</ept>。</source>
          <target state="new">在本教程中，你已学习如何在 VS Code 中创建 Web 应用并将其部署到 Azure。有关 VS Code 的详细信息，请参阅<bpt id="p1">[</bpt>为何使用 Visual Studio Code？<ept id="p1">](https://code.visualstudio.com/Docs/)</ept>一文 有关 Azure Web 应用的信息，请参阅<bpt id="p2">[</bpt> Web 应用概述<ept id="p2">](/home/features/web-site/)</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>