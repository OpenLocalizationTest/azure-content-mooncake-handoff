<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae6a6114ef30e170e21a3b093a71227a63722f5d</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>服务总线 和 Java 与 AMQP 1.0 | Azure</source>
          <target state="new">服务总线 和 Java 与 AMQP 1.0 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>使用 AMQP 通过 Java 使用服务总线。</source>
          <target state="new">使用 AMQP 通过 Java 使用服务总线。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>使用 AMQP 1.0 通过 Java 使用服务总线</source>
          <target state="new">使用 AMQP 1.0 通过 Java 使用服务总线</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Java 消息服务 (JMS) 是一种标准 API，用于处理 Java 平台上面向消息的中间件。Azure 服务总线已使用 Apache Qpid 项目开发的基于 AMQP 1.0 的 JMS 客户端库进行测试。此库支持完整的 JMS 1.1 API，并可用于任何 AMQP 1.0 兼容的消息服务。在适用于 Windows Server 的服务总线（本地服务总线）中也支持此方案。有关详细信息，请参阅<bpt id="p1">[</bpt>适用于 Windows Server 的服务总线中的 AMQP<ept id="p1">][]</ept>。</source>
          <target state="new">Java 消息服务 (JMS) 是一种标准 API，用于处理 Java 平台上面向消息的中间件。Azure 服务总线已使用 Apache Qpid 项目开发的基于 AMQP 1.0 的 JMS 客户端库进行测试。此库支持完整的 JMS 1.1 API，并可用于任何 AMQP 1.0 兼容的消息服务。在适用于 Windows Server 的服务总线（本地服务总线）中也支持此方案。有关详细信息，请参阅<bpt id="p1">[</bpt>适用于 Windows Server 的服务总线中的 AMQP<ept id="p1">][]</ept>。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>下载 Apache Qpid AMQP 1.0 JMS 客户端库</source>
          <target state="new">下载 Apache Qpid AMQP 1.0 JMS 客户端库</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>有关下载 Apache Qpid JMS AMQP 1.0 客户端库的最新版本的信息，请访问 <bpt id="p1">[</bpt>http://people.apache.org/~rgodfrey/qpid-java-amqp-1-0-client-jms.html<ept id="p1">](http://people.apache.org/~rgodfrey/qpid-java-amqp-1-0-client-jms.html)</ept>。</source>
          <target state="new">有关下载 Apache Qpid JMS AMQP 1.0 客户端库的最新版本的信息，请访问 <bpt id="p1">[</bpt>http://people.apache.org/~rgodfrey/qpid-java-amqp-1-0-client-jms.html<ept id="p1">](http://people.apache.org/~rgodfrey/qpid-java-amqp-1-0-client-jms.html)</ept>。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>使用 Service Bus 构建和运行 JMS 应用程序时必须将以下 4 个 JAR 文件从 Apache Qpid JMS AMQP 1.0 分发存档添加到 Java CLASSPATH：</source>
          <target state="new">使用 Service Bus 构建和运行 JMS 应用程序时必须将以下 4 个 JAR 文件从 Apache Qpid JMS AMQP 1.0 分发存档添加到 Java CLASSPATH：</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>geronimo-jms_1.1_spec-[version].jar</source>
          <target state="new">geronimo-jms_1.1_spec-[version].jar</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>qpid-amqp-1-0-client-[version].jar</source>
          <target state="new">qpid-amqp-1-0-client-[version].jar</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>qpid-amqp-1-0-client-jms-[version].jar</source>
          <target state="new">qpid-amqp-1-0-client-jms-[version].jar</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>qpid-amqp-1-0-common-[version].jar</source>
          <target state="new">qpid-amqp-1-0-common-[version].jar</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>通过 JMS 使用服务总线队列、主题和订阅</source>
          <target state="new">通过 JMS 使用服务总线队列、主题和订阅</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Java 命名和目录接口 (JNDI)</source>
          <target state="new">Java 命名和目录接口 (JNDI)</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>JMS 使用 Java 命名和目录接口 (JNDI) 创建逻辑名称和物理名称之间的分隔。将使用 JNDI 解析以下两种类型的 JMS 对象：<bpt id="p1">**</bpt>ConnectionFactory<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>Destination<ept id="p2">**</ept>。JNDI 使用一个提供程序模型，你可以在其中插入不同目录服务来处理名称解析任务。Apache Qpid JMS AMQP 1.0 库附带一个使用文本文件配置的、基于属性文件的简单 JNDI 提供程序。</source>
          <target state="new">JMS 使用 Java 命名和目录接口 (JNDI) 创建逻辑名称和物理名称之间的分隔。将使用 JNDI 解析以下两种类型的 JMS 对象：<bpt id="p1">**</bpt>ConnectionFactory<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>Destination<ept id="p2">**</ept>。JNDI 使用一个提供程序模型，你可以在其中插入不同目录服务来处理名称解析任务。Apache Qpid JMS AMQP 1.0 库附带一个使用文本文件配置的、基于属性文件的简单 JNDI 提供程序。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Qpid 属性文件 JNDI 提供程序是使用以下格式的属性文件配置的：</source>
          <target state="new">Qpid 属性文件 JNDI 提供程序是使用以下格式的属性文件配置的：</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>配置连接工厂</source>
          <target state="new">配置连接工厂</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>用于在 Qpid 属性文件 JNDI 提供程序中定义 <bpt id="p1">**</bpt>ConnectionFactory<ept id="p1">**</ept> 的条目的格式如下：</source>
          <target state="new">用于在 Qpid 属性文件 JNDI 提供程序中定义 <bpt id="p1">**</bpt>ConnectionFactory<ept id="p1">**</ept> 的条目的格式如下：</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>其中 <ph id="ph1">`[jndi_name]`</ph> 和 <ph id="ph2">`[ConnectionURL]`</ph> 具有以下含义：</source>
          <target state="new">其中 <ph id="ph1">`[jndi_name]`</ph> 和 <ph id="ph2">`[ConnectionURL]`</ph> 具有以下含义：</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="new">Name</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>含义</source>
          <target state="new">含义</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>连接工厂的逻辑名称。通过使用 JNDI <ph id="ph1">`IntialContext.lookup()`</ph> 方法在 Java 应用程序中解析此名称。</source>
          <target state="new">连接工厂的逻辑名称。通过使用 JNDI <ph id="ph1">`IntialContext.lookup()`</ph> 方法在 Java 应用程序中解析此名称。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>用于向 AMQP 代理提供包含所需信息的 JMS 库的 URL。</source>
          <target state="new">用于向 AMQP 代理提供包含所需信息的 JMS 库的 URL。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>连接 URL 的格式如下：</source>
          <target state="new">连接 URL 的格式如下：</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>其中 <ph id="ph1">`[namespace]`</ph>、<ph id="ph2">`[username]`</ph> 和 <ph id="ph3">`[password]`</ph> 具有以下含义：</source>
          <target state="new">其中 <ph id="ph1">`[namespace]`</ph>、<ph id="ph2">`[username]`</ph> 和 <ph id="ph3">`[password]`</ph> 具有以下含义：</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="new">Name</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>含义</source>
          <target state="new">含义</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>从 <bpt id="p1">[</bpt>Azure 经典门户<ept id="p1">][]</ept>获取的服务总线命名空间。</source>
          <target state="new">从 <bpt id="p1">[</bpt>Azure 经典门户<ept id="p1">][]</ept>获取的服务总线命名空间。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>从 <bpt id="p1">[</bpt>Azure 经典门户<ept id="p1">][]</ept>获取的服务总线颁发者名称。</source>
          <target state="new">从 <bpt id="p1">[</bpt>Azure 经典门户<ept id="p1">][]</ept>获取的服务总线颁发者名称。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>从 <bpt id="p1">[</bpt>Azure 经典门户<ept id="p1">][]</ept>获取的 URL 编码形式的服务总线颁发者密钥。</source>
          <target state="new">从 <bpt id="p1">[</bpt>Azure 经典门户<ept id="p1">][]</ept>获取的 URL 编码形式的服务总线颁发者密钥。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>必须手动为密码进行 URL 编码。在 <bpt id="p1">[</bpt>http://www.w3schools.com/tags/ref\_urlencode.asp<ept id="p1">](http://www.w3schools.com/tags/ref_urlencode.asp)</ept> 上提供了一个有用的 URL 编码实用工具。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>必须手动为密码进行 URL 编码。在 <bpt id="p1">[</bpt>http://www.w3schools.com/tags/ref\_urlencode.asp<ept id="p1">](http://www.w3schools.com/tags/ref_urlencode.asp)</ept> 上提供了一个有用的 URL 编码实用工具。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>例如，如果从门户获得的信息如下所示：</source>
          <target state="new">例如，如果从门户获得的信息如下所示：</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Namespace：</source>
          <target state="new">Namespace：</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>test.servicebus.chinacloudapi.cn</source>
          <target state="new">test.servicebus.chinacloudapi.cn</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>颁发者名称：</source>
          <target state="new">颁发者名称：</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>owner</source>
          <target state="new">owner</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>颁发者密钥：</source>
          <target state="new">颁发者密钥：</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>abcdefg</source>
          <target state="new">abcdefg</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>那么，为了定义名为 <ph id="ph1">`SBCONNECTIONFACTORY`</ph> 的 <bpt id="p1">**</bpt>ConnectionFactory<ept id="p1">**</ept> 对象，配置字符串将如下所示：</source>
          <target state="new">那么，为了定义名为 <ph id="ph1">`SBCONNECTIONFACTORY`</ph> 的 <bpt id="p1">**</bpt>ConnectionFactory<ept id="p1">**</ept> 对象，配置字符串将如下所示：</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>配置目标</source>
          <target state="new">配置目标</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>用于在 Qpid 属性文件 JNDI 提供程序中定义目标的条目的格式如下：</source>
          <target state="new">用于在 Qpid 属性文件 JNDI 提供程序中定义目标的条目的格式如下：</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>其中 <ph id="ph1">`[jndi_name]`</ph> 和 <ph id="ph2">`[physical_name]`</ph> 具有以下含义：</source>
          <target state="new">其中 <ph id="ph1">`[jndi_name]`</ph> 和 <ph id="ph2">`[physical_name]`</ph> 具有以下含义：</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="new">Name</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>含义</source>
          <target state="new">含义</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>目标的逻辑名称。通过使用 JNDI <ph id="ph1">`IntialContext.lookup()`</ph> 方法在 Java 应用程序中解析此名称。</source>
          <target state="new">目标的逻辑名称。通过使用 JNDI <ph id="ph1">`IntialContext.lookup()`</ph> 方法在 Java 应用程序中解析此名称。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>应用程序在其中发送或接收消息的 Service Bus 实体的名称。</source>
          <target state="new">应用程序在其中发送或接收消息的 Service Bus 实体的名称。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>注意以下事项：</source>
          <target state="new">注意以下事项：</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`[physical\name]`</ph> 值可以是服务总线队列或主题。</source>
          <target state="new"><ph id="ph1">`[physical\name]`</ph> 值可以是服务总线队列或主题。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>在从 Service Bus 主题订阅中接收时，在 JNDI 中指定的物理名称应该是该主题的名称。在 JMS 应用程序代码中创建可持久订阅时提供该订阅名称。</source>
          <target state="new">在从 Service Bus 主题订阅中接收时，在 JNDI 中指定的物理名称应该是该主题的名称。在 JMS 应用程序代码中创建可持久订阅时提供该订阅名称。</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>还可以将服务总线主题订阅视为一个 JMS 队列。此方法具有以下几个优点：可以针对队列和主题订阅使用同一接收者代码，并且所有地址信息（主题和订阅名称）都在属性文件中外部化。</source>
          <target state="new">还可以将服务总线主题订阅视为一个 JMS 队列。此方法具有以下几个优点：可以针对队列和主题订阅使用同一接收者代码，并且所有地址信息（主题和订阅名称）都在属性文件中外部化。</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>若要将服务总线主题订阅视为一个 JMS 队列，属性文件中的条目应采用以下形式：<ph id="ph1">`queue.[jndi_name] = [topic_name]/Subscriptions/[subscription_name]`</ph>。|</source>
          <target state="new">若要将服务总线主题订阅视为一个 JMS 队列，属性文件中的条目应采用以下形式：<ph id="ph1">`queue.[jndi_name] = [topic_name]/Subscriptions/[subscription_name]`</ph>。|</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>若要定义映射到名为“topic1”的服务总线主题的名为“TOPIC”的逻辑 JMS 目标，属性文件中的条目应如下所示：</source>
          <target state="new">若要定义映射到名为“topic1”的服务总线主题的名为“TOPIC”的逻辑 JMS 目标，属性文件中的条目应如下所示：</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>使用 JMS 发送消息</source>
          <target state="new">使用 JMS 发送消息</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>以下代码演示如何向服务总线主题发送消息。假设在上一部分中所述的 <bpt id="p1">**</bpt>servicebus.properties<ept id="p1">**</ept> 配置文件中定义了 <ph id="ph1">`SBCONNECTIONFACTORY`</ph> 和 <ph id="ph2">`TOPIC`</ph>。</source>
          <target state="new">以下代码演示如何向服务总线主题发送消息。假设在上一部分中所述的 <bpt id="p1">**</bpt>servicebus.properties<ept id="p1">**</ept> 配置文件中定义了 <ph id="ph1">`SBCONNECTIONFACTORY`</ph> 和 <ph id="ph2">`TOPIC`</ph>。</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>使用 JMS 接收消息</source>
          <target state="new">使用 JMS 接收消息</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>以下代码演示如何从服务总线主题订阅接收消息。<ph id="ph1">`how`</ph>假设在上一部分中所述的 <bpt id="p1">**</bpt>servicebus.properties<ept id="p1">**</ept> 配置文件中定义了 <ph id="ph2">`SBCONNECTIONFACTORY`</ph> 和 TOPIC。它还假定订阅名称是 <ph id="ph3">`subscription1`</ph>。</source>
          <target state="new">以下代码演示如何从服务总线主题订阅接收消息。<ph id="ph1">`how`</ph>假设在上一部分中所述的 <bpt id="p1">**</bpt>servicebus.properties<ept id="p1">**</ept> 配置文件中定义了 <ph id="ph2">`SBCONNECTIONFACTORY`</ph> 和 TOPIC。它还假定订阅名称是 <ph id="ph3">`subscription1`</ph>。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>用于构建可靠的应用程序的准则</source>
          <target state="new">用于构建可靠的应用程序的准则</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>JMS 规范定义了应如何编写 API 方法和应用程序代码的异常约定来处理此类异常。下面是有关异常处理需要注意的其他一些要点：</source>
          <target state="new">JMS 规范定义了应如何编写 API 方法和应用程序代码的异常约定来处理此类异常。下面是有关异常处理需要注意的其他一些要点：</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>使用 <bpt id="p1">**</bpt>connection.setExceptionListener<ept id="p1">**</ept> 向 JMS 连接注册 <bpt id="p2">**</bpt>ExceptionListener<ept id="p2">**</ept>。这允许以异步方式向客户端通知问题。此通知对于仅使用消息的连接特别重要，因为客户端没有其他方法可以获知其连接已失败。如果底层 AMQP 连接、会话或链接有问题，将调用 <bpt id="p3">**</bpt>ExceptionListener<ept id="p3">**</ept>。在此情况下，应用程序应从零开始重新创建 <bpt id="p4">**</bpt>JMS Connection<ept id="p4">**</ept>、<bpt id="p5">**</bpt>Session<ept id="p5">**</ept>、<bpt id="p6">**</bpt>MessageProducer<ept id="p6">**</ept> 和 <bpt id="p7">**</bpt>MessageConsumer<ept id="p7">**</ept> 对象。</source>
          <target state="new">使用 <bpt id="p1">**</bpt>connection.setExceptionListener<ept id="p1">**</ept> 向 JMS 连接注册 <bpt id="p2">**</bpt>ExceptionListener<ept id="p2">**</ept>。这允许以异步方式向客户端通知问题。此通知对于仅使用消息的连接特别重要，因为客户端没有其他方法可以获知其连接已失败。如果底层 AMQP 连接、会话或链接有问题，将调用 <bpt id="p3">**</bpt>ExceptionListener<ept id="p3">**</ept>。在此情况下，应用程序应从零开始重新创建 <bpt id="p4">**</bpt>JMS Connection<ept id="p4">**</ept>、<bpt id="p5">**</bpt>Session<ept id="p5">**</ept>、<bpt id="p6">**</bpt>MessageProducer<ept id="p6">**</ept> 和 <bpt id="p7">**</bpt>MessageConsumer<ept id="p7">**</ept> 对象。</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>若要验证是否已从 <bpt id="p1">**</bpt>MessageProducer<ept id="p1">**</ept> 将一条消息成功发送到服务总线实体，请确保已为应用程序配置 <bpt id="p2">**</bpt>qpid.sync\_publish<ept id="p2">**</ept> 系统属性集。可以通过在启动应用程序时在命令行上设置 <bpt id="p3">**</bpt>-Dqpid.sync\_publish=true<ept id="p3">**</ept> Java VM 选项启动程序来完成此操作。设置此选项可将库配置为不从发送调用返回，直到收到该消息已被服务总线接受的确认为止。如果在发送操作期间出现问题，则将引发 <bpt id="p4">**</bpt>JMSException<ept id="p4">**</ept>。有两个可能的原因：</source>
          <target state="new">若要验证是否已从 <bpt id="p1">**</bpt>MessageProducer<ept id="p1">**</ept> 将一条消息成功发送到服务总线实体，请确保已为应用程序配置 <bpt id="p2">**</bpt>qpid.sync\_publish<ept id="p2">**</ept> 系统属性集。可以通过在启动应用程序时在命令行上设置 <bpt id="p3">**</bpt>-Dqpid.sync\_publish=true<ept id="p3">**</ept> Java VM 选项启动程序来完成此操作。设置此选项可将库配置为不从发送调用返回，直到收到该消息已被服务总线接受的确认为止。如果在发送操作期间出现问题，则将引发 <bpt id="p4">**</bpt>JMSException<ept id="p4">**</ept>。有两个可能的原因：</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>如果问题是由于服务总线拒绝所发送的特定消息所致，则将引发 <bpt id="p1">**</bpt>MessageRejectedException<ept id="p1">**</ept> 异常。此错误是暂时的，或者由于消息出现某些问题所致。建议的操作过程是进行多次尝试，以便使用一些后退逻辑重试该操作。如果问题仍然存在，则应使用本地记录的错误放弃该消息。在这种情况下，无需重新创建 <bpt id="p2">**</bpt>JMS Connection<ept id="p2">**</ept>、<bpt id="p3">**</bpt>Session<ept id="p3">**</ept> 或 <bpt id="p4">**</bpt>MessageProducer<ept id="p4">**</ept> 对象。</source>
          <target state="new">如果问题是由于服务总线拒绝所发送的特定消息所致，则将引发 <bpt id="p1">**</bpt>MessageRejectedException<ept id="p1">**</ept> 异常。此错误是暂时的，或者由于消息出现某些问题所致。建议的操作过程是进行多次尝试，以便使用一些后退逻辑重试该操作。如果问题仍然存在，则应使用本地记录的错误放弃该消息。在这种情况下，无需重新创建 <bpt id="p2">**</bpt>JMS Connection<ept id="p2">**</ept>、<bpt id="p3">**</bpt>Session<ept id="p3">**</ept> 或 <bpt id="p4">**</bpt>MessageProducer<ept id="p4">**</ept> 对象。</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>如果问题是由于服务总线关闭 AMQP 链接所致，则将引发 <bpt id="p1">**</bpt>InvalidDestinationException<ept id="p1">**</ept> 异常。这可能是由于暂时性问题或由于消息实体被删除所致。在这两种情况中的任一情况下，均应重新创建 <bpt id="p2">**</bpt>JMS Connection<ept id="p2">**</ept>、<bpt id="p3">**</bpt>Session<ept id="p3">**</ept> 和 <bpt id="p4">**</bpt>MessageProducer<ept id="p4">**</ept> 对象。如果错误条件是暂时的，则此操作最终将会成功。如果实体已被删除，则失败将是永久的。</source>
          <target state="new">如果问题是由于服务总线关闭 AMQP 链接所致，则将引发 <bpt id="p1">**</bpt>InvalidDestinationException<ept id="p1">**</ept> 异常。这可能是由于暂时性问题或由于消息实体被删除所致。在这两种情况中的任一情况下，均应重新创建 <bpt id="p2">**</bpt>JMS Connection<ept id="p2">**</ept>、<bpt id="p3">**</bpt>Session<ept id="p3">**</ept> 和 <bpt id="p4">**</bpt>MessageProducer<ept id="p4">**</ept> 对象。如果错误条件是暂时的，则此操作最终将会成功。如果实体已被删除，则失败将是永久的。</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>在 .NET 和 JMS 之间进行消息传递</source>
          <target state="new">在 .NET 和 JMS 之间进行消息传递</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>消息正文</source>
          <target state="new">消息正文</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>JMS 定义了五种不同的消息类型：<bpt id="p1">**</bpt>BytesMessage<ept id="p1">**</ept>、<bpt id="p2">**</bpt>MapMessage<ept id="p2">**</ept>、<bpt id="p3">**</bpt>ObjectMessage<ept id="p3">**</ept>、<bpt id="p4">**</bpt>StreamMessage<ept id="p4">**</ept> 和 <bpt id="p5">**</bpt>TextMessage<ept id="p5">**</ept>。服务总线 .NET API 具有单一消息类型 <bpt id="p6">[</bpt>BrokeredMessage<ept id="p6">][]</ept>。</source>
          <target state="new">JMS 定义了五种不同的消息类型：<bpt id="p1">**</bpt>BytesMessage<ept id="p1">**</ept>、<bpt id="p2">**</bpt>MapMessage<ept id="p2">**</ept>、<bpt id="p3">**</bpt>ObjectMessage<ept id="p3">**</ept>、<bpt id="p4">**</bpt>StreamMessage<ept id="p4">**</ept> 和 <bpt id="p5">**</bpt>TextMessage<ept id="p5">**</ept>。服务总线 .NET API 具有单一消息类型 <bpt id="p6">[</bpt>BrokeredMessage<ept id="p6">][]</ept>。</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>JMS 到服务总线 .NET API</source>
          <target state="new">JMS 到服务总线 .NET API</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>以下各节演示如何通过 .NET 使用每种 JMS 消息类型的消息。尚未包括 <bpt id="p1">**</bpt>ObjectMessage<ept id="p1">**</ept> 示例，因为 <bpt id="p2">**</bpt>ObjectMessage<ept id="p2">**</ept> 的正文包含使用 Java 编程语言的可序列化对象，而这是 .NET 应用程序所无法解释的。</source>
          <target state="new">以下各节演示如何通过 .NET 使用每种 JMS 消息类型的消息。尚未包括 <bpt id="p1">**</bpt>ObjectMessage<ept id="p1">**</ept> 示例，因为 <bpt id="p2">**</bpt>ObjectMessage<ept id="p2">**</ept> 的正文包含使用 Java 编程语言的可序列化对象，而这是 .NET 应用程序所无法解释的。</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>BytesMessage</source>
          <target state="new">BytesMessage</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>以下代码演示如何通过服务总线 .NET API 使用 <bpt id="p1">**</bpt>BytesMessage<ept id="p1">**</ept> 对象的正文。</source>
          <target state="new">以下代码演示如何通过服务总线 .NET API 使用 <bpt id="p1">**</bpt>BytesMessage<ept id="p1">**</ept> 对象的正文。</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>MapMessage</source>
          <target state="new">MapMessage</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>以下代码演示如何通过服务总线 .NET API 使用 <bpt id="p1">**</bpt>MapMessage<ept id="p1">**</ept> 对象的正文。此代码循环访问映射的元素，并显示每个元素的名称和值。</source>
          <target state="new">以下代码演示如何通过服务总线 .NET API 使用 <bpt id="p1">**</bpt>MapMessage<ept id="p1">**</ept> 对象的正文。此代码循环访问映射的元素，并显示每个元素的名称和值。</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>StreamMessage</source>
          <target state="new">StreamMessage</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>以下代码演示如何通过服务总线 .NET API 使用 <bpt id="p1">**</bpt>StreamMessage<ept id="p1">**</ept> 对象的正文。此代码将列出流中的每一项及其类型。</source>
          <target state="new">以下代码演示如何通过服务总线 .NET API 使用 <bpt id="p1">**</bpt>StreamMessage<ept id="p1">**</ept> 对象的正文。此代码将列出流中的每一项及其类型。</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>TextMessage</source>
          <target state="new">TextMessage</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>以下代码演示如何通过服务总线 .NET API 使用 <bpt id="p1">**</bpt>TextMessage<ept id="p1">**</ept> 对象的正文。此代码将显示消息的正文中包含的文本字符串。</source>
          <target state="new">以下代码演示如何通过服务总线 .NET API 使用 <bpt id="p1">**</bpt>TextMessage<ept id="p1">**</ept> 对象的正文。此代码将显示消息的正文中包含的文本字符串。</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>服务总线 .NET API 到 JMS</source>
          <target state="new">服务总线 .NET API 到 JMS</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>以下各节说明 .NET 应用程序如何创建在 JMS 中接收具有每种不同的 JMS 消息类型的消息。尚未包括 <bpt id="p1">**</bpt>ObjectMessage<ept id="p1">**</ept> 示例，因为 <bpt id="p2">**</bpt>ObjectMessage<ept id="p2">**</ept> 的正文包含使用 Java 编程语言的可序列化对象，而这是 .NET 应用程序所无法解释的。</source>
          <target state="new">以下各节说明 .NET 应用程序如何创建在 JMS 中接收具有每种不同的 JMS 消息类型的消息。尚未包括 <bpt id="p1">**</bpt>ObjectMessage<ept id="p1">**</ept> 示例，因为 <bpt id="p2">**</bpt>ObjectMessage<ept id="p2">**</ept> 的正文包含使用 Java 编程语言的可序列化对象，而这是 .NET 应用程序所无法解释的。</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>BytesMessage</source>
          <target state="new">BytesMessage</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>以下代码演示如何在 .NET 中创建由 JMS 客户端接收作为 <bpt id="p1">**</bpt>BytesMessage<ept id="p1">**</ept> 的 <bpt id="p2">[</bpt>BrokeredMessage<ept id="p2">][]</ept> 对象。</source>
          <target state="new">以下代码演示如何在 .NET 中创建由 JMS 客户端接收作为 <bpt id="p1">**</bpt>BytesMessage<ept id="p1">**</ept> 的 <bpt id="p2">[</bpt>BrokeredMessage<ept id="p2">][]</ept> 对象。</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>StreamMessage</source>
          <target state="new">StreamMessage</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>以下代码演示如何在 .NET 中创建由 JMS 客户端接收作为 <bpt id="p1">**</bpt>StreamMessage<ept id="p1">**</ept> 的 <bpt id="p2">[</bpt>BrokeredMessage<ept id="p2">][]</ept> 对象。</source>
          <target state="new">以下代码演示如何在 .NET 中创建由 JMS 客户端接收作为 <bpt id="p1">**</bpt>StreamMessage<ept id="p1">**</ept> 的 <bpt id="p2">[</bpt>BrokeredMessage<ept id="p2">][]</ept> 对象。</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>TextMessage</source>
          <target state="new">TextMessage</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>以下代码演示如何通过服务总线 .NET API 使用 <bpt id="p1">**</bpt>TextMessage<ept id="p1">**</ept> 的正文。此代码将显示消息的正文中包含的文本字符串。</source>
          <target state="new">以下代码演示如何通过服务总线 .NET API 使用 <bpt id="p1">**</bpt>TextMessage<ept id="p1">**</ept> 的正文。此代码将显示消息的正文中包含的文本字符串。</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>应用程序属性</source>
          <target state="new">应用程序属性</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>JMS 到服务总线 .NET API</source>
          <target state="new">JMS 到服务总线 .NET API</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>JMS 消息支持以下类型的应用程序属性：<bpt id="p1">**</bpt>boolean<ept id="p1">**</ept>、<bpt id="p2">**</bpt>byte<ept id="p2">**</ept>、<bpt id="p3">**</bpt>short<ept id="p3">**</ept>、<bpt id="p4">**</bpt>int<ept id="p4">**</ept>、<bpt id="p5">**</bpt>long<ept id="p5">**</ept>、<bpt id="p6">**</bpt>float<ept id="p6">**</ept>、<bpt id="p7">**</bpt>double<ept id="p7">**</ept> 和 <bpt id="p8">**</bpt>String<ept id="p8">**</ept>。以下 Java 代码显示如何使用上述每种属性类型在消息上设置属性。</source>
          <target state="new">JMS 消息支持以下类型的应用程序属性：<bpt id="p1">**</bpt>boolean<ept id="p1">**</ept>、<bpt id="p2">**</bpt>byte<ept id="p2">**</ept>、<bpt id="p3">**</bpt>short<ept id="p3">**</ept>、<bpt id="p4">**</bpt>int<ept id="p4">**</ept>、<bpt id="p5">**</bpt>long<ept id="p5">**</ept>、<bpt id="p6">**</bpt>float<ept id="p6">**</ept>、<bpt id="p7">**</bpt>double<ept id="p7">**</ept> 和 <bpt id="p8">**</bpt>String<ept id="p8">**</ept>。以下 Java 代码显示如何使用上述每种属性类型在消息上设置属性。</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>在服务总线 .NET API 中，在 <bpt id="p1">[</bpt>BrokeredMessage<ept id="p1">][]</ept> 的 <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> 集合中携带消息应用程序属性。以下代码演示如何读取从 JMS 客户端收到的消息的应用程序属性。</source>
          <target state="new">在服务总线 .NET API 中，在 <bpt id="p1">[</bpt>BrokeredMessage<ept id="p1">][]</ept> 的 <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> 集合中携带消息应用程序属性。以下代码演示如何读取从 JMS 客户端收到的消息的应用程序属性。</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>下表显示如何将 JMS 属性类型映射到 .NET 属性类型。</source>
          <target state="new">下表显示如何将 JMS 属性类型映射到 .NET 属性类型。</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>JMS 属性类型</source>
          <target state="new">JMS 属性类型</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>.NET 属性类型</source>
          <target state="new">.NET 属性类型</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Byte</source>
          <target state="new">Byte</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>sbyte</source>
          <target state="new">sbyte</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>整数</source>
          <target state="new">整数</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="new">int</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Float</source>
          <target state="new">Float</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>float</source>
          <target state="new">float</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Double</source>
          <target state="new">Double</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>double</source>
          <target state="new">double</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>布尔</source>
          <target state="new">布尔</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>bool</source>
          <target state="new">bool</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="new">String</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>字符串</source>
          <target state="new">字符串</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>BrokeredMessage<ept id="p1">][]</ept> 类型支持以下类型的应用程序属性：<bpt id="p2">**</bpt>byte<ept id="p2">**</ept>、<bpt id="p3">**</bpt>sbyte<ept id="p3">**</ept>、<bpt id="p4">**</bpt>char<ept id="p4">**</ept>、<bpt id="p5">**</bpt>short<ept id="p5">**</ept>、<bpt id="p6">**</bpt>ushort<ept id="p6">**</ept>、<bpt id="p7">**</bpt>int<ept id="p7">**</ept>、<bpt id="p8">**</bpt>uint<ept id="p8">**</ept>、<bpt id="p9">**</bpt>long<ept id="p9">**</ept>、<bpt id="p10">**</bpt>ulong<ept id="p10">**</ept>、<bpt id="p11">**</bpt>float<ept id="p11">**</ept>、<bpt id="p12">**</bpt>double<ept id="p12">**</ept>、<bpt id="p13">**</bpt>decimal<ept id="p13">**</ept>、<bpt id="p14">**</bpt>bool<ept id="p14">**</ept>、<bpt id="p15">**</bpt>Guid<ept id="p15">**</ept>、<bpt id="p16">**</bpt>string<ept id="p16">**</ept>、<bpt id="p17">**</bpt>Uri<ept id="p17">**</ept>、<bpt id="p18">**</bpt>DateTime<ept id="p18">**</ept>、<bpt id="p19">**</bpt>DateTimeOffset<ept id="p19">**</ept> 和 <bpt id="p20">**</bpt>TimeSpan<ept id="p20">**</ept>。以下 .NET 代码显示如何使用上述每种属性类型在 <bpt id="p21">[</bpt>BrokeredMessage<ept id="p21">][]</ept> 对象上设置属性。</source>
          <target state="new"><bpt id="p1">[</bpt>BrokeredMessage<ept id="p1">][]</ept> 类型支持以下类型的应用程序属性：<bpt id="p2">**</bpt>byte<ept id="p2">**</ept>、<bpt id="p3">**</bpt>sbyte<ept id="p3">**</ept>、<bpt id="p4">**</bpt>char<ept id="p4">**</ept>、<bpt id="p5">**</bpt>short<ept id="p5">**</ept>、<bpt id="p6">**</bpt>ushort<ept id="p6">**</ept>、<bpt id="p7">**</bpt>int<ept id="p7">**</ept>、<bpt id="p8">**</bpt>uint<ept id="p8">**</ept>、<bpt id="p9">**</bpt>long<ept id="p9">**</ept>、<bpt id="p10">**</bpt>ulong<ept id="p10">**</ept>、<bpt id="p11">**</bpt>float<ept id="p11">**</ept>、<bpt id="p12">**</bpt>double<ept id="p12">**</ept>、<bpt id="p13">**</bpt>decimal<ept id="p13">**</ept>、<bpt id="p14">**</bpt>bool<ept id="p14">**</ept>、<bpt id="p15">**</bpt>Guid<ept id="p15">**</ept>、<bpt id="p16">**</bpt>string<ept id="p16">**</ept>、<bpt id="p17">**</bpt>Uri<ept id="p17">**</ept>、<bpt id="p18">**</bpt>DateTime<ept id="p18">**</ept>、<bpt id="p19">**</bpt>DateTimeOffset<ept id="p19">**</ept> 和 <bpt id="p20">**</bpt>TimeSpan<ept id="p20">**</ept>。以下 .NET 代码显示如何使用上述每种属性类型在 <bpt id="p21">[</bpt>BrokeredMessage<ept id="p21">][]</ept> 对象上设置属性。</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>以下 Java 代码演示如何读取从服务总线 .NET 客户端收到的消息的应用程序属性。</source>
          <target state="new">以下 Java 代码演示如何读取从服务总线 .NET 客户端收到的消息的应用程序属性。</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>下表显示如何将 .NET 属性类型映射到 JMS 属性类型。</source>
          <target state="new">下表显示如何将 .NET 属性类型映射到 JMS 属性类型。</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>.NET 属性类型</source>
          <target state="new">.NET 属性类型</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>JMS 属性类型</source>
          <target state="new">JMS 属性类型</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>byte</source>
          <target state="new">byte</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>UnsignedByte</source>
          <target state="new">UnsignedByte</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>sbyte</source>
          <target state="new">sbyte</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Byte</source>
          <target state="new">Byte</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>char</source>
          <target state="new">char</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Character</source>
          <target state="new">Character</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>short</source>
          <target state="new">short</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Short</source>
          <target state="new">Short</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>ushort</source>
          <target state="new">ushort</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>UnsignedShort</source>
          <target state="new">UnsignedShort</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="new">int</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="new">Integer</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>uint</source>
          <target state="new">uint</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>UnsignedInteger</source>
          <target state="new">UnsignedInteger</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>long</source>
          <target state="new">long</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Long</source>
          <target state="new">Long</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>ulong</source>
          <target state="new">ulong</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>UnsignedLong</source>
          <target state="new">UnsignedLong</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>float</source>
          <target state="new">float</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Float</source>
          <target state="new">Float</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>double</source>
          <target state="new">double</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Double</source>
          <target state="new">Double</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>decimal</source>
          <target state="new">decimal</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>BigDecimal</source>
          <target state="new">BigDecimal</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>bool</source>
          <target state="new">bool</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="new">Boolean</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Guid</source>
          <target state="new">Guid</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>UUID</source>
          <target state="new">UUID</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>string</source>
          <target state="new">string</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="new">String</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>DateTime</source>
          <target state="new">DateTime</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="new">Date</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>DateTimeOffset</source>
          <target state="new">DateTimeOffset</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>DescribedType</source>
          <target state="new">DescribedType</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>映射到 AMQP 类型的 DateTimeOffset.UtcTicks：</source>
          <target state="new">映射到 AMQP 类型的 DateTimeOffset.UtcTicks：</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>TimeSpan</source>
          <target state="new">TimeSpan</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>DescribedType</source>
          <target state="new">DescribedType</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>映射到 AMQP 类型的 Timespan.Ticks：</source>
          <target state="new">映射到 AMQP 类型的 Timespan.Ticks：</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Uri</source>
          <target state="new">Uri</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>DescribedType</source>
          <target state="new">DescribedType</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>映射到 AMQP 类型的 Uri.AbsoluteUri：</source>
          <target state="new">映射到 AMQP 类型的 Uri.AbsoluteUri：</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>标准标头</source>
          <target state="new">标准标头</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>下表显示了如何使用 AMQP 1.0 映射 JMS 标准标头和 <bpt id="p1">[</bpt>BrokeredMessage<ept id="p1">][]</ept> 标准属性。</source>
          <target state="new">下表显示了如何使用 AMQP 1.0 映射 JMS 标准标头和 <bpt id="p1">[</bpt>BrokeredMessage<ept id="p1">][]</ept> 标准属性。</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>JMS 到服务总线 .NET API</source>
          <target state="new">JMS 到服务总线 .NET API</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>JMS</source>
          <target state="new">JMS</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>服务总线 .NET</source>
          <target state="new">服务总线 .NET</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>JMSCorrelationID</source>
          <target state="new">JMSCorrelationID</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Message.CorrelationID</source>
          <target state="new">Message.CorrelationID</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>JMSDeliveryMode</source>
          <target state="new">JMSDeliveryMode</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>当前不可用</source>
          <target state="new">当前不可用</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>服务总线仅支持持久消息；例如，DeliveryMode.PERSISTENT，而不考虑指定的内容。</source>
          <target state="new">服务总线仅支持持久消息；例如，DeliveryMode.PERSISTENT，而不考虑指定的内容。</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>JMSDestination</source>
          <target state="new">JMSDestination</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Message.To</source>
          <target state="new">Message.To</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>JMSExpiration</source>
          <target state="new">JMSExpiration</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Message.TimeToLive</source>
          <target state="new">Message.TimeToLive</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>转换</source>
          <target state="new">转换</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>JMSMessageID</source>
          <target state="new">JMSMessageID</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Message.MessageID</source>
          <target state="new">Message.MessageID</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>默认情况下，JMSMessageID 在 AMQP 消息中以二进制格式编码。收到二进制消息 ID 后，.NET 客户端库将根据字节的 unicode 值将其转换为字符串表示形式。若要将 JMS 库切换为使用字符串消息 ID，请在 JNDI ConnectionURL 的查询参数后面追加“binary-messageid=false”字符串。例如：“amqps://[username]:[password]@[namespace].servicebus.chinacloudapi.cn?</source>
          <target state="new">默认情况下，JMSMessageID 在 AMQP 消息中以二进制格式编码。收到二进制消息 ID 后，.NET 客户端库将根据字节的 unicode 值将其转换为字符串表示形式。若要将 JMS 库切换为使用字符串消息 ID，请在 JNDI ConnectionURL 的查询参数后面追加“binary-messageid=false”字符串。例如：“amqps://[username]:[password]@[namespace].servicebus.chinacloudapi.cn?</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>binary-messageid=false”。</source>
          <target state="new">binary-messageid=false”。</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>JMSPriority</source>
          <target state="new">JMSPriority</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>当前不可用</source>
          <target state="new">当前不可用</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>服务总线不支持消息优先级。</source>
          <target state="new">服务总线不支持消息优先级。</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>JMSRedelivered</source>
          <target state="new">JMSRedelivered</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>当前不可用</source>
          <target state="new">当前不可用</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>JMSReplyTo</source>
          <target state="new">JMSReplyTo</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>消息。ReplyTo</source>
          <target state="new">消息。ReplyTo</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>JMSTimestamp</source>
          <target state="new">JMSTimestamp</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Message.EnqueuedTimeUtc</source>
          <target state="new">Message.EnqueuedTimeUtc</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Conversion</source>
          <target state="new">Conversion</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>JMSType</source>
          <target state="new">JMSType</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Message.Properties[“jms-type”]</source>
          <target state="new">Message.Properties[“jms-type”]</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>服务总线 .NET API 到 JMS</source>
          <target state="new">服务总线 .NET API 到 JMS</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>服务总线 .NET</source>
          <target state="new">服务总线 .NET</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>JMS</source>
          <target state="new">JMS</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>ContentType</source>
          <target state="new">ContentType</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>当前不可用</source>
          <target state="new">当前不可用</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>CorrelationId</source>
          <target state="new">CorrelationId</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>JMSCorrelationID</source>
          <target state="new">JMSCorrelationID</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>EnqueuedTimeUtc</source>
          <target state="new">EnqueuedTimeUtc</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>JMSTimestamp</source>
          <target state="new">JMSTimestamp</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>转换</source>
          <target state="new">转换</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Label</source>
          <target state="new">Label</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>不适用</source>
          <target state="new">不适用</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>当前不可用</source>
          <target state="new">当前不可用</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>MessageId</source>
          <target state="new">MessageId</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>JMSMessageID</source>
          <target state="new">JMSMessageID</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>ReplyTo</source>
          <target state="new">ReplyTo</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>JMSReplyTo</source>
          <target state="new">JMSReplyTo</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>ReplyToSessionId</source>
          <target state="new">ReplyToSessionId</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>不适用</source>
          <target state="new">不适用</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>当前不可用</source>
          <target state="new">当前不可用</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>ScheduledEnqueueTimeUtc</source>
          <target state="new">ScheduledEnqueueTimeUtc</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>不适用</source>
          <target state="new">不适用</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>当前不可用</source>
          <target state="new">当前不可用</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>SessionId</source>
          <target state="new">SessionId</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>不适用</source>
          <target state="new">不适用</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>当前不可用</source>
          <target state="new">当前不可用</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>TimeToLive</source>
          <target state="new">TimeToLive</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>JMSExpiration</source>
          <target state="new">JMSExpiration</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>转换</source>
          <target state="new">转换</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>To</source>
          <target state="new">To</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>JMSDestination</source>
          <target state="new">JMSDestination</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>不受支持的功能和限制</source>
          <target state="new">不受支持的功能和限制</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>通过 AMQP 1.0 将 JMS 用于服务总线时存在以下限制：</source>
          <target state="new">通过 AMQP 1.0 将 JMS 用于服务总线时存在以下限制：</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>每个会话只允许一个 <bpt id="p1">**</bpt>MessageProducer<ept id="p1">**</ept> 或 <bpt id="p2">**</bpt>MessageConsumer<ept id="p2">**</ept>。如果你需要在应用程序中创建多个 <bpt id="p3">**</bpt>MessageProducer<ept id="p3">**</ept> 或 <bpt id="p4">**</bpt>MessageConsumer<ept id="p4">**</ept> 对象，请分别为它们创建专用会话。</source>
          <target state="new">每个会话只允许一个 <bpt id="p1">**</bpt>MessageProducer<ept id="p1">**</ept> 或 <bpt id="p2">**</bpt>MessageConsumer<ept id="p2">**</ept>。如果你需要在应用程序中创建多个 <bpt id="p3">**</bpt>MessageProducer<ept id="p3">**</ept> 或 <bpt id="p4">**</bpt>MessageConsumer<ept id="p4">**</ept> 对象，请分别为它们创建专用会话。</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>当前不支持易失性主题订阅。</source>
          <target state="new">当前不支持易失性主题订阅。</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>不支持 <bpt id="p1">**</bpt>MessageSelector<ept id="p1">**</ept> 对象。</source>
          <target state="new">不支持 <bpt id="p1">**</bpt>MessageSelector<ept id="p1">**</ept> 对象。</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>不支持临时目标，例如 <bpt id="p1">**</bpt>TemporaryQueue<ept id="p1">**</ept> 或 <bpt id="p2">**</bpt>TemporaryTopic<ept id="p2">**</ept>，以及使用这些目标的 <bpt id="p3">**</bpt>QueueRequestor<ept id="p3">**</ept> 和 <bpt id="p4">**</bpt>TopicRequestor<ept id="p4">**</ept> API。</source>
          <target state="new">不支持临时目标，例如 <bpt id="p1">**</bpt>TemporaryQueue<ept id="p1">**</ept> 或 <bpt id="p2">**</bpt>TemporaryTopic<ept id="p2">**</ept>，以及使用这些目标的 <bpt id="p3">**</bpt>QueueRequestor<ept id="p3">**</ept> 和 <bpt id="p4">**</bpt>TopicRequestor<ept id="p4">**</ept> API。</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>不支持事务处理会话。</source>
          <target state="new">不支持事务处理会话。</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>不支持分布式事务。</source>
          <target state="new">不支持分布式事务。</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>准备好了解详细信息？ 请访问以下链接：</source>
          <target state="new">准备好了解详细信息？ 请访问以下链接：</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>服务总线 AMQP 概述</source>
          <target state="new">服务总线 AMQP 概述</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>适用于 Windows Server 的服务总线中的 AMQP</source>
          <target state="new">适用于 Windows Server 的服务总线中的 AMQP</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>