<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6153939af7a9fac1426005dc76097dc29a730899</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>为了支持移动服务的脱机功能，我们使用了  <ph id="ph1">`IMobileServiceSyncTable`</ph> 接口，并使用本地存储初始化了  <ph id="ph2">`MobileServiceClient.SyncContext`</ph>。在这种情况下，本地存储是一个 SQLite 数据库。</source>
          <target state="new">为了支持移动服务的脱机功能，我们使用了  <ph id="ph1">`IMobileServiceSyncTable`</ph> 接口，并使用本地存储初始化了  <ph id="ph2">`MobileServiceClient.SyncContext`</ph>。在这种情况下，本地存储是一个 SQLite 数据库。</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>移动服务的普通 CRUD 操作执行起来就像此应用仍处于连接状态一样，但所有操作都针对本地存储进行。</source>
          <target state="new">移动服务的普通 CRUD 操作执行起来就像此应用仍处于连接状态一样，但所有操作都针对本地存储进行。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>我们想要将本地存储与服务器同步时，使用  <ph id="ph1">`IMobileServiceSyncTable.PullAsync`</ph> 和  <ph id="ph2">`MobileServiceClient.SyncContext.PushAsync`</ph> 方法。</source>
          <target state="new">我们想要将本地存储与服务器同步时，使用  <ph id="ph1">`IMobileServiceSyncTable.PullAsync`</ph> 和  <ph id="ph2">`MobileServiceClient.SyncContext.PushAsync`</ph> 方法。</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>为了将更改推送到服务器中，我们调用了  <ph id="ph1">`IMobileServiceSyncContext.PushAsync()`</ph>。此方法属于  <ph id="ph2">`IMobileServicesSyncContext`</ph>（而不是同步表），因为它会将更改推送到所有表中。</source>
          <target state="new">为了将更改推送到服务器中，我们调用了  <ph id="ph1">`IMobileServiceSyncContext.PushAsync()`</ph>。此方法属于  <ph id="ph2">`IMobileServicesSyncContext`</ph>（而不是同步表），因为它会将更改推送到所有表中。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>只有已在本地以某种方式修改（通过 CUD 操作来完成）的记录才会发送到服务器。</source>
          <target state="new">只有已在本地以某种方式修改（通过 CUD 操作来完成）的记录才会发送到服务器。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>为了从服务器上的表中将数据拉取到应用，我们调用了  <ph id="ph1">`IMobileServiceSyncTable.PullAsync`</ph>。</source>
          <target state="new">为了从服务器上的表中将数据拉取到应用，我们调用了  <ph id="ph1">`IMobileServiceSyncTable.PullAsync`</ph>。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>拉取时始终先发出推送操作。这是为了确保本地存储中的所有表以及关系都保持一致。</source>
          <target state="new">拉取时始终先发出推送操作。这是为了确保本地存储中的所有表以及关系都保持一致。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>还存在  <ph id="ph1">`PullAsync()`</ph> 的过载，这允许指定查询以过滤客户端上存储的数据。如果未传递查询， <ph id="ph2">`PullAsync()`</ph> 将拉出对应表（或查询）中的所有行。您可以传递此查询以仅过滤您的应用需要同步的更改。</source>
          <target state="new">还存在  <ph id="ph1">`PullAsync()`</ph> 的过载，这允许指定查询以过滤客户端上存储的数据。如果未传递查询， <ph id="ph2">`PullAsync()`</ph> 将拉出对应表（或查询）中的所有行。您可以传递此查询以仅过滤您的应用需要同步的更改。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>要启用增量同步，请将查询 ID 传递到  <ph id="ph1">`PullAsync()`</ph>。查询 ID 用于存储来自上一拉动操作结果的上一更新时间戳记。查询 ID 应该是一个描述性字符串，该字符串对于您应用中的每个逻辑查询都是唯一的。如果查询具有一个参数，那么相同参数值必须是查询 ID 的一部分。</source>
          <target state="new">要启用增量同步，请将查询 ID 传递到  <ph id="ph1">`PullAsync()`</ph>。查询 ID 用于存储来自上一拉动操作结果的上一更新时间戳记。查询 ID 应该是一个描述性字符串，该字符串对于您应用中的每个逻辑查询都是唯一的。如果查询具有一个参数，那么相同参数值必须是查询 ID 的一部分。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>例如，如果要对 userid 进行过滤，它需要是查询 ID 的一部分：</source>
          <target state="new">例如，如果要对 userid 进行过滤，它需要是查询 ID 的一部分：</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>如果您想要选择退出增量同步，请将  <ph id="ph1">`null`</ph> 作为查询 ID 进行传递。在此情况下，在对  <ph id="ph2">`PullAsync`</ph> 的每次调用中检索所有记录，这可能效率低下。</source>
          <target state="new">如果您想要选择退出增量同步，请将  <ph id="ph1">`null`</ph> 作为查询 ID 进行传递。在此情况下，在对  <ph id="ph2">`PullAsync`</ph> 的每次调用中检索所有记录，这可能效率低下。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>在移动服务数据库中删除记录后，要从设备本地存储除去记录，应启用[软删除]。否则，您的应用应定期调用  <ph id="ph1">`IMobileServiceSyncTable.PurgeAsync()`</ph> 以清除本地存储。</source>
          <target state="new">在移动服务数据库中删除记录后，要从设备本地存储除去记录，应启用[软删除]。否则，您的应用应定期调用  <ph id="ph1">`IMobileServiceSyncTable.PurgeAsync()`</ph> 以清除本地存储。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>