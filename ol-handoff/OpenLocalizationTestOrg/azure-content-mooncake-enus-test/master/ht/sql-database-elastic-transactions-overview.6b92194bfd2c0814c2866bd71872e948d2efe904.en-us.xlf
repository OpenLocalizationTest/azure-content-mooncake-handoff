<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3facb722931e047c29bad85f5ff6932eaaca70e0</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure SQL 数据库的弹性数据库事务概述（预览版）</source>
          <target state="new">Azure SQL 数据库的弹性数据库事务概述（预览版）</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Azure SQL 数据库的弹性数据库事务概述（预览版）</source>
          <target state="new">Azure SQL 数据库的弹性数据库事务概述（预览版）</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Azure SQL 数据库的弹性数据库事务概述（预览版）</source>
          <target state="new">Azure SQL 数据库的弹性数据库事务概述（预览版）</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Azure SQL 数据库 (SQL DB) 的弹性数据库事务可让你在 SQL DB 中跨多个数据库运行事务。SQL DB 的弹性数据库事务适用于使用 ADO .NET 的 .NET 应用程序，并且与你熟悉的使用 <bpt id="p1">[</bpt>System.Transaction<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/system.transactions.aspx)</ept> 类的编程体验相集成。</source>
          <target state="new">Azure SQL 数据库 (SQL DB) 的弹性数据库事务可让你在 SQL DB 中跨多个数据库运行事务。SQL DB 的弹性数据库事务适用于使用 ADO .NET 的 .NET 应用程序，并且与你熟悉的使用 <bpt id="p1">[</bpt>System.Transaction<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/system.transactions.aspx)</ept> 类的编程体验相集成。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>在本地，这种方案通常需要运行 Microsoft 分布式事务处理协调器 (MSDTC)。由于 MSDTC 不适用于 Azure 中的平台即服务应用程序，协调分布式事务的功能现在已直接集成到 SQL DB。应用程序可以连接到任何 SQL 数据库来启动分布式事务，其中一个数据库以透明方式协调分布式事务，如下图所示。</source>
          <target state="new">在本地，这种方案通常需要运行 Microsoft 分布式事务处理协调器 (MSDTC)。由于 MSDTC 不适用于 Azure 中的平台即服务应用程序，协调分布式事务的功能现在已直接集成到 SQL DB。应用程序可以连接到任何 SQL 数据库来启动分布式事务，其中一个数据库以透明方式协调分布式事务，如下图所示。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>使用弹性数据库事务在 Azure SQL 数据库中执行分布式事务</source>
          <target state="new">使用弹性数据库事务在 Azure SQL 数据库中执行分布式事务</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>常见方案</source>
          <target state="new">常见方案</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>SQL DB 的弹性数据库事务可让应用程序对多个不同 SQL 数据库中存储的数据进行原子性更改。预览版着重于 C# 和 .NET 的客户端开发体验。已计划在将来添加使用 T-SQL 的服务器端体验。弹性数据库事务面向以下方案：</source>
          <target state="new">SQL DB 的弹性数据库事务可让应用程序对多个不同 SQL 数据库中存储的数据进行原子性更改。预览版着重于 C# 和 .NET 的客户端开发体验。已计划在将来添加使用 T-SQL 的服务器端体验。弹性数据库事务面向以下方案：</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Azure 中的多数据库应用程序：在此方案中，数据垂直分区到 SQL DB 中的多个数据库，使得不同种类的数据位于不同的数据库。某些操作需要更改两个以上的数据库中保存的数据。应用程序使用弹性数据库事务来协调数据库之间的更改并确保原子性。</source>
          <target state="new">Azure 中的多数据库应用程序：在此方案中，数据垂直分区到 SQL DB 中的多个数据库，使得不同种类的数据位于不同的数据库。某些操作需要更改两个以上的数据库中保存的数据。应用程序使用弹性数据库事务来协调数据库之间的更改并确保原子性。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Azure 中的分区数据库应用程序：在此方案中，数据层使用弹性数据库客户端库或<bpt id="p1">[</bpt>自我分片<ept id="p1">](http://social.technet.microsoft.com/wiki/contents/articles/17987.cloud-service-fundamentals.aspx)</ept>，将数据水平分区到 SQL DB 中的多个数据库。常见的用例之一是在分片的多租户应用程序中，当更改涉及到多个租户时，需要执行原子更改。例如，从一个租户转移到另一个租户，而两者位于不同的数据库。第二种方案是以细致分片来适应大租户的容量需求，这又通常表示某些原子操作需要扩展到用于同一租户的多个数据库。第三种方案是以原子更新来引用数据库之间复制的数据。现在，可以使用预览版跨多个数据库协调这几个方面原子性事务操作。弹性数据库事务使用两阶段提交，确保跨数据库的事务原子性。如果事务涉及的数据库少于 100 个，则适合并入单个事务内。这些限制不不是强制施加的，但是，如果超出这些限制时，弹性数据库事务的性能和成功率很有可能会下降。</source>
          <target state="new">Azure 中的分区数据库应用程序：在此方案中，数据层使用弹性数据库客户端库或<bpt id="p1">[</bpt>自我分片<ept id="p1">](http://social.technet.microsoft.com/wiki/contents/articles/17987.cloud-service-fundamentals.aspx)</ept>，将数据水平分区到 SQL DB 中的多个数据库。常见的用例之一是在分片的多租户应用程序中，当更改涉及到多个租户时，需要执行原子更改。例如，从一个租户转移到另一个租户，而两者位于不同的数据库。第二种方案是以细致分片来适应大租户的容量需求，这又通常表示某些原子操作需要扩展到用于同一租户的多个数据库。第三种方案是以原子更新来引用数据库之间复制的数据。现在，可以使用预览版跨多个数据库协调这几个方面原子性事务操作。弹性数据库事务使用两阶段提交，确保跨数据库的事务原子性。如果事务涉及的数据库少于 100 个，则适合并入单个事务内。这些限制不不是强制施加的，但是，如果超出这些限制时，弹性数据库事务的性能和成功率很有可能会下降。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>安装和迁移</source>
          <target state="new">安装和迁移</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>我们更新了 .NET 库 System.Data.dll 和 System.Transactions.dll，以支持在 SQL DB 中执行弹性数据库事务。DLL 确保必要时使用两阶段事务提交，以确保原子性。若要使用弹性数据库事务来开始开发应用程序，请安装 <bpt id="p1">[</bpt>.NET 4.6.1 候选版<ept id="p1">](http://blogs.msdn.com/b/dotnet/archive/2015/10/29/announcing-net-framework-4-6-1-rc.aspx)</ept>或更高版本的 .NET Framework。在旧版 .NET Framework 上运行时，事务无法升级为分布式事务，并会引发异常。</source>
          <target state="new">我们更新了 .NET 库 System.Data.dll 和 System.Transactions.dll，以支持在 SQL DB 中执行弹性数据库事务。DLL 确保必要时使用两阶段事务提交，以确保原子性。若要使用弹性数据库事务来开始开发应用程序，请安装 <bpt id="p1">[</bpt>.NET 4.6.1 候选版<ept id="p1">](http://blogs.msdn.com/b/dotnet/archive/2015/10/29/announcing-net-framework-4-6-1-rc.aspx)</ept>或更高版本的 .NET Framework。在旧版 .NET Framework 上运行时，事务无法升级为分布式事务，并会引发异常。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>安装后，你可以使用 System.Transactions 中的分布式事务 API 和 SQL DB 连接。如果现有的 MSDTC 应用程序使用了这些 API，你只需在安装候选版之后，以 .NET 4.6 为目标重建现有的应用程序。如果项目以 .NET 4.6 为目标，它们将自动使用候选版中更新的 DLL，而结合 SQL DB 连接的分布式事务 API 调用现在会成功。</source>
          <target state="new">安装后，你可以使用 System.Transactions 中的分布式事务 API 和 SQL DB 连接。如果现有的 MSDTC 应用程序使用了这些 API，你只需在安装候选版之后，以 .NET 4.6 为目标重建现有的应用程序。如果项目以 .NET 4.6 为目标，它们将自动使用候选版中更新的 DLL，而结合 SQL DB 连接的分布式事务 API 调用现在会成功。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>请记住，弹性数据库事务不需要安装 MSDTC。弹性数据库事务直接由 SQL DB 管理。这可以大幅简化云方案，因为 MSDTC 的部署不需要使用分布式事务和 SQL DB。第 4 部分更详细说明了如何将弹性数据库事务和所需的 .NET Framework 连同云应用程序一起部署到 Azure。</source>
          <target state="new">请记住，弹性数据库事务不需要安装 MSDTC。弹性数据库事务直接由 SQL DB 管理。这可以大幅简化云方案，因为 MSDTC 的部署不需要使用分布式事务和 SQL DB。第 4 部分更详细说明了如何将弹性数据库事务和所需的 .NET Framework 连同云应用程序一起部署到 Azure。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>开发体验</source>
          <target state="new">开发体验</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>多数据库应用程序</source>
          <target state="new">多数据库应用程序</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>以下示例代码使用你熟悉的 .NET System.Transactions 编程体验。TransactionScope 类在 .NET 中创建环境事务。（“环境事务”是位于当前线程中的事务）。 在 TransactionScope 内打开的所有连接都参与该事务。如果有不同的数据库参与，事务将自动提升为分布式事务。通过设置完成范围来指示提交，即可控制事务的结果。</source>
          <target state="new">以下示例代码使用你熟悉的 .NET System.Transactions 编程体验。TransactionScope 类在 .NET 中创建环境事务。（“环境事务”是位于当前线程中的事务）。 在 TransactionScope 内打开的所有连接都参与该事务。如果有不同的数据库参与，事务将自动提升为分布式事务。通过设置完成范围来指示提交，即可控制事务的结果。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>分片数据库应用程序</source>
          <target state="new">分片数据库应用程序</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>SQL DB 的弹性数据库事务还支持协调分布式事务，这需要使用弹性数据库客户端库的 OpenConnectionForKey 方法，打开扩大的数据层的连接。假设你需要保证事务一致性，使更改跨多个不同的分片键值。与托管不同分片键值的分片的连接由 OpenConnectionForKey 来中转。在一般情况下，可以连接到不同的分片，以确保事务保证需要分布式事务。以下代码示例演示了此方法。假设使用一个称为 shardmap 的变量代表来自弹性数据库客户端库的分片映射：</source>
          <target state="new">SQL DB 的弹性数据库事务还支持协调分布式事务，这需要使用弹性数据库客户端库的 OpenConnectionForKey 方法，打开扩大的数据层的连接。假设你需要保证事务一致性，使更改跨多个不同的分片键值。与托管不同分片键值的分片的连接由 OpenConnectionForKey 来中转。在一般情况下，可以连接到不同的分片，以确保事务保证需要分布式事务。以下代码示例演示了此方法。假设使用一个称为 shardmap 的变量代表来自弹性数据库客户端库的分片映射：</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Azure 辅助角色的设置</source>
          <target state="new">Azure 辅助角色的设置</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>可以自动将弹性数据库事务所需的 .NET 版本和库安装并部署到 Azure（到云服务中的来宾 OS）。对于 Azure 辅助角色，请使用启动任务。<bpt id="p1">[</bpt>在云服务角色上安装 .NET<ept id="p1">](/documentation/articles/cloud-services-dotnet-install-dotnet/)</ept> 中说明了概念和步骤。</source>
          <target state="new">可以自动将弹性数据库事务所需的 .NET 版本和库安装并部署到 Azure（到云服务中的来宾 OS）。对于 Azure 辅助角色，请使用启动任务。<bpt id="p1">[</bpt>在云服务角色上安装 .NET<ept id="p1">](/documentation/articles/cloud-services-dotnet-install-dotnet/)</ept> 中说明了概念和步骤。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>请注意，与 .NET 4.6 的安装程序相比，.NET 4.6.1 的安装程序在 Azure 云服务上执行引导过程时，需要更多的临时存储。为了确保安装成功，需要在 ServiceDefinition.csdef 文件中启动任务的 LocalResources 部分和环境设置中，增加 Azure 云服务的临时存储，如以下示例所示：</source>
          <target state="new">请注意，与 .NET 4.6 的安装程序相比，.NET 4.6.1 的安装程序在 Azure 云服务上执行引导过程时，需要更多的临时存储。为了确保安装成功，需要在 ServiceDefinition.csdef 文件中启动任务的 LocalResources 部分和环境设置中，增加 Azure 云服务的临时存储，如以下示例所示：</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>监视事务状态</source>
          <target state="new">监视事务状态</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>使用 SQL DB 中的动态管理视图 (DMV) 来监视正在进行的弹性数据库事务的状态和进度。与事务相关的所有 DMV 与 SQL DB 中的分布式事务相关。可以在此处找到相应的 DMV 列表：<bpt id="p1">[</bpt>事务相关的动态管理视图和函数 (Transact-SQL)<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/ms178621.aspx)</ept>。</source>
          <target state="new">使用 SQL DB 中的动态管理视图 (DMV) 来监视正在进行的弹性数据库事务的状态和进度。与事务相关的所有 DMV 与 SQL DB 中的分布式事务相关。可以在此处找到相应的 DMV 列表：<bpt id="p1">[</bpt>事务相关的动态管理视图和函数 (Transact-SQL)<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/ms178621.aspx)</ept>。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>这些 DMV 特别有用：</source>
          <target state="new">这些 DMV 特别有用：</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>sys.dm\_tran\_active\_transactions<ept id="p1">**</ept>：列出当前正在使用的事务及其状态。UOW（工作单位）列可以标识属于同一分布式事务的不同子事务。同一分布式事务中的所有事务具有相同的 UOW 值。有关详细信息，请参阅 <bpt id="p2">[</bpt>DMV 文档<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/ms174302.aspx)</ept>。</source>
          <target state="new"><bpt id="p1">**</bpt>sys.dm\_tran\_active\_transactions<ept id="p1">**</ept>：列出当前正在使用的事务及其状态。UOW（工作单位）列可以标识属于同一分布式事务的不同子事务。同一分布式事务中的所有事务具有相同的 UOW 值。有关详细信息，请参阅 <bpt id="p2">[</bpt>DMV 文档<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/ms174302.aspx)</ept>。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>sys.dm\_tran\_database\_transactions<ept id="p1">**</ept>：提供有关事务的其他信息，例如事务在日志中的位置。有关详细信息，请参阅 <bpt id="p2">[</bpt>DMV 文档<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/ms186957.aspx)</ept>。</source>
          <target state="new"><bpt id="p1">**</bpt>sys.dm\_tran\_database\_transactions<ept id="p1">**</ept>：提供有关事务的其他信息，例如事务在日志中的位置。有关详细信息，请参阅 <bpt id="p2">[</bpt>DMV 文档<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/ms186957.aspx)</ept>。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>sys.dm\_tran\_locks<ept id="p1">**</ept>：提供当前进行中事务所持有的锁的相关信息。有关详细信息，请参阅 <bpt id="p2">[</bpt>DMV 文档<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/ms190345.aspx)</ept>。</source>
          <target state="new"><bpt id="p1">**</bpt>sys.dm\_tran\_locks<ept id="p1">**</ept>：提供当前进行中事务所持有的锁的相关信息。有关详细信息，请参阅 <bpt id="p2">[</bpt>DMV 文档<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/ms190345.aspx)</ept>。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>限制</source>
          <target state="new">限制</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>SQL DB 中的弹性数据库事务当前存在以下限制：</source>
          <target state="new">SQL DB 中的弹性数据库事务当前存在以下限制：</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>仅支持 SQL DB 中跨数据库的事务。其他 <bpt id="p1">[</bpt>X/Open XA<ept id="p1">](https://zh.wikipedia.org/wiki/X/Open_XA)</ept> 资源提供程序和除 SQL DB 以外的数据库无法参与弹性数据库事务。这意味着，弹性数据库事务无法扩展到本地 SQL Server 和 Azure SQL 数据库。对于本地的分布式事务，请继续使用 MSDTC。</source>
          <target state="new">仅支持 SQL DB 中跨数据库的事务。其他 <bpt id="p1">[</bpt>X/Open XA<ept id="p1">](https://zh.wikipedia.org/wiki/X/Open_XA)</ept> 资源提供程序和除 SQL DB 以外的数据库无法参与弹性数据库事务。这意味着，弹性数据库事务无法扩展到本地 SQL Server 和 Azure SQL 数据库。对于本地的分布式事务，请继续使用 MSDTC。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>仅支持来自 .NET 应用程序的客户端协调事务。目前已规划 T-SQL 的服务器端支持，例如 BEGIN DISTRIBUTED TRANSACTION，但尚未推出。</source>
          <target state="new">仅支持来自 .NET 应用程序的客户端协调事务。目前已规划 T-SQL 的服务器端支持，例如 BEGIN DISTRIBUTED TRANSACTION，但尚未推出。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>仅支持 Azure SQL DB V12 上的数据库。</source>
          <target state="new">仅支持 Azure SQL DB V12 上的数据库。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>仅支持属于 SQL DB 中同一逻辑服务器的数据库。</source>
          <target state="new">仅支持属于 SQL DB 中同一逻辑服务器的数据库。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>了解详细信息</source>
          <target state="new">了解详细信息</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>你的 Azure 应用程序尚未使用弹性数据库功能吗？ 请访问我们的<bpt id="p1">[</bpt>文档结构图<ept id="p1">](/documentation/articles/sql-database-elastic-scale-documentation-map/)</ept>。如有问题，请在 <bpt id="p2">[</bpt>SQL 数据库论坛<ept id="p2">](http://social.msdn.microsoft.com/forums/azure/home?forum=ssdsgetstarted)</ept>上联系我们；对于功能请求，请将其添加到 <bpt id="p3">[</bpt>SQL 数据库反馈论坛<ept id="p3">](http://feedback.azure.com/forums/217321-sql-database)</ept>。</source>
          <target state="new">你的 Azure 应用程序尚未使用弹性数据库功能吗？ 请访问我们的<bpt id="p1">[</bpt>文档结构图<ept id="p1">](/documentation/articles/sql-database-elastic-scale-documentation-map/)</ept>。如有问题，请在 <bpt id="p2">[</bpt>SQL 数据库论坛<ept id="p2">](http://social.msdn.microsoft.com/forums/azure/home?forum=ssdsgetstarted)</ept>上联系我们；对于功能请求，请将其添加到 <bpt id="p3">[</bpt>SQL 数据库反馈论坛<ept id="p3">](http://feedback.azure.com/forums/217321-sql-database)</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>