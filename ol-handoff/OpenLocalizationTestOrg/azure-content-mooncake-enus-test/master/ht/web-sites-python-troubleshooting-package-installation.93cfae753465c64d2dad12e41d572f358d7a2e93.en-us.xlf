<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e1a4fc003e2922735edbd8def032479b4a44ec3</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>在 Azure 上运行时，有些软件包可能无法使用 pip 进行安装。可能只是该软件包在 Python 软件包索引中不可用。可能需要一个编译器（在运行 Azure Web 应用的计算机上未提供编译器）。</source>
          <target state="new">在 Azure 上运行时，有些软件包可能无法使用 pip 进行安装。可能只是该软件包在 Python 软件包索引中不可用。可能需要一个编译器（在运行 Azure Web 应用的计算机上未提供编译器）。</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>在此部分中，我们将考察解决此问题的方法。</source>
          <target state="new">在此部分中，我们将考察解决此问题的方法。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>请求轮</source>
          <target state="new">请求轮</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>如果软件包安装需要编译器，您应尝试联系软件包所有者以请求为软件包提供轮。</source>
          <target state="new">如果软件包安装需要编译器，您应尝试联系软件包所有者以请求为软件包提供轮。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>现在使用最新提供的 <bpt id="p1">[</bpt>Microsoft Visual C++ Compiler for Python 2.7<ept id="p1">][]</ept>，就可以更轻松地构建具有针对 Python 2.7 的本机代码的软件包。</source>
          <target state="new">现在使用最新提供的 <bpt id="p1">[</bpt>Microsoft Visual C++ Compiler for Python 2.7<ept id="p1">][]</ept>，就可以更轻松地构建具有针对 Python 2.7 的本机代码的软件包。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>构建轮（需要 Windows）</source>
          <target state="new">构建轮（需要 Windows）</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>注意：使用此选项时，确保使用匹配 Azure Web 应用上所用的平台/体系结构/版本（Windows/32 位/2.7 或 3.4）的 Python 环境来编译此软件包。</source>
          <target state="new">注意：使用此选项时，确保使用匹配 Azure Web 应用上所用的平台/体系结构/版本（Windows/32 位/2.7 或 3.4）的 Python 环境来编译此软件包。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>如果软件包由于需要编译器而未安装，您可以在本地计算机上安装编译器，然后为软件包构建轮，随后将轮包含在您的存储库中。</source>
          <target state="new">如果软件包由于需要编译器而未安装，您可以在本地计算机上安装编译器，然后为软件包构建轮，随后将轮包含在您的存储库中。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Mac/Linux 用户：如果您没有 Windows 计算机的访问权限，请参阅<bpt id="p1">[</bpt>创建运行 Windows 的虚拟机<ept id="p1">][]</ept>以了解如何在 Azure 上创建虚拟机。可以使用它来构建轮、将其添加到存储库以及在必要时放弃虚拟机。</source>
          <target state="new">Mac/Linux 用户：如果您没有 Windows 计算机的访问权限，请参阅<bpt id="p1">[</bpt>创建运行 Windows 的虚拟机<ept id="p1">][]</ept>以了解如何在 Azure 上创建虚拟机。可以使用它来构建轮、将其添加到存储库以及在必要时放弃虚拟机。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>对于 Python 2.7，您可以安装 <bpt id="p1">[</bpt>Microsoft Visual C++ Compiler for Python 2.7<ept id="p1">][]</ept>。</source>
          <target state="new">对于 Python 2.7，您可以安装 <bpt id="p1">[</bpt>Microsoft Visual C++ Compiler for Python 2.7<ept id="p1">][]</ept>。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>对于 Python 3.4，您可以安装 <bpt id="p1">[</bpt>Microsoft Visual C++ 2010 Express<ept id="p1">][]</ept>。</source>
          <target state="new">对于 Python 3.4，您可以安装 <bpt id="p1">[</bpt>Microsoft Visual C++ 2010 Express<ept id="p1">][]</ept>。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>要构建轮，你需要轮软件包：</source>
          <target state="new">要构建轮，你需要轮软件包：</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>您将使用  <ph id="ph1">`pip wheel`</ph> 来编译依赖项：</source>
          <target state="new">您将使用  <ph id="ph1">`pip wheel`</ph> 来编译依赖项：</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>这将在 \wheelhouse 文件夹中创建 .whl 文件。将 \wheelhouse 文件夹和轮文件添加到您的存储库。</source>
          <target state="new">这将在 \wheelhouse 文件夹中创建 .whl 文件。将 \wheelhouse 文件夹和轮文件添加到您的存储库。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>编辑 requirements.txt 从而在顶部添加 <ph id="ph1">`--find-links`</ph> 选项。这会让 pip 在本地文件夹中查找完全匹配项，然后转至 python 软件包索引。</source>
          <target state="new">编辑 requirements.txt 从而在顶部添加 <ph id="ph1">`--find-links`</ph> 选项。这会让 pip 在本地文件夹中查找完全匹配项，然后转至 python 软件包索引。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>如果您想要将所有依赖项包含在 \wheelhouse 文件夹中而根本不使用 python 软件包索引，则可以通过将 <ph id="ph1">`--no-index`</ph> 添加到 requirements.txt 之上来强制 pip 忽略软件包索引。</source>
          <target state="new">如果您想要将所有依赖项包含在 \wheelhouse 文件夹中而根本不使用 python 软件包索引，则可以通过将 <ph id="ph1">`--no-index`</ph> 添加到 requirements.txt 之上来强制 pip 忽略软件包索引。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>自定义安装</source>
          <target state="new">自定义安装</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>您可以自定义部署脚本以在虚拟环境中使用备用安装程序（例如 easy\_install）来安装软件包。请参阅 deploy.cmd 以了解注释掉的示例。确保此类软件包不列入 requirements.txt 中，从而防止 pip 将其安装。</source>
          <target state="new">您可以自定义部署脚本以在虚拟环境中使用备用安装程序（例如 easy\_install）来安装软件包。请参阅 deploy.cmd 以了解注释掉的示例。确保此类软件包不列入 requirements.txt 中，从而防止 pip 将其安装。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>将其添加到部署脚本：</source>
          <target state="new">将其添加到部署脚本：</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>您还可以使用 easy\_install 从 exe 安装程序进行安装（有些兼容 zip，所以 easy\_install 支持它们）。将安装程序添加到您的存储库，然后通过传递可执行文件的路径来调用 easy\_install。</source>
          <target state="new">您还可以使用 easy\_install 从 exe 安装程序进行安装（有些兼容 zip，所以 easy\_install 支持它们）。将安装程序添加到您的存储库，然后通过传递可执行文件的路径来调用 easy\_install。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>将其添加到部署脚本：</source>
          <target state="new">将其添加到部署脚本：</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>将虚拟环境包含在存储库中（需要 Windows）</source>
          <target state="new">将虚拟环境包含在存储库中（需要 Windows）</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>注意：使用此选项时，确保使用匹配 Azure Web 应用上所用的平台/体系结构/版本（Windows/32 位/2.7 或 3.4）的虚拟环境。</source>
          <target state="new">注意：使用此选项时，确保使用匹配 Azure Web 应用上所用的平台/体系结构/版本（Windows/32 位/2.7 或 3.4）的虚拟环境。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>如果存储库中包含虚拟环境，您可以通过创建一个空文件来防止部署脚本在 Azure 上执行虚拟环境管理：</source>
          <target state="new">如果存储库中包含虚拟环境，您可以通过创建一个空文件来防止部署脚本在 Azure 上执行虚拟环境管理：</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>我们建议您删除站点上的现有虚拟环境，从而防止在自动管理虚拟环境时出现剩余文件。</source>
          <target state="new">我们建议您删除站点上的现有虚拟环境，从而防止在自动管理虚拟环境时出现剩余文件。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>