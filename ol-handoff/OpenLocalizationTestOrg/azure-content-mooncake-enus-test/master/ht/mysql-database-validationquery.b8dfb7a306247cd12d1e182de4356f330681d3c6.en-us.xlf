<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">78f68765eb93ddcd07ed2d93959a928f20f625c5</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>如何在客户端配置验证机制确认长连接有效性- Azure 微软云</source>
          <target state="new">如何在客户端配置验证机制确认长连接有效性- Azure 微软云</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>配置验证机制，保障数据库的访问速度</source>
          <target state="new">配置验证机制，保障数据库的访问速度</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>如何在客户端配置验证机制确认长连接有效性<ph id="ph1">&lt;sup style="color: #a5ce00; font-weight: bold; text-transform: uppercase; font-family: '微软雅黑'; font-size: 20px;" class="wa-previewTag"&gt;</ph><ph id="ph2">&lt;/sup&gt;</ph></source>
          <target state="new">如何在客户端配置验证机制确认长连接有效性<ph id="ph1">&lt;sup style="color: #a5ce00; font-weight: bold; text-transform: uppercase; font-family: '微软雅黑'; font-size: 20px;" class="wa-previewTag"&gt;</ph><ph id="ph2">&lt;/sup&gt;</ph></target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>在<bpt id="p1">[</bpt>如何高效连接到MySQL Database on Azure<ept id="p1">](/documentation/articles/mysql-database-connection-pool)</ept>一文中谈到，为了更好地使用数据库的连接资源，我们推荐您使用连接池或长连接的方法进行数据库访问。但需要注意的是连接池或长连接也存在时效性。这是因为服务器会设置超时机制，如果一个连接在一段时间内处于闲置状态，服务器就会关闭这个链接，以释放不必要的资源占用。这就造成了如果客户端长时间在idle状态，再次访问数据库较慢的问题，相当于客户端与服务器间重新建立了连接请求。因此，为了保障在使用过程中，连接的有效性，本文以Tomcat JDBC 连接池为例，介绍如何在客户端配置验证机制确认长连接的有效性。</source>
          <target state="new">在<bpt id="p1">[</bpt>如何高效连接到MySQL Database on Azure<ept id="p1">](/documentation/articles/mysql-database-connection-pool)</ept>一文中谈到，为了更好地使用数据库的连接资源，我们推荐您使用连接池或长连接的方法进行数据库访问。但需要注意的是连接池或长连接也存在时效性。这是因为服务器会设置超时机制，如果一个连接在一段时间内处于闲置状态，服务器就会关闭这个链接，以释放不必要的资源占用。这就造成了如果客户端长时间在idle状态，再次访问数据库较慢的问题，相当于客户端与服务器间重新建立了连接请求。因此，为了保障在使用过程中，连接的有效性，本文以Tomcat JDBC 连接池为例，介绍如何在客户端配置验证机制确认长连接的有效性。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>通过设定testOnBorrow参数，在有新的请求时，如果连接池中有闲置的可用连接，在返回这个闲置连接之前，连接池会自动验证这个连接的有效性，如果有效，直接返回，如果无效，连接池会回收这个无效连接，重新建立一个新的有效连接并返回。这样会有效地保障数据库的访问速度。</source>
          <target state="new">通过设定testOnBorrow参数，在有新的请求时，如果连接池中有闲置的可用连接，在返回这个闲置连接之前，连接池会自动验证这个连接的有效性，如果有效，直接返回，如果无效，连接池会回收这个无效连接，重新建立一个新的有效连接并返回。这样会有效地保障数据库的访问速度。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>具体设置用户可参考<bpt id="p1">[</bpt>JDBC Connection Pool官方介绍文档<ept id="p1">](https://tomcat.apache.org/tomcat-7.0-doc/jdbc-pool.html#Common_Attributes)</ept>。主要需要配置以下三个参数： TestOnBorrow (设为ture), ValidationQuery (设为 SELECT 1), ValidationQueryTimeout (设为1)，具体示例代码如下：</source>
          <target state="new">具体设置用户可参考<bpt id="p1">[</bpt>JDBC Connection Pool官方介绍文档<ept id="p1">](https://tomcat.apache.org/tomcat-7.0-doc/jdbc-pool.html#Common_Attributes)</ept>。主要需要配置以下三个参数： TestOnBorrow (设为ture), ValidationQuery (设为 SELECT 1), ValidationQueryTimeout (设为1)，具体示例代码如下：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>