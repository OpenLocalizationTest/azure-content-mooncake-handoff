<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">03a00c8fe37659f5ceea207292cc1336a9506ccc</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure Batch 功能概述 | Azure</source>
          <target state="new">Azure Batch 功能概述 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>从开发的角度了解 Batch 服务的功能及其 API。</source>
          <target state="new">从开发的角度了解 Batch 服务的功能及其 API。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Azure 批处理 ( Batch ) 功能概述</source>
          <target state="new">Azure 批处理 ( Batch ) 功能概述</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>本文提供 Azure 批处理 ( Batch ) 服务的核心 API 功能的基本概述。无论是使用 <bpt id="p1">[</bpt>批处理 ( Batch ) REST<ept id="p1">][batch_rest_api]</ept> 还是 <bpt id="p2">[</bpt>批处理( Batch ) .NET<ept id="p2">][batch_net_api]</ept> API 来开发分布式计算解决方案，你都要使用下面讨论的许多实体和功能。</source>
          <target state="new">本文提供 Azure 批处理 ( Batch ) 服务的核心 API 功能的基本概述。无论是使用 <bpt id="p1">[</bpt>批处理 ( Batch ) REST<ept id="p1">][batch_rest_api]</ept> 还是 <bpt id="p2">[</bpt>批处理( Batch ) .NET<ept id="p2">][batch_net_api]</ept> API 来开发分布式计算解决方案，你都要使用下面讨论的许多实体和功能。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph>有关 Batch 的更高级技术概述，请参阅 <bpt id="p1">[</bpt>Azure 批处理 ( Batch ) 基础知识<ept id="p1">](/documentation/articles/batch-technical-overview)</ept>。</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph>有关 Batch 的更高级技术概述，请参阅 <bpt id="p1">[</bpt>Azure 批处理 ( Batch ) 基础知识<ept id="p1">](/documentation/articles/batch-technical-overview)</ept>。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="workflow"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>批处理 ( Batch ) 服务的工作流</source>
          <target state="new"><ph id="ph1">&lt;a name="workflow"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>批处理 ( Batch ) 服务的工作流</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>在批处理 ( Batch ) 服务中开发的几乎所有分布式计算方案都会使用以下典型高级工作流：</source>
          <target state="new">在批处理 ( Batch ) 服务中开发的几乎所有分布式计算方案都会使用以下典型高级工作流：</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>将你要在分布式计算方案中使用的<bpt id="p1">*</bpt>数据文件<ept id="p1">*</ept>上载到 <bpt id="p2">[</bpt>Azure 存储<ept id="p2">][azure_storage]</ept>帐户。这些文件必须在存储帐户中，批处理 ( Batch )  服务才能够访问它们。当任务运行时，会将这些文件下载到<bpt id="p3">[</bpt>计算节点<ept id="p3">](#computenode)</ept>。</source>
          <target state="new">将你要在分布式计算方案中使用的<bpt id="p1">*</bpt>数据文件<ept id="p1">*</ept>上载到 <bpt id="p2">[</bpt>Azure 存储<ept id="p2">][azure_storage]</ept>帐户。这些文件必须在存储帐户中，批处理 ( Batch )  服务才能够访问它们。当任务运行时，会将这些文件下载到<bpt id="p3">[</bpt>计算节点<ept id="p3">](#computenode)</ept>。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>将相关<bpt id="p1">*</bpt>二进制文件<ept id="p1">*</ept>上载到你的存储帐户。这些二进制文件包含任务运行的程序及其任何依赖组件。还必须从存储帐户访问这些文件，使任务可将它们下载到计算节点。</source>
          <target state="new">将相关<bpt id="p1">*</bpt>二进制文件<ept id="p1">*</ept>上载到你的存储帐户。这些二进制文件包含任务运行的程序及其任何依赖组件。还必须从存储帐户访问这些文件，使任务可将它们下载到计算节点。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>创建计算节点的<bpt id="p1">[</bpt>池<ept id="p1">](#pool)</ept>。可以在创建池时指定要使用的<bpt id="p2">[</bpt>计算节点大小<ept id="p2">][cloud_service_sizes]</ept>，运行任务时，将为它分配此池中的节点。</source>
          <target state="new">创建计算节点的<bpt id="p1">[</bpt>池<ept id="p1">](#pool)</ept>。可以在创建池时指定要使用的<bpt id="p2">[</bpt>计算节点大小<ept id="p2">][cloud_service_sizes]</ept>，运行任务时，将为它分配此池中的节点。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>创建<bpt id="p1">[</bpt>作业<ept id="p1">](#job)</ept>。作业可让你管理一系列的任务。</source>
          <target state="new">创建<bpt id="p1">[</bpt>作业<ept id="p1">](#job)</ept>。作业可让你管理一系列的任务。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>将<bpt id="p1">[</bpt>任务<ept id="p1">](#task)</ept>添加到作业。每个任务使用你上载的程序来处理上载到存储帐户的数据文件中的信息。</source>
          <target state="new">将<bpt id="p1">[</bpt>任务<ept id="p1">](#task)</ept>添加到作业。每个任务使用你上载的程序来处理上载到存储帐户的数据文件中的信息。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>监视作业进度并检索结果。</source>
          <target state="new">监视作业进度并检索结果。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>你需要通过一个 <bpt id="p1">[</bpt>批处理 ( Batch ) 帐户<ept id="p1">](/documentation/articles/batch-account-create-portal)</ept>来使用批处理( Batch ) 服务，几乎所有的解决方案都使用 <bpt id="p2">[</bpt>Azure 存储<ept id="p2">][azure_storage]</ept>帐户来进行文件存储和检索。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>你需要通过一个 <bpt id="p1">[</bpt>批处理 ( Batch ) 帐户<ept id="p1">](/documentation/articles/batch-account-create-portal)</ept>来使用批处理( Batch ) 服务，几乎所有的解决方案都使用 <bpt id="p2">[</bpt>Azure 存储<ept id="p2">][azure_storage]</ept>帐户来进行文件存储和检索。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>在以下部分中，你将了解上述工作流中提到的每个资源，以及其他可实现分布式计算方案的许多批处理 ( Batch ) 功能。</source>
          <target state="new">在以下部分中，你将了解上述工作流中提到的每个资源，以及其他可实现分布式计算方案的许多批处理 ( Batch ) 功能。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="resource"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>批处理 ( Batch ) 服务的资源</source>
          <target state="new"><ph id="ph1">&lt;a name="resource"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>批处理 ( Batch ) 服务的资源</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>使用 Azure 批处理 ( Batch ) 服务时，你可以利用以下资源：</source>
          <target state="new">使用 Azure 批处理 ( Batch ) 服务时，你可以利用以下资源：</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>帐户</source>
          <target state="new">帐户</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>计算节点</source>
          <target state="new">计算节点</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>池</source>
          <target state="new">池</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>作业</source>
          <target state="new">作业</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>任务</source>
          <target state="new">任务</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>启动任务</source>
          <target state="new">启动任务</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>作业管理器任务</source>
          <target state="new">作业管理器任务</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>作业准备和释放任务</source>
          <target state="new">作业准备和释放任务</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>JobSchedule</source>
          <target state="new">JobSchedule</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="account"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>帐户</source>
          <target state="new"><ph id="ph1">&lt;a name="account"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>帐户</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>批处理 ( Batch ) 帐户是批处理 ( Batch ) 服务中唯一标识的实体。所有处理都与一个批处理 ( Batch ) 帐户相关联。当你使用批处理( Batch ) 服务执行操作时，需要同时用到帐户名和帐户密钥。若要创建批处理( Batch ) 帐户，请查看<bpt id="p1">[</bpt>在 Azure 门户中创建和管理 Azure 批处理 ( Batch )  帐户<ept id="p1">](/documentation/articles/batch-account-create-portal)</ept>。</source>
          <target state="new">批处理 ( Batch ) 帐户是批处理 ( Batch ) 服务中唯一标识的实体。所有处理都与一个批处理 ( Batch ) 帐户相关联。当你使用批处理( Batch ) 服务执行操作时，需要同时用到帐户名和帐户密钥。若要创建批处理( Batch ) 帐户，请查看<bpt id="p1">[</bpt>在 Azure 门户中创建和管理 Azure 批处理 ( Batch )  帐户<ept id="p1">](/documentation/articles/batch-account-create-portal)</ept>。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="computenode"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>计算节点</source>
          <target state="new"><ph id="ph1">&lt;a name="computenode"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>计算节点</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>计算节点是专门为应用程序处理特定工作负荷的 Azure 虚拟机。节点大小确定了 CPU 核心数目、内存容量，以及分配给节点的本地文件系统大小。节点可以是除 A0 以外的任何[云服务节点大小][/documentation/articles/cloud_service_sizes]。</source>
          <target state="new">计算节点是专门为应用程序处理特定工作负荷的 Azure 虚拟机。节点大小确定了 CPU 核心数目、内存容量，以及分配给节点的本地文件系统大小。节点可以是除 A0 以外的任何[云服务节点大小][/documentation/articles/cloud_service_sizes]。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>节点可以运行可执行文件和脚本，包括可执行文件 (.exe)、命令文件 (.cmd)、批处理 ( Batch ) 文件 (.bat) 和 PowerShell 脚本。节点还具有以下属性：</source>
          <target state="new">节点可以运行可执行文件和脚本，包括可执行文件 (.exe)、命令文件 (.cmd)、批处理 ( Batch ) 文件 (.bat) 和 PowerShell 脚本。节点还具有以下属性：</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>将在每个计算节点上创建标准<bpt id="p1">**</bpt>文件夹结构<ept id="p1">**</ept>和关联的<bpt id="p2">**</bpt>环境变量<ept id="p2">**</ept>（用于详细描述其路径）。有关详细信息，请参阅下面的<bpt id="p3">[</bpt>文件和目录<ept id="p3">](#files)</ept>。</source>
          <target state="new">将在每个计算节点上创建标准<bpt id="p1">**</bpt>文件夹结构<ept id="p1">**</ept>和关联的<bpt id="p2">**</bpt>环境变量<ept id="p2">**</ept>（用于详细描述其路径）。有关详细信息，请参阅下面的<bpt id="p3">[</bpt>文件和目录<ept id="p3">](#files)</ept>。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>可由任务引用的<bpt id="p1">**</bpt>环境变量<ept id="p1">**</ept>。</source>
          <target state="new">可由任务引用的<bpt id="p1">**</bpt>环境变量<ept id="p1">**</ept>。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>配置为控制访问的<bpt id="p1">**</bpt>防火墙<ept id="p1">**</ept>设置。</source>
          <target state="new">配置为控制访问的<bpt id="p1">**</bpt>防火墙<ept id="p1">**</ept>设置。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>如果需要<bpt id="p1">**</bpt>远程访问<ept id="p1">**</ept>某个计算节点（例如，出于调试目的），可以先获取 RDP 文件，然后，使用该文件通过<bpt id="p2">*</bpt>远程桌面<ept id="p2">*</ept>访问该节点。</source>
          <target state="new">如果需要<bpt id="p1">**</bpt>远程访问<ept id="p1">**</ept>某个计算节点（例如，出于调试目的），可以先获取 RDP 文件，然后，使用该文件通过<bpt id="p2">*</bpt>远程桌面<ept id="p2">*</ept>访问该节点。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="pool"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>池</source>
          <target state="new"><ph id="ph1">&lt;a name="pool"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>池</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>池是运行应用程序的节点集合。你可以手动创建池；或者在你指定要完成的工作时，由批处理 ( Batch ) 服务自动创建池。你可以创建和管理符合应用程序需求的池，但池只能由其创建时所在的批处理 ( Batch ) 帐户使用。一个批处理 ( Batch ) 帐户可以有多个池。</source>
          <target state="new">池是运行应用程序的节点集合。你可以手动创建池；或者在你指定要完成的工作时，由批处理 ( Batch ) 服务自动创建池。你可以创建和管理符合应用程序需求的池，但池只能由其创建时所在的批处理 ( Batch ) 帐户使用。一个批处理 ( Batch ) 帐户可以有多个池。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Azure 批处理 ( Batch ) 池构建在核心 Azure 计算平台的顶层；批处理 ( Batch ) 池提供大规模的分配、应用程序安装、数据分发和运行状况监视，以及在池内灵活调整计算节点数目（缩放）等功能。</source>
          <target state="new">Azure 批处理 ( Batch ) 池构建在核心 Azure 计算平台的顶层；批处理 ( Batch ) 池提供大规模的分配、应用程序安装、数据分发和运行状况监视，以及在池内灵活调整计算节点数目（缩放）等功能。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>添加到池中的每个节点都分配有唯一的名称和 IP 地址。从池中删除某个节点时，会丢失对操作系统或文件所做的任何更改，并且节点的名称和 IP 地址将被释放供将来使用。当某个节点退出池时，它的生存期即告结束。</source>
          <target state="new">添加到池中的每个节点都分配有唯一的名称和 IP 地址。从池中删除某个节点时，会丢失对操作系统或文件所做的任何更改，并且节点的名称和 IP 地址将被释放供将来使用。当某个节点退出池时，它的生存期即告结束。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>你可以配置一个池，以便在该池中的节点之间进行通信。如果为池请求了池内通信，批处理 ( Batch ) 服务允许在池中每个节点上使用大于 1100 的端口。池中的每个节点都配置为只允许这个端口范围和来自池中其他节点的传入连接。如果应用程序不需要节点之间的通信，批处理 ( Batch ) 服务可以将许多不同的群集和数据中心的大量节点分配给池，以发挥更强大的并行处理能力。</source>
          <target state="new">你可以配置一个池，以便在该池中的节点之间进行通信。如果为池请求了池内通信，批处理 ( Batch ) 服务允许在池中每个节点上使用大于 1100 的端口。池中的每个节点都配置为只允许这个端口范围和来自池中其他节点的传入连接。如果应用程序不需要节点之间的通信，批处理 ( Batch ) 服务可以将许多不同的群集和数据中心的大量节点分配给池，以发挥更强大的并行处理能力。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>在创建池时，可以指定以下属性：</source>
          <target state="new">在创建池时，可以指定以下属性：</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>池中<bpt id="p1">**</bpt>节点的大小<ept id="p1">**</ept></source>
          <target state="new">池中<bpt id="p1">**</bpt>节点的大小<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>应该根据要在节点上运行的一个或多个应用程序的特征和要求，选择适当的节点大小。通常，选择节点大小时会假设某个任务要在节点上运行一次。考虑应用程序是否是多线程的以及其消耗的内存量等因素有助于确定最合适且经济高效的节点大小。可以分配多个任务和并行运行多个应用程序实例，在此情况下，通常会选择较大的节点 - 有关详细信息，请参阅下面的“任务计划策略”。</source>
          <target state="new">应该根据要在节点上运行的一个或多个应用程序的特征和要求，选择适当的节点大小。通常，选择节点大小时会假设某个任务要在节点上运行一次。考虑应用程序是否是多线程的以及其消耗的内存量等因素有助于确定最合适且经济高效的节点大小。可以分配多个任务和并行运行多个应用程序实例，在此情况下，通常会选择较大的节点 - 有关详细信息，请参阅下面的“任务计划策略”。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>池中所有节点的大小必须相同。如果要根据不同的系统要求和/或负载级别运行不同的应用程序，则应该创建独立的池。</source>
          <target state="new">池中所有节点的大小必须相同。如果要根据不同的系统要求和/或负载级别运行不同的应用程序，则应该创建独立的池。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>可为池配置所有<bpt id="p1">[</bpt>云服务节点大小<ept id="p1">][cloud_service_sizes]</ept>，但 A0 除外。</source>
          <target state="new">可为池配置所有<bpt id="p1">[</bpt>云服务节点大小<ept id="p1">][cloud_service_sizes]</ept>，但 A0 除外。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>在节点上运行的<bpt id="p1">**</bpt>操作系统系列<ept id="p1">**</ept>和<bpt id="p2">**</bpt>版本<ept id="p2">**</ept></source>
          <target state="new">在节点上运行的<bpt id="p1">**</bpt>操作系统系列<ept id="p1">**</ept>和<bpt id="p2">**</bpt>版本<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>与云服务中的辅助角色一样，<bpt id="p1">*</bpt>OS 系列<ept id="p1">*</ept>和 <bpt id="p2">*</bpt>OS 版本<ept id="p2">*</ept>也是可以指定的（有关辅助角色的详细信息，请参阅 <bpt id="p3">*</bpt>Azure 提供的计算托管选项<ept id="p3">*</ept>中的<bpt id="p4">[</bpt>介绍云服务<ept id="p4">][about_cloud_services]</ept>）。</source>
          <target state="new">与云服务中的辅助角色一样，<bpt id="p1">*</bpt>OS 系列<ept id="p1">*</ept>和 <bpt id="p2">*</bpt>OS 版本<ept id="p2">*</ept>也是可以指定的（有关辅助角色的详细信息，请参阅 <bpt id="p3">*</bpt>Azure 提供的计算托管选项<ept id="p3">*</ept>中的<bpt id="p4">[</bpt>介绍云服务<ept id="p4">][about_cloud_services]</ept>）。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>操作系统系列还确定了要与操作系统一起安装哪些版本的 .NET。</source>
          <target state="new">操作系统系列还确定了要与操作系统一起安装哪些版本的 .NET。</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>与辅助角色一样，对于 OS 版本，建议指定 <ph id="ph1">`*`</ph>，使节点可自动升级，而无需采取措施来适应新的版本。选择特定操作系统版本的主要用例是在允许更新版本之前执行向后兼容测试，以确保保持应用程序兼容性。验证后，便可以更新池的操作系统版本并安装新的操作系统映像 – 所有正在运行的任务将会中断并重新排队。</source>
          <target state="new">与辅助角色一样，对于 OS 版本，建议指定 <ph id="ph1">`*`</ph>，使节点可自动升级，而无需采取措施来适应新的版本。选择特定操作系统版本的主要用例是在允许更新版本之前执行向后兼容测试，以确保保持应用程序兼容性。验证后，便可以更新池的操作系统版本并安装新的操作系统映像 – 所有正在运行的任务将会中断并重新排队。</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>应该为池提供的<bpt id="p1">**</bpt>节点的目标数目<ept id="p1">**</ept></source>
          <target state="new">应该为池提供的<bpt id="p1">**</bpt>节点的目标数目<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>池的<bpt id="p1">**</bpt>缩放策略<ept id="p1">**</ept></source>
          <target state="new">池的<bpt id="p1">**</bpt>缩放策略<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>除了节点数目以外，你还可以为池指定<bpt id="p1">[</bpt>自动缩放公式<ept id="p1">](/documentation/articles/batch-automatic-scaling)</ept>。批处理 ( Batch ) 服务将执行该公式，并根据可以指定的各个池、作业、和任务参数，调整池中的节点数目。</source>
          <target state="new">除了节点数目以外，你还可以为池指定<bpt id="p1">[</bpt>自动缩放公式<ept id="p1">](/documentation/articles/batch-automatic-scaling)</ept>。批处理 ( Batch ) 服务将执行该公式，并根据可以指定的各个池、作业、和任务参数，调整池中的节点数目。</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>任务计划<ept id="p1">**</ept>策略</source>
          <target state="new"><bpt id="p1">**</bpt>任务计划<ept id="p1">**</ept>策略</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>每个节点的最大任务数<ept id="p1">](/documentation/articles/batch-parallel-node-tasks)</ept>配置选项确定了可以在池中每个节点上并行运行的最大任务数。</source>
          <target state="new"><bpt id="p1">[</bpt>每个节点的最大任务数<ept id="p1">](/documentation/articles/batch-parallel-node-tasks)</ept>配置选项确定了可以在池中每个节点上并行运行的最大任务数。</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>默认的配置是每次在一个计算节点上运行一个任务，但在某些情况下，在一个节点上同时执行多个任务可能更有利。一个示例就是当应用程序必须等待 I/O 时增大节点利用率。并行执行多个应用程序会增大 CPU 利用率。另一个示例是减少池中的节点数目。这可以减少大型引用数据集所需的数据传输量 - 如果 A1 节点大小足以供某个应用程序使用，则可以改为选择 A4 节点大小，并针对 8 个并行任务配置池，使每个任务使用一个核心。</source>
          <target state="new">默认的配置是每次在一个计算节点上运行一个任务，但在某些情况下，在一个节点上同时执行多个任务可能更有利。一个示例就是当应用程序必须等待 I/O 时增大节点利用率。并行执行多个应用程序会增大 CPU 利用率。另一个示例是减少池中的节点数目。这可以减少大型引用数据集所需的数据传输量 - 如果 A1 节点大小足以供某个应用程序使用，则可以改为选择 A4 节点大小，并针对 8 个并行任务配置池，使每个任务使用一个核心。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>还可以指定一个“填充类型”，用于确定批处理 ( Batch ) 是要将任务平均分散到所有节点，还是在将最大数目的任务分配给一个节点后，再将任务分配给池中的另一个节点。</source>
          <target state="new">还可以指定一个“填充类型”，用于确定批处理 ( Batch ) 是要将任务平均分散到所有节点，还是在将最大数目的任务分配给一个节点后，再将任务分配给池中的另一个节点。</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>池中节点的<bpt id="p1">**</bpt>通信状态<ept id="p1">**</ept></source>
          <target state="new">池中节点的<bpt id="p1">**</bpt>通信状态<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>可以将池配置为允许池中节点之间的通信，以确定池的底层网络基础结构。请注意，这也会影响节点在群集中的位置。</source>
          <target state="new">可以将池配置为允许池中节点之间的通信，以确定池的底层网络基础结构。请注意，这也会影响节点在群集中的位置。</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>在大多数情况下，任务将独立运行而无需互相通信，但在某些应用程序中，任务必须相互通信。</source>
          <target state="new">在大多数情况下，任务将独立运行而无需互相通信，但在某些应用程序中，任务必须相互通信。</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>池中节点的<bpt id="p1">**</bpt>启动任务<ept id="p1">**</ept></source>
          <target state="new">池中节点的<bpt id="p1">**</bpt>启动任务<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>可以指定每当计算节点加入池和节点重新启动时要执行的<bpt id="p1">*</bpt>启动任务<ept id="p1">*</ept>。此任务通常用于安装在节点上运行的任务所使用的应用程序。</source>
          <target state="new">可以指定每当计算节点加入池和节点重新启动时要执行的<bpt id="p1">*</bpt>启动任务<ept id="p1">*</ept>。此任务通常用于安装在节点上运行的任务所使用的应用程序。</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="job"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>作业</source>
          <target state="new"><ph id="ph1">&lt;a name="job"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>作业</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>作业是任务的集合，指定如何对池中的计算节点执行计算。</source>
          <target state="new">作业是任务的集合，指定如何对池中的计算节点执行计算。</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>作业指定要在其上运行工作的<bpt id="p1">**</bpt>池<ept id="p1">**</ept>。该池可以是以前创建的由多个作业使用的现有池，或者是为作业计划关联的每个作业创建的，或者为作业计划关联的所有作业创建的。</source>
          <target state="new">作业指定要在其上运行工作的<bpt id="p1">**</bpt>池<ept id="p1">**</ept>。该池可以是以前创建的由多个作业使用的现有池，或者是为作业计划关联的每个作业创建的，或者为作业计划关联的所有作业创建的。</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>可以指定一个可选的<bpt id="p1">**</bpt>作业优先级<ept id="p1">**</ept>。如果提交的作业的优先级高于当前正在进行的其他作业，则会将高优先级作业任务插入到队列中低优先级作业任务的前面。已经运行的低优先级任务不会预先清空。</source>
          <target state="new">可以指定一个可选的<bpt id="p1">**</bpt>作业优先级<ept id="p1">**</ept>。如果提交的作业的优先级高于当前正在进行的其他作业，则会将高优先级作业任务插入到队列中低优先级作业任务的前面。已经运行的低优先级任务不会预先清空。</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>作业<bpt id="p1">**</bpt>约束<ept id="p1">**</ept>为作业指定特定的限制。</source>
          <target state="new">作业<bpt id="p1">**</bpt>约束<ept id="p1">**</ept>为作业指定特定的限制。</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>可为作业设置<bpt id="p1">**</bpt>最大挂钟时间<ept id="p1">**</ept>。如果作业运行的时间超过了指定的最大挂钟时间，则会结束该作业和所有关联的任务。</source>
          <target state="new">可为作业设置<bpt id="p1">**</bpt>最大挂钟时间<ept id="p1">**</ept>。如果作业运行的时间超过了指定的最大挂钟时间，则会结束该作业和所有关联的任务。</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Azure 批处理 ( Batch ) 可以检测失败的任务并重试任务。可以将<bpt id="p1">**</bpt>任务重试最大次数<ept id="p1">**</ept>指定为约束，包括指定是要始终重试还是永不重试某个任务。重试某个任务意味着要将任务重新排队以再次运行。</source>
          <target state="new">Azure 批处理 ( Batch ) 可以检测失败的任务并重试任务。可以将<bpt id="p1">**</bpt>任务重试最大次数<ept id="p1">**</ept>指定为约束，包括指定是要始终重试还是永不重试某个任务。重试某个任务意味着要将任务重新排队以再次运行。</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>可以通过客户端应用程序将任务添加到作业，或是指定<bpt id="p1">[</bpt>作业管理器任务<ept id="p1">](#jobmanagertask)</ept>。作业管理器任务使用批处理 ( Batch ) API，并包含必要的信息用于为池中某个计算节点上运行的包含任务的作业创建所需的任务。作业管理器任务专门由批处理 ( Batch ) 来处理 – 创建作业和重新启动失败的作业后，会立即将任务排队。作业计划创建的作业需要作业管理器任务，因为它是在实例化作业之前定义任务的唯一方式。下面提供了有关作业管理器任务的详细信息。</source>
          <target state="new">可以通过客户端应用程序将任务添加到作业，或是指定<bpt id="p1">[</bpt>作业管理器任务<ept id="p1">](#jobmanagertask)</ept>。作业管理器任务使用批处理 ( Batch ) API，并包含必要的信息用于为池中某个计算节点上运行的包含任务的作业创建所需的任务。作业管理器任务专门由批处理 ( Batch ) 来处理 – 创建作业和重新启动失败的作业后，会立即将任务排队。作业计划创建的作业需要作业管理器任务，因为它是在实例化作业之前定义任务的唯一方式。下面提供了有关作业管理器任务的详细信息。</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="task"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>任务</source>
          <target state="new"><ph id="ph1">&lt;a name="task"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>任务</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>任务是与作业关联的计算单位，在节点上运行。任务将分配到节点以执行，或排入队列直到节点空闲。任务使用以下资源：</source>
          <target state="new">任务是与作业关联的计算单位，在节点上运行。任务将分配到节点以执行，或排入队列直到节点空闲。任务使用以下资源：</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>在任务的<bpt id="p1">**</bpt>命令行<ept id="p1">**</ept>中指定的应用程序。</source>
          <target state="new">在任务的<bpt id="p1">**</bpt>命令行<ept id="p1">**</ept>中指定的应用程序。</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>包含要处理的数据的<bpt id="p1">**</bpt>资源文件<ept id="p1">**</ept>。这些文件自动从 Azure 存储帐户中的 Blob 存储复制到节点。有关详细信息，请参阅下面的<bpt id="p2">[</bpt>文件和目录<ept id="p2">](#files)</ept>。</source>
          <target state="new">包含要处理的数据的<bpt id="p1">**</bpt>资源文件<ept id="p1">**</ept>。这些文件自动从 Azure 存储帐户中的 Blob 存储复制到节点。有关详细信息，请参阅下面的<bpt id="p2">[</bpt>文件和目录<ept id="p2">](#files)</ept>。</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>应用程序所需的<bpt id="p1">**</bpt>环境变量<ept id="p1">**</ept>。有关详细信息，请参阅下面的<bpt id="p2">[</bpt>任务的环境设置<ept id="p2">](#environment)</ept>。</source>
          <target state="new">应用程序所需的<bpt id="p1">**</bpt>环境变量<ept id="p1">**</ept>。有关详细信息，请参阅下面的<bpt id="p2">[</bpt>任务的环境设置<ept id="p2">](#environment)</ept>。</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>运行计算所依据的<bpt id="p1">**</bpt>约束<ept id="p1">**</ept>。例如，允许运行任务的最长时间、任务运行失败时应该重试的次数上限，以及文件保留在工作目录中的最长时间。</source>
          <target state="new">运行计算所依据的<bpt id="p1">**</bpt>约束<ept id="p1">**</ept>。例如，允许运行任务的最长时间、任务运行失败时应该重试的次数上限，以及文件保留在工作目录中的最长时间。</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>除了可以定义在节点上运行计算的任务以外，批处理 ( Batch ) 服务还提供以下特殊任务：</source>
          <target state="new">除了可以定义在节点上运行计算的任务以外，批处理 ( Batch ) 服务还提供以下特殊任务：</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>启动任务</source>
          <target state="new">启动任务</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>作业管理器任务</source>
          <target state="new">作业管理器任务</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>作业准备和释放任务</source>
          <target state="new">作业准备和释放任务</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="starttask"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>启动任务</source>
          <target state="new"><ph id="ph1">&lt;a name="starttask"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>启动任务</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>通过将<bpt id="p1">**</bpt>启动任务<ept id="p1">**</ept>与池相关联，可以配置池节点的操作环境，以便执行安装软件或启动后台进程等操作。启动任务在节点每次启动时运行，且只要保留在池中就会持续运行（包括首次将节点添加到池时）。启动任务的主要优点是包含全部所需的信息，使你能够配置计算节点，以及安装执行作业任务所需的应用程序。因此，要增加池中的节点数目，只需指定新的目标节点计数即可 - 批处理 ( Batch ) 已包含配置新节点并使其可接受任务所需的全部信息。</source>
          <target state="new">通过将<bpt id="p1">**</bpt>启动任务<ept id="p1">**</ept>与池相关联，可以配置池节点的操作环境，以便执行安装软件或启动后台进程等操作。启动任务在节点每次启动时运行，且只要保留在池中就会持续运行（包括首次将节点添加到池时）。启动任务的主要优点是包含全部所需的信息，使你能够配置计算节点，以及安装执行作业任务所需的应用程序。因此，要增加池中的节点数目，只需指定新的目标节点计数即可 - 批处理 ( Batch ) 已包含配置新节点并使其可接受任务所需的全部信息。</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>与任何批处理 ( Batch ) 任务一样，除了指定要执行的<bpt id="p1">**</bpt>命令行<ept id="p1">**</ept>以外，还可以指定 <bpt id="p2">[</bpt>Azure 存储空间<ept id="p2">][azure_storage]</ept>中的<bpt id="p3">**</bpt>资源文件<ept id="p3">**</ept>列表。Azure 批处理 ( Batch ) 将先从 Azure 存储空间复制文件，然后再运行命令行。对于池启动任务，文件列表通常包含应用程序包或文件，但它还可能包含计算节点上运行的所有任务使用的引用数据。启动任务的命令行可能会执行 PowerShell 脚本或 <ph id="ph1">`robocopy`</ph> 操作，例如，将应用程序文件复制到“共享”文件夹中，然后运行 MSI 或 <ph id="ph2">`setup.exe`</ph>。</source>
          <target state="new">与任何批处理 ( Batch ) 任务一样，除了指定要执行的<bpt id="p1">**</bpt>命令行<ept id="p1">**</ept>以外，还可以指定 <bpt id="p2">[</bpt>Azure 存储空间<ept id="p2">][azure_storage]</ept>中的<bpt id="p3">**</bpt>资源文件<ept id="p3">**</ept>列表。Azure 批处理 ( Batch ) 将先从 Azure 存储空间复制文件，然后再运行命令行。对于池启动任务，文件列表通常包含应用程序包或文件，但它还可能包含计算节点上运行的所有任务使用的引用数据。启动任务的命令行可能会执行 PowerShell 脚本或 <ph id="ph1">`robocopy`</ph> 操作，例如，将应用程序文件复制到“共享”文件夹中，然后运行 MSI 或 <ph id="ph2">`setup.exe`</ph>。</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>通常，批处理 ( Batch ) 服务需要等待启动任务完成，然后认为节点已准备好分配任务，但这种行为是可配置的。</source>
          <target state="new">通常，批处理 ( Batch ) 服务需要等待启动任务完成，然后认为节点已准备好分配任务，但这种行为是可配置的。</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>如果某个计算节点上的启动任务失败，则节点的状态将会更新以反映失败状态，同时，该节点不可用于要分配的任务。如果从存储中复制启动任务的资源文件时出现问题，或由其命令行执行的进程返回了非零退出代码，则启动任务可能会失败。</source>
          <target state="new">如果某个计算节点上的启动任务失败，则节点的状态将会更新以反映失败状态，同时，该节点不可用于要分配的任务。如果从存储中复制启动任务的资源文件时出现问题，或由其命令行执行的进程返回了非零退出代码，则启动任务可能会失败。</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="jobmanagertask"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>作业管理器任务</source>
          <target state="new"><ph id="ph1">&lt;a name="jobmanagertask"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>作业管理器任务</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>作业管理器任务<ept id="p1">**</ept>通常用于控制和/或监视作业的执行。例如，创建和提交作业的任务、确定要运行的其他任务，以及确定任务何时完成。但是，作业管理器任务并不限定于这些活动 - 它是功能齐备的任务，可执行作业所需的任何操作。比方说，作业管理器任务可以下载指定为参数的文件、分析该文件的内容，并根据这些内容提交其他任务。</source>
          <target state="new"><bpt id="p1">**</bpt>作业管理器任务<ept id="p1">**</ept>通常用于控制和/或监视作业的执行。例如，创建和提交作业的任务、确定要运行的其他任务，以及确定任务何时完成。但是，作业管理器任务并不限定于这些活动 - 它是功能齐备的任务，可执行作业所需的任何操作。比方说，作业管理器任务可以下载指定为参数的文件、分析该文件的内容，并根据这些内容提交其他任务。</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>作业管理器任务在所有其他任务之前启动，并提供以下功能：</source>
          <target state="new">作业管理器任务在所有其他任务之前启动，并提供以下功能：</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>创建作业时由批处理 ( Batch ) 服务自动提交为任务。</source>
          <target state="new">创建作业时由批处理 ( Batch ) 服务自动提交为任务。</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>安排在作业中的其他任务之前执行。</source>
          <target state="new">安排在作业中的其他任务之前执行。</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>缩小池时，关联的节点最后才从池中删除。</source>
          <target state="new">缩小池时，关联的节点最后才从池中删除。</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>此终止可能完全取决于作业中的所有任务终止。</source>
          <target state="new">此终止可能完全取决于作业中的所有任务终止。</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>需要重新启动时，作业管理器任务有最高的优先级。如果找不到空闲的节点，批处理 ( Batch ) 服务可以终止池中正在运行的其他某个任务，以便腾出空间供作业管理器任务运行。</source>
          <target state="new">需要重新启动时，作业管理器任务有最高的优先级。如果找不到空闲的节点，批处理 ( Batch ) 服务可以终止池中正在运行的其他某个任务，以便腾出空间供作业管理器任务运行。</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>一个作业中的作业管理器任务的优先级不高于其他作业的任务。不同作业之间只遵循作业级别的优先级。</source>
          <target state="new">一个作业中的作业管理器任务的优先级不高于其他作业的任务。不同作业之间只遵循作业级别的优先级。</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="jobpreprelease"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>作业准备和释放任务</source>
          <target state="new"><ph id="ph1">&lt;a name="jobpreprelease"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>作业准备和释放任务</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>批处理 ( Batch ) 提供作业准备任务用于预先设置作业的执行，并提供作业释放任务用于在完成作业后执行维护或清理。</source>
          <target state="new">批处理 ( Batch ) 提供作业准备任务用于预先设置作业的执行，并提供作业释放任务用于在完成作业后执行维护或清理。</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>作业准备任务<ept id="p1">**</ept> - 在任何其他作业任务执行之前，作业准备任务在计划要运行任务的所有计算节点上运行。例如，使用作业准备任务可以复制所有任务共享的、但对作业唯一的数据。</source>
          <target state="new"><bpt id="p1">**</bpt>作业准备任务<ept id="p1">**</ept> - 在任何其他作业任务执行之前，作业准备任务在计划要运行任务的所有计算节点上运行。例如，使用作业准备任务可以复制所有任务共享的、但对作业唯一的数据。</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>作业释放任务<ept id="p1">**</ept> - 作业完成后，作业释放任务将在池中至少运行了一个任务的每个节点上运行。例如，使用作业释放任务可删除作业准备任务所复制的数据，或压缩并上载诊断日志数据。</source>
          <target state="new"><bpt id="p1">**</bpt>作业释放任务<ept id="p1">**</ept> - 作业完成后，作业释放任务将在池中至少运行了一个任务的每个节点上运行。例如，使用作业释放任务可删除作业准备任务所复制的数据，或压缩并上载诊断日志数据。</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>作业准备和释放任务允许你指定命令行在任务被调用时运行，并提供许多功能，例如文件下载、提升权限的执行、自定义环境变量、最大执行持续时间、重试计数和文件保留时间。</source>
          <target state="new">作业准备和释放任务允许你指定命令行在任务被调用时运行，并提供许多功能，例如文件下载、提升权限的执行、自定义环境变量、最大执行持续时间、重试计数和文件保留时间。</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>有关作业准备和释放任务的详细信息，请参阅<bpt id="p1">[</bpt>在 Azure 批处理 ( Batch ) 计算节点上运行作业准备和完成任务<ept id="p1">](/documentation/articles/batch-job-prep-release)</ept>。</source>
          <target state="new">有关作业准备和释放任务的详细信息，请参阅<bpt id="p1">[</bpt>在 Azure 批处理 ( Batch ) 计算节点上运行作业准备和完成任务<ept id="p1">](/documentation/articles/batch-job-prep-release)</ept>。</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="jobschedule"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>计划的作业</source>
          <target state="new"><ph id="ph1">&lt;a name="jobschedule"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>计划的作业</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>作业计划可让你在批处理 ( Batch ) 服务中创建周期性作业。作业计划指定何时要运行作业，并包含要运行的作业的规范。作业计划允许指定计划的持续时间（计划的持续时间和生效时间），以及在该时间段创建作业的频率。</source>
          <target state="new">作业计划可让你在批处理 ( Batch ) 服务中创建周期性作业。作业计划指定何时要运行作业，并包含要运行的作业的规范。作业计划允许指定计划的持续时间（计划的持续时间和生效时间），以及在该时间段创建作业的频率。</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="files"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>文件和目录</source>
          <target state="new"><ph id="ph1">&lt;a name="files"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>文件和目录</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>每个任务都有一个工作目录，任务将在该目录中创建零个或多个文件和目录用于存储任务运行的程序、任务处理的数据，以及任务执行的处理的输出。在作业运行期间，这些文件和目录可供其他任务使用。节点上的所有任务、文件和目录由单个用户帐户拥有。</source>
          <target state="new">每个任务都有一个工作目录，任务将在该目录中创建零个或多个文件和目录用于存储任务运行的程序、任务处理的数据，以及任务执行的处理的输出。在作业运行期间，这些文件和目录可供其他任务使用。节点上的所有任务、文件和目录由单个用户帐户拥有。</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>批处理 ( Batch ) 服务在节点上公开文件系统的一部分作为“根目录”。 任务可以通过访问 <ph id="ph1">`%AZ_BATCH_NODE_ROOT_DIR%`</ph> 环境变量来使用根目录。有关使用环境变量的详细信息，请参阅<bpt id="p1">[</bpt>任务的环境设置<ept id="p1">](#environment)</ept>。</source>
          <target state="new">批处理 ( Batch ) 服务在节点上公开文件系统的一部分作为“根目录”。 任务可以通过访问 <ph id="ph1">`%AZ_BATCH_NODE_ROOT_DIR%`</ph> 环境变量来使用根目录。有关使用环境变量的详细信息，请参阅<bpt id="p1">[</bpt>任务的环境设置<ept id="p1">](#environment)</ept>。</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>计算节点目录结构</source>
          <target state="new">计算节点目录结构</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>根目录包含以下目录结构：</source>
          <target state="new">根目录包含以下目录结构：</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>共享<ept id="p1">**</ept> - 此位置是在节点上运行的所有任务的共享目录，与作业无关。在节点上，可以通过 <ph id="ph1">`%AZ_BATCH_NODE_SHARED_DIR%`</ph> 来访问共享目录。此目录允许对节点上运行的所有任务进行读取/写入访问。任务可以创建、读取、更新和删除此目录中的文件。</source>
          <target state="new"><bpt id="p1">**</bpt>共享<ept id="p1">**</ept> - 此位置是在节点上运行的所有任务的共享目录，与作业无关。在节点上，可以通过 <ph id="ph1">`%AZ_BATCH_NODE_SHARED_DIR%`</ph> 来访问共享目录。此目录允许对节点上运行的所有任务进行读取/写入访问。任务可以创建、读取、更新和删除此目录中的文件。</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>启动<ept id="p1">**</ept> - 启动任务使用此位置做为它的工作目录。由批处理 ( Batch ) 服务下载用来运行启动任务的所有文件也存储在此目录下。在节点上，可以通过 <ph id="ph1">`%AZ_BATCH_NODE_START_DIR%`</ph> 环境变量来访问启动目录。启动任务可以创建、读取、更新和删除此目录下的文件，启动任务可以使用此目录来配置操作系统。</source>
          <target state="new"><bpt id="p1">**</bpt>启动<ept id="p1">**</ept> - 启动任务使用此位置做为它的工作目录。由批处理 ( Batch ) 服务下载用来运行启动任务的所有文件也存储在此目录下。在节点上，可以通过 <ph id="ph1">`%AZ_BATCH_NODE_START_DIR%`</ph> 环境变量来访问启动目录。启动任务可以创建、读取、更新和删除此目录下的文件，启动任务可以使用此目录来配置操作系统。</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>任务<ept id="p1">**</ept> -为节点上运行的每个任务创建一个目录，可通过 <ph id="ph1">`%AZ_BATCH_TASK_DIR%`</ph> 访问该目录。在每个任务目录中，批处理 ( Batch ) 服务将创建由 <ph id="ph2">`%AZ_BATCH_TASK_WORKING_DIR%`</ph> 环境变量指定唯一路径的任务目录 (<ph id="ph3">`wd`</ph>)。此目录提供对任务的读/写访问权限。任务可以创建、读取、更新和删除此目录下的文件，此目录根据任务指定的 <bpt id="p2">*</bpt>RetentionTime<ept id="p2">*</ept> 约束而保留。</source>
          <target state="new"><bpt id="p1">**</bpt>任务<ept id="p1">**</ept> -为节点上运行的每个任务创建一个目录，可通过 <ph id="ph1">`%AZ_BATCH_TASK_DIR%`</ph> 访问该目录。在每个任务目录中，批处理 ( Batch ) 服务将创建由 <ph id="ph2">`%AZ_BATCH_TASK_WORKING_DIR%`</ph> 环境变量指定唯一路径的任务目录 (<ph id="ph3">`wd`</ph>)。此目录提供对任务的读/写访问权限。任务可以创建、读取、更新和删除此目录下的文件，此目录根据任务指定的 <bpt id="p2">*</bpt>RetentionTime<ept id="p2">*</ept> 约束而保留。</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`stdout.txt`</ph> 和 <ph id="ph2">`stderr.txt`</ph> - 在任务执行期间，会将这些文件写入任务文件夹。</source>
          <target state="new"><ph id="ph1">`stdout.txt`</ph> 和 <ph id="ph2">`stderr.txt`</ph> - 在任务执行期间，会将这些文件写入任务文件夹。</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>从池中删除节点时，也会删除节点上存储的所有文件。</source>
          <target state="new">从池中删除节点时，也会删除节点上存储的所有文件。</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="lifetime"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>池和计算节点生存期</source>
          <target state="new"><ph id="ph1">&lt;a name="lifetime"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>池和计算节点生存期</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>在设计 Azure 批处理 ( Batch ) 解决方案时，你必须做出有关如何及何时创建池，以及这些池中的计算节点可用性要保持多久的设计决策。</source>
          <target state="new">在设计 Azure 批处理 ( Batch ) 解决方案时，你必须做出有关如何及何时创建池，以及这些池中的计算节点可用性要保持多久的设计决策。</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>在极端情况下，可以在提交作业为每个作业创建一个池，并在任务完成执行后立即删除节点。这可以最大程度地提高利用率，因为仅当绝对必要时才会分配节点，并且在节点空闲时会立即将其关闭。这意味着作业必须等待分配节点，不过，你必须注意，在任务单独可用、已分配并且启动任务已完成时，会立即将任务安排给节点。批处理 ( Batch )  <bpt id="p1">*</bpt>不会<ept id="p1">*</ept>在等到池中的所有节点都可用后才分配任务，因此可确保最大程度地利用所有节点。</source>
          <target state="new">在极端情况下，可以在提交作业为每个作业创建一个池，并在任务完成执行后立即删除节点。这可以最大程度地提高利用率，因为仅当绝对必要时才会分配节点，并且在节点空闲时会立即将其关闭。这意味着作业必须等待分配节点，不过，你必须注意，在任务单独可用、已分配并且启动任务已完成时，会立即将任务安排给节点。批处理 ( Batch )  <bpt id="p1">*</bpt>不会<ept id="p1">*</ept>在等到池中的所有节点都可用后才分配任务，因此可确保最大程度地利用所有节点。</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>在另一种极端情况下，如果最高优先级是让作业立即启动，则你可以预先创建池，并使其节点在提交作业之前可用。在此情况下，作业任务可以立即启动，但节点可能会保持空闲状态以等待分配任务。</source>
          <target state="new">在另一种极端情况下，如果最高优先级是让作业立即启动，则你可以预先创建池，并使其节点在提交作业之前可用。在此情况下，作业任务可以立即启动，但节点可能会保持空闲状态以等待分配任务。</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>通常用于处理可变但持续存在的负载的组合方法是创建一个池用于容纳提交的多个作业，但同时根据作业负载向上或向下缩放节点数目（请参阅下面的<bpt id="p1">*</bpt>缩放应用程序<ept id="p1">*</ept>）。可以根据当前负载被动执行此操作，或者在负载可预测时主动执行此操作。</source>
          <target state="new">通常用于处理可变但持续存在的负载的组合方法是创建一个池用于容纳提交的多个作业，但同时根据作业负载向上或向下缩放节点数目（请参阅下面的<bpt id="p1">*</bpt>缩放应用程序<ept id="p1">*</ept>）。可以根据当前负载被动执行此操作，或者在负载可预测时主动执行此操作。</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="scaling"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>缩放应用程序</source>
          <target state="new"><ph id="ph1">&lt;a name="scaling"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>缩放应用程序</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>通过<bpt id="p1">[</bpt>自动缩放<ept id="p1">](/documentation/articles/batch-automatic-scaling)</ept>，你的应用程序可以轻松地自动放大或缩小，以配合所需的计算。你可以根据当前的工作负荷和资源用量统计信息动态调整池中的节点数，以便只使用所需的资源来降低运行应用程序的总体成本。你可以在创建池时指定缩放设置，也可以随时更新配置。</source>
          <target state="new">通过<bpt id="p1">[</bpt>自动缩放<ept id="p1">](/documentation/articles/batch-automatic-scaling)</ept>，你的应用程序可以轻松地自动放大或缩小，以配合所需的计算。你可以根据当前的工作负荷和资源用量统计信息动态调整池中的节点数，以便只使用所需的资源来降低运行应用程序的总体成本。你可以在创建池时指定缩放设置，也可以随时更新配置。</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>在自动减少节点数目时，必须考虑当前正在运行的任务。指定一个取消分配策略用于确定正在运行的任务是否已停止，以立即删除节点，立即在删除节点之前是否允许任务完成。在作业结束时将节点的目标数目设置为零但允许运行中的任务完成可以最大程度地提高利用率。</source>
          <target state="new">在自动减少节点数目时，必须考虑当前正在运行的任务。指定一个取消分配策略用于确定正在运行的任务是否已停止，以立即删除节点，立即在删除节点之前是否允许任务完成。在作业结束时将节点的目标数目设置为零但允许运行中的任务完成可以最大程度地提高利用率。</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>可以通过指定一组缩放公式来实现应用程序自动缩放。这些公式用于确定在下一个缩放间隔内，池中的节点数目。例如，也许某个作业需要提交大量计划执行的任务。你可以将缩放公式分配到池，以根据当前的挂起任务数和这些任务的完成率来调整池的大小（节点数目）。批处理 ( Batch ) 服务将定期评估公式，并根据工作负荷来调整池的大小。</source>
          <target state="new">可以通过指定一组缩放公式来实现应用程序自动缩放。这些公式用于确定在下一个缩放间隔内，池中的节点数目。例如，也许某个作业需要提交大量计划执行的任务。你可以将缩放公式分配到池，以根据当前的挂起任务数和这些任务的完成率来调整池的大小（节点数目）。批处理 ( Batch ) 服务将定期评估公式，并根据工作负荷来调整池的大小。</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>缩放公式可以基于以下度量值：</source>
          <target state="new">缩放公式可以基于以下度量值：</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>时间度量值<ept id="p1">**</ept> - 根据指定的时数内每隔五分钟收集的统计信息。</source>
          <target state="new"><bpt id="p1">**</bpt>时间度量值<ept id="p1">**</ept> - 根据指定的时数内每隔五分钟收集的统计信息。</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>资源度量值<ept id="p1">**</ept> - 根据 CPU 使用率、带宽使用率、内存使用率和节点的数目。</source>
          <target state="new"><bpt id="p1">**</bpt>资源度量值<ept id="p1">**</ept> - 根据 CPU 使用率、带宽使用率、内存使用率和节点的数目。</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>任务度量值<ept id="p1">**</ept> - 根据任务的状态，例如“活动”、“挂起”和“已完成”。</source>
          <target state="new"><bpt id="p1">**</bpt>任务度量值<ept id="p1">**</ept> - 根据任务的状态，例如“活动”、“挂起”和“已完成”。</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>有关自动缩放应用程序的详细信息，请参阅<bpt id="p1">[</bpt>自动缩放 Azure 批处理 ( Batch ) 池中的计算节点<ept id="p1">](/documentation/articles/batch-automatic-scaling)</ept>。</source>
          <target state="new">有关自动缩放应用程序的详细信息，请参阅<bpt id="p1">[</bpt>自动缩放 Azure 批处理 ( Batch ) 池中的计算节点<ept id="p1">](/documentation/articles/batch-automatic-scaling)</ept>。</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph>虽然通常不需要这样做，但你可以指定要从池中删除的单个节点。例如，如果怀疑某个节点不太可靠，则可以从池中删除该节点，以防止向它分配其他任务。</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph>虽然通常不需要这样做，但你可以指定要从池中删除的单个节点。例如，如果怀疑某个节点不太可靠，则可以从池中删除该节点，以防止向它分配其他任务。</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="cert"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>证书的安全性</source>
          <target state="new"><ph id="ph1">&lt;a name="cert"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>证书的安全性</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>在加密或解密任务的敏感信息（例如 <bpt id="p1">[</bpt>Azure 存储帐户<ept id="p1">][azure_storage]</ept>的密钥）时，通常需要使用证书。为此，可以在节点上安装证书。加密的机密通过命令行参数或内嵌在某个任务资源中来传递给任务，已安装的证书可用于解密机密。</source>
          <target state="new">在加密或解密任务的敏感信息（例如 <bpt id="p1">[</bpt>Azure 存储帐户<ept id="p1">][azure_storage]</ept>的密钥）时，通常需要使用证书。为此，可以在节点上安装证书。加密的机密通过命令行参数或内嵌在某个任务资源中来传递给任务，已安装的证书可用于解密机密。</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>可以使用<bpt id="p1">[</bpt>添加证书<ept id="p1">][rest_add_cert]</ept>操作 (批处理 ( Batch ) REST API) 或 <bpt id="p2">[</bpt>CertificateOperations.CreateCertificate<ept id="p2">][net_create_cert]</ept> 方法 (批处理 ( Batch ) .NET API) 将证书添加到批处理 ( Batch ) 帐户。然后，可以将该证书与新的或现有的池相关联。将证书与池关联后，Batch 服务将在池中的每个节点上安装该证书。在启动节点之后、启动任何任务（包括启动任务和作业管理器任务）之前，Batch 服务将安装相应的证书。</source>
          <target state="new">可以使用<bpt id="p1">[</bpt>添加证书<ept id="p1">][rest_add_cert]</ept>操作 (批处理 ( Batch ) REST API) 或 <bpt id="p2">[</bpt>CertificateOperations.CreateCertificate<ept id="p2">][net_create_cert]</ept> 方法 (批处理 ( Batch ) .NET API) 将证书添加到批处理 ( Batch ) 帐户。然后，可以将该证书与新的或现有的池相关联。将证书与池关联后，Batch 服务将在池中的每个节点上安装该证书。在启动节点之后、启动任何任务（包括启动任务和作业管理器任务）之前，Batch 服务将安装相应的证书。</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="scheduling"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>计划优先级</source>
          <target state="new"><ph id="ph1">&lt;a name="scheduling"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>计划优先级</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>可以向你在批处理 ( Batch ) 中创建的作业分配优先级。批处理 ( Batch ) 服务使用作业的优先级值来确定帐户中的作业计划顺序。优先级值的范围为 -1000 到 1000，-1000 表示最低优先级，1000 表示最高优先级。可以使用<bpt id="p1">[</bpt>更新作业的属性<ept id="p1">][rest_update_job]</ept>操作 (批处理( Batch ) REST API) 或通过修改 <bpt id="p2">[</bpt>CloudJob.Priority<ept id="p2">][net_cloudjob_priority]</ept> 属性 (批处理 ( Batch ) .NET API) 来更新作业的优先级。</source>
          <target state="new">可以向你在批处理 ( Batch ) 中创建的作业分配优先级。批处理 ( Batch ) 服务使用作业的优先级值来确定帐户中的作业计划顺序。优先级值的范围为 -1000 到 1000，-1000 表示最低优先级，1000 表示最高优先级。可以使用<bpt id="p1">[</bpt>更新作业的属性<ept id="p1">][rest_update_job]</ept>操作 (批处理( Batch ) REST API) 或通过修改 <bpt id="p2">[</bpt>CloudJob.Priority<ept id="p2">][net_cloudjob_priority]</ept> 属性 (批处理 ( Batch ) .NET API) 来更新作业的优先级。</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>在同一个帐户内，高优先级作业的计划优先顺序高于低优先级作业。一个帐户中具有较高优先级值的作业，其计划优先级并不高于不同帐户中较低优先级值的另一个作业。</source>
          <target state="new">在同一个帐户内，高优先级作业的计划优先顺序高于低优先级作业。一个帐户中具有较高优先级值的作业，其计划优先级并不高于不同帐户中较低优先级值的另一个作业。</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>不同池的作业计划是独立的。在不同的池之间，即使作业的优先级较高，如果其关联的池缺少空闲的节点，则不保证此作业优先计划。在同一个池中，相同优先级的作业有相同的计划机会。</source>
          <target state="new">不同池的作业计划是独立的。在不同的池之间，即使作业的优先级较高，如果其关联的池缺少空闲的节点，则不保证此作业优先计划。在同一个池中，相同优先级的作业有相同的计划机会。</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="environment"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>任务的环境设置</source>
          <target state="new"><ph id="ph1">&lt;a name="environment"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>任务的环境设置</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>在批处理 ( Batch ) 作业中执行的每个任务可以访问由批处理 ( Batch ) 服务设置的环境变量（系统定义的环境变量，请参阅下表）以及用户定义的环境变量。任务在计算节点上运行的应用程序和脚本可以在节点上执行期间访问这些环境变量。</source>
          <target state="new">在批处理 ( Batch ) 作业中执行的每个任务可以访问由批处理 ( Batch ) 服务设置的环境变量（系统定义的环境变量，请参阅下表）以及用户定义的环境变量。任务在计算节点上运行的应用程序和脚本可以在节点上执行期间访问这些环境变量。</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>可以在使用<bpt id="p1">[</bpt>将任务添加到作业<ept id="p1">][rest_add_task]</ept>操作 ( 批处理( Batch ) REST API) 时设置用户定义的环境变量，或者在将任务添加到作业时通过修改 <bpt id="p2">[</bpt>CloudTask.EnvironmentSettings<ept id="p2">][net_cloudtask_env]</ept> 属性(批处理 ( Batch ) .NET API) 进行这项设置。</source>
          <target state="new">可以在使用<bpt id="p1">[</bpt>将任务添加到作业<ept id="p1">][rest_add_task]</ept>操作 ( 批处理( Batch ) REST API) 时设置用户定义的环境变量，或者在将任务添加到作业时通过修改 <bpt id="p2">[</bpt>CloudTask.EnvironmentSettings<ept id="p2">][net_cloudtask_env]</ept> 属性(批处理 ( Batch ) .NET API) 进行这项设置。</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>使用<bpt id="p1">[</bpt>获取有关任务的信息<ept id="p1">][rest_get_task_info]</ept>操作 (Batch REST API) 或通过访问 <bpt id="p2">[</bpt>CloudTask.EnvironmentSettings<ept id="p2">][net_cloudtask_env]</ept> 属性 (批处理( Batch ) .NET API)，来获取任务的环境变量（系统定义的和用户定义的环境变量）。如前所述，在计算节点上执行的进程也可以访问所有环境变量，例如，通过使用你所熟悉的 <ph id="ph1">`%VARIABLE_NAME%`</ph> 语法来访问。</source>
          <target state="new">使用<bpt id="p1">[</bpt>获取有关任务的信息<ept id="p1">][rest_get_task_info]</ept>操作 (Batch REST API) 或通过访问 <bpt id="p2">[</bpt>CloudTask.EnvironmentSettings<ept id="p2">][net_cloudtask_env]</ept> 属性 (批处理( Batch ) .NET API)，来获取任务的环境变量（系统定义的和用户定义的环境变量）。如前所述，在计算节点上执行的进程也可以访问所有环境变量，例如，通过使用你所熟悉的 <ph id="ph1">`%VARIABLE_NAME%`</ph> 语法来访问。</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>对于在作业中计划的每项任务，批处理 ( Batch ) 服务将设置以下系统定义的环境变量集：</source>
          <target state="new">对于在作业中计划的每项任务，批处理 ( Batch ) 服务将设置以下系统定义的环境变量集：</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>环境变量名称</source>
          <target state="new">环境变量名称</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>任务所属的帐户名。</source>
          <target state="new">任务所属的帐户名。</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>任务所属的作业的 ID。</source>
          <target state="new">任务所属的作业的 ID。</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>节点上的作业准备任务目录的完整路径。</source>
          <target state="new">节点上的作业准备任务目录的完整路径。</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>节点上的作业准备任务工作目录的完整路径。</source>
          <target state="new">节点上的作业准备任务工作目录的完整路径。</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>运行任务的节点的 ID。</source>
          <target state="new">运行任务的节点的 ID。</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>节点上的根目录的完整路径。</source>
          <target state="new">节点上的根目录的完整路径。</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>节点上的共享目录的完整路径。</source>
          <target state="new">节点上的共享目录的完整路径。</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>节点上的计算节点启动任务目录的完整路径。</source>
          <target state="new">节点上的计算节点启动任务目录的完整路径。</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>运行任务的池的 ID。</source>
          <target state="new">运行任务的池的 ID。</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>节点上的任务目录的完整路径。</source>
          <target state="new">节点上的任务目录的完整路径。</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>当前任务的 ID。</source>
          <target state="new">当前任务的 ID。</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>节点上的任务工作目录的完整路径。</source>
          <target state="new">节点上的任务工作目录的完整路径。</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>无法覆盖上述任何系统定义的变量 - 它们是只读的。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>无法覆盖上述任何系统定义的变量 - 它们是只读的。</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="errorhandling"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>错误处理</source>
          <target state="new"><ph id="ph1">&lt;a name="errorhandling"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>错误处理</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>有时你可能需要处理批处理( Batch ) 解决方案中的任务和应用程序失败。</source>
          <target state="new">有时你可能需要处理批处理( Batch ) 解决方案中的任务和应用程序失败。</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>任务失败处理</source>
          <target state="new">任务失败处理</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>任务失败划分为以下类别：</source>
          <target state="new">任务失败划分为以下类别：</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>计划失败</source>
          <target state="new">计划失败</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>如果为任务指定的文件传输出于任何原因失败，将为该任务设置“计划错误”。</source>
          <target state="new">如果为任务指定的文件传输出于任何原因失败，将为该任务设置“计划错误”。</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>计划错误的原因可能是文件已移动、存储帐户不再可用，或者发生其他使文件无法成功复制到节点的问题。</source>
          <target state="new">计划错误的原因可能是文件已移动、存储帐户不再可用，或者发生其他使文件无法成功复制到节点的问题。</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>应用程序失败</source>
          <target state="new">应用程序失败</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>任务命令行指定的进程也可能会失败。如果任务执行的进程返回非零退出代码，则将该进程视为失败。</source>
          <target state="new">任务命令行指定的进程也可能会失败。如果任务执行的进程返回非零退出代码，则将该进程视为失败。</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>对于应用程序失败，可以将批处理 ( Batch ) 配置为自动重试任务，并最多重试指定的次数。</source>
          <target state="new">对于应用程序失败，可以将批处理 ( Batch ) 配置为自动重试任务，并最多重试指定的次数。</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>约束失败</source>
          <target state="new">约束失败</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>可以设置一个约束来指定作业或任务的最大执行持续期间，即 <bpt id="p1">*</bpt>maxWallClockTime<ept id="p1">*</ept>。此约束可用于终止“挂起的”任务。</source>
          <target state="new">可以设置一个约束来指定作业或任务的最大执行持续期间，即 <bpt id="p1">*</bpt>maxWallClockTime<ept id="p1">*</ept>。此约束可用于终止“挂起的”任务。</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>如果超出了最长时间，则将任务标记为<bpt id="p1">*</bpt>已完成<ept id="p1">*</ept>，但退出代码将设置为 <ph id="ph1">`0xC000013A`</ph>，<bpt id="p2">*</bpt>schedulingError<ept id="p2">*</ept> 字段将标记为 <ph id="ph2">`{ category:"ServerError", code="TaskEnded"}`</ph>。</source>
          <target state="new">如果超出了最长时间，则将任务标记为<bpt id="p1">*</bpt>已完成<ept id="p1">*</ept>，但退出代码将设置为 <ph id="ph1">`0xC000013A`</ph>，<bpt id="p2">*</bpt>schedulingError<ept id="p2">*</ept> 字段将标记为 <ph id="ph2">`{ category:"ServerError", code="TaskEnded"}`</ph>。</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>调试应用程序失败</source>
          <target state="new">调试应用程序失败</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>在执行过程中，应用程序可以生成诊断输出，这些信息可用于排查问题。如前面的<bpt id="p1">[</bpt>文件和目录<ept id="p1">](#files)</ept>中所述，批处理( Batch ) 服务会将 stdout 和 stderr 输出发送到计算节点上的任务目录中的 <ph id="ph1">`stdout.txt`</ph> 和 <ph id="ph2">`stderr.txt`</ph> 文件。在批处理( Batch ) .NET API 中使用 <bpt id="p2">[</bpt>ComputeNode.GetNodeFile<ept id="p2">][net_getfile_node]</ept> 和 <bpt id="p3">[</bpt>CloudTask.GetNodeFile<ept id="p3">][net_getfile_task]</ept>，可以检索这些文件和其他文件来进行故障排除。</source>
          <target state="new">在执行过程中，应用程序可以生成诊断输出，这些信息可用于排查问题。如前面的<bpt id="p1">[</bpt>文件和目录<ept id="p1">](#files)</ept>中所述，批处理( Batch ) 服务会将 stdout 和 stderr 输出发送到计算节点上的任务目录中的 <ph id="ph1">`stdout.txt`</ph> 和 <ph id="ph2">`stderr.txt`</ph> 文件。在批处理( Batch ) .NET API 中使用 <bpt id="p2">[</bpt>ComputeNode.GetNodeFile<ept id="p2">][net_getfile_node]</ept> 和 <bpt id="p3">[</bpt>CloudTask.GetNodeFile<ept id="p3">][net_getfile_task]</ept>，可以检索这些文件和其他文件来进行故障排除。</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>使用<bpt id="p1">*</bpt>远程桌面<ept id="p1">*</ept>登录到计算节点后，可以执行更广泛的调试。你可以<bpt id="p2">[</bpt>从节点获取远程桌面协议文件<ept id="p2">][rest_rdp]</ept> (批处理( Batch ) REST API) 或使用 <bpt id="p3">[</bpt>ComputeNode.GetRDPFile<ept id="p3">][net_rdp]</ept> 方法 (批处理 ( Batch ) .NET API) 来进行远程登录。</source>
          <target state="new">使用<bpt id="p1">*</bpt>远程桌面<ept id="p1">*</ept>登录到计算节点后，可以执行更广泛的调试。你可以<bpt id="p2">[</bpt>从节点获取远程桌面协议文件<ept id="p2">][rest_rdp]</ept> (批处理( Batch ) REST API) 或使用 <bpt id="p3">[</bpt>ComputeNode.GetRDPFile<ept id="p3">][net_rdp]</ept> 方法 (批处理 ( Batch ) .NET API) 来进行远程登录。</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>若要通过 RDP 连接到某个节点，必须先在该节点上创建一个用户。在 Batch REST API 中<bpt id="p1">[</bpt>将用户帐户添加到节点<ept id="p1">][rest_create_user]</ept>，或使用批处理( Batch ) .NET 中的 <bpt id="p2">[</bpt>ComputeNode.CreateComputeNodeUser<ept id="p2">][net_create_user]</ept> 方法。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>若要通过 RDP 连接到某个节点，必须先在该节点上创建一个用户。在 Batch REST API 中<bpt id="p1">[</bpt>将用户帐户添加到节点<ept id="p1">][rest_create_user]</ept>，或使用批处理( Batch ) .NET 中的 <bpt id="p2">[</bpt>ComputeNode.CreateComputeNodeUser<ept id="p2">][net_create_user]</ept> 方法。</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>应对任务失败或中断</source>
          <target state="new">应对任务失败或中断</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>任务偶尔会失败或中断。任务应用程序本身可能会失败，运行任务的节点可能会重新启动，或者在调整大小操作期间，可能会因为池的取消分配策略设置为在不等待任务完成的情况下立即删除节点，而从池中删除节点。在所有情况下，任务都可以由批处理 ( Batch ) 自动排队，并在另一个节点上执行。</source>
          <target state="new">任务偶尔会失败或中断。任务应用程序本身可能会失败，运行任务的节点可能会重新启动，或者在调整大小操作期间，可能会因为池的取消分配策略设置为在不等待任务完成的情况下立即删除节点，而从池中删除节点。在所有情况下，任务都可以由批处理 ( Batch ) 自动排队，并在另一个节点上执行。</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>间歇性的问题也有可能会导致任务挂起，或者花费很长时间才能完成执行。可为任务设置最长执行时间，如果超过此时间，批处理 ( Batch ) 会中断任务应用程序。</source>
          <target state="new">间歇性的问题也有可能会导致任务挂起，或者花费很长时间才能完成执行。可为任务设置最长执行时间，如果超过此时间，批处理 ( Batch ) 会中断任务应用程序。</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>应对“可疑的”节点</source>
          <target state="new">应对“可疑的”节点</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>池中的每个节点都有一个唯一 ID，运行任务的节点包含在任务元数据中。如果任务在特定的节点上失败，批处理 ( Batch ) 客户端应用程序可以检测到这种情况，并从池中删除可疑的节点。如果在删除节点时该节点上有任何正在运行的任务，则这些任务将自动重新排队，以便在其他节点上执行。</source>
          <target state="new">池中的每个节点都有一个唯一 ID，运行任务的节点包含在任务元数据中。如果任务在特定的节点上失败，批处理 ( Batch ) 客户端应用程序可以检测到这种情况，并从池中删除可疑的节点。如果在删除节点时该节点上有任何正在运行的任务，则这些任务将自动重新排队，以便在其他节点上执行。</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>根据<bpt id="p1">[</bpt>适用于 .NET 的 Azure 批处理 ( Batch ) 库入门<ept id="p1">](/documentation/articles/batch-dotnet-get-started)</ept>中的步骤创建第一个批处理 ( Batch ) 应用程序</source>
          <target state="new">根据<bpt id="p1">[</bpt>适用于 .NET 的 Azure 批处理 ( Batch ) 库入门<ept id="p1">](/documentation/articles/batch-dotnet-get-started)</ept>中的步骤创建第一个批处理 ( Batch ) 应用程序</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>下载并构建 <bpt id="p1">[</bpt>批处理( Batch ) 资源管理器<ept id="p1">][batch_explorer_project]</ept>示例项目，以便在开发批处理 ( Batch ) 解决方案时使用。使用批处理( Batch ) 资源管理器可以执行以下和其他操作：</source>
          <target state="new">下载并构建 <bpt id="p1">[</bpt>批处理( Batch ) 资源管理器<ept id="p1">][batch_explorer_project]</ept>示例项目，以便在开发批处理 ( Batch ) 解决方案时使用。使用批处理( Batch ) 资源管理器可以执行以下和其他操作：</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>监视和管理批处理 ( Batch ) 帐户中的池、作业与任务</source>
          <target state="new">监视和管理批处理 ( Batch ) 帐户中的池、作业与任务</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>从节点下载 <ph id="ph1">`stdout.txt`</ph>、<ph id="ph2">`stderr.txt`</ph> 和其他文件</source>
          <target state="new">从节点下载 <ph id="ph1">`stdout.txt`</ph>、<ph id="ph2">`stderr.txt`</ph> 和其他文件</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>在节点上创建用户，并下载用于远程登录的 RDP 文件</source>
          <target state="new">在节点上创建用户，并下载用于远程登录的 RDP 文件</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>