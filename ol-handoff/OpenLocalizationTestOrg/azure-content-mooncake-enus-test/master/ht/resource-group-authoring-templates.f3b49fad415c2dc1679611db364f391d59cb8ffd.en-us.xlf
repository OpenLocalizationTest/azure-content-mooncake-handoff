<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dbee568fa31e806673e55eb069bc4563630792a2</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>创作 Azure 资源管理器模板</source>
          <target state="new">创作 Azure 资源管理器模板</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>使用声明性 JSON 语法创建 Azure 资源管理器模板，以将应用程序部署到 Azure。</source>
          <target state="new">使用声明性 JSON 语法创建 Azure 资源管理器模板，以将应用程序部署到 Azure。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>创作 Azure 资源管理器模板</source>
          <target state="new">创作 Azure 资源管理器模板</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Azure 应用程序通常需要多种资源的组合（例如数据库服务器、数据库或 Web 应用）来达到所需的目标。你无需单独部署和管理每个资源，而可以创建一个 Azure 资源管理器模板，以单个协调操作为应用程序部署和设置所有资源。在模板中，定义应用程序所需的资源，并指定部署参数以针对不同的环境输入值。模板中包含可用于构造部署值的 JSON 和表达式。</source>
          <target state="new">Azure 应用程序通常需要多种资源的组合（例如数据库服务器、数据库或 Web 应用）来达到所需的目标。你无需单独部署和管理每个资源，而可以创建一个 Azure 资源管理器模板，以单个协调操作为应用程序部署和设置所有资源。在模板中，定义应用程序所需的资源，并指定部署参数以针对不同的环境输入值。模板中包含可用于构造部署值的 JSON 和表达式。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>本主题介绍了该模板的部分。对于实际的架构，请参阅 <bpt id="p1">[</bpt>Azure 资源管理器架构<ept id="p1">](https://github.com/Azure/azure-resource-manager-schemas)</ept>。</source>
          <target state="new">本主题介绍了该模板的部分。对于实际的架构，请参阅 <bpt id="p1">[</bpt>Azure 资源管理器架构<ept id="p1">](https://github.com/Azure/azure-resource-manager-schemas)</ept>。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>您必须将您的模版大小限制为 1 MB 以内，每个参数文件大小限制为 64 KB 以内。已完成对迭代资源定义和变量值和参数值的扩展后，1 MB 的限制将适用于该模板的最终状态。</source>
          <target state="new">您必须将您的模版大小限制为 1 MB 以内，每个参数文件大小限制为 64 KB 以内。已完成对迭代资源定义和变量值和参数值的扩展后，1 MB 的限制将适用于该模板的最终状态。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>模板格式</source>
          <target state="new">模板格式</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>以下示例演示了构成模板基本结构的各个节。</source>
          <target state="new">以下示例演示了构成模板基本结构的各个节。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>元素名称</source>
          <target state="new">元素名称</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>$schema</source>
          <target state="new">$schema</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>描述模板语言版本的 JSON 架构文件所在的位置。</source>
          <target state="new">描述模板语言版本的 JSON 架构文件所在的位置。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>contentVersion</source>
          <target state="new">contentVersion</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>模板的版本（例如 1.0.0.0）。使用模板部署资源时，此值可用于确保使用正确的模板。</source>
          <target state="new">模板的版本（例如 1.0.0.0）。使用模板部署资源时，此值可用于确保使用正确的模板。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>执行部署以自定义资源部署时提供的值。</source>
          <target state="new">执行部署以自定义资源部署时提供的值。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>variables</source>
          <target state="new">variables</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>在模板中用作 JSON 片段以简化模板语言表达式的值。</source>
          <target state="new">在模板中用作 JSON 片段以简化模板语言表达式的值。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>资源</source>
          <target state="new">资源</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>已在资源组中部署或更新的服务类型。</source>
          <target state="new">已在资源组中部署或更新的服务类型。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>outputs</source>
          <target state="new">outputs</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>部署后返回的值。</source>
          <target state="new">部署后返回的值。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>本主题稍后将更详细地介绍模板的各个节。现在，我们将回顾构成模板的某些语法。</source>
          <target state="new">本主题稍后将更详细地介绍模板的各个节。现在，我们将回顾构成模板的某些语法。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>表达式和函数</source>
          <target state="new">表达式和函数</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>模板的基本语法为 JSON；但是，表达式和函数扩展了模板中提供的 JSON，使你能够创建严格意义上不是文本值的值。表达式括在方括号（[ 和 ]）中，并在部署模板时进行求值。表达式可以出现在 JSON 字符串值中的任何位置，并始终返回另一个 JSON 值。如果需要使用以方括号 [ 开头的文本字符串，则必须使用两个方括号 [[。</source>
          <target state="new">模板的基本语法为 JSON；但是，表达式和函数扩展了模板中提供的 JSON，使你能够创建严格意义上不是文本值的值。表达式括在方括号（[ 和 ]）中，并在部署模板时进行求值。表达式可以出现在 JSON 字符串值中的任何位置，并始终返回另一个 JSON 值。如果需要使用以方括号 [ 开头的文本字符串，则必须使用两个方括号 [[。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>通常，你会将表达式与函数一起使用，以执行用于配置部署的操作。如同在 JavaScript 中一样，函数调用的格式为 <bpt id="p1">**</bpt>functionName(arg1,arg2,arg3)<ept id="p1">**</ept>。使用点和 [index] 运算符引用属性。</source>
          <target state="new">通常，你会将表达式与函数一起使用，以执行用于配置部署的操作。如同在 JavaScript 中一样，函数调用的格式为 <bpt id="p1">**</bpt>functionName(arg1,arg2,arg3)<ept id="p1">**</ept>。使用点和 [index] 运算符引用属性。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>以下示例演示如何在构造值时使用一些函数：</source>
          <target state="new">以下示例演示如何在构造值时使用一些函数：</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>有关模板函数的完整列表，请参阅 <bpt id="p1">[</bpt>Azure 资源管理器模板函数<ept id="p1">](/documentation/articles/resource-group-template-functions)</ept>。</source>
          <target state="new">有关模板函数的完整列表，请参阅 <bpt id="p1">[</bpt>Azure 资源管理器模板函数<ept id="p1">](/documentation/articles/resource-group-template-functions)</ept>。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="new">Parameters</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>在模板的参数部分中，您可以指定用户在部署资源时能够输入的值。你可以在整个模板中使用这些参数值，来为部署的资源设置值。在模板的其他节中，只能使用 parameters 节中声明的参数。</source>
          <target state="new">在模板的参数部分中，您可以指定用户在部署资源时能够输入的值。你可以在整个模板中使用这些参数值，来为部署的资源设置值。在模板的其他节中，只能使用 parameters 节中声明的参数。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>在 parameters 节中，不能使用一个参数值来构造另一个参数值。这种类型的操作通常在 variables 节中发生。</source>
          <target state="new">在 parameters 节中，不能使用一个参数值来构造另一个参数值。这种类型的操作通常在 variables 节中发生。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>使用以下结构定义参数：</source>
          <target state="new">使用以下结构定义参数：</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>元素名称</source>
          <target state="new">元素名称</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>parameterName</source>
          <target state="new">parameterName</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>参数的名称。必须是有效的 JavaScript 标识符。</source>
          <target state="new">参数的名称。必须是有效的 JavaScript 标识符。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="new">type</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>参数值的类型。请参阅以下允许类型的列表。</source>
          <target state="new">参数值的类型。请参阅以下允许类型的列表。</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>defaultValue</source>
          <target state="new">defaultValue</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>参数的默认值，如果没有为参数提供任何值。</source>
          <target state="new">参数的默认值，如果没有为参数提供任何值。</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>allowedValues</source>
          <target state="new">allowedValues</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>用来确保提供正确值的参数的允许值数组。</source>
          <target state="new">用来确保提供正确值的参数的允许值数组。</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>minValue</source>
          <target state="new">minValue</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>int 类型参数的最小值，此值是包容性的。</source>
          <target state="new">int 类型参数的最小值，此值是包容性的。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>maxValue</source>
          <target state="new">maxValue</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>int 类型参数的最大值，此值是包容性的。</source>
          <target state="new">int 类型参数的最大值，此值是包容性的。</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>minLength</source>
          <target state="new">minLength</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>string、secureString 和 array 类型参数的最小长度，此值是包容性的。</source>
          <target state="new">string、secureString 和 array 类型参数的最小长度，此值是包容性的。</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>maxLength</source>
          <target state="new">maxLength</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>string、secureString 和 array 类型参数的最大长度，此值是包容性的。</source>
          <target state="new">string、secureString 和 array 类型参数的最大长度，此值是包容性的。</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>description</source>
          <target state="new">description</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>通过门户自定义模板界面向模板用户显示的参数描述。</source>
          <target state="new">通过门户自定义模板界面向模板用户显示的参数描述。</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>允许的类型和值是：</source>
          <target state="new">允许的类型和值是：</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>字符串或 secureString - 任何有效的 JSON 字符串</source>
          <target state="new">字符串或 secureString - 任何有效的 JSON 字符串</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>int - 任何有效的 JSON 整数</source>
          <target state="new">int - 任何有效的 JSON 整数</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>布尔值 - 任何有效的 JSON 布尔值</source>
          <target state="new">布尔值 - 任何有效的 JSON 布尔值</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>对象或 secureObject - 任何有效的 JSON 对象</source>
          <target state="new">对象或 secureObject - 任何有效的 JSON 对象</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>数组 - 任何有效的 JSON 数组</source>
          <target state="new">数组 - 任何有效的 JSON 数组</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>若要将某个参数指定为可选，请将其 defaultValue 指定为空字符串。</source>
          <target state="new">若要将某个参数指定为可选，请将其 defaultValue 指定为空字符串。</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>所有密码、密钥和其他机密信息应使用 <bpt id="p1">**</bpt>secureString<ept id="p1">**</ept> 类型。部署资源后，无法读取使用 secureString 类型的模板参数。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>所有密码、密钥和其他机密信息应使用 <bpt id="p1">**</bpt>secureString<ept id="p1">**</ept> 类型。部署资源后，无法读取使用 secureString 类型的模板参数。</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>以下示例演示如何定义参数：</source>
          <target state="new">以下示例演示如何定义参数：</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>变量</source>
          <target state="new">变量</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>在变量部分中，可构造用于简化模板语言表达式的值。通常，这些变量基于通过参数提供的值。</source>
          <target state="new">在变量部分中，可构造用于简化模板语言表达式的值。通常，这些变量基于通过参数提供的值。</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>使用以下结构定义变量：</source>
          <target state="new">使用以下结构定义变量：</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>以下示例演示如何定义从两个参数值构造出的变量：</source>
          <target state="new">以下示例演示如何定义从两个参数值构造出的变量：</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>下一个示例演示一个属于复杂的 JSON 类型的变量，以及从其他变量构造出的变量：</source>
          <target state="new">下一个示例演示一个属于复杂的 JSON 类型的变量，以及从其他变量构造出的变量：</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>资源</source>
          <target state="new">资源</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>在 resources 节，可以定义部署或更新的资源。</source>
          <target state="new">在 resources 节，可以定义部署或更新的资源。</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>使用以下结构定义资源：</source>
          <target state="new">使用以下结构定义资源：</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>元素名称</source>
          <target state="new">元素名称</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>apiVersion</source>
          <target state="new">apiVersion</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>支持该资源的 API 版本。有关资源的可用版本和架构，请参阅 <bpt id="p1">[</bpt>Azure 资源管理器架构<ept id="p1">](https://github.com/Azure/azure-resource-manager-schemas)</ept>。</source>
          <target state="new">支持该资源的 API 版本。有关资源的可用版本和架构，请参阅 <bpt id="p1">[</bpt>Azure 资源管理器架构<ept id="p1">](https://github.com/Azure/azure-resource-manager-schemas)</ept>。</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="new">type</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>资源的类型。此值是资源提供程序的命名空间以及资源提供程序支持的资源类型的组合。</source>
          <target state="new">资源的类型。此值是资源提供程序的命名空间以及资源提供程序支持的资源类型的组合。</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>name</source>
          <target state="new">name</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>资源的名称。该名称必须遵循 RFC3986 中定义的 URI 构成部分限制。</source>
          <target state="new">资源的名称。该名称必须遵循 RFC3986 中定义的 URI 构成部分限制。</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>location</source>
          <target state="new">location</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>提供的资源支持的地理位置。</source>
          <target state="new">提供的资源支持的地理位置。</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>标记</source>
          <target state="new">标记</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>与资源关联的标记。</source>
          <target state="new">与资源关联的标记。</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>注释</source>
          <target state="new">注释</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>用于描述模板中资源的注释</source>
          <target state="new">用于描述模板中资源的注释</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>dependsOn</source>
          <target state="new">dependsOn</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>正在定义的资源所依赖的资源。将会评估资源之间的依赖关系，并按资源的依赖顺序来部署资源。如果资源不相互依赖，则会尝试并行部署资源。该值可以是资源名称或资源唯一标识符的逗号分隔列表。</source>
          <target state="new">正在定义的资源所依赖的资源。将会评估资源之间的依赖关系，并按资源的依赖顺序来部署资源。如果资源不相互依赖，则会尝试并行部署资源。该值可以是资源名称或资源唯一标识符的逗号分隔列表。</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>properties</source>
          <target state="new">properties</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>特定于资源的配置设置。</source>
          <target state="new">特定于资源的配置设置。</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>资源</source>
          <target state="new">资源</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>依赖于所定义的资源的子资源。</source>
          <target state="new">依赖于所定义的资源的子资源。</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>如果资源名称不是唯一的，你可以使用 <bpt id="p1">**</bpt>resourceId<ept id="p1">**</ept> 帮助器函数（下面将会介绍）获取任何资源的唯一标识符。</source>
          <target state="new">如果资源名称不是唯一的，你可以使用 <bpt id="p1">**</bpt>resourceId<ept id="p1">**</ept> 帮助器函数（下面将会介绍）获取任何资源的唯一标识符。</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>properties<ept id="p1">**</ept> 元素的值与你在创建资源时，在 REST API 操作（PUT 方法）的请求正文中提供的值完全相同。请参阅 <bpt id="p2">[</bpt>Azure 参考<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/mt420159.aspx)</ept>，了解可对你要部署的资源执行的 REST API 操作。</source>
          <target state="new"><bpt id="p1">**</bpt>properties<ept id="p1">**</ept> 元素的值与你在创建资源时，在 REST API 操作（PUT 方法）的请求正文中提供的值完全相同。请参阅 <bpt id="p2">[</bpt>Azure 参考<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/mt420159.aspx)</ept>，了解可对你要部署的资源执行的 REST API 操作。</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>以下示例演示了 <bpt id="p1">**</bpt>Microsoft.Web/serverfarms<ept id="p1">**</ept> 资源，以及一个包含嵌套 <bpt id="p2">**</bpt>Extensions<ept id="p2">**</ept> 资源的 <bpt id="p3">**</bpt>Microsoft.Web/sites<ept id="p3">**</ept> 资源：</source>
          <target state="new">以下示例演示了 <bpt id="p1">**</bpt>Microsoft.Web/serverfarms<ept id="p1">**</ept> 资源，以及一个包含嵌套 <bpt id="p2">**</bpt>Extensions<ept id="p2">**</ept> 资源的 <bpt id="p3">**</bpt>Microsoft.Web/sites<ept id="p3">**</ept> 资源：</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Outputs</source>
          <target state="new">Outputs</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>在 Outputs 节中，可以指定从部署返回的值。例如，可能会返回用于访问已部署资源的 URI。</source>
          <target state="new">在 Outputs 节中，可以指定从部署返回的值。例如，可能会返回用于访问已部署资源的 URI。</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>以下示例演示了输出定义的结构：</source>
          <target state="new">以下示例演示了输出定义的结构：</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>元素名称</source>
          <target state="new">元素名称</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>outputName</source>
          <target state="new">outputName</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>输出值的名称。必须是有效的 JavaScript 标识符。</source>
          <target state="new">输出值的名称。必须是有效的 JavaScript 标识符。</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="new">type</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>输出值的类型。输出值支持的类型与模板输入参数相同。</source>
          <target state="new">输出值的类型。输出值支持的类型与模板输入参数相同。</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>value</source>
          <target state="new">value</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>要评估并作为输出值返回的模板语言表达式。</source>
          <target state="new">要评估并作为输出值返回的模板语言表达式。</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>以下示例演示了 Outputs 节中返回的值。</source>
          <target state="new">以下示例演示了 Outputs 节中返回的值。</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>更高级方案。</source>
          <target state="new">更高级方案。</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>本主题提供了有关模板的简介。但是，你的方案可能需要更高级的任务。</source>
          <target state="new">本主题提供了有关模板的简介。但是，你的方案可能需要更高级的任务。</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>你可能需要将两个模板合并在一起，或者在父模板中使用子模板。有关详细信息，请参阅<bpt id="p1">[</bpt>将链接的模板与 Azure 资源管理器配合使用<ept id="p1">](/documentation/articles/resource-group-linked-templates)</ept>。</source>
          <target state="new">你可能需要将两个模板合并在一起，或者在父模板中使用子模板。有关详细信息，请参阅<bpt id="p1">[</bpt>将链接的模板与 Azure 资源管理器配合使用<ept id="p1">](/documentation/articles/resource-group-linked-templates)</ept>。</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>若要在创建资源类型时迭代指定的次数，请参阅<bpt id="p1">[</bpt>在 Azure 资源管理器中创建多个资源实例<ept id="p1">](/documentation/articles/resource-group-create-multiple)</ept>。</source>
          <target state="new">若要在创建资源类型时迭代指定的次数，请参阅<bpt id="p1">[</bpt>在 Azure 资源管理器中创建多个资源实例<ept id="p1">](/documentation/articles/resource-group-create-multiple)</ept>。</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>你可能需要使用不同资源组中的资源。使用跨多个资源组共享的存储帐户或虚拟网络时，这很常见。有关详细信息，请参阅 <bpt id="p1">[</bpt>resourceId 函数<ept id="p1">](/documentation/articles/resource-group-template-functions/#resourceid)</ept>。</source>
          <target state="new">你可能需要使用不同资源组中的资源。使用跨多个资源组共享的存储帐户或虚拟网络时，这很常见。有关详细信息，请参阅 <bpt id="p1">[</bpt>resourceId 函数<ept id="p1">](/documentation/articles/resource-group-template-functions/#resourceid)</ept>。</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>完整的模板</source>
          <target state="new">完整的模板</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>以下模板将部署一个 Web 应用，并使用 .zip 文件中的代码设置该应用程序。</source>
          <target state="new">以下模板将部署一个 Web 应用，并使用 .zip 文件中的代码设置该应用程序。</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>有关你可以使用的来自模板中的函数的详细信息，请参阅 <bpt id="p1">[</bpt>Azure 资源管理器模板函数<ept id="p1">](/documentation/articles/resource-group-template-functions)</ept></source>
          <target state="new">有关你可以使用的来自模板中的函数的详细信息，请参阅 <bpt id="p1">[</bpt>Azure 资源管理器模板函数<ept id="p1">](/documentation/articles/resource-group-template-functions)</ept></target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>若要查看如何部署已创建的模板，请参阅<bpt id="p1">[</bpt>使用 Azure 资源管理器模板部署应用程序<ept id="p1">](/documentation/articles/resource-group-template-deploy)</ept></source>
          <target state="new">若要查看如何部署已创建的模板，请参阅<bpt id="p1">[</bpt>使用 Azure 资源管理器模板部署应用程序<ept id="p1">](/documentation/articles/resource-group-template-deploy)</ept></target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>若要查看可用架构，请参阅 <bpt id="p1">[</bpt>Azure 资源管理器架构<ept id="p1">](https://github.com/Azure/azure-resource-manager-schemas)</ept></source>
          <target state="new">若要查看可用架构，请参阅 <bpt id="p1">[</bpt>Azure 资源管理器架构<ept id="p1">](https://github.com/Azure/azure-resource-manager-schemas)</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>