<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1d8a9076eb169dcb95f99ec2c7a5b19e5ea4e0d</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>在源代码管理中存储 .NET 后端项目代码 | Azure 移动服务</source>
          <target state="new">在源代码管理中存储 .NET 后端项目代码 | Azure 移动服务</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何将 .NET 后端项目存储在计算机上的本地 Git 存储库中并从中发布。</source>
          <target state="new">了解如何将 .NET 后端项目存储在计算机上的本地 Git 存储库中并从中发布。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>在源代码管理中存储移动服务项目代码</source>
          <target state="new">在源代码管理中存储移动服务项目代码</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;</source>
          <target state="new">&amp;nbsp;</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>[AZURE.SELECTOR]</source>
          <target state="new">[AZURE.SELECTOR]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>.NET backend</source>
          <target state="new">.NET backend</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Javascript backend</source>
          <target state="new">Javascript backend</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>本主题说明如何使用 Azure 移动服务提供的源代码管理存储 .NET 后端服务项目。只需将项目从本地 Git 存储库上载到生产移动服务，便可以发布该项目。</source>
          <target state="new">本主题说明如何使用 Azure 移动服务提供的源代码管理存储 .NET 后端服务项目。只需将项目从本地 Git 存储库上载到生产移动服务，便可以发布该项目。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>若要完成本教程，你必须事先参考<bpt id="p1">[</bpt><ept id="p1">移动服务入门]</ept>教程创建一个移动服务。</source>
          <target state="new">若要完成本教程，你必须事先参考<bpt id="p1">[</bpt><ept id="p1">移动服务入门]</ept>教程创建一个移动服务。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="enable-source-control"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>在移动服务中启用源代码管理</source>
          <target state="new"><ph id="ph1">&lt;a name="enable-source-control"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>在移动服务中启用源代码管理</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="clone-repo"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>安装 Git 并创建本地存储库</source>
          <target state="new"><ph id="ph1">&lt;a name="clone-repo"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>安装 Git 并创建本地存储库</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>在本地计算机上安装 Git。</source>
          <target state="new">在本地计算机上安装 Git。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>安装 Git 所需的步骤因操作系统的不同而异。有关操作系统特定的分发和安装指南，请参阅<bpt id="p1">[</bpt><ept id="p1">安装 Git]</ept>。</source>
          <target state="new">安装 Git 所需的步骤因操作系统的不同而异。有关操作系统特定的分发和安装指南，请参阅<bpt id="p1">[</bpt><ept id="p1">安装 Git]</ept>。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>在某些操作系统上，命令行和 GUI 版本的 Git 都可用。本文中提供的说明使用命令行版本。</source>
          <target state="new">在某些操作系统上，命令行和 GUI 版本的 Git 都可用。本文中提供的说明使用命令行版本。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>打开一个命令行，例如 <bpt id="p1">**</bpt>GitBash<ept id="p1">**</ept> (Windows) 或 <bpt id="p2">**</bpt>Bash<ept id="p2">**</ept> (Unix Shell)。在 OS X 系统上，可以通过 <bpt id="p3">**</bpt>Terminal<ept id="p3">**</ept> 应用程序访问命令行。</source>
          <target state="new">打开一个命令行，例如 <bpt id="p1">**</bpt>GitBash<ept id="p1">**</ept> (Windows) 或 <bpt id="p2">**</bpt>Bash<ept id="p2">**</ept> (Unix Shell)。在 OS X 系统上，可以通过 <bpt id="p3">**</bpt>Terminal<ept id="p3">**</ept> 应用程序访问命令行。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>在命令行中，切换到要在其中存储脚本的目录。例如，<ph id="ph1">`cd SourceControl`</ph>。</source>
          <target state="new">在命令行中，切换到要在其中存储脚本的目录。例如，<ph id="ph1">`cd SourceControl`</ph>。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>使用以下命令创建新 Git 存储库的本地副本，并将 <ph id="ph1">`&lt;your_git_URL&gt;`</ph> 替换为移动服务的 Git 存储库的 URL：</source>
          <target state="new">使用以下命令创建新 Git 存储库的本地副本，并将 <ph id="ph1">`&lt;your_git_URL&gt;`</ph> 替换为移动服务的 Git 存储库的 URL：</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>出现提示时，请键入你在移动服务中启用源代码管理时设置的用户名和密码。身份验证成功后，你将看到类似于下面的一系列响应：</source>
          <target state="new">出现提示时，请键入你在移动服务中启用源代码管理时设置的用户名和密码。身份验证成功后，你将看到类似于下面的一系列响应：</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>浏览到你从中运行了 <ph id="ph1">`git clone`</ph> 命令的目录，可以发现，已创建了一个与移动服务同名的新目录。对于 .NET 后端移动服务，git 存储库最初是空的。</source>
          <target state="new">浏览到你从中运行了 <ph id="ph1">`git clone`</ph> 命令的目录，可以发现，已创建了一个与移动服务同名的新目录。对于 .NET 后端移动服务，git 存储库最初是空的。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>创建本地存储库后，可以从此存储库发布 .NET 后端服务项目。</source>
          <target state="new">创建本地存储库后，可以从此存储库发布 .NET 后端服务项目。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="deploy-scripts"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>使用 Git 发布项目</source>
          <target state="new"><ph id="ph1">&lt;a name="deploy-scripts"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>使用 Git 发布项目</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 2013 中创建新的 .NET 后端移动服务项目，或者将现有项目移到新本地存储库。</source>
          <target state="new">在 Visual Studio 2013 中创建新的 .NET 后端移动服务项目，或者将现有项目移到新本地存储库。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>为了进行快速测试，请下载移动服务快速入门项目并将其保存到此文件夹。</source>
          <target state="new">为了进行快速测试，请下载移动服务快速入门项目并将其保存到此文件夹。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>删除所有 NuGet 包文件夹，只保留 packages.config 文件。</source>
          <target state="new">删除所有 NuGet 包文件夹，只保留 packages.config 文件。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>移动服务将基于 packages.confign 文件自动还原 NuGet 包。你还可以定义一个 .gitignore 文件，以防止添加包目录。</source>
          <target state="new">移动服务将基于 packages.confign 文件自动还原 NuGet 包。你还可以定义一个 .gitignore 文件，以防止添加包目录。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>在 Git 命令提示符下，键入以下命令以开始跟踪新脚本文件：</source>
          <target state="new">在 Git 命令提示符下，键入以下命令以开始跟踪新脚本文件：</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>键入以下命令以提交更改：</source>
          <target state="new">键入以下命令以提交更改：</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>键入以下命令以将更改上载到远程存储库，并提供你的凭据：</source>
          <target state="new">键入以下命令以将更改上载到远程存储库，并提供你的凭据：</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>你应会看到一系列命令，它们指示已将项目部署到移动服务、已添加包，并且已重新启动服务。</source>
          <target state="new">你应会看到一系列命令，它们指示已将项目部署到移动服务、已添加包，并且已重新启动服务。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>浏览到 .NET 后端移动服务的 URL，你应会看到：</source>
          <target state="new">浏览到 .NET 后端移动服务的 URL，你应会看到：</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>移动服务启动页</source>
          <target state="new">移动服务启动页</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>现在，你的移动服务项目已保留在源代码管理中，你只需从本地存储库推送更新，便可以发布服务更新。有关在使用 SQL 数据库的 .NET 后端移动服务中进行数据模型更改的信息，请参阅<bpt id="p1">[</bpt><ept id="p1">如何对 .NET 后端移动服务进行数据模型更改]</ept>。</source>
          <target state="new">现在，你的移动服务项目已保留在源代码管理中，你只需从本地存储库推送更新，便可以发布服务更新。有关在使用 SQL 数据库的 .NET 后端移动服务中进行数据模型更改的信息，请参阅<bpt id="p1">[</bpt><ept id="p1">如何对 .NET 后端移动服务进行数据模型更改]</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>