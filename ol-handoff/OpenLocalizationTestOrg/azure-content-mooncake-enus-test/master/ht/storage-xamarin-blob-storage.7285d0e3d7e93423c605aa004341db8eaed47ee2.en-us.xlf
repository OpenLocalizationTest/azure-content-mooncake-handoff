<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7b775313fcb91285024295a4e1135203b9ec738</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>如何通过 Xamarin（预览版）使用 Blob 存储 | Azure</source>
          <target state="new">如何通过 Xamarin（预览版）使用 Blob 存储 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>用于 Xamarin 的 Azure 存储客户端库预览版使开发人员能够使用其本机用户界面创建 iOS、Android 和 Windows 应用商店应用程序。本教程演示了如何通过 Xamarin 来创建使用 Azure Blob 存储的 Android 应用程序。</source>
          <target state="new">用于 Xamarin 的 Azure 存储客户端库预览版使开发人员能够使用其本机用户界面创建 iOS、Android 和 Windows 应用商店应用程序。本教程演示了如何通过 Xamarin 来创建使用 Azure Blob 存储的 Android 应用程序。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>如何通过 Xamarin（预览版）使用 Blob 存储</source>
          <target state="new">如何通过 Xamarin（预览版）使用 Blob 存储</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>概述</source>
          <target state="new">概述</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Xamarin 使开发人员能够通过共享的 C# 代码库来使用其本机用户界面创建 iOS、Android 和 Windows 应用商店应用程序。用于 Xamarin 的 Azure 存储客户端库是一个预览库；请注意，该库在将来可能会更改。</source>
          <target state="new">Xamarin 使开发人员能够通过共享的 C# 代码库来使用其本机用户界面创建 iOS、Android 和 Windows 应用商店应用程序。用于 Xamarin 的 Azure 存储客户端库是一个预览库；请注意，该库在将来可能会更改。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>本教程演示了如何将 Azure Blob 存储用于 Xamarin Android 应用程序。若要在深入分析代码之前了解有关 Azure 存储空间的更多内容，请参阅本文档末尾的<bpt id="p1">[</bpt>后续步骤<ept id="p1">](#next-steps)</ept>。</source>
          <target state="new">本教程演示了如何将 Azure Blob 存储用于 Xamarin Android 应用程序。若要在深入分析代码之前了解有关 Azure 存储空间的更多内容，请参阅本文档末尾的<bpt id="p1">[</bpt>后续步骤<ept id="p1">](#next-steps)</ept>。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>生成共享访问签名</source>
          <target state="new">生成共享访问签名</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>使用用于 Xamarin 的 Azure 存储客户端库进行开发时，你不能使用帐户访问密钥对 Azure 存储空间帐户的访问权限进行身份验证。这是为了防止将你的帐户凭据分发给可以下载你的应用程序的用户。与之相反，我们鼓励使用共享访问签名 (SAS)，这样就不会暴露你的帐户凭据。</source>
          <target state="new">使用用于 Xamarin 的 Azure 存储客户端库进行开发时，你不能使用帐户访问密钥对 Azure 存储空间帐户的访问权限进行身份验证。这是为了防止将你的帐户凭据分发给可以下载你的应用程序的用户。与之相反，我们鼓励使用共享访问签名 (SAS)，这样就不会暴露你的帐户凭据。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>在本指南中，我们将使用 Azure PowerShell 来生成 SAS 令牌。然后，我们将创建一个使用生成的 SAS 的 Xamarin 应用程序。</source>
          <target state="new">在本指南中，我们将使用 Azure PowerShell 来生成 SAS 令牌。然后，我们将创建一个使用生成的 SAS 的 Xamarin 应用程序。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>首先，你需要安装 Azure PowerShell请查看<bpt id="p1">[</bpt>如何安装和配置 Azure PowerShell<ept id="p1">](/documentation/articles/powershell-install-configure#Install)</ept> 以获取相关说明。</source>
          <target state="new">首先，你需要安装 Azure PowerShell请查看<bpt id="p1">[</bpt>如何安装和配置 Azure PowerShell<ept id="p1">](/documentation/articles/powershell-install-configure#Install)</ept> 以获取相关说明。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>接下来，请打开 Azure PowerShell 并运行以下命令：请记住将 <ph id="ph1">`ACCOUNT_NAME`</ph> 和 <ph id="ph2">`ACCOUNT_KEY== `</ph> 替换为你的存储帐户凭据。将 <ph id="ph3">`CONTAINER_NAME`</ph> 替换为你选择的名称。</source>
          <target state="new">接下来，请打开 Azure PowerShell 并运行以下命令：请记住将 <ph id="ph1">`ACCOUNT_NAME`</ph> 和 <ph id="ph2">`ACCOUNT_KEY== `</ph> 替换为你的存储帐户凭据。将 <ph id="ph3">`CONTAINER_NAME`</ph> 替换为你选择的名称。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>新容器的共享访问签名 URI 应如下所示：</source>
          <target state="new">新容器的共享访问签名 URI 应如下所示：</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>你在容器上创建的共享访问签名将在接下来的一天内有效。该签名将授予对容器内 blob 的完整权限（<bpt id="p1">*</bpt>例如<ept id="p1">*</ept>，读取、写入、删除和列表）。</source>
          <target state="new">你在容器上创建的共享访问签名将在接下来的一天内有效。该签名将授予对容器内 blob 的完整权限（<bpt id="p1">*</bpt>例如<ept id="p1">*</ept>，读取、写入、删除和列表）。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>有关共享访问签名的详细信息，请参阅<bpt id="p1">[</bpt>针对 .NET 的 SAS 教程<ept id="p1">](/documentation/articles/storage-dotnet-shared-access-signature-part-2)</ept>。</source>
          <target state="new">有关共享访问签名的详细信息，请参阅<bpt id="p1">[</bpt>针对 .NET 的 SAS 教程<ept id="p1">](/documentation/articles/storage-dotnet-shared-access-signature-part-2)</ept>。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>创建新的 Xamarin 应用程序</source>
          <target state="new">创建新的 Xamarin 应用程序</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>就本教程来说，我们将在 Visual Studio 中创建 Xamarin 应用程序。请按以下步骤创建该应用程序：</source>
          <target state="new">就本教程来说，我们将在 Visual Studio 中创建 Xamarin 应用程序。请按以下步骤创建该应用程序：</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>下载并安装 <bpt id="p1">[</bpt>Visual Studio<ept id="p1">](https://www.visualstudio.com/zh-cn)</ept>。</source>
          <target state="new">下载并安装 <bpt id="p1">[</bpt>Visual Studio<ept id="p1">](https://www.visualstudio.com/zh-cn)</ept>。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>下载并安装 <bpt id="p1">[</bpt>Xamarin<ept id="p1">](http://xamarin.com/platform)</ept>。</source>
          <target state="new">下载并安装 <bpt id="p1">[</bpt>Xamarin<ept id="p1">](http://xamarin.com/platform)</ept>。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>打开 Visual Studio，然后选择“文件”&gt;“新建”&gt;“项目”&gt;“Android”&gt;“空应用程序(Android)”。</source>
          <target state="new">打开 Visual Studio，然后选择“文件”&gt;“新建”&gt;“项目”&gt;“Android”&gt;“空应用程序(Android)”。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>右键单击“解决方案资源管理器”窗格中的项目，然后选择“管理 NuGet 包”。然后搜索<bpt id="p1">**</bpt>“Azure 存储空间”<ept id="p1">**</ept>并安装 <bpt id="p2">**</bpt>Azure 存储空间 4.4.0-预览版<ept id="p2">**</ept>。</source>
          <target state="new">右键单击“解决方案资源管理器”窗格中的项目，然后选择“管理 NuGet 包”。然后搜索<bpt id="p1">**</bpt>“Azure 存储空间”<ept id="p1">**</ept>并安装 <bpt id="p2">**</bpt>Azure 存储空间 4.4.0-预览版<ept id="p2">**</ept>。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>现在，你应该有了这样一个应用程序：单击某个按钮即可让计数器递增。</source>
          <target state="new">现在，你应该有了这样一个应用程序：单击某个按钮即可让计数器递增。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>使用共享访问签名执行容器操作</source>
          <target state="new">使用共享访问签名执行容器操作</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>接下来，请使用生成的 SAS URI，通过添加代码来执行一系列容器操作。</source>
          <target state="new">接下来，请使用生成的 SAS URI，通过添加代码来执行一系列容器操作。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>首先，添加以下 <bpt id="p1">**</bpt>using<ept id="p1">**</ept> 语句：</source>
          <target state="new">首先，添加以下 <bpt id="p1">**</bpt>using<ept id="p1">**</ept> 语句：</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>接下来，添加 SAS 令牌的行。将 <ph id="ph1">`"SAS_URI"`</ph> 字符串替换为你在 Azure PowerShell 中生成的 SAS URI。然后再添加一行，以便调用我们将在下面创建的 <ph id="ph2">`UseContainerSAS`</ph> 方法。请注意，<bpt id="p1">**</bpt>async<ept id="p1">**</ept> 关键字已添加到了 delegate 前面。</source>
          <target state="new">接下来，添加 SAS 令牌的行。将 <ph id="ph1">`"SAS_URI"`</ph> 字符串替换为你在 Azure PowerShell 中生成的 SAS URI。然后再添加一行，以便调用我们将在下面创建的 <ph id="ph2">`UseContainerSAS`</ph> 方法。请注意，<bpt id="p1">**</bpt>async<ept id="p1">**</ept> 关键字已添加到了 delegate 前面。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>在 <ph id="ph1">`OnCreate`</ph> 方法下添加新方法 <ph id="ph2">`UseContainerSAS`</ph>。</source>
          <target state="new">在 <ph id="ph1">`OnCreate`</ph> 方法下添加新方法 <ph id="ph2">`UseContainerSAS`</ph>。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>运行应用程序</source>
          <target state="new">运行应用程序</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>你现在可以在仿真程序或 Android 设备中运行此应用程序。</source>
          <target state="new">你现在可以在仿真程序或 Android 设备中运行此应用程序。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>虽然此入门教程侧重于 Android，但你也可以将 <ph id="ph1">`UseContainerSAS`</ph> 方法用于 iOS 或 Windows 应用商店应用程序。Xamarin 还允许开发人员创建 Windows Phone 应用程序，不过，我们的库目前尚不支持此功能。</source>
          <target state="new">虽然此入门教程侧重于 Android，但你也可以将 <ph id="ph1">`UseContainerSAS`</ph> 方法用于 iOS 或 Windows 应用商店应用程序。Xamarin 还允许开发人员创建 Windows Phone 应用程序，不过，我们的库目前尚不支持此功能。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>在本教程中，你学习了如何将 Azure Blob 存储和 SAS 用于 Xamarin 应用程序。在进一步的练习中，可以应用相似的模式来生成用于 Azure 表或队列的 SAS 令牌。</source>
          <target state="new">在本教程中，你学习了如何将 Azure Blob 存储和 SAS 用于 Xamarin 应用程序。在进一步的练习中，可以应用相似的模式来生成用于 Azure 表或队列的 SAS 令牌。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>查看以下链接，了解有关 blob、表和队列的详细信息：</source>
          <target state="new">查看以下链接，了解有关 blob、表和队列的详细信息：</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Azure 存储空间简介</source>
          <target state="new">Azure 存储空间简介</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>如何通过 .NET 使用 Blob 存储</source>
          <target state="new">如何通过 .NET 使用 Blob 存储</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>如何通过 .NET 使用表存储</source>
          <target state="new">如何通过 .NET 使用表存储</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>如何通过 .NET 使用队列存储</source>
          <target state="new">如何通过 .NET 使用队列存储</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>使用 AzCopy 命令行实用程序传输数据</source>
          <target state="new">使用 AzCopy 命令行实用程序传输数据</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>