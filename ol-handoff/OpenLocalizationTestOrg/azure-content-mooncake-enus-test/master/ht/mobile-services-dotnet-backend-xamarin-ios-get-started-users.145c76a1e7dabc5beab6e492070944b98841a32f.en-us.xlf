<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6d287e21cf2e637f6ab8d273b3520e8e6cf016d</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>用于 Xamarin iOS 应用的移动服务中的身份验证入门 | Azure</source>
          <target state="new">用于 Xamarin iOS 应用的移动服务中的身份验证入门 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何使用移动服务通过各种标识提供程序（包括 Microsoft 和 Azure Active Directory 对 Xamarin iOS 应用程序的用户进行身份验证。</source>
          <target state="new">了解如何使用移动服务通过各种标识提供程序（包括 Microsoft 和 Azure Active Directory 对 Xamarin iOS 应用程序的用户进行身份验证。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>向移动服务应用程序添加身份验证</source>
          <target state="new">向移动服务应用程序添加身份验证</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;</source>
          <target state="new">&amp;nbsp;</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>本主题说明如何通过应用程序对 Azure 移动服务中的用户进行身份验证。在本教程中，你将要使用移动服务支持的标识提供程序向快速入门项目添加身份验证。在移动服务成功完成身份验证和授权后，将显示用户 ID 值。</source>
          <target state="new">本主题说明如何通过应用程序对 Azure 移动服务中的用户进行身份验证。在本教程中，你将要使用移动服务支持的标识提供程序向快速入门项目添加身份验证。在移动服务成功完成身份验证和授权后，将显示用户 ID 值。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>本教程将指导你完成在应用程序中启用身份验证的以下基本步骤：</source>
          <target state="new">本教程将指导你完成在应用程序中启用身份验证的以下基本步骤：</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>注册应用程序以进行身份验证并配置移动服务</source>
          <target state="new">注册应用程序以进行身份验证并配置移动服务</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>将表权限限制给已经过身份验证的用户</source>
          <target state="new">将表权限限制给已经过身份验证的用户</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>向应用程序添加身份验证</source>
          <target state="new">向应用程序添加身份验证</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>本教程基于移动服务快速入门。此外，还必须先完成<bpt id="p1">[</bpt><ept id="p1">移动服务入门]</ept>教程。</source>
          <target state="new">本教程基于移动服务快速入门。此外，还必须先完成<bpt id="p1">[</bpt><ept id="p1">移动服务入门]</ept>教程。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="register"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>注册应用程序以进行身份验证并配置移动服务</source>
          <target state="new"><ph id="ph1">&lt;a name="register"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>注册应用程序以进行身份验证并配置移动服务</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="permissions"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>将权限限制给已经过身份验证的用户</source>
          <target state="new"><ph id="ph1">&lt;a name="permissions"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>将权限限制给已经过身份验证的用户</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 或 Xamarin Studio 中，运行设备或模拟器中的客户端项目。验证在应用程序启动后是否引发状态代码为 401（“未授权”）的未处理异常。</source>
          <target state="new">在 Visual Studio 或 Xamarin Studio 中，运行设备或模拟器中的客户端项目。验证在应用程序启动后是否引发状态代码为 401（“未授权”）的未处理异常。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>接下来，你需要更新应用程序，以便在从移动服务请求资源之前对用户进行身份验证。</source>
          <target state="new">接下来，你需要更新应用程序，以便在从移动服务请求资源之前对用户进行身份验证。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="add-authentication"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>向应用程序添加身份验证</source>
          <target state="new"><ph id="ph1">&lt;a name="add-authentication"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>向应用程序添加身份验证</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>在本部分中，你将修改应用程序，以便在显示数据之前显示登录屏幕。当应用启动时，它将不会连接到移动服务，并且不会显示任何数据。用户首次执行刷新笔势后，将显示登录屏幕；成功登录后，将显示 Todo 项列表。</source>
          <target state="new">在本部分中，你将修改应用程序，以便在显示数据之前显示登录屏幕。当应用启动时，它将不会连接到移动服务，并且不会显示任何数据。用户首次执行刷新笔势后，将显示登录屏幕；成功登录后，将显示 Todo 项列表。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>在客户端项目中，打开文件 <bpt id="p1">**</bpt>QSTodoService.cs<ept id="p1">**</ept> 并将以下声明添加到 QSTodoService：</source>
          <target state="new">在客户端项目中，打开文件 <bpt id="p1">**</bpt>QSTodoService.cs<ept id="p1">**</ept> 并将以下声明添加到 QSTodoService：</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>使用以下定义向 <bpt id="p1">**</bpt>QSTodoService<ept id="p1">**</ept> 添加新方法 <bpt id="p2">**</bpt>Authenticate<ept id="p2">**</ept>：</source>
          <target state="new">使用以下定义向 <bpt id="p1">**</bpt>QSTodoService<ept id="p1">**</ept> 添加新方法 <bpt id="p2">**</bpt>Authenticate<ept id="p2">**</ept>：</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>如果使用的标识提供程序不是 Facebook，请将传递给上述 <bpt id="p1">**</bpt>LoginAsync<ept id="p1">**</ept> 方法的值更改为下列其中一项：<bpt id="p2">_</bpt>MicrosoftAccount<ept id="p2">_</ept>、<bpt id="p3">_</bpt>Twitter<ept id="p3">_</ept>、<bpt id="p4">_</bpt>Google<ept id="p4">_</ept> 或 <bpt id="p5">_</bpt>WindowsAzureActiveDirectory<ept id="p5">_</ept>。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>如果使用的标识提供程序不是 Facebook，请将传递给上述 <bpt id="p1">**</bpt>LoginAsync<ept id="p1">**</ept> 方法的值更改为下列其中一项：<bpt id="p2">_</bpt>MicrosoftAccount<ept id="p2">_</ept>、<bpt id="p3">_</bpt>Twitter<ept id="p3">_</ept>、<bpt id="p4">_</bpt>Google<ept id="p4">_</ept> 或 <bpt id="p5">_</bpt>WindowsAzureActiveDirectory<ept id="p5">_</ept>。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>打开 <bpt id="p1">**</bpt>QSTodoListViewController.cs<ept id="p1">**</ept>。修改 <bpt id="p2">**</bpt>ViewDidLoad<ept id="p2">**</ept> 的方法定义以删除接近结尾处对 <bpt id="p3">**</bpt>RefreshAsync()<ept id="p3">**</ept> 的调用：</source>
          <target state="new">打开 <bpt id="p1">**</bpt>QSTodoListViewController.cs<ept id="p1">**</ept>。修改 <bpt id="p2">**</bpt>ViewDidLoad<ept id="p2">**</ept> 的方法定义以删除接近结尾处对 <bpt id="p3">**</bpt>RefreshAsync()<ept id="p3">**</ept> 的调用：</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>修改方法 <bpt id="p1">**</bpt>RefreshAsync<ept id="p1">**</ept>，以便在 <bpt id="p2">**</bpt>User<ept id="p2">**</ept> 属性为 null 时进行身份验证并显示登录屏幕。在方法定义顶部的以下代码中：</source>
          <target state="new">修改方法 <bpt id="p1">**</bpt>RefreshAsync<ept id="p1">**</ept>，以便在 <bpt id="p2">**</bpt>User<ept id="p2">**</ept> 属性为 null 时进行身份验证并显示登录屏幕。在方法定义顶部的以下代码中：</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>按“运行”按钮以生成项目，并在 iPhone 模拟器中启动应用程序。验证应用程序是否未显示任何数据。</source>
          <target state="new">按“运行”按钮以生成项目，并在 iPhone 模拟器中启动应用程序。验证应用程序是否未显示任何数据。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>通过向下拉动项列表来执行刷新笔势，这将导致显示登录屏幕。成功输入有效的凭据后，应用程序将显示 Todo 项的列表，你可以对数据进行更新。</source>
          <target state="new">通过向下拉动项列表来执行刷新笔势，这将导致显示登录屏幕。成功输入有效的凭据后，应用程序将显示 Todo 项的列表，你可以对数据进行更新。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>