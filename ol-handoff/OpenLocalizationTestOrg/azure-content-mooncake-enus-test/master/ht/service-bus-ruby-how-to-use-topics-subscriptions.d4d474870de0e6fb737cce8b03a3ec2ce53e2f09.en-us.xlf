<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">231c61f2180608a0e4a59325e5379005588f05c0</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>如何使用服务总线主题 (Ruby) | Azure</source>
          <target state="new">如何使用服务总线主题 (Ruby) | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何在 Azure 中使用 Service Bus 主题和订阅。相关代码示例是针对 Ruby 应用程序编写的。</source>
          <target state="new">了解如何在 Azure 中使用 Service Bus 主题和订阅。相关代码示例是针对 Ruby 应用程序编写的。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>如何使用 Service Bus 主题/订阅</source>
          <target state="new">如何使用 Service Bus 主题/订阅</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>本指南介绍如何从 Ruby 应用程序使用服务总线主题和订阅。涉及的任务包括<bpt id="p1">**</bpt>创建主题和订阅、创建订阅筛选器、将消息发送到主题<ept id="p1">**</ept>、<bpt id="p2">**</bpt>从订阅接收消息<ept id="p2">**</ept>以<bpt id="p3">**</bpt>及删除主题和订阅<ept id="p3">**</ept>。有关主题和订阅的详细信息，请参阅<bpt id="p4">[</bpt>后续步骤<ept id="p4">](#next-steps)</ept>部分。</source>
          <target state="new">本指南介绍如何从 Ruby 应用程序使用服务总线主题和订阅。涉及的任务包括<bpt id="p1">**</bpt>创建主题和订阅、创建订阅筛选器、将消息发送到主题<ept id="p1">**</ept>、<bpt id="p2">**</bpt>从订阅接收消息<ept id="p2">**</ept>以<bpt id="p3">**</bpt>及删除主题和订阅<ept id="p3">**</ept>。有关主题和订阅的详细信息，请参阅<bpt id="p4">[</bpt>后续步骤<ept id="p4">](#next-steps)</ept>部分。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>服务总线主题和订阅</source>
          <target state="new">服务总线主题和订阅</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>服务总线主题和订阅支持<bpt id="p1">**</bpt>发布/订阅<ept id="p1">**</ept>消息通信模型。在使用主题和订阅时，分布式应用程序的组件不会直接相互通信，而是通过充当中介的主题交换消息。</source>
          <target state="new">服务总线主题和订阅支持<bpt id="p1">**</bpt>发布/订阅<ept id="p1">**</ept>消息通信模型。在使用主题和订阅时，分布式应用程序的组件不会直接相互通信，而是通过充当中介的主题交换消息。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>TopicConcepts</source>
          <target state="new">TopicConcepts</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>与每条消息由单个使用方处理的服务总线队列相比，主题和订阅通过发布/订阅模式提供<bpt id="p1">**</bpt>一对多<ept id="p1">**</ept>通信方式。可向一个主题注册多个订阅。当消息发送到主题时，每个订阅会分别对该消息进行处理。</source>
          <target state="new">与每条消息由单个使用方处理的服务总线队列相比，主题和订阅通过发布/订阅模式提供<bpt id="p1">**</bpt>一对多<ept id="p1">**</ept>通信方式。可向一个主题注册多个订阅。当消息发送到主题时，每个订阅会分别对该消息进行处理。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>主题订阅类似于接收发送至该主题的消息副本的虚拟队列。您可以选择基于每个订阅注册主题的筛选规则，这样就可以筛选/限制哪些主题订阅接收发送至某个主题的哪些消息。</source>
          <target state="new">主题订阅类似于接收发送至该主题的消息副本的虚拟队列。您可以选择基于每个订阅注册主题的筛选规则，这样就可以筛选/限制哪些主题订阅接收发送至某个主题的哪些消息。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>利用 Service Bus 主题和订阅，您可以进行扩展以处理跨大量用户和应用程序的许多消息。</source>
          <target state="new">利用 Service Bus 主题和订阅，您可以进行扩展以处理跨大量用户和应用程序的许多消息。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>创建服务命名空间</source>
          <target state="new">创建服务命名空间</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>若要开始在 Azure 中使用服务总线队列，必须先创建一个服务命名空间。命名空间提供了用于对应用程序中的 Service Bus 资源进行寻址的范围容器。必须通过命令行界面创建命名空间，因为 [Azure 经典门户][] 不会使用 ACS 连接创建命名空间。</source>
          <target state="new">若要开始在 Azure 中使用服务总线队列，必须先创建一个服务命名空间。命名空间提供了用于对应用程序中的 Service Bus 资源进行寻址的范围容器。必须通过命令行界面创建命名空间，因为 [Azure 经典门户][] 不会使用 ACS 连接创建命名空间。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>创建命名空间：</source>
          <target state="new">创建命名空间：</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>打开 Azure PowerShell 控制台。</source>
          <target state="new">打开 Azure PowerShell 控制台。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>键入用于创建命名空间的命令，如下所示。提供你自己的命名空间值，并指定与应用程序相同的区域。</source>
          <target state="new">键入用于创建命名空间的命令，如下所示。提供你自己的命名空间值，并指定与应用程序相同的区域。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>New-AzureSBNamespace -Name 'yourexamplenamespace' -Location 'China East' -NamespaceType 'Messaging' -CreateACSNamespace $true</source>
          <target state="new">New-AzureSBNamespace -Name 'yourexamplenamespace' -Location 'China East' -NamespaceType 'Messaging' -CreateACSNamespace $true</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>创建命名空间</source>
          <target state="new">创建命名空间</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>获取命名空间的默认管理凭据</source>
          <target state="new">获取命名空间的默认管理凭据</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>若要在新命名空间上执行管理操作（如创建队列），则必须获取该命名空间的管理凭据。</source>
          <target state="new">若要在新命名空间上执行管理操作（如创建队列），则必须获取该命名空间的管理凭据。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>你运行的用于创建服务总线命名空间的 PowerShell cmdlet 将显示可用于管理命名空间的密钥。复制 <bpt id="p1">**</bpt>DefaultKey<ept id="p1">**</ept> 值。你将本教程稍后的代码中使用此值。</source>
          <target state="new">你运行的用于创建服务总线命名空间的 PowerShell cmdlet 将显示可用于管理命名空间的密钥。复制 <bpt id="p1">**</bpt>DefaultKey<ept id="p1">**</ept> 值。你将本教程稍后的代码中使用此值。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>登录到 [Azure 经典门户][] 并导航到命名空间的连接信息后，也可以看到此密钥。</source>
          <target state="new">登录到 [Azure 经典门户][] 并导航到命名空间的连接信息后，也可以看到此密钥。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>创建 Ruby 应用程序</source>
          <target state="new">创建 Ruby 应用程序</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>有关说明，请参阅<bpt id="p1">[</bpt>在 Azure 上创建 Ruby 应用程序<ept id="p1">](/develop/ruby/)</ept>。</source>
          <target state="new">有关说明，请参阅<bpt id="p1">[</bpt>在 Azure 上创建 Ruby 应用程序<ept id="p1">](/develop/ruby/)</ept>。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>配置应用程序以使用 Service Bus</source>
          <target state="new">配置应用程序以使用 Service Bus</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>要使用 Azure 服务总线，你需要使用 Ruby Azure 包，其中包括一组便于与存储 REST 服务进行通信的库。</source>
          <target state="new">要使用 Azure 服务总线，你需要使用 Ruby Azure 包，其中包括一组便于与存储 REST 服务进行通信的库。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>使用 RubyGems 获取该程序包</source>
          <target state="new">使用 RubyGems 获取该程序包</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>使用命令行接口，例如 <bpt id="p1">**</bpt>PowerShell<ept id="p1">**</ept> (Windows)、<bpt id="p2">**</bpt>Terminal<ept id="p2">**</ept> (Mac) 或 <bpt id="p3">**</bpt>Bash<ept id="p3">**</ept> (Unix)。</source>
          <target state="new">使用命令行接口，例如 <bpt id="p1">**</bpt>PowerShell<ept id="p1">**</ept> (Windows)、<bpt id="p2">**</bpt>Terminal<ept id="p2">**</ept> (Mac) 或 <bpt id="p3">**</bpt>Bash<ept id="p3">**</ept> (Unix)。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>在命令窗口中键入“gem install azure”以安装 gem 和依赖项。</source>
          <target state="new">在命令窗口中键入“gem install azure”以安装 gem 和依赖项。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>导入包</source>
          <target state="new">导入包</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>使用常用的文本编辑器将以下内容添加到你要在其中使用存储的 Ruby 文件的顶部：</source>
          <target state="new">使用常用的文本编辑器将以下内容添加到你要在其中使用存储的 Ruby 文件的顶部：</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>设置服务总线连接</source>
          <target state="new">设置服务总线连接</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Azure 模块将读取环境变量 <bpt id="p1">**</bpt>AZURE\_SERVICEBUS\_NAMESPACE<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>AZURE\_SERVICEBUS\_ACCESS\_KEY<ept id="p2">**</ept> 以获取连接到命名空间所需的信息。如果未设置这些环境变量，则在使用 <bpt id="p3">**</bpt>Azure::ServiceBusService<ept id="p3">**</ept> 之前必须通过以下代码指定命名空间信息：</source>
          <target state="new">Azure 模块将读取环境变量 <bpt id="p1">**</bpt>AZURE\_SERVICEBUS\_NAMESPACE<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>AZURE\_SERVICEBUS\_ACCESS\_KEY<ept id="p2">**</ept> 以获取连接到命名空间所需的信息。如果未设置这些环境变量，则在使用 <bpt id="p3">**</bpt>Azure::ServiceBusService<ept id="p3">**</ept> 之前必须通过以下代码指定命名空间信息：</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>将命名空间值设置为你创建的值，而不是整个 URL 的值。例如，使用 <bpt id="p1">**</bpt>"yourexamplenamespace"<ept id="p1">**</ept>，而不是 "yourexamplenamespace.servicebus.chinacloudapi.cn"。</source>
          <target state="new">将命名空间值设置为你创建的值，而不是整个 URL 的值。例如，使用 <bpt id="p1">**</bpt>"yourexamplenamespace"<ept id="p1">**</ept>，而不是 "yourexamplenamespace.servicebus.chinacloudapi.cn"。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>创建主题</source>
          <target state="new">创建主题</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>可以通过 <bpt id="p1">**</bpt>Azure::ServiceBusService<ept id="p1">**</ept> 对象处理主题。以下代码将创建 <bpt id="p2">**</bpt>Azure::ServiceBusService<ept id="p2">**</ept> 对象。若要创建主题，请使用 <bpt id="p3">**</bpt>create\_topic()<ept id="p3">**</ept> 方法。以下示例将创建一个主题或输出错误（如果有）。</source>
          <target state="new">可以通过 <bpt id="p1">**</bpt>Azure::ServiceBusService<ept id="p1">**</ept> 对象处理主题。以下代码将创建 <bpt id="p2">**</bpt>Azure::ServiceBusService<ept id="p2">**</ept> 对象。若要创建主题，请使用 <bpt id="p3">**</bpt>create\_topic()<ept id="p3">**</ept> 方法。以下示例将创建一个主题或输出错误（如果有）。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>还可以通过其他选项传递 <bpt id="p1">**</bpt>Azure::ServiceBus::Topic<ept id="p1">**</ept> 对象，这些选项允许你重写默认主题设置，如消息保存时间或最大队列大小。下面的示例演示如何将最大队列大小设置为 5 GB，将保存时间设置为 1 分钟：</source>
          <target state="new">还可以通过其他选项传递 <bpt id="p1">**</bpt>Azure::ServiceBus::Topic<ept id="p1">**</ept> 对象，这些选项允许你重写默认主题设置，如消息保存时间或最大队列大小。下面的示例演示如何将最大队列大小设置为 5 GB，将保存时间设置为 1 分钟：</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>创建订阅</source>
          <target state="new">创建订阅</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>主题订阅也是使用 <bpt id="p1">**</bpt>Azure::ServiceBusService<ept id="p1">**</ept> 对象创建的。订阅已命名，并且具有一个限制传递到订阅的虚拟队列的消息集的可选筛选器。</source>
          <target state="new">主题订阅也是使用 <bpt id="p1">**</bpt>Azure::ServiceBusService<ept id="p1">**</ept> 对象创建的。订阅已命名，并且具有一个限制传递到订阅的虚拟队列的消息集的可选筛选器。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>订阅是永久性的，并且除非删除它或删除与之相关的主题，否则订阅将一直存在。如果你的应用程序包含创建订阅的逻辑，则它应首先使用 getSubscription 方法检查该订阅是否已经存在。</source>
          <target state="new">订阅是永久性的，并且除非删除它或删除与之相关的主题，否则订阅将一直存在。如果你的应用程序包含创建订阅的逻辑，则它应首先使用 getSubscription 方法检查该订阅是否已经存在。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>创建具有默认 (MatchAll) 筛选器的订阅</source>
          <target state="new">创建具有默认 (MatchAll) 筛选器的订阅</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MatchAll<ept id="p1">**</ept> 筛选器是默认筛选器，在创建新订阅时未指定筛选器的情况下使用。使用 <bpt id="p2">**</bpt>MatchAll<ept id="p2">**</ept> 筛选器时，发布到主题的所有消息都将置于订阅的虚拟队列中。以下示例创建了名为“all-messages”的订阅并使用了默认的 <bpt id="p3">**</bpt>MatchAll<ept id="p3">**</ept> 筛选器。</source>
          <target state="new"><bpt id="p1">**</bpt>MatchAll<ept id="p1">**</ept> 筛选器是默认筛选器，在创建新订阅时未指定筛选器的情况下使用。使用 <bpt id="p2">**</bpt>MatchAll<ept id="p2">**</ept> 筛选器时，发布到主题的所有消息都将置于订阅的虚拟队列中。以下示例创建了名为“all-messages”的订阅并使用了默认的 <bpt id="p3">**</bpt>MatchAll<ept id="p3">**</ept> 筛选器。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="how-to-create-subscriptions"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>创建具有筛选器的订阅</source>
          <target state="new"><ph id="ph1">&lt;a id="how-to-create-subscriptions"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>创建具有筛选器的订阅</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>还可以定义筛选器，以指定发送到主题的哪些消息应该在特定订阅中显示。</source>
          <target state="new">还可以定义筛选器，以指定发送到主题的哪些消息应该在特定订阅中显示。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>订阅支持的最灵活的筛选器类型是 <bpt id="p1">**</bpt>Azure::ServiceBus::SqlFilter<ept id="p1">**</ept>，它实现了部分 SQL92 功能。SQL 筛选器将对发布到主题的消息的属性进行操作。有关可用于 SQL 筛选器的表达式的更多详细信息，请参阅 <bpt id="p2">[</bpt>SqlFilter.SqlExpression<ept id="p2">](http://msdn.microsoft.com/zh-cn/library/windowsazure/microsoft.servicebus.messaging.sqlfilter.sqlexpression.aspx)</ept> 语法。</source>
          <target state="new">订阅支持的最灵活的筛选器类型是 <bpt id="p1">**</bpt>Azure::ServiceBus::SqlFilter<ept id="p1">**</ept>，它实现了部分 SQL92 功能。SQL 筛选器将对发布到主题的消息的属性进行操作。有关可用于 SQL 筛选器的表达式的更多详细信息，请参阅 <bpt id="p2">[</bpt>SqlFilter.SqlExpression<ept id="p2">](http://msdn.microsoft.com/zh-cn/library/windowsazure/microsoft.servicebus.messaging.sqlfilter.sqlexpression.aspx)</ept> 语法。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>可以使用 <bpt id="p1">**</bpt>Azure::ServiceBusService<ept id="p1">**</ept> 对象的 <bpt id="p2">**</bpt>create\_rule()<ept id="p2">**</ept> 方法向订阅中添加筛选器。此方法允许你向现有订阅中添加新筛选器。</source>
          <target state="new">可以使用 <bpt id="p1">**</bpt>Azure::ServiceBusService<ept id="p1">**</ept> 对象的 <bpt id="p2">**</bpt>create\_rule()<ept id="p2">**</ept> 方法向订阅中添加筛选器。此方法允许你向现有订阅中添加新筛选器。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>由于默认筛选器会自动应用到所有新订阅，因此，你必须首先删除默认筛选器，否则 <bpt id="p1">**</bpt>MatchAll<ept id="p1">**</ept> 会替代你可能指定的任何其他筛选器。可以对 <bpt id="p2">**</bpt>Azure::ServiceBusService<ept id="p2">**</ept> 对象使用 <bpt id="p3">**</bpt>delete\_rule()<ept id="p3">**</ept> 方法来删除默认规则。</source>
          <target state="new">由于默认筛选器会自动应用到所有新订阅，因此，你必须首先删除默认筛选器，否则 <bpt id="p1">**</bpt>MatchAll<ept id="p1">**</ept> 会替代你可能指定的任何其他筛选器。可以对 <bpt id="p2">**</bpt>Azure::ServiceBusService<ept id="p2">**</ept> 对象使用 <bpt id="p3">**</bpt>delete\_rule()<ept id="p3">**</ept> 方法来删除默认规则。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>以下示例将创建一个名为“high-messages”的订阅，该订阅包含一个 <bpt id="p1">**</bpt>Azure::ServiceBus::SqlFilter<ept id="p1">**</ept>，它仅选择自定义 <bpt id="p2">**</bpt>message\_number<ept id="p2">**</ept> 属性大于 3 的消息：</source>
          <target state="new">以下示例将创建一个名为“high-messages”的订阅，该订阅包含一个 <bpt id="p1">**</bpt>Azure::ServiceBus::SqlFilter<ept id="p1">**</ept>，它仅选择自定义 <bpt id="p2">**</bpt>message\_number<ept id="p2">**</ept> 属性大于 3 的消息：</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>类似地，以下示例将创建一个名为“low-messages”的订阅，其中包含的 <bpt id="p1">**</bpt>Azure::ServiceBus::SqlFilter<ept id="p1">**</ept> 仅选择 <bpt id="p2">**</bpt>message\_number<ept id="p2">**</ept> 属性小于或等于 3 的消息：</source>
          <target state="new">类似地，以下示例将创建一个名为“low-messages”的订阅，其中包含的 <bpt id="p1">**</bpt>Azure::ServiceBus::SqlFilter<ept id="p1">**</ept> 仅选择 <bpt id="p2">**</bpt>message\_number<ept id="p2">**</ept> 属性小于或等于 3 的消息：</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>现在，将消息发送到“test-topic”时，它总是会传送给订阅了“all-messages”主题订阅的接收者，并选择性地传送给订阅了“high-messages”和“low-messages”主题订阅的接收者（具体取决于消息内容）。</source>
          <target state="new">现在，将消息发送到“test-topic”时，它总是会传送给订阅了“all-messages”主题订阅的接收者，并选择性地传送给订阅了“high-messages”和“low-messages”主题订阅的接收者（具体取决于消息内容）。</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>将消息发送到主题</source>
          <target state="new">将消息发送到主题</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>若要将消息发送到服务总线主题，你的应用程序必须对 <bpt id="p1">**</bpt>Azure::ServiceBusService<ept id="p1">**</ept> 对象使用 <bpt id="p2">**</bpt>send\_topic\_message()<ept id="p2">**</ept> 方法。发送到服务总线主题的消息是 <bpt id="p3">**</bpt>Azure::ServiceBus::BrokeredMessage<ept id="p3">**</ept> 对象的实例。<bpt id="p4">**</bpt>Azure::ServiceBus::BrokeredMessage<ept id="p4">**</ept> 对象具有一组标准属性（如 <bpt id="p5">**</bpt>label<ept id="p5">**</ept> 和 <bpt id="p6">**</bpt>time\_to\_live<ept id="p6">**</ept>）、一个用于保存自定义应用程序特定属性的字典以及一段字符串数据正文。应用程序可以通过将字符串值传递给 <bpt id="p7">**</bpt>send\_topic\_message()<ept id="p7">**</ept> 方法来设置消息正文，并且任何必需的标准属性将用默认值来填充。</source>
          <target state="new">若要将消息发送到服务总线主题，你的应用程序必须对 <bpt id="p1">**</bpt>Azure::ServiceBusService<ept id="p1">**</ept> 对象使用 <bpt id="p2">**</bpt>send\_topic\_message()<ept id="p2">**</ept> 方法。发送到服务总线主题的消息是 <bpt id="p3">**</bpt>Azure::ServiceBus::BrokeredMessage<ept id="p3">**</ept> 对象的实例。<bpt id="p4">**</bpt>Azure::ServiceBus::BrokeredMessage<ept id="p4">**</ept> 对象具有一组标准属性（如 <bpt id="p5">**</bpt>label<ept id="p5">**</ept> 和 <bpt id="p6">**</bpt>time\_to\_live<ept id="p6">**</ept>）、一个用于保存自定义应用程序特定属性的字典以及一段字符串数据正文。应用程序可以通过将字符串值传递给 <bpt id="p7">**</bpt>send\_topic\_message()<ept id="p7">**</ept> 方法来设置消息正文，并且任何必需的标准属性将用默认值来填充。</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>下面的示例演示如何向“test-topic”发送五条测试消息。请注意，每条消息的 <bpt id="p1">**</bpt>message\_number<ept id="p1">**</ept> 自定义属性值因循环迭代而异（这将确定哪些订阅接收它）：</source>
          <target state="new">下面的示例演示如何向“test-topic”发送五条测试消息。请注意，每条消息的 <bpt id="p1">**</bpt>message\_number<ept id="p1">**</ept> 自定义属性值因循环迭代而异（这将确定哪些订阅接收它）：</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Service Bus 主题支持最大为 256 MB 的消息（标头最大为 64 MB，其中包括标准和自定义应用程序属性）。一个主题中包含的消息数量不受限制，但消息的总大小受限制。此主题大小是在创建时定义的，上限为 5 GB。</source>
          <target state="new">Service Bus 主题支持最大为 256 MB 的消息（标头最大为 64 MB，其中包括标准和自定义应用程序属性）。一个主题中包含的消息数量不受限制，但消息的总大小受限制。此主题大小是在创建时定义的，上限为 5 GB。</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>从订阅接收消息</source>
          <target state="new">从订阅接收消息</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>对 <bpt id="p1">**</bpt>Azure::ServiceBusService<ept id="p1">**</ept> 对象使用 <bpt id="p2">**</bpt>receive\_subscription\_message()<ept id="p2">**</ept> 方法可从订阅接收消息。默认情况下，消息在被读取（查看）的同时会被锁定，从而无法从订阅中删除。但是，你可以通过将 <bpt id="p3">**</bpt>peek\_lock<ept id="p3">**</ept> 选项设置为 <bpt id="p4">**</bpt>false<ept id="p4">**</ept>，在读取消息时将其从订阅中删除。</source>
          <target state="new">对 <bpt id="p1">**</bpt>Azure::ServiceBusService<ept id="p1">**</ept> 对象使用 <bpt id="p2">**</bpt>receive\_subscription\_message()<ept id="p2">**</ept> 方法可从订阅接收消息。默认情况下，消息在被读取（查看）的同时会被锁定，从而无法从订阅中删除。但是，你可以通过将 <bpt id="p3">**</bpt>peek\_lock<ept id="p3">**</ept> 选项设置为 <bpt id="p4">**</bpt>false<ept id="p4">**</ept>，在读取消息时将其从订阅中删除。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>默认行为使读取和删除变成一个两阶段操作，从而也有可能支持不允许遗漏消息的应用程序。当 Service Bus 收到请求时，它会查找下一条要使用的消息，锁定该消息以防其他使用者接收，然后将该消息返回到应用程序。应用程序处理完该消息（或将其可靠地存储起来留待将来处理）后，会通过调用 <bpt id="p1">**</bpt>delete\_subscription\_message()<ept id="p1">**</ept> 方法并提供要删除的消息作为参数来完成接收过程的第二阶段。<bpt id="p2">**</bpt>delete\_subscription\_message()<ept id="p2">**</ept> 方法将此消息标记为“已使用”并将其从订阅中删除。</source>
          <target state="new">默认行为使读取和删除变成一个两阶段操作，从而也有可能支持不允许遗漏消息的应用程序。当 Service Bus 收到请求时，它会查找下一条要使用的消息，锁定该消息以防其他使用者接收，然后将该消息返回到应用程序。应用程序处理完该消息（或将其可靠地存储起来留待将来处理）后，会通过调用 <bpt id="p1">**</bpt>delete\_subscription\_message()<ept id="p1">**</ept> 方法并提供要删除的消息作为参数来完成接收过程的第二阶段。<bpt id="p2">**</bpt>delete\_subscription\_message()<ept id="p2">**</ept> 方法将此消息标记为“已使用”并将其从订阅中删除。</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>如果 <bpt id="p1">**</bpt>:peek\_lock<ept id="p1">**</ept> 参数设置为 <bpt id="p2">**</bpt>false<ept id="p2">**</ept>，读取并删除消息将是最简单的模式，并且最适合在发生故障时应用程序允许不处理消息的情况。为了理解这一点，可以考虑这样一种情形：使用方发出接收请求，但在处理该请求前发生了崩溃。由于 Service Bus 会将消息标记为“将使用”，因此当应用程序重启并重新开始使用消息时，它会丢失在发生崩溃前使用的消息。</source>
          <target state="new">如果 <bpt id="p1">**</bpt>:peek\_lock<ept id="p1">**</ept> 参数设置为 <bpt id="p2">**</bpt>false<ept id="p2">**</ept>，读取并删除消息将是最简单的模式，并且最适合在发生故障时应用程序允许不处理消息的情况。为了理解这一点，可以考虑这样一种情形：使用方发出接收请求，但在处理该请求前发生了崩溃。由于 Service Bus 会将消息标记为“将使用”，因此当应用程序重启并重新开始使用消息时，它会丢失在发生崩溃前使用的消息。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>以下示例演示如何使用 <bpt id="p1">**</bpt>receive\_subscription\_message()<ept id="p1">**</ept> 接收和处理消息。该示例先通过将 <bpt id="p2">**</bpt>:peek\_lock<ept id="p2">**</ept> 设置为 <bpt id="p3">**</bpt>false<ept id="p3">**</ept> 从“low-messages”订阅接收并删除一条消息，然后再从“high-messages”接收另一条消息，最后使用 <bpt id="p4">**</bpt>delete\_subscription\_message()<ept id="p4">**</ept> 删除该消息：</source>
          <target state="new">以下示例演示如何使用 <bpt id="p1">**</bpt>receive\_subscription\_message()<ept id="p1">**</ept> 接收和处理消息。该示例先通过将 <bpt id="p2">**</bpt>:peek\_lock<ept id="p2">**</ept> 设置为 <bpt id="p3">**</bpt>false<ept id="p3">**</ept> 从“low-messages”订阅接收并删除一条消息，然后再从“high-messages”接收另一条消息，最后使用 <bpt id="p4">**</bpt>delete\_subscription\_message()<ept id="p4">**</ept> 删除该消息：</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>处理应用程序崩溃和不可读消息</source>
          <target state="new">处理应用程序崩溃和不可读消息</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Service Bus 提供了相关功能来帮助你轻松地从应用程序错误或消息处理问题中恢复。如果接收方应用程序因某种原因无法处理消息，则它可以对 <bpt id="p1">**</bpt>Azure::ServiceBusService<ept id="p1">**</ept> 对象调用 <bpt id="p2">**</bpt>unlock\_subscription\_message()<ept id="p2">**</ept> 方法。这会导致服务总线解锁订阅中的消息并使其能够重新被同一个正在使用的应用程序或其他正在使用的应用程序接收。</source>
          <target state="new">Service Bus 提供了相关功能来帮助你轻松地从应用程序错误或消息处理问题中恢复。如果接收方应用程序因某种原因无法处理消息，则它可以对 <bpt id="p1">**</bpt>Azure::ServiceBusService<ept id="p1">**</ept> 对象调用 <bpt id="p2">**</bpt>unlock\_subscription\_message()<ept id="p2">**</ept> 方法。这会导致服务总线解锁订阅中的消息并使其能够重新被同一个正在使用的应用程序或其他正在使用的应用程序接收。</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>还存在与订阅中的锁定消息关联的超时，如果应用程序未能在锁定超时过期前处理消息（例如，应用程序崩溃），服务总线将自动解锁该消息并使之重新可供接收。</source>
          <target state="new">还存在与订阅中的锁定消息关联的超时，如果应用程序未能在锁定超时过期前处理消息（例如，应用程序崩溃），服务总线将自动解锁该消息并使之重新可供接收。</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>如果应用程序在处理消息之后，但在调用 <bpt id="p1">**</bpt>delete\_subscription\_message()<ept id="p1">**</ept> 方法之前崩溃，则在应用程序重新启动时，该消息将重新传送给应用程序。此情况通常称作<bpt id="p2">**</bpt>至少处理一次<ept id="p2">**</ept>，即每条消息将至少被处理一次，但在某些情况下，同一消息可能会被重新传送。如果方案无法容忍重复处理，则应用程序开发人员应向其应用程序添加更多逻辑以处理重复消息传送。此逻辑通常可以通过使用消息的 <bpt id="p3">**</bpt>message\_id<ept id="p3">**</ept> 属性来实现，该属性在多次传送尝试中保持不变。</source>
          <target state="new">如果应用程序在处理消息之后，但在调用 <bpt id="p1">**</bpt>delete\_subscription\_message()<ept id="p1">**</ept> 方法之前崩溃，则在应用程序重新启动时，该消息将重新传送给应用程序。此情况通常称作<bpt id="p2">**</bpt>至少处理一次<ept id="p2">**</ept>，即每条消息将至少被处理一次，但在某些情况下，同一消息可能会被重新传送。如果方案无法容忍重复处理，则应用程序开发人员应向其应用程序添加更多逻辑以处理重复消息传送。此逻辑通常可以通过使用消息的 <bpt id="p3">**</bpt>message\_id<ept id="p3">**</ept> 属性来实现，该属性在多次传送尝试中保持不变。</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>删除主题和订阅</source>
          <target state="new">删除主题和订阅</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>主题和订阅具有持久性，必须通过 <bpt id="p1">[</bpt>Azure 经典门户<ept id="p1">](https://manage.windowsazure.cn)</ept>或以编程方式显式删除。下面的示例演示如何删除名为“test-topic”的主题：</source>
          <target state="new">主题和订阅具有持久性，必须通过 <bpt id="p1">[</bpt>Azure 经典门户<ept id="p1">](https://manage.windowsazure.cn)</ept>或以编程方式显式删除。下面的示例演示如何删除名为“test-topic”的主题：</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>删除某个主题也会删除向该主题注册的所有订阅。也可以单独删除订阅。下面的代码演示如何从“test-topic”主题中删除名为“high-messages”的订阅：</source>
          <target state="new">删除某个主题也会删除向该主题注册的所有订阅。也可以单独删除订阅。下面的代码演示如何从“test-topic”主题中删除名为“high-messages”的订阅：</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>现在，你已了解有关 Service Bus 主题的基础知识，单击下面的链接可了解更多信息。</source>
          <target state="new">现在，你已了解有关 Service Bus 主题的基础知识，单击下面的链接可了解更多信息。</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>请参阅<bpt id="p1">[</bpt>队列、主题和订阅<ept id="p1">](/documentation/articles/service-bus-queues-topics-subscriptions)</ept>。</source>
          <target state="new">请参阅<bpt id="p1">[</bpt>队列、主题和订阅<ept id="p1">](/documentation/articles/service-bus-queues-topics-subscriptions)</ept>。</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SqlFilter<ept id="p1">](http://msdn.microsoft.com/zh-cn/library/windowsazure/microsoft.servicebus.messaging.sqlfilter.aspx)</ept> 的 API 参考。</source>
          <target state="new"><bpt id="p1">[</bpt>SqlFilter<ept id="p1">](http://msdn.microsoft.com/zh-cn/library/windowsazure/microsoft.servicebus.messaging.sqlfilter.aspx)</ept> 的 API 参考。</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>访问 GitHub 上的 <bpt id="p1">[</bpt>Azure SDK for Ruby<ept id="p1">](https://github.com/WindowsAzure/azure-sdk-for-ruby)</ept> 存储库</source>
          <target state="new">访问 GitHub 上的 <bpt id="p1">[</bpt>Azure SDK for Ruby<ept id="p1">](https://github.com/WindowsAzure/azure-sdk-for-ruby)</ept> 存储库</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>[Azure 经典门户]: http://manage.windowsazure.cn</source>
          <target state="new">[Azure 经典门户]: http://manage.windowsazure.cn</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>