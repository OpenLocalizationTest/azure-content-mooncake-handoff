<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f707548901e7c02343aba1859ff5403bfbe4d0b7</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>多分片查询 |Azure</source>
          <target state="new">多分片查询 |Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>使用弹性数据库客户端库运行跨分片查询。</source>
          <target state="new">使用弹性数据库客户端库运行跨分片查询。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>多分片查询</source>
          <target state="new">多分片查询</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>概述</source>
          <target state="new">概述</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>你可以使用<bpt id="p1">[</bpt>弹性数据库工具<ept id="p1">](/documentation/articles/sql-database-elastic-scale-introduction)</ept>创建分片数据库解决方案。<bpt id="p2">**</bpt>多分片查询<ept id="p2">**</ept>用于诸如数据收集/报告等需要跨多个分片运行查询的任务。（相比之下，<bpt id="p3">[</bpt>数据相关的路由<ept id="p3">](/documentation/articles/sql-database-elastic-scale-data-dependent-routing)</ept>会在单个分片上执行所有操作。）</source>
          <target state="new">你可以使用<bpt id="p1">[</bpt>弹性数据库工具<ept id="p1">](/documentation/articles/sql-database-elastic-scale-introduction)</ept>创建分片数据库解决方案。<bpt id="p2">**</bpt>多分片查询<ept id="p2">**</ept>用于诸如数据收集/报告等需要跨多个分片运行查询的任务。（相比之下，<bpt id="p3">[</bpt>数据相关的路由<ept id="p3">](/documentation/articles/sql-database-elastic-scale-data-dependent-routing)</ept>会在单个分片上执行所有操作。）</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>你可以使用<bpt id="p1">[</bpt>弹性数据库客户端库<ept id="p1">](/documentation/articles/sql-database-elastic-database-client-library)</ept>管理分片。该库包括名为 <bpt id="p2">**</bpt>Microsoft.Azure.SqlDatabase.ElasticScale.Query<ept id="p2">**</ept> 的命名空间，你可以通过该空间使用单个查询和结果来查询多个分片。它提供对分片集合进行查询抽象的功能。它还提供了备用执行策略，尤其是部分结果，以处理在对多个分片进行查询时所出现的故障。</source>
          <target state="new">你可以使用<bpt id="p1">[</bpt>弹性数据库客户端库<ept id="p1">](/documentation/articles/sql-database-elastic-database-client-library)</ept>管理分片。该库包括名为 <bpt id="p2">**</bpt>Microsoft.Azure.SqlDatabase.ElasticScale.Query<ept id="p2">**</ept> 的命名空间，你可以通过该空间使用单个查询和结果来查询多个分片。它提供对分片集合进行查询抽象的功能。它还提供了备用执行策略，尤其是部分结果，以处理在对多个分片进行查询时所出现的故障。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>多分片查询的主要入口点是 <bpt id="p1">**</bpt>MultiShardConnection<ept id="p1">**</ept> 类。与使用数据相关路由一样，该 API 遵循 ****<bpt id="p2">[</bpt>System.Data.SqlClient<ept id="p2">](http://msdn.microsoft.com/zh-cn/library/System.Data.SqlClient(v=vs.110).aspx)</ept>** 类和方法的熟悉体验。在 <bpt id="p3">**</bpt>SqlClient<ept id="p3">**</ept> 库中，第一步是创建 <bpt id="p4">**</bpt>SqlConnection<ept id="p4">**</ept>，然后创建 <bpt id="p5">**</bpt>SqlCommand<ept id="p5">**</ept> 以用于连接，再通过某个 <bpt id="p6">**</bpt>Execute<ept id="p6">**</ept> 方法执行命令。最后，<bpt id="p7">**</bpt>SqlDataReader<ept id="p7">**</ept> 将循环访问从命令执行返回的结果集。多分片查询 API 方面的体验遵循以下步骤：</source>
          <target state="new">多分片查询的主要入口点是 <bpt id="p1">**</bpt>MultiShardConnection<ept id="p1">**</ept> 类。与使用数据相关路由一样，该 API 遵循 ****<bpt id="p2">[</bpt>System.Data.SqlClient<ept id="p2">](http://msdn.microsoft.com/zh-cn/library/System.Data.SqlClient(v=vs.110).aspx)</ept>** 类和方法的熟悉体验。在 <bpt id="p3">**</bpt>SqlClient<ept id="p3">**</ept> 库中，第一步是创建 <bpt id="p4">**</bpt>SqlConnection<ept id="p4">**</ept>，然后创建 <bpt id="p5">**</bpt>SqlCommand<ept id="p5">**</ept> 以用于连接，再通过某个 <bpt id="p6">**</bpt>Execute<ept id="p6">**</ept> 方法执行命令。最后，<bpt id="p7">**</bpt>SqlDataReader<ept id="p7">**</ept> 将循环访问从命令执行返回的结果集。多分片查询 API 方面的体验遵循以下步骤：</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>创建 <bpt id="p1">**</bpt>MultiShardConnection<ept id="p1">**</ept>。</source>
          <target state="new">创建 <bpt id="p1">**</bpt>MultiShardConnection<ept id="p1">**</ept>。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>为 <bpt id="p1">**</bpt>MultiShardConnection<ept id="p1">**</ept> 创建 <bpt id="p2">**</bpt>MultiShardCommand<ept id="p2">**</ept>。</source>
          <target state="new">为 <bpt id="p1">**</bpt>MultiShardConnection<ept id="p1">**</ept> 创建 <bpt id="p2">**</bpt>MultiShardCommand<ept id="p2">**</ept>。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>执行命令。</source>
          <target state="new">执行命令。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>通过 <bpt id="p1">**</bpt>MultiShardDataReader<ept id="p1">**</ept> 使用结果。</source>
          <target state="new">通过 <bpt id="p1">**</bpt>MultiShardDataReader<ept id="p1">**</ept> 使用结果。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>主要区别在于多分片连接的构建。其中 <bpt id="p1">**</bpt>SqlConnection<ept id="p1">**</ept> 在单一数据库上进行操作，而 <bpt id="p2">**</bpt>MultiShardConnection<ept id="p2">**</ept> 将<bpt id="p3">***</bpt>分片集合<ept id="p3">***</ept>用作其输入。用户可以填充分片映射中的分片集合。然后，使用 <bpt id="p4">**</bpt>UNION ALL<ept id="p4">**</ept> 语义组成一个总体结果在分片集合上执行查询。或者，也可以在命令上使用 <bpt id="p5">**</bpt>ExecutionOptions<ept id="p5">**</ept> 属性，以将行所源自的分片的名称添加到输出。</source>
          <target state="new">主要区别在于多分片连接的构建。其中 <bpt id="p1">**</bpt>SqlConnection<ept id="p1">**</ept> 在单一数据库上进行操作，而 <bpt id="p2">**</bpt>MultiShardConnection<ept id="p2">**</ept> 将<bpt id="p3">***</bpt>分片集合<ept id="p3">***</ept>用作其输入。用户可以填充分片映射中的分片集合。然后，使用 <bpt id="p4">**</bpt>UNION ALL<ept id="p4">**</ept> 语义组成一个总体结果在分片集合上执行查询。或者，也可以在命令上使用 <bpt id="p5">**</bpt>ExecutionOptions<ept id="p5">**</ept> 属性，以将行所源自的分片的名称添加到输出。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>示例</source>
          <target state="new">示例</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>以下代码使用给定的 <bpt id="p1">**</bpt>ShardMap<ept id="p1">**</ept>（名为<bpt id="p2">*</bpt>myShardMap<ept id="p2">*</ept>）来演示多分片查询的用法。</source>
          <target state="new">以下代码使用给定的 <bpt id="p1">**</bpt>ShardMap<ept id="p1">**</ept>（名为<bpt id="p2">*</bpt>myShardMap<ept id="p2">*</ept>）来演示多分片查询的用法。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>请注意对 <bpt id="p1">**</bpt>myShardMap.GetShards()<ept id="p1">**</ept> 的调用。通过此方法可从分片映射中检索所有分片，还可轻松在该分片映射中的所有分片之间运行查询。对通过调用 <bpt id="p2">**</bpt>myShardMap.GetShards()<ept id="p2">**</ept> 返回的集合执行 LINQ 查询，以进一步优化用于多分片查询的分片集合。多分片查询中的当前功能已随部分结果策略一起被设计为供数十至数百种分片使用。</source>
          <target state="new">请注意对 <bpt id="p1">**</bpt>myShardMap.GetShards()<ept id="p1">**</ept> 的调用。通过此方法可从分片映射中检索所有分片，还可轻松在该分片映射中的所有分片之间运行查询。对通过调用 <bpt id="p2">**</bpt>myShardMap.GetShards()<ept id="p2">**</ept> 返回的集合执行 LINQ 查询，以进一步优化用于多分片查询的分片集合。多分片查询中的当前功能已随部分结果策略一起被设计为供数十至数百种分片使用。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>多分片查询目前存在的一个限制是，缺少对需要查询的分片和 shardlet 进行验证。尽管数据相关路由会在查询时验证给定的分片是否为分片映射的一部分，但多分片查询不会执行此检查。这可能会导致多分片查询在已从分片映射中删除的分片上运行。</source>
          <target state="new">多分片查询目前存在的一个限制是，缺少对需要查询的分片和 shardlet 进行验证。尽管数据相关路由会在查询时验证给定的分片是否为分片映射的一部分，但多分片查询不会执行此检查。这可能会导致多分片查询在已从分片映射中删除的分片上运行。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>多分片查询和拆分/合并操作</source>
          <target state="new">多分片查询和拆分/合并操作</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>多分片查询不会验证查询的分片上的 shardlet 是否参与了正在进行的拆分/合并操作。（请参阅<bpt id="p1">[</bpt>使用弹性数据库拆分/合并工具进行缩放<ept id="p1">](/documentation/articles/sql-database-elastic-scale-overview-split-and-merge)</ept>。） 这可能会导致不一致问题，即为同一多分片查询中的多个分片显示同一 shardlet 中的行。请注意这些限制并在执行多分片查询时，考虑关闭正在进行的合拆分操作以及对分片映射的更改。</source>
          <target state="new">多分片查询不会验证查询的分片上的 shardlet 是否参与了正在进行的拆分/合并操作。（请参阅<bpt id="p1">[</bpt>使用弹性数据库拆分/合并工具进行缩放<ept id="p1">](/documentation/articles/sql-database-elastic-scale-overview-split-and-merge)</ept>。） 这可能会导致不一致问题，即为同一多分片查询中的多个分片显示同一 shardlet 中的行。请注意这些限制并在执行多分片查询时，考虑关闭正在进行的合拆分操作以及对分片映射的更改。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>