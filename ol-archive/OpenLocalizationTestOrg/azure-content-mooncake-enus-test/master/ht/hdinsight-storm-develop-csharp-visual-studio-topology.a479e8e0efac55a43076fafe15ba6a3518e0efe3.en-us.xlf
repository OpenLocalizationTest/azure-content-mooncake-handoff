<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8acc5486d132a38866fa132e24fcc4ea27f63611</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>使用 Visual Studio 和 C# 创建 Apache Storm 拓扑 | Azure</source>
          <target state="new">使用 Visual Studio 和 C# 创建 Apache Storm 拓扑 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何通过使用 HDInsight Tools for Visual Studio 创建一个简单的单词计数拓扑，来以 C# 语言创建一个 Storm 拓扑。</source>
          <target state="new">了解如何通过使用 HDInsight Tools for Visual Studio 创建一个简单的单词计数拓扑，来以 C# 语言创建一个 Storm 拓扑。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>使用 Hadoop Tools for Visual Studio 开发 Apache Storm on HDInsight 的 C# 拓扑</source>
          <target state="new">使用 Hadoop Tools for Visual Studio 开发 Apache Storm on HDInsight 的 C# 拓扑</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>了解如何使用 HDInsight Tools for Visual Studio 创建 C# Storm 拓扑。本教程逐步说明在 Visual Studio 中创建新的 Storm 项目、在本地测试该项目，然后将它部署到 Apache Storm on HDInsight 群集的过程。</source>
          <target state="new">了解如何使用 HDInsight Tools for Visual Studio 创建 C# Storm 拓扑。本教程逐步说明在 Visual Studio 中创建新的 Storm 项目、在本地测试该项目，然后将它部署到 Apache Storm on HDInsight 群集的过程。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>你还将学习如何创建使用 C# 和 Java 组件的混合拓扑。</source>
          <target state="new">你还将学习如何创建使用 C# 和 Java 组件的混合拓扑。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>先决条件</source>
          <target state="new">先决条件</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>下列其中一个版本的 Visual Studio</source>
          <target state="new">下列其中一个版本的 Visual Studio</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Visual Studio 2012 <bpt id="p1">[</bpt>Update 4<ept id="p1">](http://www.microsoft.com/download/details.aspx?id=39305)</ept></source>
          <target state="new">Visual Studio 2012 <bpt id="p1">[</bpt>Update 4<ept id="p1">](http://www.microsoft.com/download/details.aspx?id=39305)</ept></target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Visual Studio 2013 <bpt id="p1">[</bpt>Update 4<ept id="p1">](http://www.microsoft.com/download/details.aspx?id=44921)</ept> 或 <bpt id="p2">[</bpt>Visual Studio 2013 Community<ept id="p2">](http://download.microsoft.com/download/7/1/B/71BA74D8-B9A0-4E6C-9159-A8335D54437E/vs_community.exe)</ept></source>
          <target state="new">Visual Studio 2013 <bpt id="p1">[</bpt>Update 4<ept id="p1">](http://www.microsoft.com/download/details.aspx?id=44921)</ept> 或 <bpt id="p2">[</bpt>Visual Studio 2013 Community<ept id="p2">](http://download.microsoft.com/download/7/1/B/71BA74D8-B9A0-4E6C-9159-A8335D54437E/vs_community.exe)</ept></target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Visual Studio 2015 或 <bpt id="p1">[</bpt>Visual Studio 2015 Community<ept id="p1">](http://download.microsoft.com/download/0/B/C/0BC321A4-013F-479C-84E6-4A2F90B11269/vs_community.exe)</ept></source>
          <target state="new">Visual Studio 2015 或 <bpt id="p1">[</bpt>Visual Studio 2015 Community<ept id="p1">](http://download.microsoft.com/download/0/B/C/0BC321A4-013F-479C-84E6-4A2F90B11269/vs_community.exe)</ept></target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Azure SDK 2.5.1 或更高版本</source>
          <target state="new">Azure SDK 2.5.1 或更高版本</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>HDInsight Tools for Visual Studio - 参阅<bpt id="p1">[</bpt>开始使用 HDInsight Tools for Visual Studio<ept id="p1">](/documentation/articles/hdinsight-hadoop-visual-studio-tools-get-started)</ept> 安装并配置 HDInsight Tools for Visual Studio。</source>
          <target state="new">HDInsight Tools for Visual Studio - 参阅<bpt id="p1">[</bpt>开始使用 HDInsight Tools for Visual Studio<ept id="p1">](/documentation/articles/hdinsight-hadoop-visual-studio-tools-get-started)</ept> 安装并配置 HDInsight Tools for Visual Studio。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>Visual Studio Express 不支持 HDInsight Tools for Visual Studio</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>Visual Studio Express 不支持 HDInsight Tools for Visual Studio</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Apache Storm on HDInsight 群集：参阅 <bpt id="p1">[</bpt>Apache Storm on HDInsight 入门<ept id="p1">](/documentation/articles/hdinsight-apache-storm-tutorial-get-started)</ept>了解创建群集的步骤。</source>
          <target state="new">Apache Storm on HDInsight 群集：参阅 <bpt id="p1">[</bpt>Apache Storm on HDInsight 入门<ept id="p1">](/documentation/articles/hdinsight-apache-storm-tutorial-get-started)</ept>了解创建群集的步骤。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>HDInsight Tools for Visual Studio 目前只支持 Storm on HDInsight 版本 3.2 群集。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>HDInsight Tools for Visual Studio 目前只支持 Storm on HDInsight 版本 3.2 群集。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>模板</source>
          <target state="new">模板</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>HDInsight Tools for Visual Studio 提供以下模板：</source>
          <target state="new">HDInsight Tools for Visual Studio 提供以下模板：</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>项目类型</source>
          <target state="new">项目类型</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>演示</source>
          <target state="new">演示</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Storm 应用程序</source>
          <target state="new">Storm 应用程序</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>一个空的 Storm 拓扑项目</source>
          <target state="new">一个空的 Storm 拓扑项目</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Storm Azure SQL 写入器示例</source>
          <target state="new">Storm Azure SQL 写入器示例</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>如何写入 Azure SQL 数据库</source>
          <target state="new">如何写入 Azure SQL 数据库</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Storm DocumentDB 读取器示例</source>
          <target state="new">Storm DocumentDB 读取器示例</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>如何从 Azure DocumentDB 读取</source>
          <target state="new">如何从 Azure DocumentDB 读取</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Storm DocumentDB 写入器示例</source>
          <target state="new">Storm DocumentDB 写入器示例</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>如何写入 Azure DocumentDB</source>
          <target state="new">如何写入 Azure DocumentDB</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Storm EventHub 读取器示例</source>
          <target state="new">Storm EventHub 读取器示例</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>如何从 Azure 事件中心读取</source>
          <target state="new">如何从 Azure 事件中心读取</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Storm EventHub 写入器示例</source>
          <target state="new">Storm EventHub 写入器示例</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>如何写入 Azure 事件中心</source>
          <target state="new">如何写入 Azure 事件中心</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Storm HBase 读取器示例</source>
          <target state="new">Storm HBase 读取器示例</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>如何从 HDInsight 群集上的 HBase 读取</source>
          <target state="new">如何从 HDInsight 群集上的 HBase 读取</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Storm HBase 写入器示例</source>
          <target state="new">Storm HBase 写入器示例</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>如何写入 HDInsight 群集上的 HBase</source>
          <target state="new">如何写入 HDInsight 群集上的 HBase</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Storm 混合示例</source>
          <target state="new">Storm 混合示例</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>如何使用 Java 组件</source>
          <target state="new">如何使用 Java 组件</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Storm 示例</source>
          <target state="new">Storm 示例</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>一个基本的单词计数拓扑</source>
          <target state="new">一个基本的单词计数拓扑</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>HBase 读取器和写入器示例使用 HBase REST API 与 HDInsight 群集上的 HBase 通信，而不是 HBase Java API。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>HBase 读取器和写入器示例使用 HBase REST API 与 HDInsight 群集上的 HBase 通信，而不是 HBase Java API。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>在本文档的步骤中，你将使用基本 Storm 应用程序项目类型来创建新拓扑。</source>
          <target state="new">在本文档的步骤中，你将使用基本 Storm 应用程序项目类型来创建新拓扑。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>创建 C# 拓扑</source>
          <target state="new">创建 C# 拓扑</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>如果你尚未安装最新版本的 HDInsight Tools for Visual Studio，请参阅<bpt id="p1">[</bpt>开始使用 HDInsight Tools for Visual Studio<ept id="p1">](/documentation/articles/hdinsight-hadoop-visual-studio-tools-get-started)</ept>。</source>
          <target state="new">如果你尚未安装最新版本的 HDInsight Tools for Visual Studio，请参阅<bpt id="p1">[</bpt>开始使用 HDInsight Tools for Visual Studio<ept id="p1">](/documentation/articles/hdinsight-hadoop-visual-studio-tools-get-started)</ept>。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>打开 Visual Studio，选择“文件”&gt;“新建”&gt;“项目”。</source>
          <target state="new">打开 Visual Studio，选择“文件”&gt;“新建”&gt;“项目”。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>在“新建项目”屏幕中，展开“已安装”&gt;“模板”，然后选择“HDInsight”。从模板列表中，选择“Storm 应用程序”。在屏幕底部，输入 <bpt id="p1">**</bpt>WordCount<ept id="p1">**</ept> 作为应用程序名称。</source>
          <target state="new">在“新建项目”屏幕中，展开“已安装”&gt;“模板”，然后选择“HDInsight”。从模板列表中，选择“Storm 应用程序”。在屏幕底部，输入 <bpt id="p1">**</bpt>WordCount<ept id="p1">**</ept> 作为应用程序名称。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>图像</source>
          <target state="new">图像</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>创建项目后，你应该会获得以下文件：</source>
          <target state="new">创建项目后，你应该会获得以下文件：</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept>：定义项目的拓扑。请注意，默认情况下会创建包含一个 Spout 和一个 Bolt 的默认拓扑。</source>
          <target state="new"><bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept>：定义项目的拓扑。请注意，默认情况下会创建包含一个 Spout 和一个 Bolt 的默认拓扑。</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Spout.cs<ept id="p1">**</ept>：发出随机数的示例 Spout。</source>
          <target state="new"><bpt id="p1">**</bpt>Spout.cs<ept id="p1">**</ept>：发出随机数的示例 Spout。</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Bolt.cs<ept id="p1">**</ept>：保留 Spout 所发出数字计数的示例 Bolt。</source>
          <target state="new"><bpt id="p1">**</bpt>Bolt.cs<ept id="p1">**</ept>：保留 Spout 所发出数字计数的示例 Bolt。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>在创建项目过程中，将会从 NuGet 下载最新的 <bpt id="p1">[</bpt>SCP.NET 包<ept id="p1">](https://www.nuget.org/packages/Microsoft.SCP.Net.SDK/)</ept>。</source>
          <target state="new">在创建项目过程中，将会从 NuGet 下载最新的 <bpt id="p1">[</bpt>SCP.NET 包<ept id="p1">](https://www.nuget.org/packages/Microsoft.SCP.Net.SDK/)</ept>。</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>在以下部分中，你要将此项目修改成基本 WordCount 应用程序。</source>
          <target state="new">在以下部分中，你要将此项目修改成基本 WordCount 应用程序。</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>实现 Spout</source>
          <target state="new">实现 Spout</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>打开 <bpt id="p1">**</bpt>Spout.cs<ept id="p1">**</ept>。Spout 用于将外部源中的数据读入拓扑。Spout 的主要组件如下：</source>
          <target state="new">打开 <bpt id="p1">**</bpt>Spout.cs<ept id="p1">**</ept>。Spout 用于将外部源中的数据读入拓扑。Spout 的主要组件如下：</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>NextTuple<ept id="p1">**</ept>：允许 Spout 发出新的 Tuple 时由 Storm 调用。</source>
          <target state="new"><bpt id="p1">**</bpt>NextTuple<ept id="p1">**</ept>：允许 Spout 发出新的 Tuple 时由 Storm 调用。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Ack<ept id="p1">**</ept>（仅限事务拓扑）：针对从此 Spout 发送的 Tuple，处理拓扑中其他组件所发起的确认。确认 Tuple 可让 Spout 知道下游组件已成功处理 Tuple。</source>
          <target state="new"><bpt id="p1">**</bpt>Ack<ept id="p1">**</ept>（仅限事务拓扑）：针对从此 Spout 发送的 Tuple，处理拓扑中其他组件所发起的确认。确认 Tuple 可让 Spout 知道下游组件已成功处理 Tuple。</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Fail<ept id="p1">**</ept>（仅限事务拓扑）：处理无法处理拓扑中其他组件的 Tuple。这提供机会来重新发出 Tuple，以重新处理 Tuple。</source>
          <target state="new"><bpt id="p1">**</bpt>Fail<ept id="p1">**</ept>（仅限事务拓扑）：处理无法处理拓扑中其他组件的 Tuple。这提供机会来重新发出 Tuple，以重新处理 Tuple。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>将 <bpt id="p1">**</bpt>Spout<ept id="p1">**</ept> 类的内容替换为以下内容。这会创建将句子随机发出到拓扑中的 Spout。</source>
          <target state="new">将 <bpt id="p1">**</bpt>Spout<ept id="p1">**</ept> 类的内容替换为以下内容。这会创建将句子随机发出到拓扑中的 Spout。</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>请花片时间阅读注释，以了解此代码的作用。</source>
          <target state="new">请花片时间阅读注释，以了解此代码的作用。</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>实现 Bolt</source>
          <target state="new">实现 Bolt</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>删除项目中的现有 <bpt id="p1">**</bpt>Bolt.cs<ept id="p1">**</ept> 文件。</source>
          <target state="new">删除项目中的现有 <bpt id="p1">**</bpt>Bolt.cs<ept id="p1">**</ept> 文件。</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>在“解决方案资源管理器”中，右键单击项目，然后依次选择“添加”和“新建项”。从列表中选择“Storm Bolt”，并输入 <bpt id="p1">**</bpt>Splitter.cs<ept id="p1">**</ept> 作为名称。重复此操作，以创建名为 <bpt id="p2">**</bpt>Counter.cs<ept id="p2">**</ept> 的另一个 Bolt。</source>
          <target state="new">在“解决方案资源管理器”中，右键单击项目，然后依次选择“添加”和“新建项”。从列表中选择“Storm Bolt”，并输入 <bpt id="p1">**</bpt>Splitter.cs<ept id="p1">**</ept> 作为名称。重复此操作，以创建名为 <bpt id="p2">**</bpt>Counter.cs<ept id="p2">**</ept> 的另一个 Bolt。</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Splitter.cs<ept id="p1">**</ept>：实现 Bolt，以将句子分割成不同的单词并发出一串新单词。</source>
          <target state="new"><bpt id="p1">**</bpt>Splitter.cs<ept id="p1">**</ept>：实现 Bolt，以将句子分割成不同的单词并发出一串新单词。</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Counter.cs<ept id="p1">**</ept>：实现 Bolt，以统计每个单词的数目，并发出一串新单词和每个单词的计数。</source>
          <target state="new"><bpt id="p1">**</bpt>Counter.cs<ept id="p1">**</ept>：实现 Bolt，以统计每个单词的数目，并发出一串新单词和每个单词的计数。</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>这些 Bolt 只会读取和写入流，但是你也可以使用 Bolt 来与数据库或服务等源进行通信。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>这些 Bolt 只会读取和写入流，但是你也可以使用 Bolt 来与数据库或服务等源进行通信。</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>打开 <bpt id="p1">**</bpt>Splitter.cs<ept id="p1">**</ept>。请注意，默认情况下它只包含一个方法 <bpt id="p2">**</bpt>Execute<ept id="p2">**</ept>。在 Bolt 收到要处理的 Tuple 时将调用此方法。此时，你可以读取和处理传入 Tuple，以及发出传出 Tuple。</source>
          <target state="new">打开 <bpt id="p1">**</bpt>Splitter.cs<ept id="p1">**</ept>。请注意，默认情况下它只包含一个方法 <bpt id="p2">**</bpt>Execute<ept id="p2">**</ept>。在 Bolt 收到要处理的 Tuple 时将调用此方法。此时，你可以读取和处理传入 Tuple，以及发出传出 Tuple。</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>将 <bpt id="p1">**</bpt>Splitter<ept id="p1">**</ept> 类的内容替换为以下代码：</source>
          <target state="new">将 <bpt id="p1">**</bpt>Splitter<ept id="p1">**</ept> 类的内容替换为以下代码：</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>请花片时间阅读注释，以了解此代码的作用。</source>
          <target state="new">请花片时间阅读注释，以了解此代码的作用。</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>打开 <bpt id="p1">**</bpt>Counter.cs<ept id="p1">**</ept> 并将类内容替换为以下内容。</source>
          <target state="new">打开 <bpt id="p1">**</bpt>Counter.cs<ept id="p1">**</ept> 并将类内容替换为以下内容。</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>请花片时间阅读注释，以了解此代码的作用。</source>
          <target state="new">请花片时间阅读注释，以了解此代码的作用。</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>定义拓扑</source>
          <target state="new">定义拓扑</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Spout 和 Bolt 以图形方式排列，用于定义数据在组件之间的流动方式。此拓扑的图形如下：</source>
          <target state="new">Spout 和 Bolt 以图形方式排列，用于定义数据在组件之间的流动方式。此拓扑的图形如下：</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>组件的排列方式图像</source>
          <target state="new">组件的排列方式图像</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>句子从 Spout 发出，并分布到 Splitter Bolt 的实例。Splitter Bolt 将句子分割成多个单词，并将这些单词分布到 Counter Bolt。</source>
          <target state="new">句子从 Spout 发出，并分布到 Splitter Bolt 的实例。Splitter Bolt 将句子分割成多个单词，并将这些单词分布到 Counter Bolt。</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>因为字数会本地保留在 Counter 实例中，所以我们想要确保特定单词流向相同的 Counter Bolt 实例，因此只能有一个实例跟踪特定单词。但是，针对 Splitter Bolt，哪个 Bolt 收到哪个句子并不重要，因此，我们只想要将句子负载平衡到那些实例。</source>
          <target state="new">因为字数会本地保留在 Counter 实例中，所以我们想要确保特定单词流向相同的 Counter Bolt 实例，因此只能有一个实例跟踪特定单词。但是，针对 Splitter Bolt，哪个 Bolt 收到哪个句子并不重要，因此，我们只想要将句子负载平衡到那些实例。</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>打开 <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept>。重要的方法是 <bpt id="p2">**</bpt>ITopologyBuilder<ept id="p2">**</ept>，它用于定义提交到 Storm 的拓扑。将 <bpt id="p3">**</bpt>ITopologyBuilder<ept id="p3">**</ept> 的内容替换为以下代码，以实现上面所述的拓扑。</source>
          <target state="new">打开 <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept>。重要的方法是 <bpt id="p2">**</bpt>ITopologyBuilder<ept id="p2">**</ept>，它用于定义提交到 Storm 的拓扑。将 <bpt id="p3">**</bpt>ITopologyBuilder<ept id="p3">**</ept> 的内容替换为以下代码，以实现上面所述的拓扑。</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>请花片时间阅读注释，以了解此代码的作用。</source>
          <target state="new">请花片时间阅读注释，以了解此代码的作用。</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>提交拓扑</source>
          <target state="new">提交拓扑</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>在“解决方案资源管理器”中，右键单击项目，然后选择“提交到 Storm on HDInsight”。</source>
          <target state="new">在“解决方案资源管理器”中，右键单击项目，然后选择“提交到 Storm on HDInsight”。</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>如果出现提示，请输入你 Azure 订阅的登录凭据。如果你有多个订阅，请登录包含 Storm on HDInsight 群集的订阅。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>如果出现提示，请输入你 Azure 订阅的登录凭据。如果你有多个订阅，请登录包含 Storm on HDInsight 群集的订阅。</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>从“Storm 群集”下拉列表中选择你的 Storm on HDInsight 群集，然后选择“提交”。你可以使用“输出”窗口监视提交是否成功。</source>
          <target state="new">从“Storm 群集”下拉列表中选择你的 Storm on HDInsight 群集，然后选择“提交”。你可以使用“输出”窗口监视提交是否成功。</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>成功提交拓扑之后，应该会出现群集的“Storm 拓扑”。从列表中选择“WordCount”拓扑，以查看有关正在运行的拓扑的信息。</source>
          <target state="new">成功提交拓扑之后，应该会出现群集的“Storm 拓扑”。从列表中选择“WordCount”拓扑，以查看有关正在运行的拓扑的信息。</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>你也可以展开“Azure”&gt;“HDInsight”，右键单击 Storm on HDInsight 群集，然后选择“查看 Storm 拓扑”，来从“服务器资源管理器”查看“Storm 拓扑”。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>你也可以展开“Azure”&gt;“HDInsight”，右键单击 Storm on HDInsight 群集，然后选择“查看 Storm 拓扑”，来从“服务器资源管理器”查看“Storm 拓扑”。</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>使用 Spout 或 Bolt 的链接查看有关这些组件的信息。将会针对每个选择的项打开一个新窗口。</source>
          <target state="new">使用 Spout 或 Bolt 的链接查看有关这些组件的信息。将会针对每个选择的项打开一个新窗口。</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>从“拓扑摘要”视图中，单击“终止”以停止拓扑。</source>
          <target state="new">从“拓扑摘要”视图中，单击“终止”以停止拓扑。</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>Storm 拓扑会一直运行，直到它被停用，或者群集被删除。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>Storm 拓扑会一直运行，直到它被停用，或者群集被删除。</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>事务拓扑</source>
          <target state="new">事务拓扑</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>前面的拓扑是非事务性的如果拓扑中某个组件的处理失败，则拓扑内的组件不会实现任何功能来重放消息。针对示例事务拓扑，请创建新项目，然后选择“Storm 示例”作为项目类型。</source>
          <target state="new">前面的拓扑是非事务性的如果拓扑中某个组件的处理失败，则拓扑内的组件不会实现任何功能来重放消息。针对示例事务拓扑，请创建新项目，然后选择“Storm 示例”作为项目类型。</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>事务拓扑会实现以下项来支持重放数据：</source>
          <target state="new">事务拓扑会实现以下项来支持重放数据：</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>元数据缓存<ept id="p1">**</ept>：Spout 必须存储所发出数据的元数据，这样，在失败时，就可以检索和发出数据。此示例所发出的数据太少，因此为了重放，每个 Tuple 的原始数据都会存储在字典中。</source>
          <target state="new"><bpt id="p1">**</bpt>元数据缓存<ept id="p1">**</ept>：Spout 必须存储所发出数据的元数据，这样，在失败时，就可以检索和发出数据。此示例所发出的数据太少，因此为了重放，每个 Tuple 的原始数据都会存储在字典中。</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>确认<ept id="p1">**</ept>：拓扑中的每个 Bolt 都可以调用 <ph id="ph1">`this.ctx.Ack(tuple)`</ph> 来确认它已成功处理 Tuple。所有 Bolt 都已确认 Tuple 之后，即会调用 Spout 的 <ph id="ph2">`Ack`</ph> 方法。这可让 Spout 删除用于重放的缓存数据，因为已完全处理数据。</source>
          <target state="new"><bpt id="p1">**</bpt>确认<ept id="p1">**</ept>：拓扑中的每个 Bolt 都可以调用 <ph id="ph1">`this.ctx.Ack(tuple)`</ph> 来确认它已成功处理 Tuple。所有 Bolt 都已确认 Tuple 之后，即会调用 Spout 的 <ph id="ph2">`Ack`</ph> 方法。这可让 Spout 删除用于重放的缓存数据，因为已完全处理数据。</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>失败<ept id="p1">**</ept>：每个 Bolt 都可以调用 <ph id="ph1">`this.ctx.Fail(tuple)`</ph>，指出 Tuple 的处理失败。这项失败会传播到 Spout 的 <ph id="ph2">`Fail`</ph> 方法，在其中，可以使用缓存的元数据来重放 Tuple。</source>
          <target state="new"><bpt id="p1">**</bpt>失败<ept id="p1">**</ept>：每个 Bolt 都可以调用 <ph id="ph1">`this.ctx.Fail(tuple)`</ph>，指出 Tuple 的处理失败。这项失败会传播到 Spout 的 <ph id="ph2">`Fail`</ph> 方法，在其中，可以使用缓存的元数据来重放 Tuple。</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>序列 ID<ept id="p1">**</ept>：发出 Tuple 时，可以指定序列 ID。这应该是标识用于重放（确认和失败）处理的 Tuple 的值。例如，发出数据时，<bpt id="p2">**</bpt>Storm 示例<ept id="p2">**</ept>项目中的 Spout 会使用以下项：</source>
          <target state="new"><bpt id="p1">**</bpt>序列 ID<ept id="p1">**</ept>：发出 Tuple 时，可以指定序列 ID。这应该是标识用于重放（确认和失败）处理的 Tuple 的值。例如，发出数据时，<bpt id="p2">**</bpt>Storm 示例<ept id="p2">**</ept>项目中的 Spout 会使用以下项：</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>这会发出包含默认数据流的句子的新 Tuple，以及 <bpt id="p1">**</bpt>lastSeqId<ept id="p1">**</ept> 中所含的序列 ID 值。在此示例中，只会递增每个发出的 Tuple 的 <bpt id="p2">**</bpt>lastSeqId<ept id="p2">**</ept>。</source>
          <target state="new">这会发出包含默认数据流的句子的新 Tuple，以及 <bpt id="p1">**</bpt>lastSeqId<ept id="p1">**</ept> 中所含的序列 ID 值。在此示例中，只会递增每个发出的 Tuple 的 <bpt id="p2">**</bpt>lastSeqId<ept id="p2">**</ept>。</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>如 <bpt id="p1">**</bpt>Storm 示例<ept id="p1">**</ept>项目中所示，在运行时，可以根据配置来设置组件是否为事务性。</source>
          <target state="new">如 <bpt id="p1">**</bpt>Storm 示例<ept id="p1">**</ept>项目中所示，在运行时，可以根据配置来设置组件是否为事务性。</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>混合拓扑</source>
          <target state="new">混合拓扑</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>HDInsight Tools for Visual Studio 还可用于创建混合拓扑，其中，有些组件是 C#，有些是 Java。</source>
          <target state="new">HDInsight Tools for Visual Studio 还可用于创建混合拓扑，其中，有些组件是 C#，有些是 Java。</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>针对示例混合拓扑，请创建一个新项目，然后选择“Storm 混合示例”。这会创建完全注释的示例，此示例包含演示以下项的多个拓扑：</source>
          <target state="new">针对示例混合拓扑，请创建一个新项目，然后选择“Storm 混合示例”。这会创建完全注释的示例，此示例包含演示以下项的多个拓扑：</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Java Spout<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>C# Bolt<ept id="p2">**</ept>：在 <bpt id="p3">**</bpt>HybridTopology\_javaSpout\_csharpBolt<ept id="p3">**</ept> 中定义</source>
          <target state="new"><bpt id="p1">**</bpt>Java Spout<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>C# Bolt<ept id="p2">**</ept>：在 <bpt id="p3">**</bpt>HybridTopology\_javaSpout\_csharpBolt<ept id="p3">**</ept> 中定义</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>事务版本在 <bpt id="p1">**</bpt>HybridTopologyTx\_javaSpout\_csharpBolt<ept id="p1">**</ept> 中定义</source>
          <target state="new">事务版本在 <bpt id="p1">**</bpt>HybridTopologyTx\_javaSpout\_csharpBolt<ept id="p1">**</ept> 中定义</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>C# Spout<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>Java Bolt<ept id="p2">**</ept>：在 <bpt id="p3">**</bpt>HybridTopology\_csharpSpout\_javaBolt<ept id="p3">**</ept> 中定义</source>
          <target state="new"><bpt id="p1">**</bpt>C# Spout<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>Java Bolt<ept id="p2">**</ept>：在 <bpt id="p3">**</bpt>HybridTopology\_csharpSpout\_javaBolt<ept id="p3">**</ept> 中定义</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>事务版本在 <bpt id="p1">**</bpt>HybridTopologyTx\_csharpSpout\_javaBolt<ept id="p1">**</ept> 中定义</source>
          <target state="new">事务版本在 <bpt id="p1">**</bpt>HybridTopologyTx\_csharpSpout\_javaBolt<ept id="p1">**</ept> 中定义</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>此版本还演示了如何使用文本文件中的 clojure 代码作为 Java 组件。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>此版本还演示了如何使用文本文件中的 clojure 代码作为 Java 组件。</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>若要切换在提交项目时使用的拓扑，只需将 <ph id="ph1">`[Active(true)]`</ph> 语句式移到你要在提交给群集之前使用的拓扑。</source>
          <target state="new">若要切换在提交项目时使用的拓扑，只需将 <ph id="ph1">`[Active(true)]`</ph> 语句式移到你要在提交给群集之前使用的拓扑。</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>在 <bpt id="p1">**</bpt>JavaDependency<ept id="p1">**</ept> 文件夹中，所需的所有 Java 文件都会提供为此项目的一部分。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>在 <bpt id="p1">**</bpt>JavaDependency<ept id="p1">**</ept> 文件夹中，所需的所有 Java 文件都会提供为此项目的一部分。</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>创建和提交混合拓扑时，需注意以下事项：</source>
          <target state="new">创建和提交混合拓扑时，需注意以下事项：</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>必须使用 <bpt id="p1">**</bpt>JavaComponentConstructor<ept id="p1">**</ept> 创建 Spout 或 Bolt 的 Java 类的新实例</source>
          <target state="new">必须使用 <bpt id="p1">**</bpt>JavaComponentConstructor<ept id="p1">**</ept> 创建 Spout 或 Bolt 的 Java 类的新实例</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>应该使用 <bpt id="p1">**</bpt>microsoft.scp.storm.multilang.CustomizedInteropJSONSerializer<ept id="p1">**</ept> 将传入或传出 Java 组件的数据从 Java 对象序列化为 JSON。</source>
          <target state="new">应该使用 <bpt id="p1">**</bpt>microsoft.scp.storm.multilang.CustomizedInteropJSONSerializer<ept id="p1">**</ept> 将传入或传出 Java 组件的数据从 Java 对象序列化为 JSON。</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>将拓扑提交到服务器时，必须使用“其他配置”选项指定“Java 文件路径”。指定的路径应该是包含 JAR 文件的目录，而 JAR 文件包含你的 Java 类</source>
          <target state="new">将拓扑提交到服务器时，必须使用“其他配置”选项指定“Java 文件路径”。指定的路径应该是包含 JAR 文件的目录，而 JAR 文件包含你的 Java 类</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Azure 事件中心</source>
          <target state="new">Azure 事件中心</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>SCP.Net 版本 0.9.4.203 引入了专用于事件中心 Spout（从事件中心读取的 Java Spout）的新类和方法。 创建采用此 Spout 的拓扑时，请使用以下方法：</source>
          <target state="new">SCP.Net 版本 0.9.4.203 引入了专用于事件中心 Spout（从事件中心读取的 Java Spout）的新类和方法。 创建采用此 Spout 的拓扑时，请使用以下方法：</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>EventHubSpoutConfig<ept id="p1">**</ept> 类：创建一个对象，其中包含 Spout 组件的配置</source>
          <target state="new"><bpt id="p1">**</bpt>EventHubSpoutConfig<ept id="p1">**</ept> 类：创建一个对象，其中包含 Spout 组件的配置</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TopologyBuilder.SetEventHubSpout<ept id="p1">**</ept> 方法：将事件中心 Spout 组件添加到拓扑</source>
          <target state="new"><bpt id="p1">**</bpt>TopologyBuilder.SetEventHubSpout<ept id="p1">**</ept> 方法：将事件中心 Spout 组件添加到拓扑</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>相比于其他 Java 组件，尽管这些方法可让你更轻松地使用事件中心 Spout，但你仍然必须使用 CustomizedInteropJSONSerializer 来序列化 Spout 生成的数据。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>相比于其他 Java 组件，尽管这些方法可让你更轻松地使用事件中心 Spout，但你仍然必须使用 CustomizedInteropJSONSerializer 来序列化 Spout 生成的数据。</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>如何更新 SCP.NET</source>
          <target state="new">如何更新 SCP.NET</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>最新版 SCP.NET 支持通过 NuGet 进行包升级。当有新的更新可用时，你会收到升级通知。若要手动检查升级，请执行以下步骤：</source>
          <target state="new">最新版 SCP.NET 支持通过 NuGet 进行包升级。当有新的更新可用时，你会收到升级通知。若要手动检查升级，请执行以下步骤：</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>在“解决方案资源管理器”中，右键单击项目，然后选择“管理 NuGet 包”。</source>
          <target state="new">在“解决方案资源管理器”中，右键单击项目，然后选择“管理 NuGet 包”。</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>从包管理器中选择“更新”。如果有可用的更新，将会列出更新。单击“更新”按钮可让包安装更新。</source>
          <target state="new">从包管理器中选择“更新”。如果有可用的更新，将会列出更新。单击“更新”按钮可让包安装更新。</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph>如果你的项目是通过一个未使用 NuGet 进行包更新的旧版 SCP.NET 创建的，则你必须执行以下步骤更新到新版本：</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph>如果你的项目是通过一个未使用 NuGet 进行包更新的旧版 SCP.NET 创建的，则你必须执行以下步骤更新到新版本：</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>在“解决方案资源管理器”中，右键单击项目，然后选择“管理 NuGet 包”。</source>
          <target state="new">在“解决方案资源管理器”中，右键单击项目，然后选择“管理 NuGet 包”。</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>使用“搜索”字段搜索 <bpt id="p1">**</bpt>Microsoft.SCP.Net.SDK<ept id="p1">**</ept>，然后将其添加到项目中。</source>
          <target state="new">使用“搜索”字段搜索 <bpt id="p1">**</bpt>Microsoft.SCP.Net.SDK<ept id="p1">**</ept>，然后将其添加到项目中。</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>故障排除</source>
          <target state="new">故障排除</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>在本地测试拓扑</source>
          <target state="new">在本地测试拓扑</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>虽然很容易就可以将拓扑部署到群集，但是，在某些情况下，你可能需要在本地测试拓扑。使用以下步骤，在开发环境上本地执行和测试本教程中的示例拓扑。</source>
          <target state="new">虽然很容易就可以将拓扑部署到群集，但是，在某些情况下，你可能需要在本地测试拓扑。使用以下步骤，在开发环境上本地执行和测试本教程中的示例拓扑。</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.WARNING]</ph>本地测试只适用于仅限 C# 的基本拓扑。不应将本地测试用于混合拓扑或用于使用多个流的拓扑，否则你会收到错误。</source>
          <target state="new"><ph id="ph1">[AZURE.WARNING]</ph>本地测试只适用于仅限 C# 的基本拓扑。不应将本地测试用于混合拓扑或用于使用多个流的拓扑，否则你会收到错误。</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>在“解决方案资源管理器”中，右键单击项目，然后选择“属性”。在项目属性中，将“输出类型”更改为“控制台应用程序”。</source>
          <target state="new">在“解决方案资源管理器”中，右键单击项目，然后选择“属性”。在项目属性中，将“输出类型”更改为“控制台应用程序”。</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>输出类型</source>
          <target state="new">输出类型</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>将拓扑部署到群集之前，请记得将“输出类型”更改回“类库”。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>将拓扑部署到群集之前，请记得将“输出类型”更改回“类库”。</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>在“解决方案资源管理器”中，右键单击项目，然后依次选择“添加”&gt;“新建项”。选择“类”，并输入 <bpt id="p1">**</bpt>LocalTest.cs<ept id="p1">**</ept> 作为类名称。最后，单击“添加”。</source>
          <target state="new">在“解决方案资源管理器”中，右键单击项目，然后依次选择“添加”&gt;“新建项”。选择“类”，并输入 <bpt id="p1">**</bpt>LocalTest.cs<ept id="p1">**</ept> 作为类名称。最后，单击“添加”。</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>打开 <bpt id="p1">**</bpt>LocalTest.cs<ept id="p1">**</ept>，并在顶部添加以下 <bpt id="p2">**</bpt>using<ept id="p2">**</ept> 语句：</source>
          <target state="new">打开 <bpt id="p1">**</bpt>LocalTest.cs<ept id="p1">**</ept>，并在顶部添加以下 <bpt id="p2">**</bpt>using<ept id="p2">**</ept> 语句：</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>使用以下内容作为 <bpt id="p1">**</bpt>LocalTest<ept id="p1">**</ept> 类的内容：</source>
          <target state="new">使用以下内容作为 <bpt id="p1">**</bpt>LocalTest<ept id="p1">**</ept> 类的内容：</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>花费片刻时间通读代码注释。此代码使用 <bpt id="p1">**</bpt>LocalContext<ept id="p1">**</ept> 在开发环境中运行组件，并将组件之间的数据流保存到本地磁盘驱动器上的文本文件中。</source>
          <target state="new">花费片刻时间通读代码注释。此代码使用 <bpt id="p1">**</bpt>LocalContext<ept id="p1">**</ept> 在开发环境中运行组件，并将组件之间的数据流保存到本地磁盘驱动器上的文本文件中。</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>打开 <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept>，将以下代码添加到 <bpt id="p2">**</bpt>Main<ept id="p2">**</ept> 方法中：</source>
          <target state="new">打开 <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept>，将以下代码添加到 <bpt id="p2">**</bpt>Main<ept id="p2">**</ept> 方法中：</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>保存更改，然后单击 <bpt id="p1">**</bpt>F5<ept id="p1">**</ept>，或者选择“调试”&gt;“开始调试”以启动项目。随后应会出现一个控制台窗口，并记录测试进行的状态。出现“测试已完成”后，请按任意键关闭窗口。</source>
          <target state="new">保存更改，然后单击 <bpt id="p1">**</bpt>F5<ept id="p1">**</ept>，或者选择“调试”&gt;“开始调试”以启动项目。随后应会出现一个控制台窗口，并记录测试进行的状态。出现“测试已完成”后，请按任意键关闭窗口。</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>使用“Windows 资源管理器”找到包含项目的目录，例如，<bpt id="p1">**</bpt>C:\\Users&lt;你的用户名&gt;\\Documents\\Visual Studio 2013\\Projects\\WordCount\\WordCount<ept id="p1">**</ept>。在此目录中打开 Bin，然后单击“调试”。你应会看到运行测试时生成的文本文件：sentences.txt、counter.txt 和 splitter.txt。打开每个文本文件并检查数据。</source>
          <target state="new">使用“Windows 资源管理器”找到包含项目的目录，例如，<bpt id="p1">**</bpt>C:\\Users&lt;你的用户名&gt;\\Documents\\Visual Studio 2013\\Projects\\WordCount\\WordCount<ept id="p1">**</ept>。在此目录中打开 Bin，然后单击“调试”。你应会看到运行测试时生成的文本文件：sentences.txt、counter.txt 和 splitter.txt。打开每个文本文件并检查数据。</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>字符串数据会保存为这些文件中的十进制值数组。例如，<bpt id="p1">**</bpt>splitter.txt<ept id="p1">**</ept> 文件中的 [[97,103,111]] 是单词“and”。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>字符串数据会保存为这些文件中的十进制值数组。例如，<bpt id="p1">**</bpt>splitter.txt<ept id="p1">**</ept> 文件中的 [[97,103,111]] 是单词“and”。</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>虽然在本地测试基本字数应用程序相当简单，但是真正的价值在于与外部数据来源进行通信或执行复杂数据分析的复杂拓扑。处理此类项目时，你可能需要在组件中设置断点并逐步运行代码，以找出问题。</source>
          <target state="new">虽然在本地测试基本字数应用程序相当简单，但是真正的价值在于与外部数据来源进行通信或执行复杂数据分析的复杂拓扑。处理此类项目时，你可能需要在组件中设置断点并逐步运行代码，以找出问题。</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>在部署到 Storm on HDInsight 群集之前，请记得将“项目类型”设置回“类库”。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>在部署到 Storm on HDInsight 群集之前，请记得将“项目类型”设置回“类库”。</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>记录信息</source>
          <target state="new">记录信息</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>你可以使用 <ph id="ph1">`Context.Logger`</ph> 轻松记录拓扑组件中的信息。例如，以下代码会创建一个信息日志条目：</source>
          <target state="new">你可以使用 <ph id="ph1">`Context.Logger`</ph> 轻松记录拓扑组件中的信息。例如，以下代码会创建一个信息日志条目：</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>你可以从“服务器资源管理器”中的“Hadoop 服务日志”查看记录的信息。展开 Storm on HDInsight 群集的条目，然后展开“Hadoop 服务日志”。最后，选择要查看的日志文件。</source>
          <target state="new">你可以从“服务器资源管理器”中的“Hadoop 服务日志”查看记录的信息。展开 Storm on HDInsight 群集的条目，然后展开“Hadoop 服务日志”。最后，选择要查看的日志文件。</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>日志存储在群集使用的 Azure 存储帐户中。如果此订阅与用来登录 Visual Studio 的订阅不同，则必须登录包含存储帐户的订阅才能查看此信息。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>日志存储在群集使用的 Azure 存储帐户中。如果此订阅与用来登录 Visual Studio 的订阅不同，则必须登录包含存储帐户的订阅才能查看此信息。</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>查看错误信息</source>
          <target state="new">查看错误信息</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>若要查看运行中拓扑中所发生的错误，请使用以下步骤：</source>
          <target state="new">若要查看运行中拓扑中所发生的错误，请使用以下步骤：</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>在“服务器资源管理器”中，右键单击 Storm on HDInsight 群集，然后选择“查看 Storm 拓扑”。</source>
          <target state="new">在“服务器资源管理器”中，右键单击 Storm on HDInsight 群集，然后选择“查看 Storm 拓扑”。</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>对于 <bpt id="p1">**</bpt>Spout<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>Bolt<ept id="p2">**</ept>，“上一错误”列将包含有关上次发生的错误的信息。</source>
          <target state="new">对于 <bpt id="p1">**</bpt>Spout<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>Bolt<ept id="p2">**</ept>，“上一错误”列将包含有关上次发生的错误的信息。</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>选择发生错误的组件的“Spout ID”或“Bolt ID”。在显示的详细信息页面上，其他错误信息将列在页面底部的“错误”部分中。</source>
          <target state="new">选择发生错误的组件的“Spout ID”或“Bolt ID”。在显示的详细信息页面上，其他错误信息将列在页面底部的“错误”部分中。</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>若要获取详细信息，请从页面的“执行器”部分中选择“端口”，以查看最后几分钟的 Storm 工作进程日志。</source>
          <target state="new">若要获取详细信息，请从页面的“执行器”部分中选择“端口”，以查看最后几分钟的 Storm 工作进程日志。</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>在了解如何使用 HDInsight Tools for Visual Studio 开发和部署 Storm 拓扑后，请了解如何<bpt id="p1">[</bpt>使用 Storm on HDInsight 从 Azure 事件中心处理事件<ept id="p1">](/documentation/articles/hdinsight-storm-develop-csharp-event-hub-topology)</ept>。</source>
          <target state="new">在了解如何使用 HDInsight Tools for Visual Studio 开发和部署 Storm 拓扑后，请了解如何<bpt id="p1">[</bpt>使用 Storm on HDInsight 从 Azure 事件中心处理事件<ept id="p1">](/documentation/articles/hdinsight-storm-develop-csharp-event-hub-topology)</ept>。</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>有关将流数据拆分为多个流的 C# 拓扑示例，请参阅 <bpt id="p1">[</bpt>C# Storm 示例<ept id="p1">](https://github.com/Blackmist/csharp-storm-example)</ept>。</source>
          <target state="new">有关将流数据拆分为多个流的 C# 拓扑示例，请参阅 <bpt id="p1">[</bpt>C# Storm 示例<ept id="p1">](https://github.com/Blackmist/csharp-storm-example)</ept>。</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>若要了解有关创建 C# 拓扑的详细信息，请访问 <bpt id="p1">[</bpt>SCP.NET GettingStarted.md<ept id="p1">](https://github.com/hdinsight/hdinsight-storm-examples/blob/master/SCPNet-GettingStarted.md)</ept>。</source>
          <target state="new">若要了解有关创建 C# 拓扑的详细信息，请访问 <bpt id="p1">[</bpt>SCP.NET GettingStarted.md<ept id="p1">](https://github.com/hdinsight/hdinsight-storm-examples/blob/master/SCPNet-GettingStarted.md)</ept>。</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>有关 HDInsight 的其他用法和其他 Storm on HDinsight 示例，请参阅以下主题：</source>
          <target state="new">有关 HDInsight 的其他用法和其他 Storm on HDinsight 示例，请参阅以下主题：</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Apache Storm on HDInsight</source>
          <target state="new">Apache Storm on HDInsight</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>使用 Apache Storm on HDInsight 部署和监视拓扑</source>
          <target state="new">使用 Apache Storm on HDInsight 部署和监视拓扑</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Storm on HDInsight 的示例拓扑</source>
          <target state="new">Storm on HDInsight 的示例拓扑</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Apache HDInsight 上的 Hadoop</source>
          <target state="new">Apache HDInsight 上的 Hadoop</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>将 Hive 与 HDInsight 上的 Hadoop 配合使用</source>
          <target state="new">将 Hive 与 HDInsight 上的 Hadoop 配合使用</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>将 Pig 与 HDInsight 上的 Hadoop 配合使用</source>
          <target state="new">将 Pig 与 HDInsight 上的 Hadoop 配合使用</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>将 MapReduce 与 HDInsight 上的 Hadoop 配合使用</source>
          <target state="new">将 MapReduce 与 HDInsight 上的 Hadoop 配合使用</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Apache HBase on HDInsight</source>
          <target state="new">Apache HBase on HDInsight</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>HBase on HDInsight 入门</source>
          <target state="new">HBase on HDInsight 入门</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>