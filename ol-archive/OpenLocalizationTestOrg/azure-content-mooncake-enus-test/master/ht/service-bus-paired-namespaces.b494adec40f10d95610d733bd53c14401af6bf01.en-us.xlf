<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">87d9df51ec0d4bd62a33c9195e75eacf6da34aea</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>服务总线配对命名空间 |Azure</source>
          <target state="new">服务总线配对命名空间 |Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>配对命名空间实现的详细信息和成本</source>
          <target state="new">配对命名空间实现的详细信息和成本</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>配对命名空间实现详细信息和成本影响</source>
          <target state="new">配对命名空间实现详细信息和成本影响</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>使用 <bpt id="p1">[</bpt>SendAvailabilityPairedNamespaceOptions<ept id="p1">][]</ept> 实例的 <bpt id="p2">[</bpt>PairNamespaceAsync<ept id="p2">][]</ept> 方法代表你执行可见任务。因为使用该功能时需考虑到成本，所以理解这些任务是有用的，以便在行为发生时可以预期到。该 API 代表你进行下列自动行为：</source>
          <target state="new">使用 <bpt id="p1">[</bpt>SendAvailabilityPairedNamespaceOptions<ept id="p1">][]</ept> 实例的 <bpt id="p2">[</bpt>PairNamespaceAsync<ept id="p2">][]</ept> 方法代表你执行可见任务。因为使用该功能时需考虑到成本，所以理解这些任务是有用的，以便在行为发生时可以预期到。该 API 代表你进行下列自动行为：</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>创建积压工作队列。</source>
          <target state="new">创建积压工作队列。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>创建创建与队列或主题交谈的 <bpt id="p1">[</bpt>MessageSender<ept id="p1">][]</ept> 对象。</source>
          <target state="new">创建创建与队列或主题交谈的 <bpt id="p1">[</bpt>MessageSender<ept id="p1">][]</ept> 对象。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>当一个消息传送实体变为不可用，向该实体发送 ping 消息以尝试检测该实体何时再次变为可用。</source>
          <target state="new">当一个消息传送实体变为不可用，向该实体发送 ping 消息以尝试检测该实体何时再次变为可用。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>可以选择创建一组“消息泵”，将消息从积压工作队列移至主要队列。</source>
          <target state="new">可以选择创建一组“消息泵”，将消息从积压工作队列移至主要队列。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>协调主要和辅助 <bpt id="p1">[</bpt>MessagingFactory<ept id="p1">][]</ept> 实例的关闭/故障。</source>
          <target state="new">协调主要和辅助 <bpt id="p1">[</bpt>MessagingFactory<ept id="p1">][]</ept> 实例的关闭/故障。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>在高级别中，该功能按如下方式工作：若主要实体是正常的，则不会发生行为更改。当 <bpt id="p1">[</bpt>FailoverInterval<ept id="p1">][]</ept> 持续时间过去，且主要实体在非瞬态的 <bpt id="p2">[</bpt>MessagingException<ept id="p2">][]</ept> 或 <bpt id="p3">[</bpt>TimeoutException<ept id="p3">][]</ept> 之后没有看到成功的发送，将出现以下行为：</source>
          <target state="new">在高级别中，该功能按如下方式工作：若主要实体是正常的，则不会发生行为更改。当 <bpt id="p1">[</bpt>FailoverInterval<ept id="p1">][]</ept> 持续时间过去，且主要实体在非瞬态的 <bpt id="p2">[</bpt>MessagingException<ept id="p2">][]</ept> 或 <bpt id="p3">[</bpt>TimeoutException<ept id="p3">][]</ept> 之后没有看到成功的发送，将出现以下行为：</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>到主要实体的发送操作被禁用，且系统对主要实体执行 ping 命令，直到 ping 成功发送。</source>
          <target state="new">到主要实体的发送操作被禁用，且系统对主要实体执行 ping 命令，直到 ping 成功发送。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>选择一个随机积压工作队列。</source>
          <target state="new">选择一个随机积压工作队列。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>BrokeredMessage<ept id="p1">][]</ept> 对象被路由到所选的积压工作队列。</source>
          <target state="new"><bpt id="p1">[</bpt>BrokeredMessage<ept id="p1">][]</ept> 对象被路由到所选的积压工作队列。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>如果到所选的积压工作队列的发送操作失败，则从轮转提取队列并选择新的队列。<bpt id="p1">[</bpt>MessagingFactory<ept id="p1">][]</ept> 实例上的所有发送方知道该失败。</source>
          <target state="new">如果到所选的积压工作队列的发送操作失败，则从轮转提取队列并选择新的队列。<bpt id="p1">[</bpt>MessagingFactory<ept id="p1">][]</ept> 实例上的所有发送方知道该失败。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>以下各图描述了顺序。首先，发送方发送消息。</source>
          <target state="new">以下各图描述了顺序。首先，发送方发送消息。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>成对命名空间</source>
          <target state="new">成对命名空间</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>发送给主要队列失败时，发送方开始向随机选择的积压工作队列发送消息。与此同时，启动 ping 任务。</source>
          <target state="new">发送给主要队列失败时，发送方开始向随机选择的积压工作队列发送消息。与此同时，启动 ping 任务。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>成对命名空间</source>
          <target state="new">成对命名空间</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>这个时候消息仍在辅助队列，尚未传递给主要队列。一旦主要队列再次恢复正常，至少一个进程应运行管道。管道将来自各种积压工作队列的消息传送到适当的目标实体（队列和主题）中。</source>
          <target state="new">这个时候消息仍在辅助队列，尚未传递给主要队列。一旦主要队列再次恢复正常，至少一个进程应运行管道。管道将来自各种积压工作队列的消息传送到适当的目标实体（队列和主题）中。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>成对命名空间</source>
          <target state="new">成对命名空间</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>本主题的其余部分将讨论这些工作的具体详细信息。</source>
          <target state="new">本主题的其余部分将讨论这些工作的具体详细信息。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>创建积压工作队列</source>
          <target state="new">创建积压工作队列</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>传递到 <bpt id="p1">[</bpt>PairNamespaceAsync<ept id="p1">][]</ept> 方法的 <bpt id="p2">[</bpt>SendAvailabilityPairedNamespaceOptions<ept id="p2">][]</ept> 对象指示你想要使用的积压工作队列的数量。然后会创建积压工作队列，且每个队列都具有显式设置的以下属性（所有其他值设置为 <bpt id="p3">[</bpt>QueueDescription<ept id="p3">][]</ept> 默认值）：</source>
          <target state="new">传递到 <bpt id="p1">[</bpt>PairNamespaceAsync<ept id="p1">][]</ept> 方法的 <bpt id="p2">[</bpt>SendAvailabilityPairedNamespaceOptions<ept id="p2">][]</ept> 对象指示你想要使用的积压工作队列的数量。然后会创建积压工作队列，且每个队列都具有显式设置的以下属性（所有其他值设置为 <bpt id="p3">[</bpt>QueueDescription<ept id="p3">][]</ept> 默认值）：</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>路径</source>
          <target state="new">路径</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>[primary namespace]/x-servicebus-transfer/[index] where [index] is a value in [0, BacklogQueueCount)</source>
          <target state="new">[primary namespace]/x-servicebus-transfer/[index] where [index] is a value in [0, BacklogQueueCount)</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>MaxSizeInMegabytes</source>
          <target state="new">MaxSizeInMegabytes</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>5120</source>
          <target state="new">5120</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>MaxDeliveryCount</source>
          <target state="new">MaxDeliveryCount</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>int.MaxValue</source>
          <target state="new">int.MaxValue</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>DefaultMessageTimeToLive</source>
          <target state="new">DefaultMessageTimeToLive</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>TimeSpan.MaxValue</source>
          <target state="new">TimeSpan.MaxValue</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>AutoDeleteOnIdle</source>
          <target state="new">AutoDeleteOnIdle</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>TimeSpan.MaxValue</source>
          <target state="new">TimeSpan.MaxValue</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>LockDuration</source>
          <target state="new">LockDuration</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>1 分钟</source>
          <target state="new">1 分钟</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>EnableDeadLetteringOnMessageExpiration</source>
          <target state="new">EnableDeadLetteringOnMessageExpiration</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>EnableBatchedOperations</source>
          <target state="new">EnableBatchedOperations</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>例如，为命名空间 <bpt id="p1">**</bpt>contoso<ept id="p1">**</ept> 创建的第一个积压工作队列名为 <ph id="ph1">`contoso/x-servicebus-transfer/0`</ph>。</source>
          <target state="new">例如，为命名空间 <bpt id="p1">**</bpt>contoso<ept id="p1">**</ept> 创建的第一个积压工作队列名为 <ph id="ph1">`contoso/x-servicebus-transfer/0`</ph>。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>创建队列时，代码将首先检查是否存在此类队列。如果队列不存在，将创建队列。此代码不清理“额外的”积压工作队列。具体而言，如果具有主命名空间 <bpt id="p1">**</bpt>contoso<ept id="p1">**</ept> 的应用程序请求五个积压工作队列，但具有路径 <ph id="ph1">`contoso/x-servicebus-transfer/7`</ph> 的积压工作队列存在，则该额外积压工作队列仍然存在，但未被使用。系统显式允许额外积压工作队列存在，但它们不会被使用。作为命名空间所有者，你负责清除任何未使用/不需要的积压工作队列。此决策的原因是服务总线无法知道你的命名空间中的所有队列都存在何种目的。此外，如果队列以给定名称存在，但不符合假定的 <bpt id="p2">[</bpt>QueueDescription<ept id="p2">][]</ept>，那么你更改默认行为的原因是出于你自身。无法为通过你的代码对积压工作队列进行的修改提供保证。请确保全面测试你所做的更改。</source>
          <target state="new">创建队列时，代码将首先检查是否存在此类队列。如果队列不存在，将创建队列。此代码不清理“额外的”积压工作队列。具体而言，如果具有主命名空间 <bpt id="p1">**</bpt>contoso<ept id="p1">**</ept> 的应用程序请求五个积压工作队列，但具有路径 <ph id="ph1">`contoso/x-servicebus-transfer/7`</ph> 的积压工作队列存在，则该额外积压工作队列仍然存在，但未被使用。系统显式允许额外积压工作队列存在，但它们不会被使用。作为命名空间所有者，你负责清除任何未使用/不需要的积压工作队列。此决策的原因是服务总线无法知道你的命名空间中的所有队列都存在何种目的。此外，如果队列以给定名称存在，但不符合假定的 <bpt id="p2">[</bpt>QueueDescription<ept id="p2">][]</ept>，那么你更改默认行为的原因是出于你自身。无法为通过你的代码对积压工作队列进行的修改提供保证。请确保全面测试你所做的更改。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>自定义 MessageSender</source>
          <target state="new">自定义 MessageSender</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>在发送时，所有消息都将通过内部 <bpt id="p1">[</bpt>MessageSender<ept id="p1">][]</ept> 对象，该对象在一切正常运转时正常行动，并在事情“中断”时重定向至积压工作队列。 一旦收到非瞬态故障，计时器启动。在由 <bpt id="p2">[</bpt>FailoverInterval<ept id="p2">][]</ept> 属性值构成的 <bpt id="p3">[</bpt>TimeSpan<ept id="p3">][]</ept> 时段之后（在此时段中未成功发送消息），将发生故障转移。此时，每个实体会发生下列情况：</source>
          <target state="new">在发送时，所有消息都将通过内部 <bpt id="p1">[</bpt>MessageSender<ept id="p1">][]</ept> 对象，该对象在一切正常运转时正常行动，并在事情“中断”时重定向至积压工作队列。 一旦收到非瞬态故障，计时器启动。在由 <bpt id="p2">[</bpt>FailoverInterval<ept id="p2">][]</ept> 属性值构成的 <bpt id="p3">[</bpt>TimeSpan<ept id="p3">][]</ept> 时段之后（在此时段中未成功发送消息），将发生故障转移。此时，每个实体会发生下列情况：</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>ping 任务执行每个 <bpt id="p1">[</bpt>PingPrimaryInterval<ept id="p1">][]</ept> 以检查实体是否可用。此任务成功之后，所有使用该实体的客户端代码立即开始发送新消息到主要命名空间。</source>
          <target state="new">ping 任务执行每个 <bpt id="p1">[</bpt>PingPrimaryInterval<ept id="p1">][]</ept> 以检查实体是否可用。此任务成功之后，所有使用该实体的客户端代码立即开始发送新消息到主要命名空间。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>将来从任何其他发送方发送到同一实体的请求将导致将要发送去修改的 <bpt id="p1">[</bpt>BrokeredMessage<ept id="p1">][]</ept> 进入积压工作队列。该修改将从 <bpt id="p2">[</bpt>BrokeredMessage<ept id="p2">][]</ept> 对象中删除一些属性并将其存储在其他位置。已清理以下属性并添加在新的别名下，从而允许服务总线和 SDK 统一处理消息：</source>
          <target state="new">将来从任何其他发送方发送到同一实体的请求将导致将要发送去修改的 <bpt id="p1">[</bpt>BrokeredMessage<ept id="p1">][]</ept> 进入积压工作队列。该修改将从 <bpt id="p2">[</bpt>BrokeredMessage<ept id="p2">][]</ept> 对象中删除一些属性并将其存储在其他位置。已清理以下属性并添加在新的别名下，从而允许服务总线和 SDK 统一处理消息：</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>旧属性名称</source>
          <target state="new">旧属性名称</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>新属性名称</source>
          <target state="new">新属性名称</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>SessionId</source>
          <target state="new">SessionId</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>x-ms-sessionid</source>
          <target state="new">x-ms-sessionid</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>TimeToLive</source>
          <target state="new">TimeToLive</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>x-ms-timetolive</source>
          <target state="new">x-ms-timetolive</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>ScheduledEnqueueTimeUtc</source>
          <target state="new">ScheduledEnqueueTimeUtc</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>x-ms-path</source>
          <target state="new">x-ms-path</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>原始目标路径也作为名为 x-ms-path 的属性存储在消息中。此设计允许多个实体的消息共存于单个积压工作队列中。属性将通过管道重新转换。</source>
          <target state="new">原始目标路径也作为名为 x-ms-path 的属性存储在消息中。此设计允许多个实体的消息共存于单个积压工作队列中。属性将通过管道重新转换。</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>当消息接近 256-KB 限制且发生故障转移时，自定义 <bpt id="p1">[</bpt>MessageSender<ept id="p1">][]</ept> 对象会遇到问题。自定义 <bpt id="p2">[</bpt>MessageSender<ept id="p2">][]</ept> 对象将所有队列和主题的消息一起存储在积压工作队列中。此对象在积压工作队列中将来自许多主体的消息混合。若要在互相不知道对方的多个客户端中处理负载平衡，SDK 将随机为每个用代码创建的 <bpt id="p3">[</bpt>QueueClient<ept id="p3">][]</ept> 或 <bpt id="p4">[</bpt>TopicClient<ept id="p4">][]</ept> 选择一个积压工作队列。</source>
          <target state="new">当消息接近 256-KB 限制且发生故障转移时，自定义 <bpt id="p1">[</bpt>MessageSender<ept id="p1">][]</ept> 对象会遇到问题。自定义 <bpt id="p2">[</bpt>MessageSender<ept id="p2">][]</ept> 对象将所有队列和主题的消息一起存储在积压工作队列中。此对象在积压工作队列中将来自许多主体的消息混合。若要在互相不知道对方的多个客户端中处理负载平衡，SDK 将随机为每个用代码创建的 <bpt id="p3">[</bpt>QueueClient<ept id="p3">][]</ept> 或 <bpt id="p4">[</bpt>TopicClient<ept id="p4">][]</ept> 选择一个积压工作队列。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Ping</source>
          <target state="new">Ping</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>一条 Ping 消息是一个空 <bpt id="p1">[</bpt>BrokeredMessage<ept id="p1">][]</ept>，其 <bpt id="p2">[</bpt>ContentType<ept id="p2">][]</ept> 属性设置为 application/vnd.ms-servicebus-ping 且其 <bpt id="p3">[</bpt>TimeToLive<ept id="p3">][]</ept> 值为 1 秒。服务总线中，此 ping 有一个特殊的特性：当任何调用方请求 <bpt id="p4">[</bpt>BrokeredMessage<ept id="p4">][]</ept> 时，服务器永远不会发送 ping 请求。因此，你永远不需要了解如何接收和忽略这些消息。当每个客户端的每个 <bpt id="p5">[</bpt>MessagingFactory<ept id="p5">][]</ept> 实例的每个实体（唯一的队列或主题）被视为不可用时，将对其执行 ping 命令。默认情况下，每分钟发生一次。Ping 消息被视为常规服务总线消息，并可能会产生针对带宽和消息的收费。只要客户端检测到系统可用，消息将停止。</source>
          <target state="new">一条 Ping 消息是一个空 <bpt id="p1">[</bpt>BrokeredMessage<ept id="p1">][]</ept>，其 <bpt id="p2">[</bpt>ContentType<ept id="p2">][]</ept> 属性设置为 application/vnd.ms-servicebus-ping 且其 <bpt id="p3">[</bpt>TimeToLive<ept id="p3">][]</ept> 值为 1 秒。服务总线中，此 ping 有一个特殊的特性：当任何调用方请求 <bpt id="p4">[</bpt>BrokeredMessage<ept id="p4">][]</ept> 时，服务器永远不会发送 ping 请求。因此，你永远不需要了解如何接收和忽略这些消息。当每个客户端的每个 <bpt id="p5">[</bpt>MessagingFactory<ept id="p5">][]</ept> 实例的每个实体（唯一的队列或主题）被视为不可用时，将对其执行 ping 命令。默认情况下，每分钟发生一次。Ping 消息被视为常规服务总线消息，并可能会产生针对带宽和消息的收费。只要客户端检测到系统可用，消息将停止。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>管道</source>
          <target state="new">管道</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>应用程序中至少有一个可执行程序应活跃地运行管道。管道会执行持续 15 分钟的长时间轮询接收。当所有实体均可用且你有 10 个积压工作队列时，托管管道的应用程序每小时 40 次、每天 960 次，30 天 28800 次调用接收操作。当管道活跃地将消息从积压工作向主要队列中移动时，每条消息会产生以下费用（在所有阶段中按照消息大小和带宽收取标准费用）：</source>
          <target state="new">应用程序中至少有一个可执行程序应活跃地运行管道。管道会执行持续 15 分钟的长时间轮询接收。当所有实体均可用且你有 10 个积压工作队列时，托管管道的应用程序每小时 40 次、每天 960 次，30 天 28800 次调用接收操作。当管道活跃地将消息从积压工作向主要队列中移动时，每条消息会产生以下费用（在所有阶段中按照消息大小和带宽收取标准费用）：</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>发送到积压工作。</source>
          <target state="new">发送到积压工作。</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>从积压工作接收。</source>
          <target state="new">从积压工作接收。</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>发送到主体。</source>
          <target state="new">发送到主体。</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>从主体接收。</source>
          <target state="new">从主体接收。</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>关闭/故障行为</source>
          <target state="new">关闭/故障行为</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>在托管管道的应用程序中，一旦主要或辅助 <bpt id="p1">[</bpt>MessagingFactory<ept id="p1">][]</ept> 发生故障或关闭，同时其伙伴队列并未发生故障/关闭，且管道检测到此状态，管道将发挥作用。如果其他 <bpt id="p2">[</bpt>MessagingFactory<ept id="p2">][]</ept> 在 5 秒内未关闭，管道将导致仍处于打开状态的 <bpt id="p3">[</bpt>MessagingFactory<ept id="p3">][]</ept> 发生故障。</source>
          <target state="new">在托管管道的应用程序中，一旦主要或辅助 <bpt id="p1">[</bpt>MessagingFactory<ept id="p1">][]</ept> 发生故障或关闭，同时其伙伴队列并未发生故障/关闭，且管道检测到此状态，管道将发挥作用。如果其他 <bpt id="p2">[</bpt>MessagingFactory<ept id="p2">][]</ept> 在 5 秒内未关闭，管道将导致仍处于打开状态的 <bpt id="p3">[</bpt>MessagingFactory<ept id="p3">][]</ept> 发生故障。</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>请参阅 <bpt id="p1">[</bpt><ept id="p1">异步消息传递模式和高可用性]</ept> 以获取有关服务总线异步消息传送的详细讨论。</source>
          <target state="new">请参阅 <bpt id="p1">[</bpt><ept id="p1">异步消息传递模式和高可用性]</ept> 以获取有关服务总线异步消息传送的详细讨论。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>