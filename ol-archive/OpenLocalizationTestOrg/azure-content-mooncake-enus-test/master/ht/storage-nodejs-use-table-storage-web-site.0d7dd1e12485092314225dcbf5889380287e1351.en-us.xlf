<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be08d22fb2ebf0d6f74728139389fed7ed894b4a</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>使用 Azure 表服务的 Node.js Web 应用</source>
          <target state="new">使用 Azure 表服务的 Node.js Web 应用</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>本教程演示如何使用 Azure 表服务在 Azure Web 应用所托管的 Node.js 应用程序中存储数据。</source>
          <target state="new">本教程演示如何使用 Azure 表服务在 Azure Web 应用所托管的 Node.js 应用程序中存储数据。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>使用 Azure 表服务的 Node.js Web 应用</source>
          <target state="new">使用 Azure 表服务的 Node.js Web 应用</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>概述</source>
          <target state="new">概述</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>本教程演示如何使用 Azure 数据管理提供的表服务来存储和访问在 Azure Web 应用上托管的 <bpt id="p1">[</bpt><ept id="p1">node]</ept> 应用程序的数据。本教程假定你之前有使用 node 和<bpt id="p2">[</bpt><ept id="p2">Git]</ept>的经验。</source>
          <target state="new">本教程演示如何使用 Azure 数据管理提供的表服务来存储和访问在 Azure Web 应用上托管的 <bpt id="p1">[</bpt><ept id="p1">node]</ept> 应用程序的数据。本教程假定你之前有使用 node 和<bpt id="p2">[</bpt><ept id="p2">Git]</ept>的经验。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>你将学习以下内容：</source>
          <target state="new">你将学习以下内容：</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>如何使用 npm（Node 包管理器）安装 Node 模块</source>
          <target state="new">如何使用 npm（Node 包管理器）安装 Node 模块</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>如何使用 Azure 表服务</source>
          <target state="new">如何使用 Azure 表服务</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>如何使用 Azure CLI 创建 Web 应用。</source>
          <target state="new">如何使用 Azure CLI 创建 Web 应用。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>按照本教程中的说明操作，构建基于 Web 的简单“待办事项”应用程序，该应用程序可用于创建、检索和完成任务。这些任务存储在表服务中。</source>
          <target state="new">按照本教程中的说明操作，构建基于 Web 的简单“待办事项”应用程序，该应用程序可用于创建、检索和完成任务。这些任务存储在表服务中。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>下面是已完成的应用程序：</source>
          <target state="new">下面是已完成的应用程序：</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>显示空白 tasklist 的网页</source>
          <target state="new">显示空白 tasklist 的网页</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>先决条件</source>
          <target state="new">先决条件</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>在按照本文中的说明操作之前，请确保已安装下列项：</source>
          <target state="new">在按照本文中的说明操作之前，请确保已安装下列项：</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">node]</ept> 0.10.24 或更高版本</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">node]</ept> 0.10.24 或更高版本</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Git</source>
          <target state="new">Git</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>创建存储帐户</source>
          <target state="new">创建存储帐户</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>创建 Azure 存储帐户。应用会使用此帐户存储待办事项。</source>
          <target state="new">创建 Azure 存储帐户。应用会使用此帐户存储待办事项。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>打开你的 Web 浏览器并转到 <bpt id="p1">[</bpt><ept id="p1">Azure 门户]</ept>。如果出现提示，请使用你的 Azure 订阅信息进行登录。</source>
          <target state="new">打开你的 Web 浏览器并转到 <bpt id="p1">[</bpt><ept id="p1">Azure 门户]</ept>。如果出现提示，请使用你的 Azure 订阅信息进行登录。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>在门户底部，单击“+新建”，然后选择“存储帐户”。</source>
          <target state="new">在门户底部，单击“+新建”，然后选择“存储帐户”。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>\+新建</source>
          <target state="new">\+新建</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>存储帐户</source>
          <target state="new">存储帐户</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>选择“快速创建”，然后为此存储帐户输入 URL 和区域/地缘组。由于这是一个教程，不需要全球复制，因此请取消选中“启用异地复制”。最后，单击“创建存储帐户”。</source>
          <target state="new">选择“快速创建”，然后为此存储帐户输入 URL 和区域/地缘组。由于这是一个教程，不需要全球复制，因此请取消选中“启用异地复制”。最后，单击“创建存储帐户”。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>快速创建</source>
          <target state="new">快速创建</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>请记下你输入的 URL，因为后续步骤将引用此 URL 作为帐户名称。</source>
          <target state="new">请记下你输入的 URL，因为后续步骤将引用此 URL 作为帐户名称。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>在创建存储帐户后，单击页面底部的“管理密钥”。这将显示此存储帐户的主访问密钥和辅助访问密钥。复制并保存主访问密钥，然后单击复选标记。</source>
          <target state="new">在创建存储帐户后，单击页面底部的“管理密钥”。这将显示此存储帐户的主访问密钥和辅助访问密钥。复制并保存主访问密钥，然后单击复选标记。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>访问密钥</source>
          <target state="new">访问密钥</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>安装模块并生成基架</source>
          <target state="new">安装模块并生成基架</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>在本节中，你将创建新的 Node 应用程序并使用 npm 添加模块包。对于此应用程序，你将使用 <bpt id="p1">[</bpt><ept id="p1">Express]</ept> 和 <bpt id="p2">[</bpt><ept id="p2">Azure]</ept> 模块。Express 模块为 Node 提供了一个模型视图控制器框架，而 Azure 模块提供了与表服务的连接。</source>
          <target state="new">在本节中，你将创建新的 Node 应用程序并使用 npm 添加模块包。对于此应用程序，你将使用 <bpt id="p1">[</bpt><ept id="p1">Express]</ept> 和 <bpt id="p2">[</bpt><ept id="p2">Azure]</ept> 模块。Express 模块为 Node 提供了一个模型视图控制器框架，而 Azure 模块提供了与表服务的连接。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>安装 Express 并生成基架</source>
          <target state="new">安装 Express 并生成基架</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>在命令行中，创建名为 <bpt id="p1">**</bpt>tasklist<ept id="p1">**</ept> 的新目录并切换到该目录。</source>
          <target state="new">在命令行中，创建名为 <bpt id="p1">**</bpt>tasklist<ept id="p1">**</ept> 的新目录并切换到该目录。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>请输入以下命令来安装 Express 模块。</source>
          <target state="new">请输入以下命令来安装 Express 模块。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>根据操作系统，可能需要将“sudo”放在命令之前：</source>
          <target state="new">根据操作系统，可能需要将“sudo”放在命令之前：</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>输出显示类似于以下示例：</source>
          <target state="new">输出显示类似于以下示例：</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>“-g”参数会全局安装模块。这样我们使用 <bpt id="p1">**</bpt>express<ept id="p1">**</ept> 生成 Web 应用基架，而无需键入其他路径信息。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>“-g”参数会全局安装模块。这样我们使用 <bpt id="p1">**</bpt>express<ept id="p1">**</ept> 生成 Web 应用基架，而无需键入其他路径信息。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>若要创建应用程序的基架，请输入 <bpt id="p1">**</bpt>express<ept id="p1">**</ept> 命令：</source>
          <target state="new">若要创建应用程序的基架，请输入 <bpt id="p1">**</bpt>express<ept id="p1">**</ept> 命令：</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>此命令的输出显示类似于以下示例：</source>
          <target state="new">此命令的输出显示类似于以下示例：</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>此时 <bpt id="p1">**</bpt>tasklist<ept id="p1">**</ept> 目录中会有几个新目录和文件。</source>
          <target state="new">此时 <bpt id="p1">**</bpt>tasklist<ept id="p1">**</ept> 目录中会有几个新目录和文件。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>安装其他模块</source>
          <target state="new">安装其他模块</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>express<ept id="p1">**</ept> 创建的其中一个文件是 <bpt id="p2">**</bpt>package.json<ept id="p2">**</ept>。此文件包含模块依赖项的列表。之后，当你将应用程序部署到 Azure Web 应用时，此文件会确定需要在 Azure 上安装的模块。</source>
          <target state="new"><bpt id="p1">**</bpt>express<ept id="p1">**</ept> 创建的其中一个文件是 <bpt id="p2">**</bpt>package.json<ept id="p2">**</ept>。此文件包含模块依赖项的列表。之后，当你将应用程序部署到 Azure Web 应用时，此文件会确定需要在 Azure 上安装的模块。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>在命令行中，输入以下命令，以安装 <bpt id="p1">**</bpt>package.json<ept id="p1">**</ept> 文件中描述的模块。可能需要使用“sudo”。</source>
          <target state="new">在命令行中，输入以下命令，以安装 <bpt id="p1">**</bpt>package.json<ept id="p1">**</ept> 文件中描述的模块。可能需要使用“sudo”。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>此命令的输出显示类似于以下示例：</source>
          <target state="new">此命令的输出显示类似于以下示例：</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>接下来，输入以下命令，以安装 <bpt id="p1">[</bpt><ept id="p1">azure]</ept>、<bpt id="p2">[</bpt><ept id="p2">node-uuid]</ept>、<bpt id="p3">[</bpt><ept id="p3">nconf]</ept> 和 <bpt id="p4">[</bpt><ept id="p4">async]</ept> 模块：</source>
          <target state="new">接下来，输入以下命令，以安装 <bpt id="p1">[</bpt><ept id="p1">azure]</ept>、<bpt id="p2">[</bpt><ept id="p2">node-uuid]</ept>、<bpt id="p3">[</bpt><ept id="p3">nconf]</ept> 和 <bpt id="p4">[</bpt><ept id="p4">async]</ept> 模块：</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>使用 <bpt id="p1">**</bpt>--保存<ept id="p1">**</ept>标志将这些模块的条目添加到 <bpt id="p2">**</bpt>package.json<ept id="p2">**</ept> 文件中。</source>
          <target state="new">使用 <bpt id="p1">**</bpt>--保存<ept id="p1">**</ept>标志将这些模块的条目添加到 <bpt id="p2">**</bpt>package.json<ept id="p2">**</ept> 文件中。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>此命令的输出显示类似于以下示例：</source>
          <target state="new">此命令的输出显示类似于以下示例：</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>创建应用程序</source>
          <target state="new">创建应用程序</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>现在我们准备好生成应用程序。</source>
          <target state="new">现在我们准备好生成应用程序。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>创建模型</source>
          <target state="new">创建模型</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>模型<ept id="p1">*</ept>是表示应用程序中的数据的对象。对于应用程序，唯一的模型是任务对象，表示待办事项列表中的项。任务将具有以下字段：</source>
          <target state="new"><bpt id="p1">*</bpt>模型<ept id="p1">*</ept>是表示应用程序中的数据的对象。对于应用程序，唯一的模型是任务对象，表示待办事项列表中的项。任务将具有以下字段：</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>PartitionKey</source>
          <target state="new">PartitionKey</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>RowKey</source>
          <target state="new">RowKey</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>名称（字符串）</source>
          <target state="new">名称（字符串）</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>类别（字符串）</source>
          <target state="new">类别（字符串）</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>已完成（布尔值）</source>
          <target state="new">已完成（布尔值）</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PartitionKey<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>RowKey<ept id="p2">**</ept> 被表服务用作表键。有关详细信息，请参阅<bpt id="p3">[</bpt>了解表服务数据模型<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/azure/dd179338.aspx)</ept>。</source>
          <target state="new"><bpt id="p1">**</bpt>PartitionKey<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>RowKey<ept id="p2">**</ept> 被表服务用作表键。有关详细信息，请参阅<bpt id="p3">[</bpt>了解表服务数据模型<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/azure/dd179338.aspx)</ept>。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>tasklist<ept id="p1">**</ept> 目录中，创建名为 <bpt id="p2">**</bpt>models<ept id="p2">**</ept> 的新目录。</source>
          <target state="new">在 <bpt id="p1">**</bpt>tasklist<ept id="p1">**</ept> 目录中，创建名为 <bpt id="p2">**</bpt>models<ept id="p2">**</ept> 的新目录。</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>models<ept id="p1">**</ept> 目录中，创建一个名为 <bpt id="p2">**</bpt>task.js<ept id="p2">**</ept> 的新文件。此文件将包含你的应用程序创建的任务的模型。</source>
          <target state="new">在 <bpt id="p1">**</bpt>models<ept id="p1">**</ept> 目录中，创建一个名为 <bpt id="p2">**</bpt>task.js<ept id="p2">**</ept> 的新文件。此文件将包含你的应用程序创建的任务的模型。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>task.js<ept id="p1">**</ept> 文件的开头，添加以下代码来引用所需的库：</source>
          <target state="new">在 <bpt id="p1">**</bpt>task.js<ept id="p1">**</ept> 文件的开头，添加以下代码来引用所需的库：</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>添加以下代码，以定义和导出 Task 对象。此对象负责与表连接。</source>
          <target state="new">添加以下代码，以定义和导出 Task 对象。此对象负责与表连接。</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>添加以下代码来定义 Task 对象上的其他方法，利用这些方法可以实现与表中存储的数据进行交互：</source>
          <target state="new">添加以下代码来定义 Task 对象上的其他方法，利用这些方法可以实现与表中存储的数据进行交互：</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>保存并关闭 **task.js **文件。</source>
          <target state="new">保存并关闭 **task.js **文件。</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>添加控制器</source>
          <target state="new">添加控制器</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>控制器<ept id="p1">*</ept>处理 HTTP 请求并渲染 HTML 响应。</source>
          <target state="new"><bpt id="p1">*</bpt>控制器<ept id="p1">*</ept>处理 HTTP 请求并渲染 HTML 响应。</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>tasklist/routes<ept id="p1">**</ept> 目录中，创建名为 <bpt id="p2">**</bpt>tasklist.js<ept id="p2">**</ept> 的新文件，并在文本编辑器中将其打开。</source>
          <target state="new">在 <bpt id="p1">**</bpt>tasklist/routes<ept id="p1">**</ept> 目录中，创建名为 <bpt id="p2">**</bpt>tasklist.js<ept id="p2">**</ept> 的新文件，并在文本编辑器中将其打开。</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>将以下代码添加到 <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept>。这将加载 <bpt id="p2">**</bpt>tasklist.js<ept id="p2">**</ept> 使用的 azure 和 async 模块。这还将定义 <bpt id="p3">**</bpt>TaskList<ept id="p3">**</ept> 函数，将向该函数传递我们之前定义的 <bpt id="p4">**</bpt>Task<ept id="p4">**</ept> 对象的一个实例：</source>
          <target state="new">将以下代码添加到 <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept>。这将加载 <bpt id="p2">**</bpt>tasklist.js<ept id="p2">**</ept> 使用的 azure 和 async 模块。这还将定义 <bpt id="p3">**</bpt>TaskList<ept id="p3">**</ept> 函数，将向该函数传递我们之前定义的 <bpt id="p4">**</bpt>Task<ept id="p4">**</ept> 对象的一个实例：</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>定义 <bpt id="p1">**</bpt>TaskList<ept id="p1">**</ept> 对象。</source>
          <target state="new">定义 <bpt id="p1">**</bpt>TaskList<ept id="p1">**</ept> 对象。</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>将以下方法添加到 <bpt id="p1">**</bpt>TaskList<ept id="p1">**</ept>。</source>
          <target state="new">将以下方法添加到 <bpt id="p1">**</bpt>TaskList<ept id="p1">**</ept>。</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>修改 app.js</source>
          <target state="new">修改 app.js</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>tasklist<ept id="p1">**</ept> 目录中，打开 <bpt id="p2">**</bpt>app.js<ept id="p2">**</ept> 文件。此文件之前是通过运行 <bpt id="p3">**</bpt>express<ept id="p3">**</ept> 命令创建的。</source>
          <target state="new">在 <bpt id="p1">**</bpt>tasklist<ept id="p1">**</ept> 目录中，打开 <bpt id="p2">**</bpt>app.js<ept id="p2">**</ept> 文件。此文件之前是通过运行 <bpt id="p3">**</bpt>express<ept id="p3">**</ept> 命令创建的。</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>在文件开头，添加以下代码来加载 azure 模块，设置表名称、partitionKey，并设置此示例使用的存储凭据：</source>
          <target state="new">在文件开头，添加以下代码来加载 azure 模块，设置表名称、partitionKey，并设置此示例使用的存储凭据：</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>nconf 将从环境变量或我们稍后将创建的 <bpt id="p1">**</bpt>config.json<ept id="p1">**</ept> 文件中加载配置值。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>nconf 将从环境变量或我们稍后将创建的 <bpt id="p1">**</bpt>config.json<ept id="p1">**</ept> 文件中加载配置值。</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>在 app.js 文件中，向下滚动到以下行：</source>
          <target state="new">在 app.js 文件中，向下滚动到以下行：</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>将上面的行替换为下面显示的代码。这将通过与你的存储帐户的连接初始化 <ph id="ph1">&lt;strong&gt;</ph>Task<ph id="ph2">&lt;/strong&gt;</ph> 的实例。这是 <ph id="ph3">&lt;strong&gt;</ph>TaskList<ph id="ph4">&lt;/strong&gt;</ph> 的密码，TaskList 将使用该密码与表服务进行通信：</source>
          <target state="new">将上面的行替换为下面显示的代码。这将通过与你的存储帐户的连接初始化 <ph id="ph1">&lt;strong&gt;</ph>Task<ph id="ph2">&lt;/strong&gt;</ph> 的实例。这是 <ph id="ph3">&lt;strong&gt;</ph>TaskList<ph id="ph4">&lt;/strong&gt;</ph> 的密码，TaskList 将使用该密码与表服务进行通信：</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>保存 <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> 文件。</source>
          <target state="new">保存 <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> 文件。</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>修改索引视图</source>
          <target state="new">修改索引视图</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>在文本编辑器中打开 <bpt id="p1">**</bpt>tasklist/views/index.jade<ept id="p1">**</ept> 文件。</source>
          <target state="new">在文本编辑器中打开 <bpt id="p1">**</bpt>tasklist/views/index.jade<ept id="p1">**</ept> 文件。</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>将文件的全部内容替换为以下代码。这会定义显示现有任务的视图，并包括用于添加新任务和将现有任务标记为已完成的表单。</source>
          <target state="new">将文件的全部内容替换为以下代码。这会定义显示现有任务的视图，并包括用于添加新任务和将现有任务标记为已完成的表单。</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>保存并关闭 <bpt id="p1">**</bpt>index.jade<ept id="p1">**</ept> 文件。</source>
          <target state="new">保存并关闭 <bpt id="p1">**</bpt>index.jade<ept id="p1">**</ept> 文件。</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>修改全局布局</source>
          <target state="new">修改全局布局</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>views<ept id="p1">**</ept> 目录中的 <bpt id="p2">**</bpt>Layout.jade<ept id="p2">**</ept> 文件是其他 <bpt id="p3">**</bpt>.jade<ept id="p3">**</ept> 文件的全局模板。在此步骤中，你将对其进行修改，以使用 <bpt id="p4">[</bpt>Twitter Bootstrap<ept id="p4">](https://github.com/twbs/bootstrap)</ept>（一个可以轻松设计美观 Web 应用的工具包）。</source>
          <target state="new"><bpt id="p1">**</bpt>views<ept id="p1">**</ept> 目录中的 <bpt id="p2">**</bpt>Layout.jade<ept id="p2">**</ept> 文件是其他 <bpt id="p3">**</bpt>.jade<ept id="p3">**</ept> 文件的全局模板。在此步骤中，你将对其进行修改，以使用 <bpt id="p4">[</bpt>Twitter Bootstrap<ept id="p4">](https://github.com/twbs/bootstrap)</ept>（一个可以轻松设计美观 Web 应用的工具包）。</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>下载并提取 <bpt id="p1">[</bpt>Twitter Bootstrap<ept id="p1">](http://getbootstrap.com/)</ept> 的文件。将 <bpt id="p2">**</bpt>bootstrap.min.css<ept id="p2">**</ept> 文件从 Bootstrap <bpt id="p3">**</bpt>css<ept id="p3">**</ept> 文件夹复制到应用程序的 <bpt id="p4">**</bpt>public/stylesheets<ept id="p4">**</ept> 目录中。</source>
          <target state="new">下载并提取 <bpt id="p1">[</bpt>Twitter Bootstrap<ept id="p1">](http://getbootstrap.com/)</ept> 的文件。将 <bpt id="p2">**</bpt>bootstrap.min.css<ept id="p2">**</ept> 文件从 Bootstrap <bpt id="p3">**</bpt>css<ept id="p3">**</ept> 文件夹复制到应用程序的 <bpt id="p4">**</bpt>public/stylesheets<ept id="p4">**</ept> 目录中。</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>views<ept id="p1">**</ept> 文件夹中，打开 <bpt id="p2">**</bpt>layout.jade<ept id="p2">**</ept> 并将整体内容替换为以下代码：</source>
          <target state="new">在 <bpt id="p1">**</bpt>views<ept id="p1">**</ept> 文件夹中，打开 <bpt id="p2">**</bpt>layout.jade<ept id="p2">**</ept> 并将整体内容替换为以下代码：</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>创建 config 文件</source>
          <target state="new">创建 config 文件</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>若要在本地运行应用，我们则会将 Azure 存储的凭据置于 config 文件中。使用以下 JSON 创建名为 *<bpt id="p1">*</bpt>config.json<ept id="p1">*</ept> * 的文件：</source>
          <target state="new">若要在本地运行应用，我们则会将 Azure 存储的凭据置于 config 文件中。使用以下 JSON 创建名为 *<bpt id="p1">*</bpt>config.json<ept id="p1">*</ept> * 的文件：</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>将<bpt id="p1">**</bpt>存储帐户名称<ept id="p1">**</ept>替换为你之前创建的存储帐户的名称，并将<bpt id="p2">**</bpt>存储访问密钥<ept id="p2">**</ept>替换为你的存储帐户的主访问密钥。例如：</source>
          <target state="new">将<bpt id="p1">**</bpt>存储帐户名称<ept id="p1">**</ept>替换为你之前创建的存储帐户的名称，并将<bpt id="p2">**</bpt>存储访问密钥<ept id="p2">**</ept>替换为你的存储帐户的主访问密钥。例如：</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>将此文件保存为比 <bpt id="p1">**</bpt>tasklist<ept id="p1">**</ept> 目录<bpt id="p2">*</bpt>高一个目录级<ept id="p2">*</ept>，像这样：</source>
          <target state="new">将此文件保存为比 <bpt id="p1">**</bpt>tasklist<ept id="p1">**</ept> 目录<bpt id="p2">*</bpt>高一个目录级<ept id="p2">*</ept>，像这样：</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>这样做的目的是避免将 config 文件签入源代码管理中，其中该文件可能会成为公共文件。当我们将应用部署到 Azure 时，我们会使用环境变量而不是 config 文件。</source>
          <target state="new">这样做的目的是避免将 config 文件签入源代码管理中，其中该文件可能会成为公共文件。当我们将应用部署到 Azure 时，我们会使用环境变量而不是 config 文件。</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>在本地运行应用程序</source>
          <target state="new">在本地运行应用程序</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>若要在你的本地计算机中测试应用程序，请执行以下步骤：</source>
          <target state="new">若要在你的本地计算机中测试应用程序，请执行以下步骤：</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>在命令行中，将目录更改为 <bpt id="p1">**</bpt>tasklist<ept id="p1">**</ept> 目录。</source>
          <target state="new">在命令行中，将目录更改为 <bpt id="p1">**</bpt>tasklist<ept id="p1">**</ept> 目录。</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>使用以下命令在本地启动应用程序：</source>
          <target state="new">使用以下命令在本地启动应用程序：</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>打开 Web 浏览器并导航到 http://127.0.0.1:3000。</source>
          <target state="new">打开 Web 浏览器并导航到 http://127.0.0.1:3000。</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>此时会显示类似于以下示例的网页。</source>
          <target state="new">此时会显示类似于以下示例的网页。</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>显示空白 tasklist 的网页</source>
          <target state="new">显示空白 tasklist 的网页</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>若要创建新的待办事项，请输入名称和类别，然后单击“添加项”。</source>
          <target state="new">若要创建新的待办事项，请输入名称和类别，然后单击“添加项”。</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>若要将任务标记为完成，请选中“完成”，然后单击“更新任务”。</source>
          <target state="new">若要将任务标记为完成，请选中“完成”，然后单击“更新任务”。</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>任务列表中新项的图像</source>
          <target state="new">任务列表中新项的图像</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>即使应用程序在本地运行，它也会将数据存储在 Azure 表服务中。</source>
          <target state="new">即使应用程序在本地运行，它也会将数据存储在 Azure 表服务中。</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>将你的应用程序部署到 Azure</source>
          <target state="new">将你的应用程序部署到 Azure</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>本部分中的步骤使用 Azure 命令行工具在 Azure 中创建新的 Web 应用，然后使用 Git 部署应用程序。若要执行这些步骤，你必须具有 Azure 订阅。</source>
          <target state="new">本部分中的步骤使用 Azure 命令行工具在 Azure 中创建新的 Web 应用，然后使用 Git 部署应用程序。若要执行这些步骤，你必须具有 Azure 订阅。</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>还可以使用 <bpt id="p1">[</bpt>Azure 门户<ept id="p1">](https://manage.windowsazure.cn/)</ept>执行这些步骤。请参阅[在 Azure 中生成和部署 Node.js Web 应用]。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>还可以使用 <bpt id="p1">[</bpt>Azure 门户<ept id="p1">](https://manage.windowsazure.cn/)</ept>执行这些步骤。请参阅[在 Azure 中生成和部署 Node.js Web 应用]。</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>如果这是你创建的第一个 Web 应用，则你必须使用 Azure 门户部署此应用程序。</source>
          <target state="new">如果这是你创建的第一个 Web 应用，则你必须使用 Azure 门户部署此应用程序。</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>若要开始，请在命令行中输入以下命令以安装 <bpt id="p1">[</bpt><ept id="p1">Azure CLI]</ept>：</source>
          <target state="new">若要开始，请在命令行中输入以下命令以安装 <bpt id="p1">[</bpt><ept id="p1">Azure CLI]</ept>：</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>导入发布设置</source>
          <target state="new">导入发布设置</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>在此步骤中，将下载包含有关你的订阅的信息的文件。</source>
          <target state="new">在此步骤中，将下载包含有关你的订阅的信息的文件。</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>输入以下命令：</source>
          <target state="new">输入以下命令：</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>此命令启动浏览器并导航到下载页面。如果出现提示，请使用与你的 Azure 订阅关联的帐户登录。</source>
          <target state="new">此命令启动浏览器并导航到下载页面。如果出现提示，请使用与你的 Azure 订阅关联的帐户登录。</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>文件下载会自动开始；如果没有自动开始，你可以单击该页面开头的链接手动下载文件。保存文件并记下文件路径。</source>
          <target state="new">文件下载会自动开始；如果没有自动开始，你可以单击该页面开头的链接手动下载文件。保存文件并记下文件路径。</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>输入以下命令以导入设置：</source>
          <target state="new">输入以下命令以导入设置：</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>指定你在上一步中下载的发布设置文件的路径和文件名。</source>
          <target state="new">指定你在上一步中下载的发布设置文件的路径和文件名。</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>导入设置后，请删除发布设置文件。因为不再需要该文件并且它包含有关你的 Azure 订阅的敏感信息。</source>
          <target state="new">导入设置后，请删除发布设置文件。因为不再需要该文件并且它包含有关你的 Azure 订阅的敏感信息。</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>创建 Web 应用</source>
          <target state="new">创建 Web 应用</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>在命令行中，将目录更改为 <bpt id="p1">**</bpt>tasklist<ept id="p1">**</ept> 目录。</source>
          <target state="new">在命令行中，将目录更改为 <bpt id="p1">**</bpt>tasklist<ept id="p1">**</ept> 目录。</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>使用以下命令创建新的 Web 应用。</source>
          <target state="new">使用以下命令创建新的 Web 应用。</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>系统将提示 Web 应用名称和位置。提供唯一的名称并选择与你的 Azure 存储帐户的相同的地理位置。</source>
          <target state="new">系统将提示 Web 应用名称和位置。提供唯一的名称并选择与你的 Azure 存储帐户的相同的地理位置。</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`--git`</ph> 参数在 Azure 中为此 Web 应用创建 Git 存储库。如果不存在，则还会初始化当前目录中的 Git 存储库，并添加名为“azure”的 <bpt id="p1">[</bpt><ept id="p1">Git remote]</ept>，用于将应用程序发布到 Azure。最后，它会创建 <bpt id="p2">**</bpt>web.config<ept id="p2">**</ept> 文件，其中包含 Azure 用于托管 node 应用程序的设置。如果省略 <ph id="ph2">`--git`</ph> 参数，但目录包含 Git 存储库，命令仍会创建“azure”remote。</source>
          <target state="new"><ph id="ph1">`--git`</ph> 参数在 Azure 中为此 Web 应用创建 Git 存储库。如果不存在，则还会初始化当前目录中的 Git 存储库，并添加名为“azure”的 <bpt id="p1">[</bpt><ept id="p1">Git remote]</ept>，用于将应用程序发布到 Azure。最后，它会创建 <bpt id="p2">**</bpt>web.config<ept id="p2">**</ept> 文件，其中包含 Azure 用于托管 node 应用程序的设置。如果省略 <ph id="ph2">`--git`</ph> 参数，但目录包含 Git 存储库，命令仍会创建“azure”remote。</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>此命令完成后，你将看到与下面类似的输出。请注意，以 <bpt id="p1">**</bpt>Website created at<ept id="p1">**</ept> 开头的行包含 Web 应用的 URL。</source>
          <target state="new">此命令完成后，你将看到与下面类似的输出。请注意，以 <bpt id="p1">**</bpt>Website created at<ept id="p1">**</ept> 开头的行包含 Web 应用的 URL。</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>如果这是你的订阅的第一个 Web 应用，系统会指示你使用 Azure 门户创建 Web 应用。有关详细信息，请参阅[在 Azure 中生成和部署 Node.js Web 应用]。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>如果这是你的订阅的第一个 Web 应用，系统会指示你使用 Azure 门户创建 Web 应用。有关详细信息，请参阅[在 Azure 中生成和部署 Node.js Web 应用]。</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>切换到环境变量</source>
          <target state="new">切换到环境变量</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>前面我们实现了用于查找环境变量或从 <bpt id="p1">**</bpt>config.json<ept id="p1">**</ept> 文件中加载值的代码。在接下来的步骤中，你将在 Web 应用配置中创建应用程序通过环境变量实际访问的键值对。</source>
          <target state="new">前面我们实现了用于查找环境变量或从 <bpt id="p1">**</bpt>config.json<ept id="p1">**</ept> 文件中加载值的代码。在接下来的步骤中，你将在 Web 应用配置中创建应用程序通过环境变量实际访问的键值对。</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>从管理门户中，单击“ Web 应用”，然后选择你的 Web 应用。</source>
          <target state="new">从管理门户中，单击“ Web 应用”，然后选择你的 Web 应用。</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>打开 Web 应用仪表板</source>
          <target state="new">打开 Web 应用仪表板</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>单击“配置”，然后找到页面的“应用设置”部分。</source>
          <target state="new">单击“配置”，然后找到页面的“应用设置”部分。</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>配置链接</source>
          <target state="new">配置链接</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>在“应用设置”部分的 <bpt id="p1">**</bpt>KEY<ept id="p1">**</ept> 字段中输入 <bpt id="p2">**</bpt>STORAGE\_NAME<ept id="p2">**</ept>，并在 <bpt id="p3">**</bpt>VALUE<ept id="p3">**</ept>字段中输入你的存储帐户的名称。单击复选标记以移到下一个字段。为以下密钥和值重复此过程：</source>
          <target state="new">在“应用设置”部分的 <bpt id="p1">**</bpt>KEY<ept id="p1">**</ept> 字段中输入 <bpt id="p2">**</bpt>STORAGE\_NAME<ept id="p2">**</ept>，并在 <bpt id="p3">**</bpt>VALUE<ept id="p3">**</ept>字段中输入你的存储帐户的名称。单击复选标记以移到下一个字段。为以下密钥和值重复此过程：</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>STORAGE\_KEY<ept id="p1">**</ept> - 你的存储帐户的访问密钥</source>
          <target state="new"><bpt id="p1">**</bpt>STORAGE\_KEY<ept id="p1">**</ept> - 你的存储帐户的访问密钥</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PARTITION\_KEY<ept id="p1">**</ept> -“mytasks”</source>
          <target state="new"><bpt id="p1">**</bpt>PARTITION\_KEY<ept id="p1">**</ept> -“mytasks”</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TABLE\_NAME<ept id="p1">**</ept> -“tasks”</source>
          <target state="new"><bpt id="p1">**</bpt>TABLE\_NAME<ept id="p1">**</ept> -“tasks”</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>应用程序设置</source>
          <target state="new">应用程序设置</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>最后，单击页面底部的“保存”图标，将此更改提交到运行时环境。</source>
          <target state="new">最后，单击页面底部的“保存”图标，将此更改提交到运行时环境。</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>保存应用程序设置</source>
          <target state="new">保存应用程序设置</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>从命令行中，将目录更改为 <bpt id="p1">**</bpt>tasklist<ept id="p1">**</ept> 目录，然后输入以下命令以删除 <bpt id="p2">**</bpt>config.json<ept id="p2">**</ept> 文件：</source>
          <target state="new">从命令行中，将目录更改为 <bpt id="p1">**</bpt>tasklist<ept id="p1">**</ept> 目录，然后输入以下命令以删除 <bpt id="p2">**</bpt>config.json<ept id="p2">**</ept> 文件：</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>执行以下命令将更改部署到 Azure：</source>
          <target state="new">执行以下命令将更改部署到 Azure：</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>在将更改部署到 Azure 后，你的 Web 应用应当继续工作，因为它现在从“应用设置”条目读取连接字符串。若要验证此情况，请在“应用设置”中将 <bpt id="p1">**</bpt>STORAGE\_KEY<ept id="p1">**</ept> 条目的值更改为一个无效值。保存该值后， Web 应用应该会因存储访问密钥设置无效而失败。</source>
          <target state="new">在将更改部署到 Azure 后，你的 Web 应用应当继续工作，因为它现在从“应用设置”条目读取连接字符串。若要验证此情况，请在“应用设置”中将 <bpt id="p1">**</bpt>STORAGE\_KEY<ept id="p1">**</ept> 条目的值更改为一个无效值。保存该值后， Web 应用应该会因存储访问密钥设置无效而失败。</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>发布应用程序</source>
          <target state="new">发布应用程序</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>若要发布应用，将代码文件提交到 Git 中，随后推送到 azure/master。</source>
          <target state="new">若要发布应用，将代码文件提交到 Git 中，随后推送到 azure/master。</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>设置部署凭据。</source>
          <target state="new">设置部署凭据。</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>添加并提交应用程序文件。</source>
          <target state="new">添加并提交应用程序文件。</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>将提交的文件推送到 Web 应用：</source>
          <target state="new">将提交的文件推送到 Web 应用：</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>使用 <bpt id="p1">**</bpt>master<ept id="p1">**</ept> 作为目标分支。在部署结束时，你将看到类似于以下示例的语句：</source>
          <target state="new">使用 <bpt id="p1">**</bpt>master<ept id="p1">**</ept> 作为目标分支。在部署结束时，你将看到类似于以下示例的语句：</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>推送操作完成后，浏览到 <ph id="ph1">`azure create site`</ph> 命令之前返回的 Web 应用URL，以查看你的应用程序。</source>
          <target state="new">推送操作完成后，浏览到 <ph id="ph1">`azure create site`</ph> 命令之前返回的 Web 应用URL，以查看你的应用程序。</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>其他资源</source>
          <target state="new">其他资源</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Azure 命令行界面</source>
          <target state="new">Azure 命令行界面</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>[创建 Node.js 应用程序并将其部署到 Azure Web 应用]: /documentation/articles/web-sites-nodejs-develop-deploy-mac/</source>
          <target state="new">[创建 Node.js 应用程序并将其部署到 Azure Web 应用]: /documentation/articles/web-sites-nodejs-develop-deploy-mac/</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">使用 Git 发布到 Azure Web 应用]</ept>: /documentation/articles/web-sites-publish-source-control/</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">使用 Git 发布到 Azure Web 应用]</ept>: /documentation/articles/web-sites-publish-source-control/</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>[Azure 开发人员中心]: /develop/nodejs/</source>
          <target state="new">[Azure 开发人员中心]: /develop/nodejs/</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>