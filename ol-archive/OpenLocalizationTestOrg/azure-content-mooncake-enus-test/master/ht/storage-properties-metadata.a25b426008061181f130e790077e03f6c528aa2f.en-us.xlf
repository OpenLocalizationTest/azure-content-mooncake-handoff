<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">efcdd11572aebdd80c585f2d431364dfd22c22a8</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>在 Azure 存储空间中设置和检索对象的属性和元数据 | Azure</source>
          <target state="new">在 Azure 存储空间中设置和检索对象的属性和元数据 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>在 Azure 存储空间中存储对象的自定义元数据，并设置和检索系统属性。</source>
          <target state="new">在 Azure 存储空间中存储对象的自定义元数据，并设置和检索系统属性。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>设置和检索属性与元数据</source>
          <target state="new">设置和检索属性与元数据</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>概述</source>
          <target state="new">概述</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Azure 存储中的对象支持系统属性和用户定义的元数据，除了该数据以外，它们还包含：</source>
          <target state="new">Azure 存储中的对象支持系统属性和用户定义的元数据，除了该数据以外，它们还包含：</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>系统属性。<ept id="p1">**</ept> 系统属性存在于每个存储资源上。其中一些属性是可以读取或设置的，而另一些属性是只读的。事实上，有些系统属性与某些标准 HTTP 标头对应。Azure 存储客户端库为您维护这些内容。</source>
          <target state="new"><bpt id="p1">**</bpt>系统属性。<ept id="p1">**</ept> 系统属性存在于每个存储资源上。其中一些属性是可以读取或设置的，而另一些属性是只读的。事实上，有些系统属性与某些标准 HTTP 标头对应。Azure 存储客户端库为您维护这些内容。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>用户定义的元数据。<ept id="p1">**</ept> 用户定义的元数据是在给定资源上以名称/值对的形式指定的元数据。您可以使用元数据来存储存储资源其他值；这些值仅用于您个人目的，不会影响资源的行为方式。</source>
          <target state="new"><bpt id="p1">**</bpt>用户定义的元数据。<ept id="p1">**</ept> 用户定义的元数据是在给定资源上以名称/值对的形式指定的元数据。您可以使用元数据来存储存储资源其他值；这些值仅用于您个人目的，不会影响资源的行为方式。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>检索资源的属性和元数据值的过程分为两步。在可以读取这些值之前，你必须通过调用 <bpt id="p1">**</bpt>FetchAttributes<ept id="p1">**</ept> 方法显式获取它们。</source>
          <target state="new">检索资源的属性和元数据值的过程分为两步。在可以读取这些值之前，你必须通过调用 <bpt id="p1">**</bpt>FetchAttributes<ept id="p1">**</ept> 方法显式获取它们。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> 不会填充存储资源的属性和元数据值，除非调用 <bpt id="p1">**</bpt>FetchAttributes<ept id="p1">**</ept> 方法之一。</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> 不会填充存储资源的属性和元数据值，除非调用 <bpt id="p1">**</bpt>FetchAttributes<ept id="p1">**</ept> 方法之一。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>设置和检索属性</source>
          <target state="new">设置和检索属性</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>若要检索属性值，请对 blob 或容器调用 <bpt id="p1">**</bpt>FetchAttributes<ept id="p1">**</ept> 方法以填充属性，然后读取值。</source>
          <target state="new">若要检索属性值，请对 blob 或容器调用 <bpt id="p1">**</bpt>FetchAttributes<ept id="p1">**</ept> 方法以填充属性，然后读取值。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>若要在对象上设置属性，请指定属性值，然后调用 <bpt id="p1">**</bpt>SetProperties<ept id="p1">**</ept> 方法。</source>
          <target state="new">若要在对象上设置属性，请指定属性值，然后调用 <bpt id="p1">**</bpt>SetProperties<ept id="p1">**</ept> 方法。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>以下代码示例创建容器并将它的一些属性值写入到控制台窗口：</source>
          <target state="new">以下代码示例创建容器并将它的一些属性值写入到控制台窗口：</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>设置和检索元数据</source>
          <target state="new">设置和检索元数据</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>你可以在 Blob 或容器资源上指定元数据作为一个或多个名称/值对。若要设置元数据，请将名称/值对添加到资源上的 <bpt id="p1">**</bpt>Metadata<ept id="p1">**</ept> 集合，然后调用 <bpt id="p2">**</bpt>SetMetadata<ept id="p2">**</ept> 方法以将值保存到服务。</source>
          <target state="new">你可以在 Blob 或容器资源上指定元数据作为一个或多个名称/值对。若要设置元数据，请将名称/值对添加到资源上的 <bpt id="p1">**</bpt>Metadata<ept id="p1">**</ept> 集合，然后调用 <bpt id="p2">**</bpt>SetMetadata<ept id="p2">**</ept> 方法以将值保存到服务。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>：元数据的名称必须符合 C# 标识符命名约定。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>：元数据的名称必须符合 C# 标识符命名约定。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>以下代码示例在容器上设置元数据。一个值是使用集合的 <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> 方法设置的。另一个值是使用隐式键/值语法设置的。这两种方法都有效。</source>
          <target state="new">以下代码示例在容器上设置元数据。一个值是使用集合的 <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> 方法设置的。另一个值是使用隐式键/值语法设置的。这两种方法都有效。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>若要检索元数据，请对 Blob 或容器调用 <bpt id="p1">**</bpt>FetchAttributes<ept id="p1">**</ept> 方法以填充 <bpt id="p2">**</bpt>Metadata<ept id="p2">**</ept> 集合，然后读取值，如下面的示例所示。</source>
          <target state="new">若要检索元数据，请对 Blob 或容器调用 <bpt id="p1">**</bpt>FetchAttributes<ept id="p1">**</ept> 方法以填充 <bpt id="p2">**</bpt>Metadata<ept id="p2">**</ept> 集合，然后读取值，如下面的示例所示。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>另请参阅</source>
          <target state="new">另请参阅</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>适用于 .NET 的 Azure 存储客户端库参考</source>
          <target state="new">适用于 .NET 的 Azure 存储客户端库参考</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>适用于 .NET 的 Azure 存储客户端库包</source>
          <target state="new">适用于 .NET 的 Azure 存储客户端库包</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>