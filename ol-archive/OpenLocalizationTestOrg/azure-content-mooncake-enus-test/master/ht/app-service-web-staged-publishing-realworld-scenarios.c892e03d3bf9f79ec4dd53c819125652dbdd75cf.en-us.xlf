<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ce60a8616b2cfd7ce1b6b45fcd1d99f202cda98a</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>对 Web 应用有效使用 DevOps 环境</source>
          <target state="new">对 Web 应用有效使用 DevOps 环境</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何使用部署槽来设置和管理应用程序的多个开发环境</source>
          <target state="new">了解如何使用部署槽来设置和管理应用程序的多个开发环境</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>对 Web 应用有效使用 DevOps 环境</source>
          <target state="new">对 Web 应用有效使用 DevOps 环境</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>本文说明如何针对应用程序的多个版本（例如开发、过渡、QA 和生产）来设置和管理 Web 应用程序部署。应用程序的每个版本可被视为满足部署过程特定需求的开发环境，例如，开发团队可以使用 QA 环境来测试应用程序的质量，然后将更改推送到生产环境。</source>
          <target state="new">本文说明如何针对应用程序的多个版本（例如开发、过渡、QA 和生产）来设置和管理 Web 应用程序部署。应用程序的每个版本可被视为满足部署过程特定需求的开发环境，例如，开发团队可以使用 QA 环境来测试应用程序的质量，然后将更改推送到生产环境。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>设置多个开发环境可能是具挑战性的任务，因为需要在这些环境之间跟踪、管理资源（计算、Web 应用程序、数据库、缓存等），以及在不同的环境之间部署内容。</source>
          <target state="new">设置多个开发环境可能是具挑战性的任务，因为需要在这些环境之间跟踪、管理资源（计算、Web 应用程序、数据库、缓存等），以及在不同的环境之间部署内容。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>设置非生产环境（过渡、开发、QA）</source>
          <target state="new">设置非生产环境（过渡、开发、QA）</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>生产 Web 应用启动并运行之后，下一步是创建非生产环境。为了使用部署槽，请确保你在<bpt id="p1">**</bpt>标准<ept id="p1">**</ept> App Service 计划模式下运行。部署槽实际上是具有自身主机名的实时 Web 应用。两个部署槽（包括生产槽）之间的 Web 应用内容与配置元素可以交换。将应用程序部署到部署槽具有以下优点：</source>
          <target state="new">生产 Web 应用启动并运行之后，下一步是创建非生产环境。为了使用部署槽，请确保你在<bpt id="p1">**</bpt>标准<ept id="p1">**</ept> App Service 计划模式下运行。部署槽实际上是具有自身主机名的实时 Web 应用。两个部署槽（包括生产槽）之间的 Web 应用内容与配置元素可以交换。将应用程序部署到部署槽具有以下优点：</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>你可以在分阶段部署槽中验证 Web 应用更改，然后将其与生产槽交换。</source>
          <target state="new">你可以在分阶段部署槽中验证 Web 应用更改，然后将其与生产槽交换。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>首先将 Web 应用部署到槽，然后将其交换到生产，这确保槽的所有实例都预热，然后交换到生产。部署你的 Web 应用时，这消除了停机时间。流量重定向是无缝的，且不会因交换操作而删除任何请求。</source>
          <target state="new">首先将 Web 应用部署到槽，然后将其交换到生产，这确保槽的所有实例都预热，然后交换到生产。部署你的 Web 应用时，这消除了停机时间。流量重定向是无缝的，且不会因交换操作而删除任何请求。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>交换后，具有以前分阶段 Web 应用的槽现在具有以前的生产 Web 应用。如果交换到生产槽的更改与你的预期不同，你可以立即执行同一交换来收回“上一已知的良好 Web 应用”。</source>
          <target state="new">交换后，具有以前分阶段 Web 应用的槽现在具有以前的生产 Web 应用。如果交换到生产槽的更改与你的预期不同，你可以立即执行同一交换来收回“上一已知的良好 Web 应用”。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>若要设置过渡部署槽，请参阅<bpt id="p1">[</bpt>为 Azure 中的 Web 应用设置过渡环境<ept id="p1">](/documentation/articles/web-sites-staged-publishing)</ept>。每个环境应该包含自身的一组资源，例如，如果 Web 应用使用数据库，则生产和过渡 Web 应用应该使用不同的数据库。添加过渡开发环境资源，例如数据库、存储或缓存，用于设置过渡开发环境。</source>
          <target state="new">若要设置过渡部署槽，请参阅<bpt id="p1">[</bpt>为 Azure 中的 Web 应用设置过渡环境<ept id="p1">](/documentation/articles/web-sites-staged-publishing)</ept>。每个环境应该包含自身的一组资源，例如，如果 Web 应用使用数据库，则生产和过渡 Web 应用应该使用不同的数据库。添加过渡开发环境资源，例如数据库、存储或缓存，用于设置过渡开发环境。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>使用多个开发环境的示例</source>
          <target state="new">使用多个开发环境的示例</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>任何项目应该遵循具有至少两个环境（开发和生产环境）的源代码管理，但在使用内容管理系统、应用程序框架等时，我们可能遇到应用程序原本不支持这种方案的问题。下面讨论的某些流行框架正是如此。使用 CMS/框架时，你要考虑到很多问题，例如</source>
          <target state="new">任何项目应该遵循具有至少两个环境（开发和生产环境）的源代码管理，但在使用内容管理系统、应用程序框架等时，我们可能遇到应用程序原本不支持这种方案的问题。下面讨论的某些流行框架正是如此。使用 CMS/框架时，你要考虑到很多问题，例如</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>如何分解成不同的环境</source>
          <target state="new">如何分解成不同的环境</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>可以更改哪些文件且不影响框架版本更新</source>
          <target state="new">可以更改哪些文件且不影响框架版本更新</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>如何管理每个环境的配置</source>
          <target state="new">如何管理每个环境的配置</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>如何管理模块/插件版本更新、核心框架版本更新</source>
          <target state="new">如何管理模块/插件版本更新、核心框架版本更新</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>有多种方法可为项目设置多个环境，以下示例只是相关应用程序使用的一种方法。</source>
          <target state="new">有多种方法可为项目设置多个环境，以下示例只是相关应用程序使用的一种方法。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>WordPress</source>
          <target state="new">WordPress</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>在本部分中，你将学习如何使用 WordPress 槽来设置部署工作流。与大多数 CMS 解决方案一样，WordPress 原本并不支持使用多个开发环境。Azure Web Apps 有一些功能可让你更轻松地将配置设置存储在代码之外。</source>
          <target state="new">在本部分中，你将学习如何使用 WordPress 槽来设置部署工作流。与大多数 CMS 解决方案一样，WordPress 原本并不支持使用多个开发环境。Azure Web Apps 有一些功能可让你更轻松地将配置设置存储在代码之外。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>在创建过渡槽之前，请设置应用程序代码以支持多个环境。若要在 WordPress 中支持多个环境，需要在本地开发 Web 应用上编辑 <ph id="ph1">`wp-config.php`</ph>，并在文件的开头添加以下代码。这样，应用程序就可以根据所选环境选择正确的配置。</source>
          <target state="new">在创建过渡槽之前，请设置应用程序代码以支持多个环境。若要在 WordPress 中支持多个环境，需要在本地开发 Web 应用上编辑 <ph id="ph1">`wp-config.php`</ph>，并在文件的开头添加以下代码。这样，应用程序就可以根据所选环境选择正确的配置。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>在 Web 应用根目录下创建名为 <ph id="ph1">`config`</ph> 的文件夹，并添加两个文件：<ph id="ph2">`wp-config.azure.php`</ph> 和 <ph id="ph3">`wp-config.local.php`</ph>，分别代表 Azure 和本地环境。</source>
          <target state="new">在 Web 应用根目录下创建名为 <ph id="ph1">`config`</ph> 的文件夹，并添加两个文件：<ph id="ph2">`wp-config.azure.php`</ph> 和 <ph id="ph3">`wp-config.local.php`</ph>，分别代表 Azure 和本地环境。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>复制 <ph id="ph1">`wp-config.local.php`</ph> 中的以下内容：</source>
          <target state="new">复制 <ph id="ph1">`wp-config.local.php`</ph> 中的以下内容：</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>设置上述安全密钥可以帮助防止 Web 应用受到黑客攻击，因此请使用唯一值。如果需要为前面所述的安全密钥生成字符串，你可通过此<bpt id="p1">[</bpt>链接<ept id="p1">](https://api.wordpress.org/secret-key/1.1/salt)</ept>使用自动生成器来创建新密钥/值</source>
          <target state="new">设置上述安全密钥可以帮助防止 Web 应用受到黑客攻击，因此请使用唯一值。如果需要为前面所述的安全密钥生成字符串，你可通过此<bpt id="p1">[</bpt>链接<ept id="p1">](https://api.wordpress.org/secret-key/1.1/salt)</ept>使用自动生成器来创建新密钥/值</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>复制 <ph id="ph1">`wp-config.azure.php`</ph> 中的以下代码：</source>
          <target state="new">复制 <ph id="ph1">`wp-config.azure.php`</ph> 中的以下代码：</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>使用相对路径</source>
          <target state="new">使用相对路径</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>最后一件事是允许 WordPress 应用使用相对路径。WordPress 在数据库中存储 URL 信息。这会使得在不同环境间移动内容变得困难，因为每次从本地转移到过渡环境或者从过渡环境转移到生产环境时，都需要更新数据库。若要降低每次在不同环境间部署数据库时造成问题的风险，请使用<bpt id="p1">[</bpt>相对根链接插件<ept id="p1">](https://wordpress.org/plugins/root-relative-urls/)</ept>，你可以使用 WordPress 管理员仪表板来安装它，或者从<bpt id="p2">[</bpt>此处<ept id="p2">](https://downloads.wordpress.org/plugin/root-relative-urls.zip)</ept>手动下载。</source>
          <target state="new">最后一件事是允许 WordPress 应用使用相对路径。WordPress 在数据库中存储 URL 信息。这会使得在不同环境间移动内容变得困难，因为每次从本地转移到过渡环境或者从过渡环境转移到生产环境时，都需要更新数据库。若要降低每次在不同环境间部署数据库时造成问题的风险，请使用<bpt id="p1">[</bpt>相对根链接插件<ept id="p1">](https://wordpress.org/plugins/root-relative-urls/)</ept>，你可以使用 WordPress 管理员仪表板来安装它，或者从<bpt id="p2">[</bpt>此处<ept id="p2">](https://downloads.wordpress.org/plugin/root-relative-urls.zip)</ept>手动下载。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>将以下条目添加到 <ph id="ph1">`wp-config.php`</ph> 文件中的 <ph id="ph2">`That's all, stop editing!`</ph> 注释前面：</source>
          <target state="new">将以下条目添加到 <ph id="ph1">`wp-config.php`</ph> 文件中的 <ph id="ph2">`That's all, stop editing!`</ph> 注释前面：</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>通过 WordPress 管理员仪表板中的“<ph id="ph1">`Plugins`</ph>”菜单激活该插件。保存 WordPress 应用的 permalink 设置。</source>
          <target state="new">通过 WordPress 管理员仪表板中的“<ph id="ph1">`Plugins`</ph>”菜单激活该插件。保存 WordPress 应用的 permalink 设置。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>最终的 <ph id="ph1">`wp-config.php`</ph> 文件</source>
          <target state="new">最终的 <ph id="ph1">`wp-config.php`</ph> 文件</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>任何 WordPress 核心更新并不影响 <ph id="ph1">`wp-config.php`</ph>、<ph id="ph2">`wp-config.azure.php`</ph> 和 <ph id="ph3">`wp-config.local.php`</ph> 文件。<ph id="ph4">`wp-config.php`</ph> 文件最终看起来像是这样</source>
          <target state="new">任何 WordPress 核心更新并不影响 <ph id="ph1">`wp-config.php`</ph>、<ph id="ph2">`wp-config.azure.php`</ph> 和 <ph id="ph3">`wp-config.local.php`</ph> 文件。<ph id="ph4">`wp-config.php`</ph> 文件最终看起来像是这样</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>设置过渡环境</source>
          <target state="new">设置过渡环境</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>假设你已在 Azure Web 上运行了 WordPress Web 应用，请登录 <bpt id="p1">[</bpt>Azure 管理门户<ept id="p1">](http://manage.windowsazure.cn)</ept>并转到该 WordPress Web 应用。</source>
          <target state="new">假设你已在 Azure Web 上运行了 WordPress Web 应用，请登录 <bpt id="p1">[</bpt>Azure 管理门户<ept id="p1">](http://manage.windowsazure.cn)</ept>并转到该 WordPress Web 应用。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>单击“仪表板”-&gt;“速览”-&gt;“添加新部署槽”以创建名为 stage 的部署槽。部署槽是与上面创建的主要网站共享相同资源的另一个网站。</source>
          <target state="new">单击“仪表板”-&gt;“速览”-&gt;“添加新部署槽”以创建名为 stage 的部署槽。部署槽是与上面创建的主要网站共享相同资源的另一个网站。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>添加另一个 MySQL 数据库，假设为 <ph id="ph1">`wordpress-stage-db`</ph>。将过渡部署槽的连接字符串更新为指向新建的数据库 <ph id="ph2">`wordpress-stage-db`</ph>。请注意，生产网站 <ph id="ph3">`wordpressapp-group`</ph> 和过渡网站 <ph id="ph4">`wordpressprodapp-stage`</ph> 必须指向不同的数据库。</source>
          <target state="new">添加另一个 MySQL 数据库，假设为 <ph id="ph1">`wordpress-stage-db`</ph>。将过渡部署槽的连接字符串更新为指向新建的数据库 <ph id="ph2">`wordpress-stage-db`</ph>。请注意，生产网站 <ph id="ph3">`wordpressapp-group`</ph> 和过渡网站 <ph id="ph4">`wordpressprodapp-stage`</ph> 必须指向不同的数据库。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>配置环境特定的应用设置</source>
          <target state="new">配置环境特定的应用设置</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>开发人员可以在 Azure 中存储键-值字符串对，作为与名为“应用设置”的 Web 应用关联的配置信息的一部分。在运行时，Azure Web Apps 将自动检索这些值，并使这些值可供 Web 应用中运行的代码使用。从安全角度来看，这可以带来优势，因为包含密码的数据库连接字符串等机密信息永远不会以明文形式显示在文件（例如 <ph id="ph1">`wp-config.php`</ph>）中。</source>
          <target state="new">开发人员可以在 Azure 中存储键-值字符串对，作为与名为“应用设置”的 Web 应用关联的配置信息的一部分。在运行时，Azure Web Apps 将自动检索这些值，并使这些值可供 Web 应用中运行的代码使用。从安全角度来看，这可以带来优势，因为包含密码的数据库连接字符串等机密信息永远不会以明文形式显示在文件（例如 <ph id="ph1">`wp-config.php`</ph>）中。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>执行更新时，下面定义的过程会很有帮助，因为它同时包含 WordPress 应用的文件更改和数据库更改：</source>
          <target state="new">执行更新时，下面定义的过程会很有帮助，因为它同时包含 WordPress 应用的文件更改和数据库更改：</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>WordPress 版本升级</source>
          <target state="new">WordPress 版本升级</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>新增、编辑或升级插件</source>
          <target state="new">新增、编辑或升级插件</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>新增、编辑或升级主题</source>
          <target state="new">新增、编辑或升级主题</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>配置应用设置：</source>
          <target state="new">配置应用设置：</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>数据库信息</source>
          <target state="new">数据库信息</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>打开/关闭 WordPress 日志记录</source>
          <target state="new">打开/关闭 WordPress 日志记录</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>WordPress 安全设置</source>
          <target state="new">WordPress 安全设置</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>请确保为生产 Web 应用和过渡槽添加了以下应用设置。请注意，生产 Web 应用和过渡 Web 应用使用不同的数据库。</source>
          <target state="new">请确保为生产 Web 应用和过渡槽添加了以下应用设置。请注意，生产 Web 应用和过渡 Web 应用使用不同的数据库。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>取消选中除 WP\_ENV 以外的所有设置参数的“槽设置”复选框。这会交换 Web 应用以及文件内容和数据库的配置。如果“槽设置”<bpt id="p1">**</bpt>已选中<ept id="p1">**</ept>，则执行交换操作时，Web 应用的应用设置和连接字符串配置将不会跨环境移动，因此，如果存在任何数据库更改，将不会中断你的生产 Web 应用。</source>
          <target state="new">取消选中除 WP\_ENV 以外的所有设置参数的“槽设置”复选框。这会交换 Web 应用以及文件内容和数据库的配置。如果“槽设置”<bpt id="p1">**</bpt>已选中<ept id="p1">**</ept>，则执行交换操作时，Web 应用的应用设置和连接字符串配置将不会跨环境移动，因此，如果存在任何数据库更改，将不会中断你的生产 Web 应用。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>使用 WebMatrix 或所选的工具（例如 FTP、Git 或 PhpMyAdmin）将本地开发环境 Web 应用部署到过渡 Web 应用和数据库。</source>
          <target state="new">使用 WebMatrix 或所选的工具（例如 FTP、Git 或 PhpMyAdmin）将本地开发环境 Web 应用部署到过渡 Web 应用和数据库。</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>WordPress Web 应用的 Web Matrix 发布对话框</source>
          <target state="new">WordPress Web 应用的 Web Matrix 发布对话框</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>浏览并测试你的过渡 Web 应用。假设要更新 Web 应用的主题，可以使用以下过渡 Web 应用。</source>
          <target state="new">浏览并测试你的过渡 Web 应用。假设要更新 Web 应用的主题，可以使用以下过渡 Web 应用。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>交换槽之前浏览过渡 Web 应用</source>
          <target state="new">交换槽之前浏览过渡 Web 应用</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>如果一切看起来正常，请使用以下 PowerShell 交换网站槽。</source>
          <target state="new">如果一切看起来正常，请使用以下 PowerShell 交换网站槽。</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> 上述脚本是针对 Azure PowerShell 1.0.2 或更高版本编写的。对于更低的版本，请相应地更改命令。有关详细信息，请参阅博客<bpt id="p1">[</bpt>在中国使用的 Azure PowerShell 1.0.0 或更高版本<ept id="p1">](http://blogs.msdn.com/b/azchina/archive/2015/12/18/azure-powershell-1.0.0_e54e0a4e48722c6728572d4efd56_azure_7f4f28758476e86c0f618b4e7998_.aspx)</ept>。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> 上述脚本是针对 Azure PowerShell 1.0.2 或更高版本编写的。对于更低的版本，请相应地更改命令。有关详细信息，请参阅博客<bpt id="p1">[</bpt>在中国使用的 Azure PowerShell 1.0.0 或更高版本<ept id="p1">](http://blogs.msdn.com/b/azchina/archive/2015/12/18/azure-powershell-1.0.0_e54e0a4e48722c6728572d4efd56_azure_7f4f28758476e86c0f618b4e7998_.aspx)</ept>。</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>必须使用此 PowerShell 脚本（或其他类似的方式，如 Azure CLI）来执行交换，以保留每个槽的应用设置。如果在 Azure 管理门户中执行交换，则执行交换操作时，网站的应用设置、连接字符串配置将不会跨环境移动，因此，如果存在任何数据库更改，在中断生产网站时将看不到这些更改。</source>
          <target state="new">必须使用此 PowerShell 脚本（或其他类似的方式，如 Azure CLI）来执行交换，以保留每个槽的应用设置。如果在 Azure 管理门户中执行交换，则执行交换操作时，网站的应用设置、连接字符串配置将不会跨环境移动，因此，如果存在任何数据库更改，在中断生产网站时将看不到这些更改。</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>如果需要交换一些应用设置，同时保留其他一些应用设置，你可以在上述脚本中编辑变量 <ph id="ph1">`$hash`</ph> 和 <ph id="ph2">`$hash_stage`</ph>。</source>
          <target state="new">如果需要交换一些应用设置，同时保留其他一些应用设置，你可以在上述脚本中编辑变量 <ph id="ph1">`$hash`</ph> 和 <ph id="ph2">`$hash_stage`</ph>。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>这是在执行交换之前的 WordPress 生产 Web 应用</source>
          <target state="new">这是在执行交换之前的 WordPress 生产 Web 应用</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>交换槽之前的生产 Web 应用</source>
          <target state="new">交换槽之前的生产 Web 应用</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>执行交换操作之后，主题已在生产 Web 应用上更新。</source>
          <target state="new">执行交换操作之后，主题已在生产 Web 应用上更新。</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>交换槽之后的生产 Web 应用</source>
          <target state="new">交换槽之后的生产 Web 应用</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>如果你需要<bpt id="p1">**</bpt>回滚<ept id="p1">**</ept>，可以转到生产 Web 应用设置，并单击“交换”按钮将 Web 应用与数据库从生产槽交换到过渡槽。要记住的重点是，如果数据库的更改是在任意给定时间随<bpt id="p2">**</bpt>交换<ept id="p2">**</ept>操作而包含的，则下次重新部署到过渡 Web 应用时，你需要将数据库更改部署到过渡 Web 应用的当前数据库，而该数据库以前可能是生产数据库或过渡数据库。</source>
          <target state="new">如果你需要<bpt id="p1">**</bpt>回滚<ept id="p1">**</ept>，可以转到生产 Web 应用设置，并单击“交换”按钮将 Web 应用与数据库从生产槽交换到过渡槽。要记住的重点是，如果数据库的更改是在任意给定时间随<bpt id="p2">**</bpt>交换<ept id="p2">**</ept>操作而包含的，则下次重新部署到过渡 Web 应用时，你需要将数据库更改部署到过渡 Web 应用的当前数据库，而该数据库以前可能是生产数据库或过渡数据库。</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>摘要</source>
          <target state="new">摘要</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>将适用于包含数据库的任何应用程序的过程通用化</source>
          <target state="new">将适用于包含数据库的任何应用程序的过程通用化</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>在本地环境中安装应用程序</source>
          <target state="new">在本地环境中安装应用程序</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>包含环境特定的配置（本地和 Azure Web 应用）</source>
          <target state="new">包含环境特定的配置（本地和 Azure Web 应用）</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>在 Azure Web 应用中设置环境 - 过渡、生产</source>
          <target state="new">在 Azure Web 应用中设置环境 - 过渡、生产</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>如果已在 Azure 上运行生产应用程序，请将生产内容（文件/代码和数据库）同步到本地和过渡环境。</source>
          <target state="new">如果已在 Azure 上运行生产应用程序，请将生产内容（文件/代码和数据库）同步到本地和过渡环境。</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>在本地环境中开发应用程序</source>
          <target state="new">在本地环境中开发应用程序</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>将生产 Web 应用置于维护或锁定模式，并将数据库内容从生产环境同步到过渡环境和开发环境</source>
          <target state="new">将生产 Web 应用置于维护或锁定模式，并将数据库内容从生产环境同步到过渡环境和开发环境</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>部署到过渡环境和测试环境</source>
          <target state="new">部署到过渡环境和测试环境</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>部署到生产环境</source>
          <target state="new">部署到生产环境</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>重复步骤 4 至 6</source>
          <target state="new">重复步骤 4 至 6</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>参考</source>
          <target state="new">参考</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>使用 Azure Web 应用进行灵便软件开发</source>
          <target state="new">使用 Azure Web 应用进行灵便软件开发</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>为 Azure 中的 Web 应用设置过渡环境</source>
          <target state="new">为 Azure 中的 Web 应用设置过渡环境</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>如何阻止对非生产部署槽的 Web 访问</source>
          <target state="new">如何阻止对非生产部署槽的 Web 访问</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>