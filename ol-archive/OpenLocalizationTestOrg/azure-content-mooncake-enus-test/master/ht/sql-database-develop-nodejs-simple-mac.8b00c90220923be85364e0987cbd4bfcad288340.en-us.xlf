<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a67a8492cec92fdcf7bf080cb251008ffbc4274b</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>在 Mac OS X 上配合 Tedious 使用 Node.js 连接到 SQL 数据库</source>
          <target state="new">在 Mac OS X 上配合 Tedious 使用 Node.js 连接到 SQL 数据库</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>演示了一个可以用来连接到 Azure SQL 数据库的 Node.js 代码示例。该示例使用 Tedious 驱动程序进行连接。</source>
          <target state="new">演示了一个可以用来连接到 Azure SQL 数据库的 Node.js 代码示例。该示例使用 Tedious 驱动程序进行连接。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>在 Mac OS X 上配合 Tedious 使用 Node.js 连接到 SQL 数据库</source>
          <target state="new">在 Mac OS X 上配合 Tedious 使用 Node.js 连接到 SQL 数据库</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>[AZURE.SELECTOR]</source>
          <target state="new">[AZURE.SELECTOR]</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Node.js</source>
          <target state="new">Node.js</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="new">Python</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Ruby</source>
          <target state="new">Ruby</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>本主题提供可在 Mac OS X 上运行的 Node.js 代码示例。该示例使用 Tedious 驱动程序连接到 Azure SQL 数据库。</source>
          <target state="new">本主题提供可在 Mac OS X 上运行的 Node.js 代码示例。该示例使用 Tedious 驱动程序连接到 Azure SQL 数据库。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>先决条件</source>
          <target state="new">先决条件</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>安装 <bpt id="p1">**</bpt>node<ept id="p1">**</ept>（除非已在计算机上安装）。</source>
          <target state="new">安装 <bpt id="p1">**</bpt>node<ept id="p1">**</ept>（除非已在计算机上安装）。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>若要在 OSX 10.10 Yosemite 上安装 node.js，你可以下载预编译的二进制包，这样便可以顺利轻松地完成安装。<bpt id="p1">[</bpt>访问 nodejs.org<ept id="p1">](http://nodejs.org)</ept>，单击“安装”按钮以下载最新的包。</source>
          <target state="new">若要在 OSX 10.10 Yosemite 上安装 node.js，你可以下载预编译的二进制包，这样便可以顺利轻松地完成安装。<bpt id="p1">[</bpt>访问 nodejs.org<ept id="p1">](http://nodejs.org)</ept>，单击“安装”按钮以下载最新的包。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>遵循可以安装 <bpt id="p1">**</bpt>node<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>npm<ept id="p2">**</ept> 的安装向导，通过 .dmg 安装该包。npm 是“节点包管理器”，可帮助安装 node.js 的其他包。</source>
          <target state="new">遵循可以安装 <bpt id="p1">**</bpt>node<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>npm<ept id="p2">**</ept> 的安装向导，通过 .dmg 安装该包。npm 是“节点包管理器”，可帮助安装 node.js 的其他包。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>将计算机配置为使用 <bpt id="p1">**</bpt>node<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>npm<ept id="p2">**</ept> 之后，请导航到要在其中创建 Node.js 项目的目录，然后输入以下命令。</source>
          <target state="new">将计算机配置为使用 <bpt id="p1">**</bpt>node<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>npm<ept id="p2">**</ept> 之后，请导航到要在其中创建 Node.js 项目的目录，然后输入以下命令。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>npm init<ept id="p1">**</ept> 将创建节点项目。若要在项目创建期间保留默认值，请一直按 Enter，直到创建了项目。现在，项目目录中会出现 <bpt id="p2">**</bpt>package.json<ept id="p2">**</ept> 文件。</source>
          <target state="new"><bpt id="p1">**</bpt>npm init<ept id="p1">**</ept> 将创建节点项目。若要在项目创建期间保留默认值，请一直按 Enter，直到创建了项目。现在，项目目录中会出现 <bpt id="p2">**</bpt>package.json<ept id="p2">**</ept> 文件。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>SQL 数据库</source>
          <target state="new">SQL 数据库</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>请参阅<bpt id="p1">[</bpt>入门页<ept id="p1">](/documentation/articles/sql-database-get-started)</ept>，以了解如何创建示例数据库。必须根据指南创建 <bpt id="p2">**</bpt>AdventureWorks 数据库模板<ept id="p2">**</ept>。下面所示的示例只适用于 <bpt id="p3">**</bpt>AdventureWorks 架构<ept id="p3">**</ept>。</source>
          <target state="new">请参阅<bpt id="p1">[</bpt>入门页<ept id="p1">](/documentation/articles/sql-database-get-started)</ept>，以了解如何创建示例数据库。必须根据指南创建 <bpt id="p2">**</bpt>AdventureWorks 数据库模板<ept id="p2">**</ept>。下面所示的示例只适用于 <bpt id="p3">**</bpt>AdventureWorks 架构<ept id="p3">**</ept>。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>步骤 1：获取连接详细信息</source>
          <target state="new">步骤 1：获取连接详细信息</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>步骤 2：连接</source>
          <target state="new">步骤 2：连接</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>new Connection<ept id="p1">](http://pekim.github.io/tedious/api-connection.html)</ept> 函数用于连接到 SQL 数据库。</source>
          <target state="new"><bpt id="p1">[</bpt>new Connection<ept id="p1">](http://pekim.github.io/tedious/api-connection.html)</ept> 函数用于连接到 SQL 数据库。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>步骤 3：执行查询</source>
          <target state="new">步骤 3：执行查询</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>所有 SQL 语句都是使用 <bpt id="p1">[</bpt>new Request()<ept id="p1">](http://pekim.github.io/tedious/api-request.html)</ept> 函数执行的。如果语句返回了行（例如 SELECT 语句），则你可以使用 <bpt id="p2">[</bpt>request.on()<ept id="p2">](http://pekim.github.io/tedious/api-request.html)</ept> 函数检索这些行。如果未返回行，<bpt id="p3">[</bpt>request.on()<ept id="p3">](http://pekim.github.io/tedious/api-request.html)</ept> 函数将返回空列表。</source>
          <target state="new">所有 SQL 语句都是使用 <bpt id="p1">[</bpt>new Request()<ept id="p1">](http://pekim.github.io/tedious/api-request.html)</ept> 函数执行的。如果语句返回了行（例如 SELECT 语句），则你可以使用 <bpt id="p2">[</bpt>request.on()<ept id="p2">](http://pekim.github.io/tedious/api-request.html)</ept> 函数检索这些行。如果未返回行，<bpt id="p3">[</bpt>request.on()<ept id="p3">](http://pekim.github.io/tedious/api-request.html)</ept> 函数将返回空列表。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>步骤 4：插入行</source>
          <target state="new">步骤 4：插入行</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>在本示例中，你将了解如何安全地执行 <bpt id="p1">[</bpt>INSERT<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/ms174335.aspx)</ept> 语句，传递参数以保护应用程序免遭 <bpt id="p2">[</bpt>SQL 注入<ept id="p2">](https://technet.microsoft.com/zh-cn/library/ms161953(v=sql.105).aspx)</ept> 漏洞的危害，然后检索自动生成的<bpt id="p3">[</bpt>主键<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/ms179610.aspx)</ept>值。</source>
          <target state="new">在本示例中，你将了解如何安全地执行 <bpt id="p1">[</bpt>INSERT<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/ms174335.aspx)</ept> 语句，传递参数以保护应用程序免遭 <bpt id="p2">[</bpt>SQL 注入<ept id="p2">](https://technet.microsoft.com/zh-cn/library/ms161953(v=sql.105).aspx)</ept> 漏洞的危害，然后检索自动生成的<bpt id="p3">[</bpt>主键<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/ms179610.aspx)</ept>值。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>有关详细信息，请参阅 <bpt id="p1">[</bpt>Node.js 开发人员中心<ept id="p1">](/develop/nodejs)</ept>。</source>
          <target state="new">有关详细信息，请参阅 <bpt id="p1">[</bpt>Node.js 开发人员中心<ept id="p1">](/develop/nodejs)</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>