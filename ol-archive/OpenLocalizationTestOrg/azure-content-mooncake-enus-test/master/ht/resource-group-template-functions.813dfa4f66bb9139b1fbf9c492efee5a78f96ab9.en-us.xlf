<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e1ce68a97baf5a372c1f205cdfbfc3f45cd4cf7</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>资源管理器模板表达式 | Azure</source>
          <target state="new">资源管理器模板表达式 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>介绍在 Azure 资源管理器模板中检索值、处理字符串和数字以及检索部署信息时所用的函数。</source>
          <target state="new">介绍在 Azure 资源管理器模板中检索值、处理字符串和数字以及检索部署信息时所用的函数。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Azure 资源管理器模板表达式</source>
          <target state="new">Azure 资源管理器模板表达式</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>本主题介绍你可以在 Azure 资源管理器模板中使用的所有表达式。</source>
          <target state="new">本主题介绍你可以在 Azure 资源管理器模板中使用的所有表达式。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>模板表达式及其参数不区分大小写。例如，资源管理器将 <bpt id="p1">**</bpt>variables('var1')<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>VARIABLES('VAR1')<ept id="p2">**</ept> 视为相同。在求值时，除非表达式明确修改大小与（例如，使用 toUpper 或 toLower），否则表达式将保留大小写。某些资源类型可能会提出大小写要求，而不考虑表达式求值方式。</source>
          <target state="new">模板表达式及其参数不区分大小写。例如，资源管理器将 <bpt id="p1">**</bpt>variables('var1')<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>VARIABLES('VAR1')<ept id="p2">**</ept> 视为相同。在求值时，除非表达式明确修改大小与（例如，使用 toUpper 或 toLower），否则表达式将保留大小写。某些资源类型可能会提出大小写要求，而不考虑表达式求值方式。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>数字表达式</source>
          <target state="new">数字表达式</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>资源管理器提供以下表达式用于处理整数：</source>
          <target state="new">资源管理器提供以下表达式用于处理整数：</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>添加</source>
          <target state="new">添加</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>copyIndex</source>
          <target state="new">copyIndex</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>div</source>
          <target state="new">div</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="new">int</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>length</source>
          <target state="new">length</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>mod</source>
          <target state="new">mod</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>mul</source>
          <target state="new">mul</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>sub</source>
          <target state="new">sub</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>添加</source>
          <target state="new">添加</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>add(operand1, operand2)</source>
          <target state="new">add(operand1, operand2)</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>返回提供的两个整数的总和。</source>
          <target state="new">返回提供的两个整数的总和。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>operand1</source>
          <target state="new">operand1</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>要使用的第一个操作数。</source>
          <target state="new">要使用的第一个操作数。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>operand2</source>
          <target state="new">operand2</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>要使用的第二个操作数。</source>
          <target state="new">要使用的第二个操作数。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>copyIndex</source>
          <target state="new">copyIndex</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>copyIndex(offset)</source>
          <target state="new">copyIndex(offset)</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>返回一个迭代循环的当前索引。</source>
          <target state="new">返回一个迭代循环的当前索引。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>此表达式始终配合 <bpt id="p1">**</bpt>copy<ept id="p1">**</ept> 对象使用。有关使用 <bpt id="p2">**</bpt>copyIndex<ept id="p2">**</ept> 的示例，请参阅<bpt id="p3">[</bpt>在 Azure 资源管理器中创建多个资源实例<ept id="p3">](/documentation/articles/resource-group-create-multiple)</ept>。</source>
          <target state="new">此表达式始终配合 <bpt id="p1">**</bpt>copy<ept id="p1">**</ept> 对象使用。有关使用 <bpt id="p2">**</bpt>copyIndex<ept id="p2">**</ept> 的示例，请参阅<bpt id="p3">[</bpt>在 Azure 资源管理器中创建多个资源实例<ept id="p3">](/documentation/articles/resource-group-create-multiple)</ept>。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>div</source>
          <target state="new">div</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>div(operand1, operand2)</source>
          <target state="new">div(operand1, operand2)</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>返回提供的两个整数在整除后的商。</source>
          <target state="new">返回提供的两个整数在整除后的商。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>operand1</source>
          <target state="new">operand1</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>被除数。</source>
          <target state="new">被除数。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>operand2</source>
          <target state="new">operand2</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>除数，不得为 0。</source>
          <target state="new">除数，不得为 0。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="new">int</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>int(valueToConvert)</source>
          <target state="new">int(valueToConvert)</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>将指定的值转换为整数。</source>
          <target state="new">将指定的值转换为整数。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>valueToConvert</source>
          <target state="new">valueToConvert</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>要转换为整数的值。值的类型只能是字符串或整数。</source>
          <target state="new">要转换为整数的值。值的类型只能是字符串或整数。</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>以下示例将用户提供的参数值转换为整数。</source>
          <target state="new">以下示例将用户提供的参数值转换为整数。</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>length</source>
          <target state="new">length</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>length(array 或 string)</source>
          <target state="new">length(array 或 string)</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>返回数组中的元素数或字符串中的字符数。创建资源时，可在数组中使用此函数指定迭代数。在以下示例中，参数 <bpt id="p1">**</bpt>siteNames<ept id="p1">**</ept> 引用创建网站时要使用的名称数组。</source>
          <target state="new">返回数组中的元素数或字符串中的字符数。创建资源时，可在数组中使用此函数指定迭代数。在以下示例中，参数 <bpt id="p1">**</bpt>siteNames<ept id="p1">**</ept> 引用创建网站时要使用的名称数组。</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>有关在数组中使用此函数的详细信息，请参阅<bpt id="p1">[</bpt>在 Azure 资源管理器中创建多个资源实例<ept id="p1">](resource-group-create-multiple.md)</ept>。</source>
          <target state="new">有关在数组中使用此函数的详细信息，请参阅<bpt id="p1">[</bpt>在 Azure 资源管理器中创建多个资源实例<ept id="p1">](resource-group-create-multiple.md)</ept>。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>或者，你可以在字符串中使用：</source>
          <target state="new">或者，你可以在字符串中使用：</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>mod</source>
          <target state="new">mod</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>mod(operand1, operand2)</source>
          <target state="new">mod(operand1, operand2)</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>返回使用提供的两个整数整除后的余数。</source>
          <target state="new">返回使用提供的两个整数整除后的余数。</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>operand1</source>
          <target state="new">operand1</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>被除数。</source>
          <target state="new">被除数。</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>operand2</source>
          <target state="new">operand2</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>除数，不得为 0。</source>
          <target state="new">除数，不得为 0。</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>mul</source>
          <target state="new">mul</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>mul(operand1, operand2)</source>
          <target state="new">mul(operand1, operand2)</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>返回提供的两个整数的积。</source>
          <target state="new">返回提供的两个整数的积。</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>operand1</source>
          <target state="new">operand1</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>要使用的第一个操作数。</source>
          <target state="new">要使用的第一个操作数。</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>operand2</source>
          <target state="new">operand2</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>要使用的第二个操作数。</source>
          <target state="new">要使用的第二个操作数。</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>sub</source>
          <target state="new">sub</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>sub(operand1, operand2)</source>
          <target state="new">sub(operand1, operand2)</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>返回提供的两个整数在相减后的结果。</source>
          <target state="new">返回提供的两个整数在相减后的结果。</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>operand1</source>
          <target state="new">operand1</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>减数。</source>
          <target state="new">减数。</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>operand2</source>
          <target state="new">operand2</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>被减数。</source>
          <target state="new">被减数。</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>字符串表达式</source>
          <target state="new">字符串表达式</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>资源管理器提供以下表达式用于处理字符串：</source>
          <target state="new">资源管理器提供以下表达式用于处理字符串：</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>base64</source>
          <target state="new">base64</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>concat</source>
          <target state="new">concat</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>padLeft</source>
          <target state="new">padLeft</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>replace</source>
          <target state="new">replace</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>split</source>
          <target state="new">split</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>字符串</source>
          <target state="new">字符串</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>toLower</source>
          <target state="new">toLower</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>toUpper</source>
          <target state="new">toUpper</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>trim</source>
          <target state="new">trim</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>uniqueString</source>
          <target state="new">uniqueString</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>uri</source>
          <target state="new">uri</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>若要获取字符串或数组中的字符数，请参阅 <bpt id="p1">[</bpt>length<ept id="p1">](#length)</ept>。</source>
          <target state="new">若要获取字符串或数组中的字符数，请参阅 <bpt id="p1">[</bpt>length<ept id="p1">](#length)</ept>。</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>base64</source>
          <target state="new">base64</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>base64 (inputString)</source>
          <target state="new">base64 (inputString)</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>返回输入字符串的 base64 表示形式。</source>
          <target state="new">返回输入字符串的 base64 表示形式。</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>inputString</source>
          <target state="new">inputString</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>要以 base64 表示形式返回的字符串值。</source>
          <target state="new">要以 base64 表示形式返回的字符串值。</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>以下示例演示了如何使用 base64 函数。</source>
          <target state="new">以下示例演示了如何使用 base64 函数。</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>concat</source>
          <target state="new">concat</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>concat (arg1, arg2, arg3, ...)</source>
          <target state="new">concat (arg1, arg2, arg3, ...)</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>组合多个字符串值，并返回生成的字符串值。此函数可以结合任意数目的参数。</source>
          <target state="new">组合多个字符串值，并返回生成的字符串值。此函数可以结合任意数目的参数。</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>以下示例演示了如何组合多个值以返回一个值。</source>
          <target state="new">以下示例演示了如何组合多个值以返回一个值。</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>padLeft</source>
          <target state="new">padLeft</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>padLeft(stringToPad, totalLength, paddingCharacter)</source>
          <target state="new">padLeft(stringToPad, totalLength, paddingCharacter)</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>通过向左侧添加字符直至到达指定的总长度返回右对齐的字符串。</source>
          <target state="new">通过向左侧添加字符直至到达指定的总长度返回右对齐的字符串。</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>stringToPad</source>
          <target state="new">stringToPad</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>要右对齐的字符串。</source>
          <target state="new">要右对齐的字符串。</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>totalLength</source>
          <target state="new">totalLength</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>返回字符串中的字符总数。</source>
          <target state="new">返回字符串中的字符总数。</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>paddingCharacter</source>
          <target state="new">paddingCharacter</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>要用于向左填充直到达到总长度的字符。</source>
          <target state="new">要用于向左填充直到达到总长度的字符。</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>以下示例演示如何通过添加零字符直到字符串达到 10 个字符进而填充该用户提供的参数值。如果原始的参数值超过 10 个字符，将不会添加任何字符。</source>
          <target state="new">以下示例演示如何通过添加零字符直到字符串达到 10 个字符进而填充该用户提供的参数值。如果原始的参数值超过 10 个字符，将不会添加任何字符。</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>replace</source>
          <target state="new">replace</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>replace(originalString, oldCharacter, newCharacter)</source>
          <target state="new">replace(originalString, oldCharacter, newCharacter)</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>如果在所有实例中特定字符串中的一个字符已被替换为另一个字符时，则返回新的字符串。</source>
          <target state="new">如果在所有实例中特定字符串中的一个字符已被替换为另一个字符时，则返回新的字符串。</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>originalString</source>
          <target state="new">originalString</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>包含将某一个字符替换为另一个字符的所有实例的字符串。</source>
          <target state="new">包含将某一个字符替换为另一个字符的所有实例的字符串。</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>oldCharacter</source>
          <target state="new">oldCharacter</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>要从原始字符串中删除的字符。</source>
          <target state="new">要从原始字符串中删除的字符。</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>newCharacter</source>
          <target state="new">newCharacter</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>要添加到已删除字符的位置的字符。</source>
          <target state="new">要添加到已删除字符的位置的字符。</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>以下示例演示如何从用户提供的字符串中删除所有的短划线。</source>
          <target state="new">以下示例演示如何从用户提供的字符串中删除所有的短划线。</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>split</source>
          <target state="new">split</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>split(inputString, delimiter)</source>
          <target state="new">split(inputString, delimiter)</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>split(inputString, [delimiters])</source>
          <target state="new">split(inputString, [delimiters])</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>返回包含输入字符串的子字符串的字符串数组，其中的子字符串使用发送的分隔符进行分隔。</source>
          <target state="new">返回包含输入字符串的子字符串的字符串数组，其中的子字符串使用发送的分隔符进行分隔。</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>inputString</source>
          <target state="new">inputString</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>要拆分的字符串。</source>
          <target state="new">要拆分的字符串。</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>delimiter</source>
          <target state="new">delimiter</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>要使用的分隔符，可以是单个字符串，也可以是字符串数组。</source>
          <target state="new">要使用的分隔符，可以是单个字符串，也可以是字符串数组。</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>以下示例使用逗号拆分输入字符串。</source>
          <target state="new">以下示例使用逗号拆分输入字符串。</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>字符串</source>
          <target state="new">字符串</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>string(valueToConvert)</source>
          <target state="new">string(valueToConvert)</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>将指定的值转换为字符串。</source>
          <target state="new">将指定的值转换为字符串。</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>valueToConvert</source>
          <target state="new">valueToConvert</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>要转换为字符串的值。该值的类型只能是布尔值、整数或字符串。</source>
          <target state="new">要转换为字符串的值。该值的类型只能是布尔值、整数或字符串。</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>以下示例将用户提供的参数值转换为字符串。</source>
          <target state="new">以下示例将用户提供的参数值转换为字符串。</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>toLower</source>
          <target state="new">toLower</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>toLower(stringToChange)</source>
          <target state="new">toLower(stringToChange)</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>将指定的字符串转换为小写。</source>
          <target state="new">将指定的字符串转换为小写。</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>stringToChange</source>
          <target state="new">stringToChange</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>将转换为小写的字符串。</source>
          <target state="new">将转换为小写的字符串。</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>以下示例将用户提供的参数值转换为小写。</source>
          <target state="new">以下示例将用户提供的参数值转换为小写。</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>toUpper</source>
          <target state="new">toUpper</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>toUpper(stringToChange)</source>
          <target state="new">toUpper(stringToChange)</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>将指定的字符串转换为大写。</source>
          <target state="new">将指定的字符串转换为大写。</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>stringToChange</source>
          <target state="new">stringToChange</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>将转换为大写的字符串。</source>
          <target state="new">将转换为大写的字符串。</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>以下示例将用户提供的参数值转换为大写。</source>
          <target state="new">以下示例将用户提供的参数值转换为大写。</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>trim</source>
          <target state="new">trim</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>trim (stringToTrim)</source>
          <target state="new">trim (stringToTrim)</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>从指定的字符串中删除所有前导和尾随空白字符。</source>
          <target state="new">从指定的字符串中删除所有前导和尾随空白字符。</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>stringToTrim</source>
          <target state="new">stringToTrim</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>要裁剪的字符串。</source>
          <target state="new">要裁剪的字符串。</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>以下示例将裁剪掉用户提供的参数值中的空白字符。</source>
          <target state="new">以下示例将裁剪掉用户提供的参数值中的空白字符。</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>uniqueString</source>
          <target state="new">uniqueString</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>uniqueString (stringForCreatingUniqueString, ...)</source>
          <target state="new">uniqueString (stringForCreatingUniqueString, ...)</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>执行所提供字符串的 64 位哈希来创建唯一的字符串。当你需要创建资源的唯一名称时，此函数很有帮助。提供表示结果唯一性级别的参数值。可以指定该名称对于你的订阅、资源组或部署是否唯一。</source>
          <target state="new">执行所提供字符串的 64 位哈希来创建唯一的字符串。当你需要创建资源的唯一名称时，此函数很有帮助。提供表示结果唯一性级别的参数值。可以指定该名称对于你的订阅、资源组或部署是否唯一。</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>stringForCreatingUniqueString</source>
          <target state="new">stringForCreatingUniqueString</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>哈希函数中用于创建唯一字符串的基本字符串。</source>
          <target state="new">哈希函数中用于创建唯一字符串的基本字符串。</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>根据需要使用其他参数</source>
          <target state="new">根据需要使用其他参数</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>你可以添加任意数目的字符串，以创建指定唯一性级别的值。</source>
          <target state="new">你可以添加任意数目的字符串，以创建指定唯一性级别的值。</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>返回的值不是完全随机字符串，而是哈希函数的结果。返回的值长度为 13 个字符。不保证是全局唯一。你可以根据命名约定使用前缀来组合值，以创建更友好的名称。</source>
          <target state="new">返回的值不是完全随机字符串，而是哈希函数的结果。返回的值长度为 13 个字符。不保证是全局唯一。你可以根据命名约定使用前缀来组合值，以创建更友好的名称。</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>以下示例演示显示如何使用 uniqueString 来创建不同的通用级唯一值。</source>
          <target state="new">以下示例演示显示如何使用 uniqueString 来创建不同的通用级唯一值。</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>根据订阅保持唯一</source>
          <target state="new">根据订阅保持唯一</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>根据资源组保持唯一</source>
          <target state="new">根据资源组保持唯一</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>根据资源组的部署保持唯一</source>
          <target state="new">根据资源组的部署保持唯一</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>以下示例演示显示如何根据资源组创建存储帐户的唯一名称。</source>
          <target state="new">以下示例演示显示如何根据资源组创建存储帐户的唯一名称。</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>uri</source>
          <target state="new">uri</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>uri (baseUri, relativeUri)</source>
          <target state="new">uri (baseUri, relativeUri)</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>通过组合 baseUri 和 relativeUri 字符串来创建绝对 URI。</source>
          <target state="new">通过组合 baseUri 和 relativeUri 字符串来创建绝对 URI。</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>baseUri</source>
          <target state="new">baseUri</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>基本 uri 字符串。</source>
          <target state="new">基本 uri 字符串。</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>relativeUri</source>
          <target state="new">relativeUri</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>要添加到基本 uri 字符串的相对 uri 字符串。</source>
          <target state="new">要添加到基本 uri 字符串的相对 uri 字符串。</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>baseUri<ept id="p1">**</ept> 参数的值可包含特定文件，但在构造 URI 时，只使用基路径。例如，将 <bpt id="p2">**</bpt>http://contoso.com/resources/azuredeploy.json<ept id="p2">**</ept> 作为 baseUri 参数传递会生成 <bpt id="p3">**</bpt>http://contoso.com/resources/<ept id="p3">**</ept> 的基 URI。</source>
          <target state="new"><bpt id="p1">**</bpt>baseUri<ept id="p1">**</ept> 参数的值可包含特定文件，但在构造 URI 时，只使用基路径。例如，将 <bpt id="p2">**</bpt>http://contoso.com/resources/azuredeploy.json<ept id="p2">**</ept> 作为 baseUri 参数传递会生成 <bpt id="p3">**</bpt>http://contoso.com/resources/<ept id="p3">**</ept> 的基 URI。</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>以下示例演示如何根据父模板的值构造嵌套模板的链接。</source>
          <target state="new">以下示例演示如何根据父模板的值构造嵌套模板的链接。</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>部署值表达式</source>
          <target state="new">部署值表达式</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>资源管理器提供以下表达式，用于从与部署相关的模板和值部分获取值：</source>
          <target state="new">资源管理器提供以下表达式，用于从与部署相关的模板和值部分获取值：</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>部署</source>
          <target state="new">部署</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>variables</source>
          <target state="new">variables</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>若要从资源、资源组或订阅获取值，请参阅<bpt id="p1">[</bpt>资源表达式<ept id="p1">](#resource-expressions)</ept>。</source>
          <target state="new">若要从资源、资源组或订阅获取值，请参阅<bpt id="p1">[</bpt>资源表达式<ept id="p1">](#resource-expressions)</ept>。</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>部署</source>
          <target state="new">部署</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>deployment()</source>
          <target state="new">deployment()</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>返回有关当前部署操作的信息。</source>
          <target state="new">返回有关当前部署操作的信息。</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>此表达式返回部署期间传递的对象。根据部署对象是作为链接还是内联对象传递的，所返回对象中的属性将有所不同。如果部署对象是以内联形式传递的（例如使用 Azure PowerShell 中的 <bpt id="p1">**</bpt>-TemplateFile<ept id="p1">**</ept> 参数指向本地文件时），所返回的对象采用以下格式：</source>
          <target state="new">此表达式返回部署期间传递的对象。根据部署对象是作为链接还是内联对象传递的，所返回对象中的属性将有所不同。如果部署对象是以内联形式传递的（例如使用 Azure PowerShell 中的 <bpt id="p1">**</bpt>-TemplateFile<ept id="p1">**</ept> 参数指向本地文件时），所返回的对象采用以下格式：</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>如果对象是以链接形式传递的（例如使用 <bpt id="p1">**</bpt>-TemplateUri<ept id="p1">**</ept> 参数指向远程文件时），所返回的对象采用以下格式：</source>
          <target state="new">如果对象是以链接形式传递的（例如使用 <bpt id="p1">**</bpt>-TemplateUri<ept id="p1">**</ept> 参数指向远程文件时），所返回的对象采用以下格式：</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>以下示例演示如何根据父模板的 URI，使用 deployment() 链接到另一个模板。</source>
          <target state="new">以下示例演示如何根据父模板的 URI，使用 deployment() 链接到另一个模板。</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>parameters (parameterName)</source>
          <target state="new">parameters (parameterName)</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>返回一个参数值。指定的参数名称必须已在模板的 parameters 节中定义。</source>
          <target state="new">返回一个参数值。指定的参数名称必须已在模板的 parameters 节中定义。</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>parameterName</source>
          <target state="new">parameterName</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>要返回的参数名称。</source>
          <target state="new">要返回的参数名称。</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>以下示例演示了 parameters 函数的简化用法。</source>
          <target state="new">以下示例演示了 parameters 函数的简化用法。</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>variables</source>
          <target state="new">variables</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>variables (variableName)</source>
          <target state="new">variables (variableName)</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>返回变量的值。指定的变量名称必须已在模板的 variables 节中定义。</source>
          <target state="new">返回变量的值。指定的变量名称必须已在模板的 variables 节中定义。</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>variableName</source>
          <target state="new">variableName</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>要返回的变量名称。</source>
          <target state="new">要返回的变量名称。</target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>资源表达式</source>
          <target state="new">资源表达式</target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>资源管理器提供以下表达式用于获取资源值：</source>
          <target state="new">资源管理器提供以下表达式用于获取资源值：</target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>listkeys</source>
          <target state="new">listkeys</target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>providers</source>
          <target state="new">providers</target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>reference</source>
          <target state="new">reference</target>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>resourceGroup</source>
          <target state="new">resourceGroup</target>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>resourceId</source>
          <target state="new">resourceId</target>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>订阅</source>
          <target state="new">订阅</target>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>若要从参数、变量或当前部署获取值，请参阅<bpt id="p1">[</bpt>部署值表达式<ept id="p1">](#deployment-value-expressions)</ept>。</source>
          <target state="new">若要从参数、变量或当前部署获取值，请参阅<bpt id="p1">[</bpt>部署值表达式<ept id="p1">](#deployment-value-expressions)</ept>。</target>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>listKeys</source>
          <target state="new">listKeys</target>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>listKeys (resourceName or resourceIdentifier, apiVersion)</source>
          <target state="new">listKeys (resourceName or resourceIdentifier, apiVersion)</target>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>返回存储帐户的密钥。可以使用 <bpt id="p1">[</bpt>resourceId 函数<ept id="p1">](./#resourceid)</ept>或使用格式 <bpt id="p2">**</bpt>providerNamespace/resourceType/resourceName<ept id="p2">**</ept> 指定 resourceId。可以使用该函数来获取 primaryKey 和 secondaryKey。</source>
          <target state="new">返回存储帐户的密钥。可以使用 <bpt id="p1">[</bpt>resourceId 函数<ept id="p1">](./#resourceid)</ept>或使用格式 <bpt id="p2">**</bpt>providerNamespace/resourceType/resourceName<ept id="p2">**</ept> 指定 resourceId。可以使用该函数来获取 primaryKey 和 secondaryKey。</target>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>resourceName 或 resourceIdentifier</source>
          <target state="new">resourceName 或 resourceIdentifier</target>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>存储帐户的唯一标识符。</source>
          <target state="new">存储帐户的唯一标识符。</target>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>apiVersion</source>
          <target state="new">apiVersion</target>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>资源运行时状态的 API 版本。</source>
          <target state="new">资源运行时状态的 API 版本。</target>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>以下示例演示了如何从 outputs 节中的存储帐户返回密钥。</source>
          <target state="new">以下示例演示了如何从 outputs 节中的存储帐户返回密钥。</target>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>providers</source>
          <target state="new">providers</target>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>providers (providerNamespace, [resourceType])</source>
          <target state="new">providers (providerNamespace, [resourceType])</target>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>返回有关资源提供程序及其支持的资源类型的信息。如果未提供类型，则会返回所有支持的类型。</source>
          <target state="new">返回有关资源提供程序及其支持的资源类型的信息。如果未提供类型，则会返回所有支持的类型。</target>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>providerNamespace</source>
          <target state="new">providerNamespace</target>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>提供程序的命名空间</source>
          <target state="new">提供程序的命名空间</target>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>resourceType</source>
          <target state="new">resourceType</target>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>指定的命名空间中的资源类型。</source>
          <target state="new">指定的命名空间中的资源类型。</target>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>将使用以下格式返回支持的每个类型：</source>
          <target state="new">将使用以下格式返回支持的每个类型：</target>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>以下示例演示了如何使用 provider 函数：</source>
          <target state="new">以下示例演示了如何使用 provider 函数：</target>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>reference</source>
          <target state="new">reference</target>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>reference (resourceName or resourceIdentifier, [apiVersion])</source>
          <target state="new">reference (resourceName or resourceIdentifier, [apiVersion])</target>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>使表达式能够从另一个资源的运行时状态派生其值。</source>
          <target state="new">使表达式能够从另一个资源的运行时状态派生其值。</target>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>resourceName 或 resourceIdentifier</source>
          <target state="new">resourceName 或 resourceIdentifier</target>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>资源的名称或唯一标识符。</source>
          <target state="new">资源的名称或唯一标识符。</target>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>apiVersion</source>
          <target state="new">apiVersion</target>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>指定的资源的 API 版本。如果未在同一模板内预配资源，则必须包含此参数。</source>
          <target state="new">指定的资源的 API 版本。如果未在同一模板内预配资源，则必须包含此参数。</target>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>reference<ept id="p1">**</ept> 函数从运行时状态派生其值，因此不能在 variables 节中使用。可以在模板的 outputs 节中使用它。</source>
          <target state="new"><bpt id="p1">**</bpt>reference<ept id="p1">**</ept> 函数从运行时状态派生其值，因此不能在 variables 节中使用。可以在模板的 outputs 节中使用它。</target>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>如果在相同的模板内设置了引用的资源，则可使用 reference 表达式来隐式声明一个资源依赖于另一个资源。另外，不需要使用 <bpt id="p1">**</bpt>dependsOn<ept id="p1">**</ept> 属性。只有当引用的资源已完成部署后，才会对表达式进行计算。</source>
          <target state="new">如果在相同的模板内设置了引用的资源，则可使用 reference 表达式来隐式声明一个资源依赖于另一个资源。另外，不需要使用 <bpt id="p1">**</bpt>dependsOn<ept id="p1">**</ept> 属性。只有当引用的资源已完成部署后，才会对表达式进行计算。</target>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>以下示例引用同一模板中部署的存储帐户。</source>
          <target state="new">以下示例引用同一模板中部署的存储帐户。</target>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>以下示例引用未部署在此模板中，但是当部署资源时存在于同一资源组内的存储帐户。</source>
          <target state="new">以下示例引用未部署在此模板中，但是当部署资源时存在于同一资源组内的存储帐户。</target>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>可以从返回的对象（例如 Blob 终结点 URI）检索特定的值，如下所示。</source>
          <target state="new">可以从返回的对象（例如 Blob 终结点 URI）检索特定的值，如下所示。</target>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>如果你现在想要直接在模板中指定 API 版本，可以使用 <bpt id="p1">**</bpt>providers<ept id="p1">**</ept> 表达式并检索一个值（例如最新版本），如下所示。</source>
          <target state="new">如果你现在想要直接在模板中指定 API 版本，可以使用 <bpt id="p1">**</bpt>providers<ept id="p1">**</ept> 表达式并检索一个值（例如最新版本），如下所示。</target>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>以下示例引用不同资源组中的存储帐户。</source>
          <target state="new">以下示例引用不同资源组中的存储帐户。</target>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>resourceGroup</source>
          <target state="new">resourceGroup</target>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>resourceGroup()</source>
          <target state="new">resourceGroup()</target>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>返回表示当前资源组的结构化对象。该对象的格式如下：</source>
          <target state="new">返回表示当前资源组的结构化对象。该对象的格式如下：</target>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>以下示例使用资源组位置来分配网站的位置。</source>
          <target state="new">以下示例使用资源组位置来分配网站的位置。</target>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>resourceId</source>
          <target state="new">resourceId</target>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>resourceId ([resourceGroupName], resourceType, resourceName1, [resourceName2]...)</source>
          <target state="new">resourceId ([resourceGroupName], resourceType, resourceName1, [resourceName2]...)</target>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>返回资源的唯一标识符。如果资源名称不确定或未设置在相同的模板内，请使用此函数。将使用以下格式返回标识符：</source>
          <target state="new">返回资源的唯一标识符。如果资源名称不确定或未设置在相同的模板内，请使用此函数。将使用以下格式返回标识符：</target>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>参数</source>
          <target state="new">参数</target>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>必选</source>
          <target state="new">必选</target>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>说明</source>
          <target state="new">说明</target>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>resourceGroupName</source>
          <target state="new">resourceGroupName</target>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>可选的资源组名称。默认值为当前资源组。如果要检索另一个资源组中的资源，请指定此值。</source>
          <target state="new">可选的资源组名称。默认值为当前资源组。如果要检索另一个资源组中的资源，请指定此值。</target>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>resourceType</source>
          <target state="new">resourceType</target>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>资源类型，包括资源提供程序命名空间。</source>
          <target state="new">资源类型，包括资源提供程序命名空间。</target>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>resourceName1</source>
          <target state="new">resourceName1</target>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>是</source>
          <target state="new">是</target>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>资源的名称。</source>
          <target state="new">资源的名称。</target>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>resourceName2</source>
          <target state="new">resourceName2</target>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>否</source>
          <target state="new">否</target>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>下一个资源名称段（如果资源是嵌套的）。</source>
          <target state="new">下一个资源名称段（如果资源是嵌套的）。</target>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>以下示例演示了如何检索网站和数据库的资源 ID。网站存在于名为 <bpt id="p1">**</bpt>myWebsitesGroup<ept id="p1">**</ept> 的资源组中，而数据库存在于此模板的当前资源组中。</source>
          <target state="new">以下示例演示了如何检索网站和数据库的资源 ID。网站存在于名为 <bpt id="p1">**</bpt>myWebsitesGroup<ept id="p1">**</ept> 的资源组中，而数据库存在于此模板的当前资源组中。</target>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>通常，在替代资源组中使用存储帐户或虚拟网络时，需要使用此函数。存储帐户或虚拟网络可能用于多个资源组中；因此，你不想要在删除单个资源组时删除它们。以下示例演示了如何轻松使用外部资源组中的资源：</source>
          <target state="new">通常，在替代资源组中使用存储帐户或虚拟网络时，需要使用此函数。存储帐户或虚拟网络可能用于多个资源组中；因此，你不想要在删除单个资源组时删除它们。以下示例演示了如何轻松使用外部资源组中的资源：</target>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>订阅</source>
          <target state="new">订阅</target>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>subscription()</source>
          <target state="new">subscription()</target>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>将使用以下格式返回有关订阅的详细信息。</source>
          <target state="new">将使用以下格式返回有关订阅的详细信息。</target>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>以下示例演示了在 outputs 节中调用的 subscription 函数。</source>
          <target state="new">以下示例演示了在 outputs 节中调用的 subscription 函数。</target>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>有关 Azure 资源管理器模板中对各部分的说明，请参阅<bpt id="p1">[</bpt>创作 Azure 资源管理器模板<ept id="p1">](/documentation/articles/resource-group-authoring-templates)</ept></source>
          <target state="new">有关 Azure 资源管理器模板中对各部分的说明，请参阅<bpt id="p1">[</bpt>创作 Azure 资源管理器模板<ept id="p1">](/documentation/articles/resource-group-authoring-templates)</ept></target>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>若要合并多个模板，请参阅<bpt id="p1">[</bpt>将已链接的模板与 Azure 资源管理器配合使用<ept id="p1">](/documentation/articles/resource-group-linked-templates)</ept></source>
          <target state="new">若要合并多个模板，请参阅<bpt id="p1">[</bpt>将已链接的模板与 Azure 资源管理器配合使用<ept id="p1">](/documentation/articles/resource-group-linked-templates)</ept></target>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>若要在创建资源类型时迭代指定的次数，请参阅<bpt id="p1">[</bpt>在 Azure 资源管理器中创建多个资源实例<ept id="p1">](/documentation/articles/resource-group-create-multiple)</ept></source>
          <target state="new">若要在创建资源类型时迭代指定的次数，请参阅<bpt id="p1">[</bpt>在 Azure 资源管理器中创建多个资源实例<ept id="p1">](/documentation/articles/resource-group-create-multiple)</ept></target>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>若要查看如何部署已创建的模板，请参阅<bpt id="p1">[</bpt>使用 Azure 资源管理器模板部署应用程序<ept id="p1">](/documentation/articles/resource-group-template-deploy)</ept></source>
          <target state="new">若要查看如何部署已创建的模板，请参阅<bpt id="p1">[</bpt>使用 Azure 资源管理器模板部署应用程序<ept id="p1">](/documentation/articles/resource-group-template-deploy)</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>