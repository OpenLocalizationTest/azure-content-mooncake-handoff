<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22805be1ba7cab947422ef9e61e587810e67c72d</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>缓存 ASP.NET 输出缓存提供程序</source>
          <target state="new">缓存 ASP.NET 输出缓存提供程序</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何使用 Azure Redis 缓存来缓存 ASP.NET 页面输出</source>
          <target state="new">了解如何使用 Azure Redis 缓存来缓存 ASP.NET 页面输出</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Azure Redis 缓存的 ASP.NET 输出缓存提供程序</source>
          <target state="new">Azure Redis 缓存的 ASP.NET 输出缓存提供程序</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Redis 输出缓存提供程序是用于输出缓存数据的进程外存储机制。此数据专门用于完整 HTTP 响应（页面输出缓存）。此提供程序会插入 ASP.NET 4 中引入的新输出缓存提供程序扩展点。</source>
          <target state="new">Redis 输出缓存提供程序是用于输出缓存数据的进程外存储机制。此数据专门用于完整 HTTP 响应（页面输出缓存）。此提供程序会插入 ASP.NET 4 中引入的新输出缓存提供程序扩展点。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>要使用 Redis 输出缓存提供程序，首先配置你的缓存，然后使用 Redis 输出缓存提供程序 NuGet 包配置 ASP.NET 应用程序。本主题提供有关配置应用程序以使用 Redis 输出缓存提供程序的指南。有关创建和配置 Azure Redis 缓存实例的详细信息，请参阅<bpt id="p1">[</bpt>创建缓存<ept id="p1">](/documentation/articles/cache-dotnet-how-to-use-azure-redis-cache#create-a-cache)</ept>。</source>
          <target state="new">要使用 Redis 输出缓存提供程序，首先配置你的缓存，然后使用 Redis 输出缓存提供程序 NuGet 包配置 ASP.NET 应用程序。本主题提供有关配置应用程序以使用 Redis 输出缓存提供程序的指南。有关创建和配置 Azure Redis 缓存实例的详细信息，请参阅<bpt id="p1">[</bpt>创建缓存<ept id="p1">](/documentation/articles/cache-dotnet-how-to-use-azure-redis-cache#create-a-cache)</ept>。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>在缓存中存储 ASP.NET 页面输出</source>
          <target state="new">在缓存中存储 ASP.NET 页面输出</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>若要在 Visual Studio 中使用 Redis 输出缓存提供程序 NuGet 包配置客户端应用程序，请在“解决方案资源管理器”中右键单击项目，然后选择“管理 NuGet 包”。</source>
          <target state="new">若要在 Visual Studio 中使用 Redis 输出缓存提供程序 NuGet 包配置客户端应用程序，请在“解决方案资源管理器”中右键单击项目，然后选择“管理 NuGet 包”。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Azure Redis 缓存管理 NuGet 包</source>
          <target state="new">Azure Redis 缓存管理 NuGet 包</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>在“联机搜索”文本框中键入 <bpt id="p1">**</bpt>RedisOutputCacheProvider<ept id="p1">**</ept>，从结果中选择它，然后单击“安装”。</source>
          <target state="new">在“联机搜索”文本框中键入 <bpt id="p1">**</bpt>RedisOutputCacheProvider<ept id="p1">**</ept>，从结果中选择它，然后单击“安装”。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Azure Redis 缓存输出缓存提供程序</source>
          <target state="new">Azure Redis 缓存输出缓存提供程序</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Redis 输出缓存提供程序 NuGet 包依赖于 StackExchange.Redis.StrongName 包。如果你的项目中没有 StackExchange.Redis.StrongName 包，则将会安装它。请注意，除了强命名的 StackExchange.Redis.StrongName 包外，还有 StackExchange.Redis 非强命名版本。如果你的项目使用的是非强命名 StackExchange.Redis 版本，则必须在安装 Redis 输出缓存提供程序 NuGet 包之前或之后将其卸载，否则你的项目中将出现命名冲突。有关这些包的详细信息，请参阅<bpt id="p1">[</bpt>配置 .NET 缓存客户端<ept id="p1">](/documentation/articles/cache-dotnet-how-to-use-azure-redis-cache#configure-the-cache-clients)</ept>。</source>
          <target state="new">Redis 输出缓存提供程序 NuGet 包依赖于 StackExchange.Redis.StrongName 包。如果你的项目中没有 StackExchange.Redis.StrongName 包，则将会安装它。请注意，除了强命名的 StackExchange.Redis.StrongName 包外，还有 StackExchange.Redis 非强命名版本。如果你的项目使用的是非强命名 StackExchange.Redis 版本，则必须在安装 Redis 输出缓存提供程序 NuGet 包之前或之后将其卸载，否则你的项目中将出现命名冲突。有关这些包的详细信息，请参阅<bpt id="p1">[</bpt>配置 .NET 缓存客户端<ept id="p1">](/documentation/articles/cache-dotnet-how-to-use-azure-redis-cache#configure-the-cache-clients)</ept>。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>NuGet 包会下载并添加所需的程序集引用，并将以下部分添加到你的 web.config 文件，包含 ASP.NET 应用程序所需的配置，以使用 Redis 输出缓存提供程序。</source>
          <target state="new">NuGet 包会下载并添加所需的程序集引用，并将以下部分添加到你的 web.config 文件，包含 ASP.NET 应用程序所需的配置，以使用 Redis 输出缓存提供程序。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>注释部分提供了属性及每个属性的示例设置的一个示例。</source>
          <target state="new">注释部分提供了属性及每个属性的示例设置的一个示例。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>你可以通过 Azure PowerShell 配置 Redis 缓存。有关访问缓存属性的说明，请参阅<bpt id="p1">[</bpt>使用 Azure PowerShell 管理 Azure Redis 缓存<ept id="p1">](/documentation/articles/cache-howto-manage-redis-cache-powershell)</ept>。</source>
          <target state="new">你可以通过 Azure PowerShell 配置 Redis 缓存。有关访问缓存属性的说明，请参阅<bpt id="p1">[</bpt>使用 Azure PowerShell 管理 Azure Redis 缓存<ept id="p1">](/documentation/articles/cache-howto-manage-redis-cache-powershell)</ept>。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>host<ept id="p1">**</ept> - 指定缓存终结点。</source>
          <target state="new"><bpt id="p1">**</bpt>host<ept id="p1">**</ept> - 指定缓存终结点。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>port<ept id="p1">**</ept> - 使用非 SSL 端口或 SSL 端口，具体取决于 SSL 设置。</source>
          <target state="new"><bpt id="p1">**</bpt>port<ept id="p1">**</ept> - 使用非 SSL 端口或 SSL 端口，具体取决于 SSL 设置。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>accessKey<ept id="p1">**</ept> - 使用缓存的主密钥或辅助密钥。</source>
          <target state="new"><bpt id="p1">**</bpt>accessKey<ept id="p1">**</ept> - 使用缓存的主密钥或辅助密钥。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ssl<ept id="p1">**</ept> - 如果要使用 ssl 保护缓存/客户端通信，则为 true；否则为 false。请务必指定正确的端口。</source>
          <target state="new"><bpt id="p1">**</bpt>ssl<ept id="p1">**</ept> - 如果要使用 ssl 保护缓存/客户端通信，则为 true；否则为 false。请务必指定正确的端口。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>默认情况下，将为新缓存禁用非 SSL 端口。为此设置指定 true 可使用 SSL 端口。</source>
          <target state="new">默认情况下，将为新缓存禁用非 SSL 端口。为此设置指定 true 可使用 SSL 端口。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>databaseId<ept id="p1">**</ept> - 指定要用于缓存输出数据的数据库。如果未指定，则使用默认值 0。</source>
          <target state="new"><bpt id="p1">**</bpt>databaseId<ept id="p1">**</ept> - 指定要用于缓存输出数据的数据库。如果未指定，则使用默认值 0。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>applicationName<ept id="p1">**</ept> - 密钥存储在 redis 中作为</source>
          <target state="new"><bpt id="p1">**</bpt>applicationName<ept id="p1">**</ept> - 密钥存储在 redis 中作为</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>\_</source>
          <target state="new">\_</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>\_Data。这使多个应用程序可以共享同一密钥。此参数是可选的，如果未提供它，则使用默认值。</source>
          <target state="new">\_Data。这使多个应用程序可以共享同一密钥。此参数是可选的，如果未提供它，则使用默认值。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>connectionTimeoutInMilliseconds<ept id="p1">**</ept> - 此设置允许你覆盖 StackExchange.Redis 客户端中的 connectTimeout 设置。如果未指定，则使用默认 connectTimeout 设置 5000。有关详细信息，请参阅 <bpt id="p2">[</bpt>StackExchange.Redis 配置模型<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=398705)</ept>。</source>
          <target state="new"><bpt id="p1">**</bpt>connectionTimeoutInMilliseconds<ept id="p1">**</ept> - 此设置允许你覆盖 StackExchange.Redis 客户端中的 connectTimeout 设置。如果未指定，则使用默认 connectTimeout 设置 5000。有关详细信息，请参阅 <bpt id="p2">[</bpt>StackExchange.Redis 配置模型<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=398705)</ept>。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>operationTimeoutInMilliseconds<ept id="p1">**</ept> - 此设置允许你覆盖 StackExchange.Redis 客户端中的 syncTimeout 设置。如果未指定，则使用默认 syncTimeout 设置 1000。有关详细信息，请参阅 <bpt id="p2">[</bpt>StackExchange.Redis 配置模型<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=398705)</ept>。</source>
          <target state="new"><bpt id="p1">**</bpt>operationTimeoutInMilliseconds<ept id="p1">**</ept> - 此设置允许你覆盖 StackExchange.Redis 客户端中的 syncTimeout 设置。如果未指定，则使用默认 syncTimeout 设置 1000。有关详细信息，请参阅 <bpt id="p2">[</bpt>StackExchange.Redis 配置模型<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=398705)</ept>。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>将 OutputCache 指令添加到希望为其缓存输出的每个页面中。</source>
          <target state="new">将 OutputCache 指令添加到希望为其缓存输出的每个页面中。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>在此示例中，缓存的页面数据将保留在缓存中 60 秒，并且将为每个参数组合缓存不同版本的页面。有关 OutputCache 指令的详细信息，请参阅 <bpt id="p1">[</bpt>@OutputCache<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/hdxfb6cy(v=vs.100).aspx)</ept>。</source>
          <target state="new">在此示例中，缓存的页面数据将保留在缓存中 60 秒，并且将为每个参数组合缓存不同版本的页面。有关 OutputCache 指令的详细信息，请参阅 <bpt id="p1">[</bpt>@OutputCache<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/hdxfb6cy(v=vs.100).aspx)</ept>。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>执行这些步骤后，你的应用程序已配置为使用 Redis 输出缓存提供程序。</source>
          <target state="new">执行这些步骤后，你的应用程序已配置为使用 Redis 输出缓存提供程序。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>了解 <bpt id="p1">[</bpt>Azure Redis 缓存的 ASP.NET 会话状态提供程序<ept id="p1">](/documentation/articles/cache-asp.net-session-state-provider)</ept>。</source>
          <target state="new">了解 <bpt id="p1">[</bpt>Azure Redis 缓存的 ASP.NET 会话状态提供程序<ept id="p1">](/documentation/articles/cache-asp.net-session-state-provider)</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>