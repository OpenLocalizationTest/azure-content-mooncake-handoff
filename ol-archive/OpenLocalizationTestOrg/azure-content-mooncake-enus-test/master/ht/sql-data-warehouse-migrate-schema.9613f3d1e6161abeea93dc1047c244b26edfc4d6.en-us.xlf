<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e20e8a697fe4e340368da6f232af1d2e119858d</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>将架构迁移到 SQL 数据仓库 | Azure</source>
          <target state="new">将架构迁移到 SQL 数据仓库 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>有关在开发解决方案时将架构迁移到 Azure SQL 数据仓库的技巧。</source>
          <target state="new">有关在开发解决方案时将架构迁移到 Azure SQL 数据仓库的技巧。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>将架构迁移到 SQL 数据仓库</source>
          <target state="new">将架构迁移到 SQL 数据仓库</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>以下摘要将帮助你理解 SQL Server 与 SQL 数据仓库之间的差异，以便你迁移数据库。</source>
          <target state="new">以下摘要将帮助你理解 SQL Server 与 SQL 数据仓库之间的差异，以便你迁移数据库。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>表功能</source>
          <target state="new">表功能</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SQL 数据仓库不使用或不支持以下功能：</source>
          <target state="new">SQL 数据仓库不使用或不支持以下功能：</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>主键</source>
          <target state="new">主键</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>外键</source>
          <target state="new">外键</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>检查约束</source>
          <target state="new">检查约束</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>唯一约束</source>
          <target state="new">唯一约束</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>唯一索引</source>
          <target state="new">唯一索引</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>计算列</source>
          <target state="new">计算列</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>稀疏列</source>
          <target state="new">稀疏列</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>用户定义的类型</source>
          <target state="new">用户定义的类型</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>索引视图</source>
          <target state="new">索引视图</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>标识</source>
          <target state="new">标识</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>序列</source>
          <target state="new">序列</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>触发器</source>
          <target state="new">触发器</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>同义词</source>
          <target state="new">同义词</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>数据类型差异</source>
          <target state="new">数据类型差异</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>SQL 数据仓库支持常见的业务数据类型：</source>
          <target state="new">SQL 数据仓库支持常见的业务数据类型：</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>bigint</source>
          <target state="new">bigint</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>binary</source>
          <target state="new">binary</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>bit</source>
          <target state="new">bit</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>char</source>
          <target state="new">char</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>日期</source>
          <target state="new">日期</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>datetime</source>
          <target state="new">datetime</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>datetime2</source>
          <target state="new">datetime2</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>datetimeoffset</source>
          <target state="new">datetimeoffset</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>decimal</source>
          <target state="new">decimal</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>float</source>
          <target state="new">float</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="new">int</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>money</source>
          <target state="new">money</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>nchar</source>
          <target state="new">nchar</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>nvarchar</source>
          <target state="new">nvarchar</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>real</source>
          <target state="new">real</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>smalldatetime</source>
          <target state="new">smalldatetime</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>smallint</source>
          <target state="new">smallint</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>smallmoney</source>
          <target state="new">smallmoney</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>time</source>
          <target state="new">time</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>tinyint</source>
          <target state="new">tinyint</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>varbinary</source>
          <target state="new">varbinary</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>varchar</source>
          <target state="new">varchar</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>你可以使用此查询来识别数据仓库中包含不兼容类型的列：</source>
          <target state="new">你可以使用此查询来识别数据仓库中包含不兼容类型的列：</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>该查询包含同样不受支持的任何用户定义数据类型。</source>
          <target state="new">该查询包含同样不受支持的任何用户定义数据类型。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>如果你的数据库包含不受支持的类型，请不要担心。下面推荐了一些可以使用的替代方案。</source>
          <target state="new">如果你的数据库包含不受支持的类型，请不要担心。下面推荐了一些可以使用的替代方案。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>不要使用：</source>
          <target state="new">不要使用：</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>geometry<ept id="p1">**</ept>，而要使用 varbinary 类型</source>
          <target state="new"><bpt id="p1">**</bpt>geometry<ept id="p1">**</ept>，而要使用 varbinary 类型</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>geography<ept id="p1">**</ept>，而要使用 varbinary 类型</source>
          <target state="new"><bpt id="p1">**</bpt>geography<ept id="p1">**</ept>，而要使用 varbinary 类型</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>hierarchyid<ept id="p1">**</ept>，此 CLR 类型不受支持</source>
          <target state="new"><bpt id="p1">**</bpt>hierarchyid<ept id="p1">**</ept>，此 CLR 类型不受支持</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>image<ept id="p1">**</ept>、<bpt id="p2">**</bpt>text<ept id="p2">**</ept>、<bpt id="p3">**</bpt>ntext<ept id="p3">**</ept>，而要使用 varchar/nvarchar（越小越好）</source>
          <target state="new"><bpt id="p1">**</bpt>image<ept id="p1">**</ept>、<bpt id="p2">**</bpt>text<ept id="p2">**</ept>、<bpt id="p3">**</bpt>ntext<ept id="p3">**</ept>，而要使用 varchar/nvarchar（越小越好）</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>nvarchar(max)<ept id="p1">**</ept>，而要使用 nvarchar(4000) 或更小，以改善性能</source>
          <target state="new"><bpt id="p1">**</bpt>nvarchar(max)<ept id="p1">**</ept>，而要使用 nvarchar(4000) 或更小，以改善性能</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>numeric<ept id="p1">**</ept>，而要使用 decimal</source>
          <target state="new"><bpt id="p1">**</bpt>numeric<ept id="p1">**</ept>，而要使用 decimal</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>sql\_variant<ept id="p1">**</ept>，将列拆分成多个强类型化列</source>
          <target state="new"><bpt id="p1">**</bpt>sql\_variant<ept id="p1">**</ept>，将列拆分成多个强类型化列</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>sysname<ept id="p1">**</ept>，而要使用 nvarchar(128)</source>
          <target state="new"><bpt id="p1">**</bpt>sysname<ept id="p1">**</ept>，而要使用 nvarchar(128)</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>table<ept id="p1">**</ept>，转换成暂时表</source>
          <target state="new"><bpt id="p1">**</bpt>table<ept id="p1">**</ept>，转换成暂时表</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>timestamp<ept id="p1">**</ept>，修改代码以使用 datetime2 和 <ph id="ph1">`CURRENT_TIMESTAMP`</ph> 函数。请注意，不能使用 current\_timestamp 作为默认约束，因为值不会自动更新。如果需要从 timestamp 类型化列迁移 rowversion 值，请对 NOT NULL 或 NULL 行版本值使用 binary(8) 或 varbinary(8)。</source>
          <target state="new"><bpt id="p1">**</bpt>timestamp<ept id="p1">**</ept>，修改代码以使用 datetime2 和 <ph id="ph1">`CURRENT_TIMESTAMP`</ph> 函数。请注意，不能使用 current\_timestamp 作为默认约束，因为值不会自动更新。如果需要从 timestamp 类型化列迁移 rowversion 值，请对 NOT NULL 或 NULL 行版本值使用 binary(8) 或 varbinary(8)。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>varchar(max)<ept id="p1">**</ept>，而要使用 varchar(8000) 或更小，以改善性能</source>
          <target state="new"><bpt id="p1">**</bpt>varchar(max)<ept id="p1">**</ept>，而要使用 varchar(8000) 或更小，以改善性能</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>uniqueidentifier<ept id="p1">**</ept>，而要使用 varbinary(8)</source>
          <target state="new"><bpt id="p1">**</bpt>uniqueidentifier<ept id="p1">**</ept>，而要使用 varbinary(8)</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>用户定义的类型<ept id="p1">**</ept>，尽可能转换回本机类型</source>
          <target state="new"><bpt id="p1">**</bpt>用户定义的类型<ept id="p1">**</ept>，尽可能转换回本机类型</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>xml<ept id="p1">**</ept>，而要使用 varchar(8000) 或更小，以改善性能。根据需要在列之间拆分</source>
          <target state="new"><bpt id="p1">**</bpt>xml<ept id="p1">**</ept>，而要使用 varchar(8000) 或更小，以改善性能。根据需要在列之间拆分</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>部分支持：</source>
          <target state="new">部分支持：</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>默认约束仅支持文本和常量。不支持非确定性表达式或函数，例如 <ph id="ph1">`GETDATE()`</ph> 或 <ph id="ph2">`CURRENT_TIMESTAMP`</ph>。</source>
          <target state="new">默认约束仅支持文本和常量。不支持非确定性表达式或函数，例如 <ph id="ph1">`GETDATE()`</ph> 或 <ph id="ph2">`CURRENT_TIMESTAMP`</ph>。</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>定义表，使最大可能的行大小（包括可变长度列的完整长度）不超过 32,767 个字节。虽然定义的行可以包含超过此数据的可变长度数据，但数据将无法插入表。此外，还请限制可变长度列的大小，以便运行查询时有更大的吞吐量。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>定义表，使最大可能的行大小（包括可变长度列的完整长度）不超过 32,767 个字节。虽然定义的行可以包含超过此数据的可变长度数据，但数据将无法插入表。此外，还请限制可变长度列的大小，以便运行查询时有更大的吞吐量。</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>成功将数据库架构迁移到 SQL 数据仓库后，可以继续阅读下列文章之一：</source>
          <target state="new">成功将数据库架构迁移到 SQL 数据仓库后，可以继续阅读下列文章之一：</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>迁移数据</source>
          <target state="new">迁移数据</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>迁移代码</source>
          <target state="new">迁移代码</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>有关更多开发技巧，请参阅<bpt id="p1">[</bpt>开发概述<ept id="p1">][]</ept>。</source>
          <target state="new">有关更多开发技巧，请参阅<bpt id="p1">[</bpt>开发概述<ept id="p1">][]</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>