<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cad4ff6945af9dde4bb8c2c12f01b5485cbcd353</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>通过 .NET 使用服务总线主题 | Azure</source>
          <target state="new">通过 .NET 使用服务总线主题 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何在 Azure 中通过 .NET 使用服务总线主题和订阅。代码示例是针对 .NET 应用程序编写的。</source>
          <target state="new">了解如何在 Azure 中通过 .NET 使用服务总线主题和订阅。代码示例是针对 .NET 应用程序编写的。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>如何使用服务总线主题和订阅</source>
          <target state="new">如何使用服务总线主题和订阅</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>本文介绍了如何使用服务总线主题和订阅。相关示例用 C# 编写且使用 .NET API。涉及的应用场景包括创建主题和订阅、创建订阅筛选器、将消息发送到主题、从订阅接收消息以及删除主题和订阅。有关主题和订阅的详细信息，请参阅<bpt id="p1">[</bpt>后续步骤<ept id="p1">](#Next-steps)</ept>部分。</source>
          <target state="new">本文介绍了如何使用服务总线主题和订阅。相关示例用 C# 编写且使用 .NET API。涉及的应用场景包括创建主题和订阅、创建订阅筛选器、将消息发送到主题、从订阅接收消息以及删除主题和订阅。有关主题和订阅的详细信息，请参阅<bpt id="p1">[</bpt>后续步骤<ept id="p1">](#Next-steps)</ept>部分。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>配置应用程序以使用 Service Bus</source>
          <target state="new">配置应用程序以使用 Service Bus</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>在您创建使用 Service Bus 的应用程序时，必须添加对 Service Bus 程序集的引用并包括相应的命名空间。</source>
          <target state="new">在您创建使用 Service Bus 的应用程序时，必须添加对 Service Bus 程序集的引用并包括相应的命名空间。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>获取服务总线 NuGet 包</source>
          <target state="new">获取服务总线 NuGet 包</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>服务总线 NuGet 包是获取服务总线 API 并为应用程序配置所有服务总线依赖项的最简单的方法。利用 NuGet Visual Studio 扩展，可以轻松地在 Visual Studio 和 Visual Studio Express 中安装和更新库和工具。服务总线 NuGet 包是获取服务总线 API 并为应用程序配置所有服务总线依赖项的最简单的方法。</source>
          <target state="new">服务总线 NuGet 包是获取服务总线 API 并为应用程序配置所有服务总线依赖项的最简单的方法。利用 NuGet Visual Studio 扩展，可以轻松地在 Visual Studio 和 Visual Studio Express 中安装和更新库和工具。服务总线 NuGet 包是获取服务总线 API 并为应用程序配置所有服务总线依赖项的最简单的方法。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>要在你的应用程序中安装 NuGet 包，请执行以下操作：</source>
          <target state="new">要在你的应用程序中安装 NuGet 包，请执行以下操作：</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>在解决方案资源管理器中，右键单击“引用”，然后单击“管理 NuGet 包”。</source>
          <target state="new">在解决方案资源管理器中，右键单击“引用”，然后单击“管理 NuGet 包”。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>搜索“服务总线”并选择“Azure 服务总线”项。单击“安装”以完成安装，然后关闭以下对话框。</source>
          <target state="new">搜索“服务总线”并选择“Azure 服务总线”项。单击“安装”以完成安装，然后关闭以下对话框。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>你现在可以为服务总线编写代码。</source>
          <target state="new">你现在可以为服务总线编写代码。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>设置服务总线连接字符串</source>
          <target state="new">设置服务总线连接字符串</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>服务总线使用连接字符串来存储终结点和凭据。你可以将连接字符串置于配置文件中，而不是对其进行硬编码：</source>
          <target state="new">服务总线使用连接字符串来存储终结点和凭据。你可以将连接字符串置于配置文件中，而不是对其进行硬编码：</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>当使用 Azure 云服务时，建议你使用 Azure 服务配置系统（.csdef 和 .cscfg 文件）来存储连接字符串。</source>
          <target state="new">当使用 Azure 云服务时，建议你使用 Azure 服务配置系统（.csdef 和 .cscfg 文件）来存储连接字符串。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>在使用 Azure 网站或 Azure 虚拟机时，建议使用 .NET 配置系统（如 Web.config 文件）来存储连接字符串。</source>
          <target state="new">在使用 Azure 网站或 Azure 虚拟机时，建议使用 .NET 配置系统（如 Web.config 文件）来存储连接字符串。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>在上述两种情况下，你都可以使用 <ph id="ph1">`CloudConfigurationManager.GetSetting`</ph> 方法检索连接字符串，本文稍后部分将对此进行介绍。</source>
          <target state="new">在上述两种情况下，你都可以使用 <ph id="ph1">`CloudConfigurationManager.GetSetting`</ph> 方法检索连接字符串，本文稍后部分将对此进行介绍。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>使用云服务时配置连接字符串</source>
          <target state="new">使用云服务时配置连接字符串</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>该服务配置机制是 Azure 云服务项目特有的，它使你能够从 <bpt id="p1">[</bpt>Azure 经典门户<ept id="p1">][]</ept>动态更改配置设置，而无需重新部署你的应用程序。例如，向服务定义 (****.csdef**) 文件中添加 <ph id="ph1">`Setting`</ph> 标签，如以下示例所示。</source>
          <target state="new">该服务配置机制是 Azure 云服务项目特有的，它使你能够从 <bpt id="p1">[</bpt>Azure 经典门户<ept id="p1">][]</ept>动态更改配置设置，而无需重新部署你的应用程序。例如，向服务定义 (****.csdef**) 文件中添加 <ph id="ph1">`Setting`</ph> 标签，如以下示例所示。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>然后在服务配置 (.cscfg) 文件中指定值。</source>
          <target state="new">然后在服务配置 (.cscfg) 文件中指定值。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>使用从 Azure 经典门户检索到的共享访问签名 (SAS) 密钥名称和密钥值，如上一部分中所述。</source>
          <target state="new">使用从 Azure 经典门户检索到的共享访问签名 (SAS) 密钥名称和密钥值，如上一部分中所述。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>在使用 Azure 网站或 Azure 虚拟机时配置连接字符串</source>
          <target state="new">在使用 Azure 网站或 Azure 虚拟机时配置连接字符串</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>在使用网站或虚拟机时，建议你使用 .NET 配置系统（如 Web.config）。你可以使用 <ph id="ph1">`&lt;appSettings&gt;`</ph> 元素存储连接字符串。</source>
          <target state="new">在使用网站或虚拟机时，建议你使用 .NET 配置系统（如 Web.config）。你可以使用 <ph id="ph1">`&lt;appSettings&gt;`</ph> 元素存储连接字符串。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>使用从 Azure 经典门户检索到的 SAS 名称和密钥值，如上一部分中所述。</source>
          <target state="new">使用从 Azure 经典门户检索到的 SAS 名称和密钥值，如上一部分中所述。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>创建主题</source>
          <target state="new">创建主题</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>你可以通过 <bpt id="p1">[</bpt>NamespaceManager<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.namespacemanager.aspx)</ept> 类为服务总线主题和订阅执行管理操作。此类提供了创建、枚举和删除主题的方法。</source>
          <target state="new">你可以通过 <bpt id="p1">[</bpt>NamespaceManager<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.namespacemanager.aspx)</ept> 类为服务总线主题和订阅执行管理操作。此类提供了创建、枚举和删除主题的方法。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>以下示例使用带连接字符串的 Azure <ph id="ph1">`CloudConfigurationManager`</ph> 类构造 <ph id="ph2">`NamespaceManager`</ph> 对象，此连接字符串包含服务总线服务命名空间的基址和有权管理该命名空间的相应 SAS 凭据。此连接字符串的形式如下。</source>
          <target state="new">以下示例使用带连接字符串的 Azure <ph id="ph1">`CloudConfigurationManager`</ph> 类构造 <ph id="ph2">`NamespaceManager`</ph> 对象，此连接字符串包含服务总线服务命名空间的基址和有权管理该命名空间的相应 SAS 凭据。此连接字符串的形式如下。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>使用以下示例，考虑上一节中的配置设置。</source>
          <target state="new">使用以下示例，考虑上一节中的配置设置。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CreateTopic<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.namespacemanager.createtopic.aspx)</ept> 方法存在一些重载，允许你调整主题的属性，例如，将默认的生存时间 (TTL) 值设置为应用于发送到主题的消息。使用 <bpt id="p2">[</bpt>TopicDescription<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.topicdescription.aspx)</ept> 类应用这些设置。以下示例演示如何创建名为 <bpt id="p3">**</bpt>TestTopic<ept id="p3">**</ept>、最大大小为 5 GB、默认消息 TTL 为 1 分钟的主题。</source>
          <target state="new"><bpt id="p1">[</bpt>CreateTopic<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.namespacemanager.createtopic.aspx)</ept> 方法存在一些重载，允许你调整主题的属性，例如，将默认的生存时间 (TTL) 值设置为应用于发送到主题的消息。使用 <bpt id="p2">[</bpt>TopicDescription<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.topicdescription.aspx)</ept> 类应用这些设置。以下示例演示如何创建名为 <bpt id="p3">**</bpt>TestTopic<ept id="p3">**</ept>、最大大小为 5 GB、默认消息 TTL 为 1 分钟的主题。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>你可以对 <bpt id="p1">[</bpt>NamespaceManager<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.namespacemanager.aspx)</ept> 对象使用 <bpt id="p2">[</bpt>TopicExists<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.namespacemanager.topicexists.aspx)</ept> 方法来检查具有指定名称的主题在某个命名空间中是否已存在。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>你可以对 <bpt id="p1">[</bpt>NamespaceManager<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.namespacemanager.aspx)</ept> 对象使用 <bpt id="p2">[</bpt>TopicExists<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.namespacemanager.topicexists.aspx)</ept> 方法来检查具有指定名称的主题在某个命名空间中是否已存在。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>创建订阅</source>
          <target state="new">创建订阅</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>你还可以使用 <bpt id="p1">[</bpt><ph id="ph1">`NamespaceManager`</ph><ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.namespacemanager.aspx)</ept> 类创建主题订阅。订阅已命名，并且具有一个限制传递到订阅的虚拟队列的消息集的可选筛选器。</source>
          <target state="new">你还可以使用 <bpt id="p1">[</bpt><ph id="ph1">`NamespaceManager`</ph><ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.namespacemanager.aspx)</ept> 类创建主题订阅。订阅已命名，并且具有一个限制传递到订阅的虚拟队列的消息集的可选筛选器。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>创建具有默认 (MatchAll) 筛选器的订阅</source>
          <target state="new">创建具有默认 (MatchAll) 筛选器的订阅</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MatchAll<ept id="p1">**</ept> 筛选器是默认筛选器，在创建新订阅时未指定筛选器的情况下使用。当你使用 <bpt id="p2">**</bpt>MatchAll<ept id="p2">**</ept> 筛选器时，发布到主题的所有消息都将置于订阅的虚拟队列中。以下示例创建名为“AllMessages”的订阅，并使用默认的 <bpt id="p3">**</bpt>MatchAll<ept id="p3">**</ept> 筛选器。</source>
          <target state="new"><bpt id="p1">**</bpt>MatchAll<ept id="p1">**</ept> 筛选器是默认筛选器，在创建新订阅时未指定筛选器的情况下使用。当你使用 <bpt id="p2">**</bpt>MatchAll<ept id="p2">**</ept> 筛选器时，发布到主题的所有消息都将置于订阅的虚拟队列中。以下示例创建名为“AllMessages”的订阅，并使用默认的 <bpt id="p3">**</bpt>MatchAll<ept id="p3">**</ept> 筛选器。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>创建具有筛选器的订阅</source>
          <target state="new">创建具有筛选器的订阅</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>还可以设置筛选器，以指定发送到主题的哪些消息应该在特定主题订阅中显示。</source>
          <target state="new">还可以设置筛选器，以指定发送到主题的哪些消息应该在特定主题订阅中显示。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>订阅支持的最灵活的一种筛选器是 <bpt id="p1">[</bpt>SqlFilter<ept id="p1">][]</ept> 类，它实现了一部分 SQL92 功能。SQL 筛选器将对发布到主题的消息的属性进行操作。有关可用于 SQL 筛选器的表达式的详细信息，请参阅 <bpt id="p2">[</bpt>SqlFilter.SqlExpression<ept id="p2">][]</ept> 语法。</source>
          <target state="new">订阅支持的最灵活的一种筛选器是 <bpt id="p1">[</bpt>SqlFilter<ept id="p1">][]</ept> 类，它实现了一部分 SQL92 功能。SQL 筛选器将对发布到主题的消息的属性进行操作。有关可用于 SQL 筛选器的表达式的详细信息，请参阅 <bpt id="p2">[</bpt>SqlFilter.SqlExpression<ept id="p2">][]</ept> 语法。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>以下示例创建了一个名为 <bpt id="p1">**</bpt>HighMessages<ept id="p1">**</ept> 的订阅，该订阅仅选择具有大于 3 的自定义 <bpt id="p2">**</bpt>MessageNumber<ept id="p2">**</ept> 属性的 <bpt id="p3">[</bpt>SqlFilter<ept id="p3">][]</ept> 对象。</source>
          <target state="new">以下示例创建了一个名为 <bpt id="p1">**</bpt>HighMessages<ept id="p1">**</ept> 的订阅，该订阅仅选择具有大于 3 的自定义 <bpt id="p2">**</bpt>MessageNumber<ept id="p2">**</ept> 属性的 <bpt id="p3">[</bpt>SqlFilter<ept id="p3">][]</ept> 对象。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>类似地，以下示例创建一个名为 <bpt id="p1">**</bpt>LowMessages<ept id="p1">**</ept> 的订阅，其 <bpt id="p2">[</bpt>SqlFilter<ept id="p2">][]</ept> 只选择 <bpt id="p3">**</bpt>MessageNumber<ept id="p3">**</ept> 属性小于或等于 3 的消息：</source>
          <target state="new">类似地，以下示例创建一个名为 <bpt id="p1">**</bpt>LowMessages<ept id="p1">**</ept> 的订阅，其 <bpt id="p2">[</bpt>SqlFilter<ept id="p2">][]</ept> 只选择 <bpt id="p3">**</bpt>MessageNumber<ept id="p3">**</ept> 属性小于或等于 3 的消息：</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>现在，当消息发送到 <ph id="ph1">`TestTopic`</ph> 时，始终会将它传送到订阅了 <bpt id="p1">**</bpt>AllMessages<ept id="p1">**</ept> 主题订阅的接收方，并选择性地传送到订阅了 <bpt id="p2">**</bpt>HighMessages<ept id="p2">**</ept> 和 <bpt id="p3">**</bpt>LowMessages<ept id="p3">**</ept> 主题订阅的接收方（具体取决于消息内容）。</source>
          <target state="new">现在，当消息发送到 <ph id="ph1">`TestTopic`</ph> 时，始终会将它传送到订阅了 <bpt id="p1">**</bpt>AllMessages<ept id="p1">**</ept> 主题订阅的接收方，并选择性地传送到订阅了 <bpt id="p2">**</bpt>HighMessages<ept id="p2">**</ept> 和 <bpt id="p3">**</bpt>LowMessages<ept id="p3">**</ept> 主题订阅的接收方（具体取决于消息内容）。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>将消息发送到主题</source>
          <target state="new">将消息发送到主题</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>若要向服务总线主题发送消息，你的应用程序需要使用连接字符串创建 <bpt id="p1">[</bpt>TopicClient<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.topicclient.aspx)</ept> 对象。</source>
          <target state="new">若要向服务总线主题发送消息，你的应用程序需要使用连接字符串创建 <bpt id="p1">[</bpt>TopicClient<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.topicclient.aspx)</ept> 对象。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>以下代码演示了如何使用 <bpt id="p1">[</bpt><ph id="ph1">`CreateFromConnectionString`</ph><ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.topicclient.createfromconnectionstring.aspx)</ept> API 调用为以前创建的 <bpt id="p2">**</bpt>TestTopic<ept id="p2">**</ept> 主题创建 <bpt id="p3">[</bpt>TopicClient<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.topicclient.aspx)</ept> 对象。</source>
          <target state="new">以下代码演示了如何使用 <bpt id="p1">[</bpt><ph id="ph1">`CreateFromConnectionString`</ph><ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.topicclient.createfromconnectionstring.aspx)</ept> API 调用为以前创建的 <bpt id="p2">**</bpt>TestTopic<ept id="p2">**</ept> 主题创建 <bpt id="p3">[</bpt>TopicClient<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.topicclient.aspx)</ept> 对象。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>发送到服务总线主题的消息是 <bpt id="p1">[</bpt>BrokeredMessage<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.aspx)</ept> 类的实例。<bpt id="p2">[</bpt>BrokeredMessage<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.aspx)</ept> 对象包含一组标准属性（如 <bpt id="p3">[</bpt>Label<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.label.aspx)</ept> 和 <bpt id="p4">[</bpt>TimeToLive<ept id="p4">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.timetolive.aspx)</ept>）、一个用来保存自定义应用程序特定属性的词典以及大量随机应用程序数据。应用程序可通过将任何可序列化对象传入到 <bpt id="p5">[</bpt>BrokeredMessage<ept id="p5">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.aspx)</ept> 对象的构造函数中来设置消息的正文，然后将使用适当的 <bpt id="p6">**</bpt>DataContractSerializer<ept id="p6">**</ept> 序列化对象。或者，也可以提供 <bpt id="p7">**</bpt>System.IO.Stream<ept id="p7">**</ept>。</source>
          <target state="new">发送到服务总线主题的消息是 <bpt id="p1">[</bpt>BrokeredMessage<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.aspx)</ept> 类的实例。<bpt id="p2">[</bpt>BrokeredMessage<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.aspx)</ept> 对象包含一组标准属性（如 <bpt id="p3">[</bpt>Label<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.label.aspx)</ept> 和 <bpt id="p4">[</bpt>TimeToLive<ept id="p4">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.timetolive.aspx)</ept>）、一个用来保存自定义应用程序特定属性的词典以及大量随机应用程序数据。应用程序可通过将任何可序列化对象传入到 <bpt id="p5">[</bpt>BrokeredMessage<ept id="p5">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.aspx)</ept> 对象的构造函数中来设置消息的正文，然后将使用适当的 <bpt id="p6">**</bpt>DataContractSerializer<ept id="p6">**</ept> 序列化对象。或者，也可以提供 <bpt id="p7">**</bpt>System.IO.Stream<ept id="p7">**</ept>。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>以下示例演示了如何将五条测试消息发送到在前面的代码示例中获取的 <bpt id="p1">**</bpt>TestTopic<ept id="p1">**</ept> <bpt id="p2">[</bpt>TopicClient<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.topicclient.aspx)</ept> 对象。请注意，每条消息的 <bpt id="p3">[</bpt>MessageNumber<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.properties.aspx)</ept> 属性值因循环迭代而异（这将确定哪些订阅接收它）。</source>
          <target state="new">以下示例演示了如何将五条测试消息发送到在前面的代码示例中获取的 <bpt id="p1">**</bpt>TestTopic<ept id="p1">**</ept> <bpt id="p2">[</bpt>TopicClient<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.topicclient.aspx)</ept> 对象。请注意，每条消息的 <bpt id="p3">[</bpt>MessageNumber<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.properties.aspx)</ept> 属性值因循环迭代而异（这将确定哪些订阅接收它）。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>服务总线主题支持<bpt id="p1">[</bpt>最大为 256 Kb 的消息<ept id="p1">](/documentation/articles/service-bus-quotas)</ept>（标头最大为 64 Kb，其中包括标准和自定义应用程序属性）。一个主题中包含的消息数量不受限制，但消息的总大小受限制。此主题大小是在创建时定义的，上限为 5 GB。如果启用了分区，则上限更高。有关详细信息，请参阅<bpt id="p2">[</bpt>分区消息实体<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/dn520246.aspx)</ept>。</source>
          <target state="new">服务总线主题支持<bpt id="p1">[</bpt>最大为 256 Kb 的消息<ept id="p1">](/documentation/articles/service-bus-quotas)</ept>（标头最大为 64 Kb，其中包括标准和自定义应用程序属性）。一个主题中包含的消息数量不受限制，但消息的总大小受限制。此主题大小是在创建时定义的，上限为 5 GB。如果启用了分区，则上限更高。有关详细信息，请参阅<bpt id="p2">[</bpt>分区消息实体<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/dn520246.aspx)</ept>。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>如何从订阅接收消息</source>
          <target state="new">如何从订阅接收消息</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>从订阅接收消息的建议方法是使用 <bpt id="p1">[</bpt>SubscriptionClient<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.subscriptionclient.aspx)</ept> 对象。<bpt id="p2">[</bpt>SubscriptionClient<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.subscriptionclient.aspx)</ept> 对象可在两种不同模式下工作：<bpt id="p3">[</bpt>ReceiveAndDelete 和 PeekLock<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.receivemode.aspx)</ept>。</source>
          <target state="new">从订阅接收消息的建议方法是使用 <bpt id="p1">[</bpt>SubscriptionClient<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.subscriptionclient.aspx)</ept> 对象。<bpt id="p2">[</bpt>SubscriptionClient<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.subscriptionclient.aspx)</ept> 对象可在两种不同模式下工作：<bpt id="p3">[</bpt>ReceiveAndDelete 和 PeekLock<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.receivemode.aspx)</ept>。</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>当使用 <bpt id="p1">**</bpt>ReceiveAndDelete<ept id="p1">**</ept> 模式时，接收是一个单步操作 - 即，当服务总线接收订阅中的消息读取请求时，它会将消息标记为“正在使用”并将其返回给应用程序。<bpt id="p2">**</bpt>ReceiveAndDelete<ept id="p2">**</ept> 模式是最简单的模式，最适合应用程序允许出现故障时不处理消息的方案。为了理解这一点，可以考虑这样一种情形：使用方发出接收请求，但在处理该请求前发生了崩溃。由于服务总线会将消息标记为“已使用”，因此当应用程序重新启动并重新开始使用消息时，它会漏掉在发生崩溃前使用的消息。</source>
          <target state="new">当使用 <bpt id="p1">**</bpt>ReceiveAndDelete<ept id="p1">**</ept> 模式时，接收是一个单步操作 - 即，当服务总线接收订阅中的消息读取请求时，它会将消息标记为“正在使用”并将其返回给应用程序。<bpt id="p2">**</bpt>ReceiveAndDelete<ept id="p2">**</ept> 模式是最简单的模式，最适合应用程序允许出现故障时不处理消息的方案。为了理解这一点，可以考虑这样一种情形：使用方发出接收请求，但在处理该请求前发生了崩溃。由于服务总线会将消息标记为“已使用”，因此当应用程序重新启动并重新开始使用消息时，它会漏掉在发生崩溃前使用的消息。</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>PeekLock<ept id="p1">**</ept> 模式（这是默认模式）下，接收过程变成了一个两阶段操作，这样就可以支持无法容忍遗漏消息的应用程序。当 Service Bus 收到请求时，它会查找下一条要使用的消息，锁定该消息以防其他使用者接收，然后将该消息返回到应用程序。应用程序完成消息处理（或可靠地存储消息以供将来处理）后，它将通过对收到的消息调用 <bpt id="p2">[</bpt>Complete<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.complete.aspx)</ept> 完成接收过程的第二个阶段。当服务总线发现 <bpt id="p3">**</bpt>Complete<ept id="p3">**</ept> 调用时，它会将消息标记为“正在使用”并将其从订阅中删除。</source>
          <target state="new">在 <bpt id="p1">**</bpt>PeekLock<ept id="p1">**</ept> 模式（这是默认模式）下，接收过程变成了一个两阶段操作，这样就可以支持无法容忍遗漏消息的应用程序。当 Service Bus 收到请求时，它会查找下一条要使用的消息，锁定该消息以防其他使用者接收，然后将该消息返回到应用程序。应用程序完成消息处理（或可靠地存储消息以供将来处理）后，它将通过对收到的消息调用 <bpt id="p2">[</bpt>Complete<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.complete.aspx)</ept> 完成接收过程的第二个阶段。当服务总线发现 <bpt id="p3">**</bpt>Complete<ept id="p3">**</ept> 调用时，它会将消息标记为“正在使用”并将其从订阅中删除。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>以下示例演示如何使用默认的 <bpt id="p1">**</bpt>PeekLock<ept id="p1">**</ept> 模式接收和处理消息。若要指定不同的 <bpt id="p2">[</bpt>ReceiveMode<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.receivemode.aspx)</ept> 值，可以使用 <bpt id="p3">[</bpt>CreateFromConnectionString<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.subscriptionclient.createfromconnectionstring.aspx)</ept> 的另一个重载。此示例使用 <bpt id="p4">[</bpt>OnMessage<ept id="p4">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.subscriptionclient.onmessage.aspx)</ept> 回调来处理传入 <bpt id="p5">**</bpt>HighMessages<ept id="p5">**</ept> 订阅的消息。</source>
          <target state="new">以下示例演示如何使用默认的 <bpt id="p1">**</bpt>PeekLock<ept id="p1">**</ept> 模式接收和处理消息。若要指定不同的 <bpt id="p2">[</bpt>ReceiveMode<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.receivemode.aspx)</ept> 值，可以使用 <bpt id="p3">[</bpt>CreateFromConnectionString<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.subscriptionclient.createfromconnectionstring.aspx)</ept> 的另一个重载。此示例使用 <bpt id="p4">[</bpt>OnMessage<ept id="p4">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.subscriptionclient.onmessage.aspx)</ept> 回调来处理传入 <bpt id="p5">**</bpt>HighMessages<ept id="p5">**</ept> 订阅的消息。</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>此示例使用 <bpt id="p1">[</bpt>OnMessageOptions<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.onmessageoptions.aspx)</ept> 对象配置 <bpt id="p2">[</bpt>OnMessage<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.subscriptionclient.onmessage.aspx)</ept> 回调。将 <bpt id="p3">[</bpt>AutoComplete<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.onmessageoptions.autocomplete.aspx)</ept> 设置为 <bpt id="p4">**</bpt>false<ept id="p4">**</ept> 以允许手动控制何时对收到的消息调用 <bpt id="p5">[</bpt>Complete<ept id="p5">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.complete.aspx)</ept>。将 <bpt id="p6">[</bpt>AutoRenewTimeout<ept id="p6">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.onmessageoptions.autorenewtimeout.aspx)</ept> 设置为 1 分钟，这会导致客户端最多等待消息一分钟，然后调用会超时并且客户端将发出新的调用以检查是否有消息。此属性值会减少客户端无法检索消息时产生的应计费调用次数。</source>
          <target state="new">此示例使用 <bpt id="p1">[</bpt>OnMessageOptions<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.onmessageoptions.aspx)</ept> 对象配置 <bpt id="p2">[</bpt>OnMessage<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.subscriptionclient.onmessage.aspx)</ept> 回调。将 <bpt id="p3">[</bpt>AutoComplete<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.onmessageoptions.autocomplete.aspx)</ept> 设置为 <bpt id="p4">**</bpt>false<ept id="p4">**</ept> 以允许手动控制何时对收到的消息调用 <bpt id="p5">[</bpt>Complete<ept id="p5">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.complete.aspx)</ept>。将 <bpt id="p6">[</bpt>AutoRenewTimeout<ept id="p6">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.onmessageoptions.autorenewtimeout.aspx)</ept> 设置为 1 分钟，这会导致客户端最多等待消息一分钟，然后调用会超时并且客户端将发出新的调用以检查是否有消息。此属性值会减少客户端无法检索消息时产生的应计费调用次数。</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>如何处理应用程序崩溃和不可读消息</source>
          <target state="new">如何处理应用程序崩溃和不可读消息</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Service Bus 提供了相关功能来帮助你轻松地从应用程序错误或消息处理问题中恢复。如果接收方应用程序因某种原因无法处理消息，则可以对收到的消息调用 <bpt id="p1">[</bpt>Abandon<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.abandon.aspx)</ept> 方法（而不是 <bpt id="p2">[</bpt>Complete<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.complete.aspx)</ept> 方法）。这会导致服务总线解锁订阅中的消息并使其能够重新被同一个正在使用的应用程序或其他正在使用的应用程序接收。</source>
          <target state="new">Service Bus 提供了相关功能来帮助你轻松地从应用程序错误或消息处理问题中恢复。如果接收方应用程序因某种原因无法处理消息，则可以对收到的消息调用 <bpt id="p1">[</bpt>Abandon<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.abandon.aspx)</ept> 方法（而不是 <bpt id="p2">[</bpt>Complete<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.complete.aspx)</ept> 方法）。这会导致服务总线解锁订阅中的消息并使其能够重新被同一个正在使用的应用程序或其他正在使用的应用程序接收。</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>还存在与订阅中的锁定消息关联的超时，如果应用程序未能在锁定超时过期前处理消息（例如，如果应用程序崩溃），服务总线将自动解锁该消息并使它重新可供接收。</source>
          <target state="new">还存在与订阅中的锁定消息关联的超时，如果应用程序未能在锁定超时过期前处理消息（例如，如果应用程序崩溃），服务总线将自动解锁该消息并使它重新可供接收。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>如果应用程序在处理消息之后，但在发出 <bpt id="p1">[</bpt>Complete<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.complete.aspx)</ept> 请求之前发生崩溃，则在应用程序重新启动时会将该消息重新传送给它。此情况通常称作<bpt id="p2">*</bpt>至少处理一次<ept id="p2">*</ept>，即每条消息将至少被处理一次，但在某些情况下，同一消息可能会被重新传送。如果方案无法容忍重复处理，则应用程序开发人员应向其应用程序添加更多逻辑以处理重复消息传送。这通常可以通过使用消息的 <bpt id="p3">[</bpt>MessageId<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.messageid.aspx)</ept> 属性来实现，该属性在多次传送尝试中保持不变。</source>
          <target state="new">如果应用程序在处理消息之后，但在发出 <bpt id="p1">[</bpt>Complete<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.complete.aspx)</ept> 请求之前发生崩溃，则在应用程序重新启动时会将该消息重新传送给它。此情况通常称作<bpt id="p2">*</bpt>至少处理一次<ept id="p2">*</ept>，即每条消息将至少被处理一次，但在某些情况下，同一消息可能会被重新传送。如果方案无法容忍重复处理，则应用程序开发人员应向其应用程序添加更多逻辑以处理重复消息传送。这通常可以通过使用消息的 <bpt id="p3">[</bpt>MessageId<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.messageid.aspx)</ept> 属性来实现，该属性在多次传送尝试中保持不变。</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>删除主题和订阅</source>
          <target state="new">删除主题和订阅</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>以下示例演示了如何从 <bpt id="p1">**</bpt>HowToSample<ept id="p1">**</ept> 服务命名空间中删除名为 <bpt id="p2">**</bpt>TestTopic<ept id="p2">**</ept> 的主题。</source>
          <target state="new">以下示例演示了如何从 <bpt id="p1">**</bpt>HowToSample<ept id="p1">**</ept> 服务命名空间中删除名为 <bpt id="p2">**</bpt>TestTopic<ept id="p2">**</ept> 的主题。</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>删除某个主题也会删除向该主题注册的所有订阅。也可以单独删除订阅。以下代码演示如何从 <bpt id="p1">**</bpt>TestTopic<ept id="p1">**</ept> 主题中删除名为 <bpt id="p2">**</bpt>HighMessages<ept id="p2">**</ept> 的订阅。</source>
          <target state="new">删除某个主题也会删除向该主题注册的所有订阅。也可以单独删除订阅。以下代码演示如何从 <bpt id="p1">**</bpt>TestTopic<ept id="p1">**</ept> 主题中删除名为 <bpt id="p2">**</bpt>HighMessages<ept id="p2">**</ept> 的订阅。</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>现在，您已了解有关 Service Bus 主题和订阅的基础知识，单击下面的链接可了解更多信息。</source>
          <target state="new">现在，您已了解有关 Service Bus 主题和订阅的基础知识，单击下面的链接可了解更多信息。</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>请参阅<bpt id="p1">[</bpt>队列、主题和订阅<ept id="p1">][]</ept>。</source>
          <target state="new">请参阅<bpt id="p1">[</bpt>队列、主题和订阅<ept id="p1">][]</ept>。</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SqlFilter<ept id="p1">][]</ept> 的 API 参考。</source>
          <target state="new"><bpt id="p1">[</bpt>SqlFilter<ept id="p1">][]</ept> 的 API 参考。</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>构建向服务总线队列发送消息以及从中接收消息的工作应用程序：<bpt id="p1">[</bpt>服务总线中转消息传送 .NET 教程<ept id="p1">][]</ept>。</source>
          <target state="new">构建向服务总线队列发送消息以及从中接收消息的工作应用程序：<bpt id="p1">[</bpt>服务总线中转消息传送 .NET 教程<ept id="p1">][]</ept>。</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>服务总线示例：从 <bpt id="p1">[</bpt>Azure 示例<ept id="p1">][]</ept>下载，或参阅<bpt id="p2">[</bpt>概述<ept id="p2">](/documentation/articles/service-bus-samples)</ept>。</source>
          <target state="new">服务总线示例：从 <bpt id="p1">[</bpt>Azure 示例<ept id="p1">][]</ept>下载，或参阅<bpt id="p2">[</bpt>概述<ept id="p2">](/documentation/articles/service-bus-samples)</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>