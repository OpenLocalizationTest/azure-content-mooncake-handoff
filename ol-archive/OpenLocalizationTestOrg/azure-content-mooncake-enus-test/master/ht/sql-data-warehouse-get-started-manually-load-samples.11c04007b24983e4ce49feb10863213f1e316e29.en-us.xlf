<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6da8fb250ec018366dc86e95fb60c6dfdf5ff60f</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>将示例数据载入 SQL 数据仓库 | Azure</source>
          <target state="new">将示例数据载入 SQL 数据仓库 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>将示例数据载入 SQL 数据仓库</source>
          <target state="new">将示例数据载入 SQL 数据仓库</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>将示例数据载入 SQL 数据仓库</source>
          <target state="new">将示例数据载入 SQL 数据仓库</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>创建 SQL 数据仓库数据库实例后，下一步是创建并加载一些表。你可以使用我们为 SQL 数据仓库创建的 Adventure Works 示例脚本来创建并加载名为 Adventure Works 的虚构公司的表。这些脚本使用 sqlcmd 来运行 SQL，并使用 bcp 加载数据。如果你还没有安装这些工具，请单击以下链接<bpt id="p1">[</bpt>安装 bcp<ept id="p1">][]</ept> 并安装 sqlcmd。</source>
          <target state="new">创建 SQL 数据仓库数据库实例后，下一步是创建并加载一些表。你可以使用我们为 SQL 数据仓库创建的 Adventure Works 示例脚本来创建并加载名为 Adventure Works 的虚构公司的表。这些脚本使用 sqlcmd 来运行 SQL，并使用 bcp 加载数据。如果你还没有安装这些工具，请单击以下链接<bpt id="p1">[</bpt>安装 bcp<ept id="p1">][]</ept> 并安装 sqlcmd。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>请遵循以下简单步骤，将 Adventure Works 示例数据库加载到 SQL DW...</source>
          <target state="new">请遵循以下简单步骤，将 Adventure Works 示例数据库加载到 SQL DW...</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>下载<bpt id="p1">[</bpt>适用于 SQL 数据仓库的 Adventure Works 示例脚本<ept id="p1">][]</ept>。</source>
          <target state="new">下载<bpt id="p1">[</bpt>适用于 SQL 数据仓库的 Adventure Works 示例脚本<ept id="p1">][]</ept>。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>将下载的 zip 中的文件解压缩到本地计算机上的目录。</source>
          <target state="new">将下载的 zip 中的文件解压缩到本地计算机上的目录。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>编辑解压缩的 aw\_create.bat 文件，并设置位于文件顶部的以下变量。切勿在“=”和参数之间留有空格。下面是编辑后的内容示例。</source>
          <target state="new">编辑解压缩的 aw\_create.bat 文件，并设置位于文件顶部的以下变量。切勿在“=”和参数之间留有空格。下面是编辑后的内容示例。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>从 Windows 命令提示符运行编辑过的 aw\_create.bat。确保你所在的目录是保存了所编辑 aw\_create.bat 版本的位置。此脚本将...</source>
          <target state="new">从 Windows 命令提示符运行编辑过的 aw\_create.bat。确保你所在的目录是保存了所编辑 aw\_create.bat 版本的位置。此脚本将...</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>删除所有 Adventure Works 表或所有已在你数据库中的视图</source>
          <target state="new">删除所有 Adventure Works 表或所有已在你数据库中的视图</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>创建 Adventure Works 表和视图</source>
          <target state="new">创建 Adventure Works 表和视图</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>使用 bcp 加载每个 Adventure Works 表</source>
          <target state="new">使用 bcp 加载每个 Adventure Works 表</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>验证每个 Adventure Works 表的行计数</source>
          <target state="new">验证每个 Adventure Works 表的行计数</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>收集每个 Adventure Works 表的所有列中的统计信息</source>
          <target state="new">收集每个 Adventure Works 表的所有列中的统计信息</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>查询示例数据</source>
          <target state="new">查询示例数据</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>将一些示例数据载入 SQL 数据仓库后，你可以快速运行几个查询。若要运行查询，请使用 Visual Studio 和 SSDT 连接到 Azure SQL DW 中新建的 Adventure Works 数据库，如<bpt id="p1">[</bpt>连接<ept id="p1">][]</ept>文档中所述。</source>
          <target state="new">将一些示例数据载入 SQL 数据仓库后，你可以快速运行几个查询。若要运行查询，请使用 Visual Studio 和 SSDT 连接到 Azure SQL DW 中新建的 Adventure Works 数据库，如<bpt id="p1">[</bpt>连接<ept id="p1">][]</ept>文档中所述。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>用于获取所有员工信息的简单 select 语句示例：</source>
          <target state="new">用于获取所有员工信息的简单 select 语句示例：</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>下面是一个更复杂的查询示例，它使用构造（例如 GROUP BY）来查看每天所有销售活动的总金额：</source>
          <target state="new">下面是一个更复杂的查询示例，它使用构造（例如 GROUP BY）来查看每天所有销售活动的总金额：</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>用于筛选出特定日期之前的订单的 SELECT 与 WHERE 子句示例：</source>
          <target state="new">用于筛选出特定日期之前的订单的 SELECT 与 WHERE 子句示例：</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>SQL 数据仓库几乎支持 SQL Server 所能支持的所有 T-SQL 构造。<bpt id="p1">[</bpt>迁移代码<ept id="p1">][]</ept>文档中描述了两者的所有差别。</source>
          <target state="new">SQL 数据仓库几乎支持 SQL Server 所能支持的所有 T-SQL 构造。<bpt id="p1">[</bpt>迁移代码<ept id="p1">][]</ept>文档中描述了两者的所有差别。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>现在你可以配合示例数据尝试一些查询，接下来请了解如何<bpt id="p1">[</bpt>开发<ept id="p1">][]</ept>、<bpt id="p2">[</bpt>加载<ept id="p2">][]</ept>或<bpt id="p3">[</bpt>迁移<ept id="p3">][]</ept>到 SQL 数据仓库。</source>
          <target state="new">现在你可以配合示例数据尝试一些查询，接下来请了解如何<bpt id="p1">[</bpt>开发<ept id="p1">][]</ept>、<bpt id="p2">[</bpt>加载<ept id="p2">][]</ept>或<bpt id="p3">[</bpt>迁移<ept id="p3">][]</ept>到 SQL 数据仓库。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>