<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="zh-cn" target-language="en-us">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f2b4b1a" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93332b88458c2b5a4b3cb080525e421f996e893c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">articles\websites-dotnet-webjobs-sdk-service-bus.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74b4273fc707b7e631bf2c516882d2e1fb29bcfc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5f137bc520db92d84bc31635db71f36420554ac1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>如何通过 WebJobs SDK 使用 Azure 服务总线</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何通过 WebJobs SDK 使用 Azure 服务总线 队列和主题。</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>如何通过 WebJobs SDK 使用 Azure 服务总线</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>概述</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>本指南提供 C# 代码示例，用于演示如何在创建或更新 Azure Blob 后触发进程。</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>这些代码示例使用 <bpt id="p1">[</bpt>WebJobs SDK<ept id="p1">](/documentation/articles/websites-dotnet-webjobs-sdk)</ept> 版本 1.x。</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>本指南假设您了解<bpt id="p1">[</bpt>如何使用指向存储帐户的连接字符串在 Visual Studio 中创建 WebJob 项目<ept id="p1">](/documentation/articles/websites-dotnet-webjobs-sdk-get-started)</ept>。</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>代码段只显示函数，不同于创建 <ph id="ph1">`JobHost`</ph> 对象的代码（如以下示例所示）：</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>在 GitHub.com 上的 azure-webjobs-sdk-samples 存储库中有<bpt id="p1">[</bpt>完整的服务总线代码示例<ept id="p1">](https://github.com/Azure/azure-webjobs-sdk-samples/blob/master/BasicSamples/ServiceBus/Program.cs)</ept>。</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>先决条件</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>你必须先安装 <bpt id="p1">[</bpt>Microsoft.Azure.WebJobs.ServiceBus<ept id="p1">](https://www.nuget.org/packages/Microsoft.Azure.WebJobs.ServiceBus/)</ept> NuGet 包和其他 WebJobs SDK 包，然后才能使用服务总线。</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>你还必须设置 AzureWebJobsServiceBus 连接字符串，以及存储连接字符串。</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>你可以在 App.config 文件的 <ph id="ph1">`connectionStrings`</ph> 部分中执行此操作，如以下示例所示：</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>有关在 App.config 文件中包含服务总线连接字符串设置的示例项目，请参阅<bpt id="p1">[</bpt>服务总线示例<ept id="p1">](https://github.com/Azure/azure-webjobs-sdk-samples/tree/master/BasicSamples/ServiceBus)</ept>。</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>也可以在 Azure 运行时环境中设置连接字符串，当 Web 作业在 Azure 中运行时，这些设置将覆盖 App.config 设置；有关详细信息，请参阅 <bpt id="p1">[</bpt>WebJobs SDK 入门<ept id="p1">](/documentation/articles/websites-dotnet-webjobs-sdk-get-started#configure-the-web-app-to-use-your-azure-sql-database-and-storage-account)</ept>。</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>如何在接收服务总线队列消息时触发函数</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>若要编写接收队列消息时 WebJobs SDK 调用的函数，请使用 <ph id="ph1">`ServiceBusTrigger`</ph> 属性。</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>该属性构造函数使用一个参数来指定要轮询的队列名称。</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>ServicebusTrigger 工作原理</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>SDK 接收 <ph id="ph1">`PeekLock`</ph> 模式的消息。</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>如果函数成功完成，则对此消息调用 <ph id="ph1">`Complete`</ph>；如果函数失败，则调用 <ph id="ph2">`Abandon`</ph>。</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>如果函数的运行时间长于 <ph id="ph1">`PeekLock`</ph> 超时时间，则会自动续订锁定。</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>服务总线会自行执行有害队列处理，因此不需要由 WebJobs SDK 控制或在其中配置。</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>字符串队列消息</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>以下代码示例读取包含字符串的队列消息，并将字符串写入 WebJobs SDK 仪表板。</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>注意：<ept id="p1">**</ept>如果你在未使用 WebJobs SDK 的应用程序中创建队列消息，请务必将 <bpt id="p2">[</bpt>BrokeredMessage.ContentType<ept id="p2">](http://msdn.microsoft.com/zh-cn/library/microsoft.servicebus.messaging.brokeredmessage.contenttype.aspx)</ept> 设置为 “text/plain”。</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>POCO 队列消息</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>SDK 会自动反序列化包含 POCO（<bpt id="p1">[</bpt>普通旧 CLR 对象<ept id="p1">](http://en.wikipedia.org/wiki/Plain_Old_CLR_Object)</ept>）类型 JSON 的队列消息。</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>以下代码示例读取包含 <ph id="ph1">`BlobInformation`</ph> 对象（具有 <ph id="ph2">`BlobName`</ph> 属性）的队列消息：</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>有关展示如何使用 POCO 属性在同一函数中处理 blob 和表的代码示例，请参阅<bpt id="p1">[</bpt>这篇文章的存储队列版本<ept id="p1">](/documentation/articles/websites-dotnet-webjobs-sdk-storage-queues-how-to#pocoblobs)</ept>。</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>如果创建队列消息的代码不使用 WebJobs SDK，请使用类似于以下示例的代码：</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>ServiceBusTrigger 适用的类型</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>除了 <ph id="ph1">`string`</ph> 和 POCO 类型以外，你还可以使用具有字节数组或 <ph id="ph2">`BrokeredMessage`</ph> 对象的 <ph id="ph3">`ServiceBusTrigger`</ph> 属性。</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>如何创建服务总线队列消息</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>若要编写用于新建队列消息的函数，请使用 <ph id="ph1">`ServiceBus`</ph> 属性，并将队列名称传递给属性构造函数。</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>在非异步函数中创建单个队列消息</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>以下代码示例使用输出参数在名为“outputqueue”的队列中创建新的消息，该消息的内容与名为“inputqueue”的队列中收到的队列消息相同。</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>用于创建单个队列消息的输出参数可以是以下任何类型：</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>你定义的可序列化 POCO 类型。</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>自动序列化为 JSON。</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>对于 POCO 类型参数，当函数结束时始终创建队列消息；如果参数为 null，则 SDK 将创建在接收和反序列化消息时返回 null 的队列消息。</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>对于其他类型，如果该参数为 null，则不创建队列消息。</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>在异步函数中创建多个队列消息</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>若要创建多个消息，请使用包含 <ph id="ph1">`ICollector&lt;T&gt;`</ph> 或 <ph id="ph2">`IAsyncCollector&lt;T&gt;`</ph> 的 <ph id="ph3">`ServiceBus`</ph> 属性，如以下代码示例所示：</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>调用 <ph id="ph1">`Add`</ph> 方法时，将立即创建每个队列消息。</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>如何处理服务总线主题</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>若要编写 SDK 在收到服务总线主题消息时调用的函数，请使用 <ph id="ph1">`ServiceBusTrigger`</ph> 属性以及捕获主题名称和订阅名称的构造函数，如以下代码示例所示：</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>若要创建某主题的消息，请使用 <ph id="ph1">`ServiceBus`</ph> 属性和主题名称，过程与使用此属性和队列名称一样。</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>1<ph id="ph1">\.</ph>1 版中的新增功能</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>在 1.1 版中添加了以下功能：</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>允许通过 <ph id="ph1">`ServiceBusConfiguration.MessagingProvider`</ph> 对消息处理进行深层自定义。</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>支持服务总线 <ph id="ph1">`MessagingFactory`</ph> 和 <ph id="ph2">`NamespaceManager`</ph> 的自定义。</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>策略模式允许你为每个队列/主题指定处理器。</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>默认情况下支持消息处理并发。</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>可以轻松通过 <ph id="ph1">`ServiceBusConfiguration.MessageOptions`</ph> 对 <ph id="ph2">`OnMessageOptions`</ph> 进行自定义。</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>允许在 <ph id="ph1">`ServiceBusTriggerAttribute`/`ServiceBusAttribute`</ph> 上指定 <bpt id="p1">[</bpt>AccessRights<ept id="p1">](https://github.com/Azure/azure-webjobs-sdk-samples/blob/master/BasicSamples/ServiceBus/Functions.cs#L71)</ept>（适用于你可能不具有管理权限的方案）。</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>存储队列操作说明文章涉及的相关主题</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>若要了解非服务总线专用 WebJobs SDK 方案，请参阅<bpt id="p1">[</bpt>如何结合使用 Azure 队列存储和 WebJobs SDK<ept id="p1">](/documentation/articles/websites-dotnet-webjobs-sdk-storage-queues-how-to)</ept>。</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>该文章涵盖的主题包括：</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>异步函数</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>多个实例</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>正常关闭</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>在函数正文中使用 WebJobs SDK 属性</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>在代码中设置 SDK 连接字符串。</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>在代码中设置 WebJobs SDK 构造函数参数的值</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>手动触发函数</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>写入日志</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>本指南中包含的代码示例展示了如何处理常见方案来结合使用 Azure 服务总线。</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>有关如何使用 Azure WebJobs 和 WebJobs SDK 的详细信息，请参阅 <bpt id="p1">[</bpt>Azure WebJobs 推荐资源<ept id="p1">](/documentation/articles/websites-webjobs-resources/)</ept>。</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>