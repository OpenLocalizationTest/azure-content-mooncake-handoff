<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5d318251270ab7ed5f393e81586af3771def09d</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>如何使用适用于 Azure 移动服务的 iOS 客户端库</source>
          <target state="new">如何使用适用于 Azure 移动服务的 iOS 客户端库</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>如何使用适用于移动服务的 iOS 客户端库</source>
          <target state="new">如何使用适用于移动服务的 iOS 客户端库</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>如何使用适用于 Azure 移动服务的 iOS 客户端库</source>
          <target state="new">如何使用适用于 Azure 移动服务的 iOS 客户端库</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;</source>
          <target state="new">&amp;nbsp;</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>本指南介绍如何使用 Azure 移动服务 <bpt id="p1">[</bpt><ept id="p1">iOS SDK]</ept> 执行常见任务。如果你不熟悉移动服务，请先完成<bpt id="p2">[</bpt><ept id="p2">移动服务快速入门]</ept>，以配置你的帐户、创建表，并创建移动服务。</source>
          <target state="new">本指南介绍如何使用 Azure 移动服务 <bpt id="p1">[</bpt><ept id="p1">iOS SDK]</ept> 执行常见任务。如果你不熟悉移动服务，请先完成<bpt id="p2">[</bpt><ept id="p2">移动服务快速入门]</ept>，以配置你的帐户、创建表，并创建移动服务。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>本指南使用最新的 <bpt id="p1">[</bpt>iOS 移动服务 SDK<ept id="p1">](https://go.microsoft.com/fwLink/?LinkID=266533&amp;clcid=0x409)</ept>。如果你的项目使用旧版 SDK，请先升级 Xcode 中的框架。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>本指南使用最新的 <bpt id="p1">[</bpt>iOS 移动服务 SDK<ept id="p1">](https://go.microsoft.com/fwLink/?LinkID=266533&amp;clcid=0x409)</ept>。如果你的项目使用旧版 SDK，请先升级 Xcode 中的框架。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="Setup"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>安装与先决条件</source>
          <target state="new"><ph id="ph1">&lt;a name="Setup"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>安装与先决条件</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>本指南假设你已创建一个移动服务和一个表。有关详细信息，请参阅<bpt id="p1">[</bpt><ept id="p1">创建表]</ept>，或再次使用<bpt id="p2">[</bpt><ept id="p2">移动服务快速入门]</ept>中创建的 <ph id="ph1">`TodoItem`</ph> 表。本指南假设该表的架构与这些教程中的表相同。本指南还假设你的 Xcode 将引用 <ph id="ph2">`WindowsAzureMobileServices.framework`</ph> 并导入 <ph id="ph3">`WindowsAzureMobileServices/WindowsAzureMobileServices.h`</ph>。</source>
          <target state="new">本指南假设你已创建一个移动服务和一个表。有关详细信息，请参阅<bpt id="p1">[</bpt><ept id="p1">创建表]</ept>，或再次使用<bpt id="p2">[</bpt><ept id="p2">移动服务快速入门]</ept>中创建的 <ph id="ph1">`TodoItem`</ph> 表。本指南假设该表的架构与这些教程中的表相同。本指南还假设你的 Xcode 将引用 <ph id="ph2">`WindowsAzureMobileServices.framework`</ph> 并导入 <ph id="ph3">`WindowsAzureMobileServices/WindowsAzureMobileServices.h`</ph>。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="create-client"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：创建移动服务客户端</source>
          <target state="new"><ph id="ph1">&lt;a name="create-client"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：创建移动服务客户端</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>若要在项目中访问 Azure 移动服务，请创建 <ph id="ph1">`MSClient`</ph> 客户端对象。将 <ph id="ph2">`AppUrl`</ph> 和 <ph id="ph3">`AppKey`</ph> 分别替换为“仪表板”中的移动服务 URL 和应用程序密钥值。</source>
          <target state="new">若要在项目中访问 Azure 移动服务，请创建 <ph id="ph1">`MSClient`</ph> 客户端对象。将 <ph id="ph2">`AppUrl`</ph> 和 <ph id="ph3">`AppKey`</ph> 分别替换为“仪表板”中的移动服务 URL 和应用程序密钥值。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="table-reference"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：创建表引用</source>
          <target state="new"><ph id="ph1">&lt;a name="table-reference"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：创建表引用</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>若要访问或更新 Azure 移动服务的数据，请创建对表的引用。将 <ph id="ph1">`TodoItem`</ph> 替换为你的表名称。</source>
          <target state="new">若要访问或更新 Azure 移动服务的数据，请创建对表的引用。将 <ph id="ph1">`TodoItem`</ph> 替换为你的表名称。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="querying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：查询数据</source>
          <target state="new"><ph id="ph1">&lt;a name="querying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：查询数据</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>若要创建数据库查询，请查询 <ph id="ph1">`MSTable`</ph> 对象。以下查询将获取 <ph id="ph2">`TodoItem`</ph> 中的所有项，并记录每个项的文本。</source>
          <target state="new">若要创建数据库查询，请查询 <ph id="ph1">`MSTable`</ph> 对象。以下查询将获取 <ph id="ph2">`TodoItem`</ph> 中的所有项，并记录每个项的文本。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="filtering"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：筛选器返回的数据</source>
          <target state="new"><ph id="ph1">&lt;a name="filtering"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：筛选器返回的数据</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>可以使用许多可用选项来筛选结果。</source>
          <target state="new">可以使用许多可用选项来筛选结果。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>若要使用谓词进行筛选，请使用 <ph id="ph1">`NSPredicate`</ph> 和 <ph id="ph2">`readWithPredicate`</ph>。以下筛选器返回的数据只用于查找未完成的待办事项。</source>
          <target state="new">若要使用谓词进行筛选，请使用 <ph id="ph1">`NSPredicate`</ph> 和 <ph id="ph2">`readWithPredicate`</ph>。以下筛选器返回的数据只用于查找未完成的待办事项。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="query-object"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：使用 MSQuery</source>
          <target state="new"><ph id="ph1">&lt;a name="query-object"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：使用 MSQuery</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>若要执行复杂查询（包括排序和分页），请使用谓词直接创建 <ph id="ph1">`MSQuery`</ph> 对象：</source>
          <target state="new">若要执行复杂查询（包括排序和分页），请使用谓词直接创建 <ph id="ph1">`MSQuery`</ph> 对象：</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MSQuery`</ph> 可让你控制以下几种查询行为。通过调用 <ph id="ph2">`readWithCompletion`</ph> 执行 <ph id="ph3">`MSQuery`</ph> 查询，如下一示例中所示。</source>
          <target state="new"><ph id="ph1">`MSQuery`</ph> 可让你控制以下几种查询行为。通过调用 <ph id="ph2">`readWithCompletion`</ph> 执行 <ph id="ph3">`MSQuery`</ph> 查询，如下一示例中所示。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>指定结果的顺序</source>
          <target state="new">指定结果的顺序</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>限制要返回的字段</source>
          <target state="new">限制要返回的字段</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>限制要返回的记录数</source>
          <target state="new">限制要返回的记录数</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>指定响应中的总计数</source>
          <target state="new">指定响应中的总计数</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>指定请求中的自定义查询字符串参数</source>
          <target state="new">指定请求中的自定义查询字符串参数</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>应用其他函数</source>
          <target state="new">应用其他函数</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="sorting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：使用 MSQuery 对数据排序</source>
          <target state="new"><ph id="ph1">&lt;a name="sorting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：使用 MSQuery 对数据排序</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>让我们先看一个示例，来了解如何对结果排序。若要先按 <ph id="ph1">`text`</ph> 字段升序排序，然后按 <ph id="ph2">`completion`</ph> 字段降序排序，请按如下所示调用 <ph id="ph3">`MSQuery`</ph>：</source>
          <target state="new">让我们先看一个示例，来了解如何对结果排序。若要先按 <ph id="ph1">`text`</ph> 字段升序排序，然后按 <ph id="ph2">`completion`</ph> 字段降序排序，请按如下所示调用 <ph id="ph3">`MSQuery`</ph>：</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="paging"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：使用 MSQuery 在页中返回数据</source>
          <target state="new"><ph id="ph1">&lt;a name="paging"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：使用 MSQuery 在页中返回数据</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>移动服务可以限制单个响应中返回的记录量。若要控制显示给用户的记录数，你必须实施一个分页系统。你可以使用 <bpt id="p1">**</bpt>MSQuery<ept id="p1">**</ept> 对象的以下三个属性来执行分页：</source>
          <target state="new">移动服务可以限制单个响应中返回的记录量。若要控制显示给用户的记录数，你必须实施一个分页系统。你可以使用 <bpt id="p1">**</bpt>MSQuery<ept id="p1">**</ept> 对象的以下三个属性来执行分页：</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>在以下示例中，一个简单函数会向服务器请求 5 条记录，然后将这些记录附加到先前加载记录的本地集合：</source>
          <target state="new">在以下示例中，一个简单函数会向服务器请求 5 条记录，然后将这些记录附加到先前加载记录的本地集合：</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="selecting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph><ph id="ph3">&lt;a name="parameters"&gt;</ph><ph id="ph4">&lt;/a&gt;</ph>如何：使用 MSQuery 限制字段和展开查询字符串参数</source>
          <target state="new"><ph id="ph1">&lt;a name="selecting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph><ph id="ph3">&lt;a name="parameters"&gt;</ph><ph id="ph4">&lt;/a&gt;</ph>如何：使用 MSQuery 限制字段和展开查询字符串参数</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>若要限制在查询中返回的字段，请在 <bpt id="p1">**</bpt>selectFields<ept id="p1">**</ept> 属性中指定字段的名称。这样，便只会返回文本和已完成的字段：</source>
          <target state="new">若要限制在查询中返回的字段，请在 <bpt id="p1">**</bpt>selectFields<ept id="p1">**</ept> 属性中指定字段的名称。这样，便只会返回文本和已完成的字段：</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>若要在服务器请求中包含其他查询字符串参数（例如，某个自定义服务器端脚本要使用这些参数），请按如下所示填充 <ph id="ph1">`query.parameters`</ph>：</source>
          <target state="new">若要在服务器请求中包含其他查询字符串参数（例如，某个自定义服务器端脚本要使用这些参数），请按如下所示填充 <ph id="ph1">`query.parameters`</ph>：</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="inserting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：插入数据</source>
          <target state="new"><ph id="ph1">&lt;a name="inserting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：插入数据</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>若要插入新的表行，请创建新的 <ph id="ph1">`NSDictionary`</ph> 并调用 <ph id="ph2">`table insert`</ph>。移动服务将会根据 <ph id="ph3">`NSDictionary`</ph> 自动生成新列（如果未启用<bpt id="p1">[</bpt><ept id="p1">动态架构]</ept>）。</source>
          <target state="new">若要插入新的表行，请创建新的 <ph id="ph1">`NSDictionary`</ph> 并调用 <ph id="ph2">`table insert`</ph>。移动服务将会根据 <ph id="ph3">`NSDictionary`</ph> 自动生成新列（如果未启用<bpt id="p1">[</bpt><ept id="p1">动态架构]</ept>）。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>如果未提供 <ph id="ph1">`id`</ph>，后端会自动生成新的唯一 ID。提供你自己的 <ph id="ph2">`id`</ph>，以使用电子邮件地址、用户名或你自己的自定义值作为 ID。提供自己的 ID 可以让联接和业务导向型数据库逻辑变得更容易。</source>
          <target state="new">如果未提供 <ph id="ph1">`id`</ph>，后端会自动生成新的唯一 ID。提供你自己的 <ph id="ph2">`id`</ph>，以使用电子邮件地址、用户名或你自己的自定义值作为 ID。提供自己的 ID 可以让联接和业务导向型数据库逻辑变得更容易。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="modifying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：修改数据</source>
          <target state="new"><ph id="ph1">&lt;a name="modifying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：修改数据</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>若要更新现有的行，请修改项并调用 <ph id="ph1">`update`</ph>：</source>
          <target state="new">若要更新现有的行，请修改项并调用 <ph id="ph1">`update`</ph>：</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>或者，提供行 ID 和更新的字段：</source>
          <target state="new">或者，提供行 ID 和更新的字段：</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>进行更新时，至少必须设置 <ph id="ph1">`id`</ph> 属性。</source>
          <target state="new">进行更新时，至少必须设置 <ph id="ph1">`id`</ph> 属性。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="deleting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：删除数据</source>
          <target state="new"><ph id="ph1">&lt;a name="deleting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：删除数据</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>若要删除某个项，请对该项调用 <ph id="ph1">`delete`</ph>：</source>
          <target state="new">若要删除某个项，请对该项调用 <ph id="ph1">`delete`</ph>：</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>或者，提供行 ID 来进行删除：</source>
          <target state="new">或者，提供行 ID 来进行删除：</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>进行删除时，至少必须设置 <ph id="ph1">`id`</ph> 属性。</source>
          <target state="new">进行删除时，至少必须设置 <ph id="ph1">`id`</ph> 属性。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="#custom-api"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：调用自定义 API</source>
          <target state="new"><ph id="ph1">&lt;a name="#custom-api"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：调用自定义 API</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>自定义 API 可让你定义自定义终结点，这些终结点将会公开不映射到插入、更新、删除或读取操作的服务器功能。使用自定义 API 能够以更大的力度控制消息传送，包括读取和设置 HTTP 消息标头，以及定义除 JSON 以外的消息正文格式。有关如何在移动服务中创建自定义 API 的示例，请参阅<bpt id="p1">[</bpt>如何：定义自定义 API 终结点<ept id="p1">](/documentation/articles/mobile-services-dotnet-backend-define-custom-api)</ept>。</source>
          <target state="new">自定义 API 可让你定义自定义终结点，这些终结点将会公开不映射到插入、更新、删除或读取操作的服务器功能。使用自定义 API 能够以更大的力度控制消息传送，包括读取和设置 HTTP 消息标头，以及定义除 JSON 以外的消息正文格式。有关如何在移动服务中创建自定义 API 的示例，请参阅<bpt id="p1">[</bpt>如何：定义自定义 API 终结点<ept id="p1">](/documentation/articles/mobile-services-dotnet-backend-define-custom-api)</ept>。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="authentication"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：对用户进行身份验证</source>
          <target state="new"><ph id="ph1">&lt;a name="authentication"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：对用户进行身份验证</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Azure 移动服务支持各种标识提供者。有关基本教程，请参阅 <bpt id="p1">[</bpt><ept id="p1">身份验证]</ept>。</source>
          <target state="new">Azure 移动服务支持各种标识提供者。有关基本教程，请参阅 <bpt id="p1">[</bpt><ept id="p1">身份验证]</ept>。</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Azure 移动服务支持两种身份验证工作流：</source>
          <target state="new">Azure 移动服务支持两种身份验证工作流：</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>服务器托管登录<ept id="p1">**</ept>：Azure 移动服务将代表应用程序管理登录过程。它会显示提供者特定的登录页，并使用选择的提供者进行身份验证。</source>
          <target state="new"><bpt id="p1">**</bpt>服务器托管登录<ept id="p1">**</ept>：Azure 移动服务将代表应用程序管理登录过程。它会显示提供者特定的登录页，并使用选择的提供者进行身份验证。</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>客户端托管登录<ept id="p1">**</ept>：<bpt id="p2">_</bpt>应用程序<ept id="p2">_</ept>必须从标识提供者请求令牌，然后将此令牌提供给 Azure 移动服务以进行身份验证。</source>
          <target state="new"><bpt id="p1">**</bpt>客户端托管登录<ept id="p1">**</ept>：<bpt id="p2">_</bpt>应用程序<ept id="p2">_</ept>必须从标识提供者请求令牌，然后将此令牌提供给 Azure 移动服务以进行身份验证。</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>当身份验证成功时，你将获得具有用户 ID 值和身份验证令牌的用户对象。若要使用此用户 ID 来授权用户，请参阅<bpt id="p1">[</bpt><ept id="p1">服务器端授权]</ept>。若要将表访问权限限制给已经过身份验证的用户，请参阅<bpt id="p2">[</bpt><ept id="p2">权限]</ept>。</source>
          <target state="new">当身份验证成功时，你将获得具有用户 ID 值和身份验证令牌的用户对象。若要使用此用户 ID 来授权用户，请参阅<bpt id="p1">[</bpt><ept id="p1">服务器端授权]</ept>。若要将表访问权限限制给已经过身份验证的用户，请参阅<bpt id="p2">[</bpt><ept id="p2">权限]</ept>。</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>服务器托管登录</source>
          <target state="new">服务器托管登录</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>以下是可以将服务器托管登录添加到<bpt id="p1">[</bpt><ept id="p1">移动服务快速入门]</ept>项目的方式；你可以为其他项目使用类似的代码。有关详细信息，以及要查看端到端示例的运作方式，请参阅 <bpt id="p2">[</bpt><ept id="p2">身份验证]</ept>。</source>
          <target state="new">以下是可以将服务器托管登录添加到<bpt id="p1">[</bpt><ept id="p1">移动服务快速入门]</ept>项目的方式；你可以为其他项目使用类似的代码。有关详细信息，以及要查看端到端示例的运作方式，请参阅 <bpt id="p2">[</bpt><ept id="p2">身份验证]</ept>。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>客户端托管登录（单一登录）</source>
          <target state="new">客户端托管登录（单一登录）</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>你可以在移动服务客户端外部执行登录过程来启用单一登录，或者使应用程序能够直接联系标识提供者。在这种情况下，你可以通过提供单独从受支持标识提供者获取的令牌来登录到移动服务。</source>
          <target state="new">你可以在移动服务客户端外部执行登录过程来启用单一登录，或者使应用程序能够直接联系标识提供者。在这种情况下，你可以通过提供单独从受支持标识提供者获取的令牌来登录到移动服务。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>以下示例使用 <bpt id="p1">[</bpt><ept id="p1">Live Connect SDK]</ept> 为 iOS 应用程序启用单一登录。该示例假设你前面在控制器中创建了名为 <ph id="ph1">`liveClient`</ph> 的 <bpt id="p2">**</bpt>LiveConnectClient<ept id="p2">**</ept> 实例，并且用户已登录。</source>
          <target state="new">以下示例使用 <bpt id="p1">[</bpt><ept id="p1">Live Connect SDK]</ept> 为 iOS 应用程序启用单一登录。该示例假设你前面在控制器中创建了名为 <ph id="ph1">`liveClient`</ph> 的 <bpt id="p2">**</bpt>LiveConnectClient<ept id="p2">**</ept> 实例，并且用户已登录。</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="caching-tokens"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：缓存身份验证令牌</source>
          <target state="new"><ph id="ph1">&lt;a name="caching-tokens"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：缓存身份验证令牌</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>了解如何在<bpt id="p1">[</bpt><ept id="p1">移动服务快速入门]</ept>项目中缓存令牌；你可以对任何项目应用类似的步骤。<ph id="ph1">[AZURE.INCLUDE [mobile-services-ios-authenticate-app-with-token](../includes/mobile-services-ios-authenticate-app-with-token.md)]</ph></source>
          <target state="new">了解如何在<bpt id="p1">[</bpt><ept id="p1">移动服务快速入门]</ept>项目中缓存令牌；你可以对任何项目应用类似的步骤。<ph id="ph1">[AZURE.INCLUDE [mobile-services-ios-authenticate-app-with-token](../includes/mobile-services-ios-authenticate-app-with-token.md)]</ph></target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="errors"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：处理错误</source>
          <target state="new"><ph id="ph1">&lt;a name="errors"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何：处理错误</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>调用移动服务时，完成块将包含 <ph id="ph1">`NSError *error`</ph> 参数。如果出错，此参数为非 nil 值。你应该在代码中检查此参数，并根据需要处理错误。</source>
          <target state="new">调用移动服务时，完成块将包含 <ph id="ph1">`NSError *error`</ph> 参数。如果出错，此参数为非 nil 值。你应该在代码中检查此参数，并根据需要处理错误。</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">`&lt;WindowsAzureMobileServices/MSError.h&gt;`</ph><ept id="p1">](https://github.com/Azure/azure-mobile-services/blob/master/sdk/iOS/src/MSError.h)</ept> 文件定义 <ph id="ph2">`MSErrorResponseKey`</ph>、<ph id="ph3">`MSErrorRequestKey`</ph> 和 <ph id="ph4">`MSErrorServerItemKey`</ph> 常量以获取有关错误的更多数据。此外，该文件还定义每个错误代码的常量。有关如何使用这些常量的示例，请参阅<bpt id="p2">[</bpt><ept id="p2">冲突处理程序]</ept>，以了解 <ph id="ph5">`MSErrorServerItemKey`</ph> 和 <ph id="ph6">`MSErrorPreconditionFailed`</ph> 的用法。</source>
          <target state="new"><bpt id="p1">[</bpt><ph id="ph1">`&lt;WindowsAzureMobileServices/MSError.h&gt;`</ph><ept id="p1">](https://github.com/Azure/azure-mobile-services/blob/master/sdk/iOS/src/MSError.h)</ept> 文件定义 <ph id="ph2">`MSErrorResponseKey`</ph>、<ph id="ph3">`MSErrorRequestKey`</ph> 和 <ph id="ph4">`MSErrorServerItemKey`</ph> 常量以获取有关错误的更多数据。此外，该文件还定义每个错误代码的常量。有关如何使用这些常量的示例，请参阅<bpt id="p2">[</bpt><ept id="p2">冲突处理程序]</ept>，以了解 <ph id="ph5">`MSErrorServerItemKey`</ph> 和 <ph id="ph6">`MSErrorPreconditionFailed`</ph> 的用法。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>