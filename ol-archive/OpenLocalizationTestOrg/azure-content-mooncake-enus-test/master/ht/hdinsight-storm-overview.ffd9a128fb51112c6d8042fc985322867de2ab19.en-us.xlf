<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">853beec0292fa7139597e909495ddce399558b0f</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Apache Storm on HDInsight 简介 | Azure</source>
          <target state="new">Apache Storm on HDInsight 简介 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>获取有关 Apache Storm 的简介，并了解如何使用 Storm on HDInsight 在云中构建实时数据分析解决方案。</source>
          <target state="new">获取有关 Apache Storm 的简介，并了解如何使用 Storm on HDInsight 在云中构建实时数据分析解决方案。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Apache Storm on HDInsight 简介：面向 Hadoop 的实时分析</source>
          <target state="new">Apache Storm on HDInsight 简介：面向 Hadoop 的实时分析</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Apache Storm on HDInsight 可让你使用 <bpt id="p1">[</bpt>Apache Hadoop<ept id="p1">](http://hadoop.apache.org)</ept> 在 Azure 环境中创建分布式实时分析解决方案。</source>
          <target state="new">Apache Storm on HDInsight 可让你使用 <bpt id="p1">[</bpt>Apache Hadoop<ept id="p1">](http://hadoop.apache.org)</ept> 在 Azure 环境中创建分布式实时分析解决方案。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>什么是 Apache Storm？</source>
          <target state="new">什么是 Apache Storm？</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Apache Storm 是分布式可容错的开源计算系统，可用于配合 Hadoop 实时处理数据。Storm 解决方案还提供有保障的数据处理功能，能够重播第一次未成功处理的数据。</source>
          <target state="new">Apache Storm 是分布式可容错的开源计算系统，可用于配合 Hadoop 实时处理数据。Storm 解决方案还提供有保障的数据处理功能，能够重播第一次未成功处理的数据。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>为何要使用 Storm on HDInsight？</source>
          <target state="new">为何要使用 Storm on HDInsight？</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Apache Storm on HDInsight 是已集成到 Azure 环境中的托管群集。它提供以下主要优势：</source>
          <target state="new">Apache Storm on HDInsight 是已集成到 Azure 环境中的托管群集。它提供以下主要优势：</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>以托管服务的形式执行，提供 99.9% 运行时间 SLA</source>
          <target state="new">以托管服务的形式执行，提供 99.9% 运行时间 SLA</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>使用你选择的语言：支持以 <bpt id="p1">**</bpt>Java<ept id="p1">**</ept>、<bpt id="p2">**</bpt>C#<ept id="p2">**</ept> 和 <bpt id="p3">**</bpt>Python<ept id="p3">**</ept> 编写的 Storm 组件</source>
          <target state="new">使用你选择的语言：支持以 <bpt id="p1">**</bpt>Java<ept id="p1">**</ept>、<bpt id="p2">**</bpt>C#<ept id="p2">**</ept> 和 <bpt id="p3">**</bpt>Python<ept id="p3">**</ept> 编写的 Storm 组件</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>支持混用编程语言：使用 Java 读取数据，然后使用 C# 处理数据</source>
          <target state="new">支持混用编程语言：使用 Java 读取数据，然后使用 C# 处理数据</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>使用 <bpt id="p1">**</bpt>Trident<ept id="p1">**</ept> Java 接口创建支持“一次性”消息处理、“事务性”数据存储持久性和一组常见流分析操作的 Storm 拓扑</source>
          <target state="new">使用 <bpt id="p1">**</bpt>Trident<ept id="p1">**</ept> Java 接口创建支持“一次性”消息处理、“事务性”数据存储持久性和一组常见流分析操作的 Storm 拓扑</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>包括内置的向上缩放和向下缩放功能：在不影响运行 Storm 拓扑的情况下缩放 HDInsight 群集</source>
          <target state="new">包括内置的向上缩放和向下缩放功能：在不影响运行 Storm 拓扑的情况下缩放 HDInsight 群集</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>与其他 Azure 服务（包括事件中心、Azure 虚拟网络、SQL 数据库、Blob 存储和 DocumentDB）集成</source>
          <target state="new">与其他 Azure 服务（包括事件中心、Azure 虚拟网络、SQL 数据库、Blob 存储和 DocumentDB）集成</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>通过使用 Azure 虚拟网络中组合多个 HDInsight 群集的功能：创建使用 HDInsight、HBase 或 Hadoop 群集的分析管道</source>
          <target state="new">通过使用 Azure 虚拟网络中组合多个 HDInsight 群集的功能：创建使用 HDInsight、HBase 或 Hadoop 群集的分析管道</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>有关在实时分析解决方案中使用 Apache Storm 的公司列表，请参阅<bpt id="p1">[</bpt>使用 Apache Storm 的公司<ept id="p1">](https://storm.apache.org/documentation/Powered-By.html)</ept>。</source>
          <target state="new">有关在实时分析解决方案中使用 Apache Storm 的公司列表，请参阅<bpt id="p1">[</bpt>使用 Apache Storm 的公司<ept id="p1">](https://storm.apache.org/documentation/Powered-By.html)</ept>。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>若要开始使用 Storm，请参阅 <bpt id="p1">[</bpt>Storm on HDInsight 入门<ept id="p1">][gettingstarted]</ept>。</source>
          <target state="new">若要开始使用 Storm，请参阅 <bpt id="p1">[</bpt>Storm on HDInsight 入门<ept id="p1">][gettingstarted]</ept>。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>易于设置</source>
          <target state="new">易于设置</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>你可以在分钟数设置好新的 Storm on HDInsight 群集。指定群集名称、大小、管理员帐户和存储帐户。Azure 将创建该群集，包括示例拓扑和 Web 管理仪表板。</source>
          <target state="new">你可以在分钟数设置好新的 Storm on HDInsight 群集。指定群集名称、大小、管理员帐户和存储帐户。Azure 将创建该群集，包括示例拓扑和 Web 管理仪表板。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> 你也可以使用 <bpt id="p1">[</bpt>Azure CLI<ept id="p1">](/documentation/articles/xplat-cli-install)</ept> 或 <bpt id="p2">[</bpt>Azure PowerShell<ept id="p2">](/documentation/articles/powershell-install-configure)</ept> 预配 Storm 群集。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> 你也可以使用 <bpt id="p1">[</bpt>Azure CLI<ept id="p1">](/documentation/articles/xplat-cli-install)</ept> 或 <bpt id="p2">[</bpt>Azure PowerShell<ept id="p2">](/documentation/articles/powershell-install-configure)</ept> 预配 Storm 群集。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>在提交请求后的 15 分钟内，你就可以运行新的 Storm 群集，并准备好建立第一个实时分析管道。</source>
          <target state="new">在提交请求后的 15 分钟内，你就可以运行新的 Storm 群集，并准备好建立第一个实时分析管道。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>易于使用</source>
          <target state="new">易于使用</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">__</bpt>对于基于 Windows 的 Storm on HDInsight 群集<ept id="p1">__</ept>，HDInsight Tools for Visual Studio 允许你创建 C# 和混合 C#/Java 拓扑，然后将它们提交到 Storm on HDInsight 群集。</source>
          <target state="new"><bpt id="p1">__</bpt>对于基于 Windows 的 Storm on HDInsight 群集<ept id="p1">__</ept>，HDInsight Tools for Visual Studio 允许你创建 C# 和混合 C#/Java 拓扑，然后将它们提交到 Storm on HDInsight 群集。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Storm 项目创建</source>
          <target state="new">Storm 项目创建</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>HDInsight Tools for Visual Studio 还提供了一个接口让你监视和管理群集上的 Storm 拓扑。</source>
          <target state="new">HDInsight Tools for Visual Studio 还提供了一个接口让你监视和管理群集上的 Storm 拓扑。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Storm 管理</source>
          <target state="new">Storm 管理</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>有关使用 HDInsight 工具创建 Storm 应用程序的示例，请参阅<bpt id="p1">[</bpt>使用 HDInsight Tools for Visual Studio 开发 C# Storm 拓扑<ept id="p1">](/documentation/articles/hdinsight-storm-develop-csharp-visual-studio-topology)</ept>。</source>
          <target state="new">有关使用 HDInsight 工具创建 Storm 应用程序的示例，请参阅<bpt id="p1">[</bpt>使用 HDInsight Tools for Visual Studio 开发 C# Storm 拓扑<ept id="p1">](/documentation/articles/hdinsight-storm-develop-csharp-visual-studio-topology)</ept>。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>有关 HDInsight Tools for Visual Studio 的详细信息，请参阅 <bpt id="p1">[</bpt>HDInsight Tools for Visual Studio 入门<ept id="p1">](/documentation/articles/hdinsight-hadoop-visual-studio-tools-get-started)</ept>。</source>
          <target state="new">有关 HDInsight Tools for Visual Studio 的详细信息，请参阅 <bpt id="p1">[</bpt>HDInsight Tools for Visual Studio 入门<ept id="p1">](/documentation/articles/hdinsight-hadoop-visual-studio-tools-get-started)</ept>。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>每个 Storm on HDInsight 群集还提供一个基于 Web 的 Storm 仪表板让提交、监视和管理群集上运行的 Storm 拓扑。</source>
          <target state="new">每个 Storm on HDInsight 群集还提供一个基于 Web 的 Storm 仪表板让提交、监视和管理群集上运行的 Storm 拓扑。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Storm 仪表板</source>
          <target state="new">Storm 仪表板</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>有关使用 Storm 仪表板的详细信息，请参阅<bpt id="p1">[</bpt>在 HDInsight 上部署和管理 Apache Storm 拓扑<ept id="p1">](/documentation/articles/hdinsight-storm-deploy-monitor-topology)</ept>。</source>
          <target state="new">有关使用 Storm 仪表板的详细信息，请参阅<bpt id="p1">[</bpt>在 HDInsight 上部署和管理 Apache Storm 拓扑<ept id="p1">](/documentation/articles/hdinsight-storm-deploy-monitor-topology)</ept>。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Storm on HDInsight 还支持通过<bpt id="p1">**</bpt>事件中心 Spout<ept id="p1">**</ept> 与 Azure 事件中心轻松集成。可以使用 <bpt id="p2">**</bpt>%STORM\_HOME%\\examples\\eventhubspout\\eventhubs-storm-spout-0.9-jar-with-dependencies.jar<ept id="p2">**</ept> 在每个 Storm 群集上实现此目的。有关在 Storm 拓扑中使用此 Spout 的示例，请参阅以下文档：</source>
          <target state="new">Storm on HDInsight 还支持通过<bpt id="p1">**</bpt>事件中心 Spout<ept id="p1">**</ept> 与 Azure 事件中心轻松集成。可以使用 <bpt id="p2">**</bpt>%STORM\_HOME%\\examples\\eventhubspout\\eventhubs-storm-spout-0.9-jar-with-dependencies.jar<ept id="p2">**</ept> 在每个 Storm 群集上实现此目的。有关在 Storm 拓扑中使用此 Spout 的示例，请参阅以下文档：</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>开发使用 Azure 事件中心的 C# 拓扑</source>
          <target state="new">开发使用 Azure 事件中心的 C# 拓扑</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>开发使用 Azure 事件中心的 Java 拓扑</source>
          <target state="new">开发使用 Azure 事件中心的 Java 拓扑</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>可靠性</source>
          <target state="new">可靠性</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Apache Storm 始终保证每个传入消息将完全处理，即使数据分析分散在数百个节点。</source>
          <target state="new">Apache Storm 始终保证每个传入消息将完全处理，即使数据分析分散在数百个节点。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Nimbus 节点<ept id="p1">**</ept>提供的功能与 Hadoop JobTracker 类似，它通过 <bpt id="p2">**</bpt>Zookeeper<ept id="p2">**</ept> 将任务分配给群集中的其他节点。Zookeeper 节点为群集提供协调功能，并促进 Nimbus 与辅助节点上的 <bpt id="p3">**</bpt>Supervisor<ept id="p3">**</ept> 进程进行通信。如果处理的一个节点出现故障，Nimbus 节点将得到通知，并分配到另一个节点的任务和关联的数据。</source>
          <target state="new"><bpt id="p1">**</bpt>Nimbus 节点<ept id="p1">**</ept>提供的功能与 Hadoop JobTracker 类似，它通过 <bpt id="p2">**</bpt>Zookeeper<ept id="p2">**</ept> 将任务分配给群集中的其他节点。Zookeeper 节点为群集提供协调功能，并促进 Nimbus 与辅助节点上的 <bpt id="p3">**</bpt>Supervisor<ept id="p3">**</ept> 进程进行通信。如果处理的一个节点出现故障，Nimbus 节点将得到通知，并分配到另一个节点的任务和关联的数据。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Apache Storm 的默认配置是只能有一个 Nimbus 节点。Storm on HDInsight 运行两个 Nimbus 节点。如果主节点出现故障，HDInsight 群集将切换到辅助节点，同时主节点将会恢复。</source>
          <target state="new">Apache Storm 的默认配置是只能有一个 Nimbus 节点。Storm on HDInsight 运行两个 Nimbus 节点。如果主节点出现故障，HDInsight 群集将切换到辅助节点，同时主节点将会恢复。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>nimbus、zookeeper 和 supervisor 示意图</source>
          <target state="new">nimbus、zookeeper 和 supervisor 示意图</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>缩放</source>
          <target state="new">缩放</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>虽然可以在创建过程中指定群集中的节点数，但你可能需要扩大或收缩群集以匹配工作负载。所有 HDInsight 群集允许你更改群集中的节点数，即使在处理数据时。</source>
          <target state="new">虽然可以在创建过程中指定群集中的节点数，但你可能需要扩大或收缩群集以匹配工作负载。所有 HDInsight 群集允许你更改群集中的节点数，即使在处理数据时。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> 若要利用通过缩放添加的新节点，你需要重新平衡在增加大小之前启动的拓扑。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> 若要利用通过缩放添加的新节点，你需要重新平衡在增加大小之前启动的拓扑。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>支持</source>
          <target state="new">支持</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Storm on HDInsight 附带全天候企业级支持。Storm on HDInsight 也提供 99.9% 的 SLA。这意味着，我们保证至少 99.9% 的时间群集都能建立外部连接。</source>
          <target state="new">Storm on HDInsight 附带全天候企业级支持。Storm on HDInsight 也提供 99.9% 的 SLA。这意味着，我们保证至少 99.9% 的时间群集都能建立外部连接。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>实时分析常见用例</source>
          <target state="new">实时分析常见用例</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>以下是你可能使用 Apache storm on HDInsight 的一些常见方案。有关实际方案的信息，请阅读<bpt id="p1">[</bpt>公司如何使用 Storm<ept id="p1">](https://storm.incubator.apache.org/documentation/Powered-By.html)</ept>。</source>
          <target state="new">以下是你可能使用 Apache storm on HDInsight 的一些常见方案。有关实际方案的信息，请阅读<bpt id="p1">[</bpt>公司如何使用 Storm<ept id="p1">](https://storm.incubator.apache.org/documentation/Powered-By.html)</ept>。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>物联网 (IoT)</source>
          <target state="new">物联网 (IoT)</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>欺诈检测</source>
          <target state="new">欺诈检测</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>社交分析</source>
          <target state="new">社交分析</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>提取、转换、加载 (ETL)</source>
          <target state="new">提取、转换、加载 (ETL)</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>网络监视</source>
          <target state="new">网络监视</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>搜索</source>
          <target state="new">搜索</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>移动应用场景</source>
          <target state="new">移动应用场景</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>如何处理 HDInsight Storm 中的数据？</source>
          <target state="new">如何处理 HDInsight Storm 中的数据？</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Apache Storm 运行的是<bpt id="p1">**</bpt>拓扑<ept id="p1">**</ept>，而不是你在 HDInsight 或 Hadoop 中可能熟悉的 MapReduce 作业。Storm on HDInsight 群集包含两种类型的节点：运行 <bpt id="p2">**</bpt>Nimbus<ept id="p2">**</ept> 的头节点和运行 <bpt id="p3">**</bpt>Supervisor<ept id="p3">**</ept> 的辅助节点。</source>
          <target state="new">Apache Storm 运行的是<bpt id="p1">**</bpt>拓扑<ept id="p1">**</ept>，而不是你在 HDInsight 或 Hadoop 中可能熟悉的 MapReduce 作业。Storm on HDInsight 群集包含两种类型的节点：运行 <bpt id="p2">**</bpt>Nimbus<ept id="p2">**</ept> 的头节点和运行 <bpt id="p3">**</bpt>Supervisor<ept id="p3">**</ept> 的辅助节点。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Nimbus<ept id="p1">**</ept>：类似于 Hadoop 中的 JobTracker，负责在整个群集中分发代码、将任务分配给虚拟机以及监视故障情况。HDInsight 提供两个 Nimbus 节点，因此 Storm on HDInsight 不会出现单点故障</source>
          <target state="new"><bpt id="p1">**</bpt>Nimbus<ept id="p1">**</ept>：类似于 Hadoop 中的 JobTracker，负责在整个群集中分发代码、将任务分配给虚拟机以及监视故障情况。HDInsight 提供两个 Nimbus 节点，因此 Storm on HDInsight 不会出现单点故障</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Supervisor<ept id="p1">**</ept>：每个辅助节点的 supervisor 负责启动和停止该节点上的<bpt id="p2">**</bpt>工作进程<ept id="p2">**</ept>。</source>
          <target state="new"><bpt id="p1">**</bpt>Supervisor<ept id="p1">**</ept>：每个辅助节点的 supervisor 负责启动和停止该节点上的<bpt id="p2">**</bpt>工作进程<ept id="p2">**</ept>。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>工作进程<ept id="p1">**</ept>：运行<bpt id="p2">**</bpt>拓扑<ept id="p2">**</ept>的一个子集。正在运行的拓扑分布在整个群集的许多工作进程上。</source>
          <target state="new"><bpt id="p1">**</bpt>工作进程<ept id="p1">**</ept>：运行<bpt id="p2">**</bpt>拓扑<ept id="p2">**</ept>的一个子集。正在运行的拓扑分布在整个群集的许多工作进程上。</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>拓扑<ept id="p1">**</ept>：定义处理数据<bpt id="p2">**</bpt>流<ept id="p2">**</ept>的计算图形。与 MapReduce 作业不同，拓扑运行到你停止它们为止。</source>
          <target state="new"><bpt id="p1">**</bpt>拓扑<ept id="p1">**</ept>：定义处理数据<bpt id="p2">**</bpt>流<ept id="p2">**</ept>的计算图形。与 MapReduce 作业不同，拓扑运行到你停止它们为止。</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>流<ept id="p1">**</ept>：一个未绑定的<bpt id="p2">**</bpt>元组<ept id="p2">**</ept>集合。流由 <bpt id="p3">**</bpt>spout<ept id="p3">**</ept> 和 <bpt id="p4">**</bpt>bolt<ept id="p4">**</ept> 生成，并由 <bpt id="p5">**</bpt>bolt<ept id="p5">**</ept> 使用。</source>
          <target state="new"><bpt id="p1">**</bpt>流<ept id="p1">**</ept>：一个未绑定的<bpt id="p2">**</bpt>元组<ept id="p2">**</ept>集合。流由 <bpt id="p3">**</bpt>spout<ept id="p3">**</ept> 和 <bpt id="p4">**</bpt>bolt<ept id="p4">**</ept> 生成，并由 <bpt id="p5">**</bpt>bolt<ept id="p5">**</ept> 使用。</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>元组<ept id="p1">**</ept>：动态类型化值的一个命名列表。</source>
          <target state="new"><bpt id="p1">**</bpt>元组<ept id="p1">**</ept>：动态类型化值的一个命名列表。</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Spout<ept id="p1">**</ept>：使用数据源中的数据并发出一个或多个<bpt id="p2">**</bpt>流<ept id="p2">**</ept>。</source>
          <target state="new"><bpt id="p1">**</bpt>Spout<ept id="p1">**</ept>：使用数据源中的数据并发出一个或多个<bpt id="p2">**</bpt>流<ept id="p2">**</ept>。</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>在许多情况下，从 Kafka、Azure 服务总线队列或事件中心等队列中读取数据。队列确保发生中断时数据持续不断。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>在许多情况下，从 Kafka、Azure 服务总线队列或事件中心等队列中读取数据。队列确保发生中断时数据持续不断。</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Bolt<ept id="p1">**</ept>：使用<bpt id="p2">**</bpt>流<ept id="p2">**</ept>，处理<bpt id="p3">**</bpt>元组<ept id="p3">**</ept>，并可以发出<bpt id="p4">**</bpt>流<ept id="p4">**</ept>。Bolt 还负责将数据编写到外部存储，比如队列、HDInsight HBase、blob 或其他数据存储。</source>
          <target state="new"><bpt id="p1">**</bpt>Bolt<ept id="p1">**</ept>：使用<bpt id="p2">**</bpt>流<ept id="p2">**</ept>，处理<bpt id="p3">**</bpt>元组<ept id="p3">**</ept>，并可以发出<bpt id="p4">**</bpt>流<ept id="p4">**</ept>。Bolt 还负责将数据编写到外部存储，比如队列、HDInsight HBase、blob 或其他数据存储。</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Apache Thrift<ept id="p1">**</ept>：用于可缩放跨语言服务开发的软件框架。可用于构建在 C++、Java、Python、PHP、Ruby、Erlang、Perl、Haskell、C#、Cocoa、JavaScript、Node.js、Smalltalk 及其他语言间工作的服务。</source>
          <target state="new"><bpt id="p1">**</bpt>Apache Thrift<ept id="p1">**</ept>：用于可缩放跨语言服务开发的软件框架。可用于构建在 C++、Java、Python、PHP、Ruby、Erlang、Perl、Haskell、C#、Cocoa、JavaScript、Node.js、Smalltalk 及其他语言间工作的服务。</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Nimbus<ept id="p1">**</ept> 是一种 Thrift 服务，<bpt id="p2">**</bpt>拓扑<ept id="p2">**</ept>是 Thrift 定义，因此可以使用各种编程语言来开发拓扑</source>
          <target state="new"><bpt id="p1">**</bpt>Nimbus<ept id="p1">**</ept> 是一种 Thrift 服务，<bpt id="p2">**</bpt>拓扑<ept id="p2">**</ept>是 Thrift 定义，因此可以使用各种编程语言来开发拓扑</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>有关 Storm 组件的详细信息，请参阅 apache.org 上的 <bpt id="p1">[</bpt>Storm 教程<ept id="p1">][apachetutorial]</ept>。</source>
          <target state="new">有关 Storm 组件的详细信息，请参阅 apache.org 上的 <bpt id="p1">[</bpt>Storm 教程<ept id="p1">][apachetutorial]</ept>。</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>我可以使用哪些编程语言？</source>
          <target state="new">我可以使用哪些编程语言？</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Storm on HDInsight 群集支持 C#、Java 和 Python。</source>
          <target state="new">Storm on HDInsight 群集支持 C#、Java 和 Python。</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>C&amp;#35;</source>
          <target state="new">C&amp;#35;</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>HDInsight Tools for Visual Studio 允许 .NET 开发人员以 C# 语言设计和实施拓扑。你也可以创建使用 Java 和 C# 组件的混合拓扑。</source>
          <target state="new">HDInsight Tools for Visual Studio 允许 .NET 开发人员以 C# 语言设计和实施拓扑。你也可以创建使用 Java 和 C# 组件的混合拓扑。</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Studio 开发 Apache Storm on HDInsight 的 C# 拓扑<ept id="p1">](/documentation/articles/hdinsight-storm-develop-csharp-visual-studio-topology)</ept>。</source>
          <target state="new">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Studio 开发 Apache Storm on HDInsight 的 C# 拓扑<ept id="p1">](/documentation/articles/hdinsight-storm-develop-csharp-visual-studio-topology)</ept>。</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Java</source>
          <target state="new">Java</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>你遇到的大多数 Java 示例都是无格式 Java 或 Trident。Trident 是一个高级别抽象，可更轻松地执行联接、汇总、分组和筛选等操作。但是，Trident 作用于批量元组，其中原始 Java 解决方案一次将处理一个元组流。</source>
          <target state="new">你遇到的大多数 Java 示例都是无格式 Java 或 Trident。Trident 是一个高级别抽象，可更轻松地执行联接、汇总、分组和筛选等操作。但是，Trident 作用于批量元组，其中原始 Java 解决方案一次将处理一个元组流。</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>有关 Trident 的详细信息，请参阅 apache.org 上的 <bpt id="p1">[</bpt>Trident 教程<ept id="p1">](https://storm.incubator.apache.org/documentation/Trident-tutorial.html)</ept>。</source>
          <target state="new">有关 Trident 的详细信息，请参阅 apache.org 上的 <bpt id="p1">[</bpt>Trident 教程<ept id="p1">](https://storm.incubator.apache.org/documentation/Trident-tutorial.html)</ept>。</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>有关 Java 和 Trident 拓扑的示例，请参阅 <bpt id="p1">[</bpt>Storm 拓扑示例列表<ept id="p1">](/documentation/articles/hdinsight-storm-example-topology)</ept>或 HDInsight 群集上的 storm-starter 示例。</source>
          <target state="new">有关 Java 和 Trident 拓扑的示例，请参阅 <bpt id="p1">[</bpt>Storm 拓扑示例列表<ept id="p1">](/documentation/articles/hdinsight-storm-example-topology)</ept>或 HDInsight 群集上的 storm-starter 示例。</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>storm-starter 示例位于基于 Windows 的群集上的 <bpt id="p1">**</bpt>%storm\_home%\\contrib\\storm-starter<ept id="p1">**</ept> 目录中。</source>
          <target state="new">storm-starter 示例位于基于 Windows 的群集上的 <bpt id="p1">**</bpt>%storm\_home%\\contrib\\storm-starter<ept id="p1">**</ept> 目录中。</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>常见的开发模式有哪些？</source>
          <target state="new">常见的开发模式有哪些？</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>有保证的消息处理</source>
          <target state="new">有保证的消息处理</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Storm 可以提供不同级别的有保证的消息处理。例如，基本的 Storm 应用程序至少可以保证一次处理，而 Trident 仅可以保证一次处理。</source>
          <target state="new">Storm 可以提供不同级别的有保证的消息处理。例如，基本的 Storm 应用程序至少可以保证一次处理，而 Trident 仅可以保证一次处理。</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>有关详细信息，请参阅 apache.org 上的<bpt id="p1">[</bpt>数据处理保证<ept id="p1">](https://storm.apache.org/about/guarantees-data-processing.html)</ept>。</source>
          <target state="new">有关详细信息，请参阅 apache.org 上的<bpt id="p1">[</bpt>数据处理保证<ept id="p1">](https://storm.apache.org/about/guarantees-data-processing.html)</ept>。</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>IBasicBolt</source>
          <target state="new">IBasicBolt</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>读取输入元组，发出零个或多个元组，然后在执行方法结束时立即询问输入元组，这种模式非常普通，以至 Storm 提供 <bpt id="p1">[</bpt>IBasicBolt<ept id="p1">](https://storm.apache.org/apidocs/backtype/storm/topology/IBasicBolt.html)</ept> 接口来自动执行这种模式。</source>
          <target state="new">读取输入元组，发出零个或多个元组，然后在执行方法结束时立即询问输入元组，这种模式非常普通，以至 Storm 提供 <bpt id="p1">[</bpt>IBasicBolt<ept id="p1">](https://storm.apache.org/apidocs/backtype/storm/topology/IBasicBolt.html)</ept> 接口来自动执行这种模式。</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>联接</source>
          <target state="new">联接</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>在应用程序之间联接两个数据流的方式将有所不同。例如，你可以从多个流将每个元组联接到一个新流，也可以仅联接特定窗口的批量元组。两种方式的联接都可以使用 <bpt id="p1">[</bpt>fieldsGrouping<ept id="p1">](http://javadox.com/org.apache.storm/storm-core/0.9.1-incubating/backtype/storm/topology/InputDeclarer.html#fieldsGrouping%28java.lang.String,%20backtype.storm.tuple.Fields%29)</ept> 来实现，它是定义元组如何路由到 bolt 的方式。</source>
          <target state="new">在应用程序之间联接两个数据流的方式将有所不同。例如，你可以从多个流将每个元组联接到一个新流，也可以仅联接特定窗口的批量元组。两种方式的联接都可以使用 <bpt id="p1">[</bpt>fieldsGrouping<ept id="p1">](http://javadox.com/org.apache.storm/storm-core/0.9.1-incubating/backtype/storm/topology/InputDeclarer.html#fieldsGrouping%28java.lang.String,%20backtype.storm.tuple.Fields%29)</ept> 来实现，它是定义元组如何路由到 bolt 的方式。</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>在以下 Java 实例中，fieldsGrouping 用于将来自组件“1”、“2”和“3”的元组路由至 <bpt id="p1">**</bpt>MyJoiner<ept id="p1">**</ept> bolt。</source>
          <target state="new">在以下 Java 实例中，fieldsGrouping 用于将来自组件“1”、“2”和“3”的元组路由至 <bpt id="p1">**</bpt>MyJoiner<ept id="p1">**</ept> bolt。</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>批处理</source>
          <target state="new">批处理</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>批处理可以通过若干方式来实现。利用基本 Storm Java 拓扑，你可以在发出元组前使用简单计数器对 X 个元组进行批处理，或使用称为计时周期元组的内部计时机制每 X 秒发出一批元组。</source>
          <target state="new">批处理可以通过若干方式来实现。利用基本 Storm Java 拓扑，你可以在发出元组前使用简单计数器对 X 个元组进行批处理，或使用称为计时周期元组的内部计时机制每 X 秒发出一批元组。</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>有关使用计时周期元组的示例，请参阅<bpt id="p1">[</bpt>使用 HDInsight 上的 Storm 和 HBase 分析传感器数据<ept id="p1">](/documentation/articles/hdinsight-storm-sensor-data-analysis)</ept>。</source>
          <target state="new">有关使用计时周期元组的示例，请参阅<bpt id="p1">[</bpt>使用 HDInsight 上的 Storm 和 HBase 分析传感器数据<ept id="p1">](/documentation/articles/hdinsight-storm-sensor-data-analysis)</ept>。</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>如果你使用的是 Trident，则其基于批量处理元组。</source>
          <target state="new">如果你使用的是 Trident，则其基于批量处理元组。</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>缓存</source>
          <target state="new">缓存</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>内存缓存通常用作加速处理的机制，因为它在内存中存储常用资产。由于拓扑分布于多个节点，并且每个节点中有多个进程，你应考虑使用 <bpt id="p1">[</bpt>fieldsGrouping<ept id="p1">](http://javadox.com/org.apache.storm/storm-core/0.9.1-incubating/backtype/storm/topology/InputDeclarer.html#fieldsGrouping%28java.lang.String,%20backtype.storm.tuple.Fields%29)</ept> 来确保包含用于缓存查询的字段的元组始终路由至同一进程。这可以避免在进程间重复缓存条目。</source>
          <target state="new">内存缓存通常用作加速处理的机制，因为它在内存中存储常用资产。由于拓扑分布于多个节点，并且每个节点中有多个进程，你应考虑使用 <bpt id="p1">[</bpt>fieldsGrouping<ept id="p1">](http://javadox.com/org.apache.storm/storm-core/0.9.1-incubating/backtype/storm/topology/InputDeclarer.html#fieldsGrouping%28java.lang.String,%20backtype.storm.tuple.Fields%29)</ept> 来确保包含用于缓存查询的字段的元组始终路由至同一进程。这可以避免在进程间重复缓存条目。</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>流式处理 top N</source>
          <target state="new">流式处理 top N</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>当拓扑依赖于计算“top”N 值（比如 Twitter 上的前 5 大趋势）时，你应并行计算 top N 值，然后将这些计算的输出合并到全局值中。为此，可以使用 <bpt id="p1">[</bpt>fieldsGrouping<ept id="p1">](http://javadox.com/org.apache.storm/storm-core/0.9.1-incubating/backtype/storm/topology/InputDeclarer.html#fieldsGrouping%28java.lang.String,%20backtype.storm.tuple.Fields%29)</ept> 按字段路由至并行 bolt（该项按字段值对数据进行划分），然后路由至全局确定前 N 个值的 bolt。</source>
          <target state="new">当拓扑依赖于计算“top”N 值（比如 Twitter 上的前 5 大趋势）时，你应并行计算 top N 值，然后将这些计算的输出合并到全局值中。为此，可以使用 <bpt id="p1">[</bpt>fieldsGrouping<ept id="p1">](http://javadox.com/org.apache.storm/storm-core/0.9.1-incubating/backtype/storm/topology/InputDeclarer.html#fieldsGrouping%28java.lang.String,%20backtype.storm.tuple.Fields%29)</ept> 按字段路由至并行 bolt（该项按字段值对数据进行划分），然后路由至全局确定前 N 个值的 bolt。</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>有关此内容的示例，请参阅 <bpt id="p1">[</bpt>RollingTopWords<ept id="p1">](https://github.com/nathanmarz/storm-starter/blob/master/src/jvm/storm/starter/RollingTopWords.java)</ept> 示例。</source>
          <target state="new">有关此内容的示例，请参阅 <bpt id="p1">[</bpt>RollingTopWords<ept id="p1">](https://github.com/nathanmarz/storm-starter/blob/master/src/jvm/storm/starter/RollingTopWords.java)</ept> 示例。</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>了解有关使用 HDInsight 中的 Apache Storm 构建实时分析解决方案的详细信息：</source>
          <target state="new">了解有关使用 HDInsight 中的 Apache Storm 构建实时分析解决方案的详细信息：</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Storm on HDInsight 入门</source>
          <target state="new">Storm on HDInsight 入门</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Storm on HDInsight 的示例拓扑</source>
          <target state="new">Storm on HDInsight 的示例拓扑</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>