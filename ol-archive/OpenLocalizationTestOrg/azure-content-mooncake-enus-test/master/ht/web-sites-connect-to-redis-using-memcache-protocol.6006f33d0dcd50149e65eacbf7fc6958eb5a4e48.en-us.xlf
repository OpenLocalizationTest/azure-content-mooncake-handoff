<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="zh-cn" target-language="en-us">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f2b4b1a" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e796bf5dccedde1a7e80de4fec6c9289d46e81f6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">articles\web-sites-connect-to-redis-using-memcache-protocol.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e5e09c4c41ee899d5220f5480433a80228692568</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4a04249d2d664584793b36dd0c637a36d7254b76</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>通过 Memcache 协议将 Azure 中的 Web 应用连接到 Redis 缓存 | Azure</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>使用 Memcache 协议将 Azure App Service 中的 Web 应用连接到 Redis 缓存</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>通过 Memcache 协议将 Azure 中的 Web 应用连接到 Redis 缓存</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>在本文中，你将学习如何使用 <bpt id="p1">[</bpt>Memcache<ept id="p1">]</ept><bpt id="p2">[</bpt><ept id="p2">13]</ept> 协议将 <bpt id="p3">[</bpt>Azure Web 应用<ept id="p3">](/documentation/services/web-sites/)</ept>中的 WordPress Web 应用连接到 <bpt id="p4">[</bpt>Azure Redis 缓存<ept id="p4">]</ept><bpt id="p5">[</bpt><ept id="p5">12]</ept>。</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>如果你的现有 Web 应用使用 Memcached 服务器作为内存中缓存，则你可以将其迁移到 Azure，并使用 Azure 中的第一方缓存解决方案，其中对你的应用程序代码进行少量更改或无更改。</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>此外，你可以利用现有的 Memcache 专业知识，在使用 Azure Redis 缓存作为内存中缓存的 Azure 中创建高度可缩放的分布式应用，同时使用常用的应用程序框架，例如 .NET、PHP、Node.js、Java 和 Python。</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Azure Web Apps 使用 Web Apps Memcache 填充码启用该应用程序方案，这是充当 Memcache 代理的本地 Memcached 服务器，用于缓存对 Azure Redis 缓存的调用。</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>这使得使用 Memcache 协议通信的任何应用可以使用 Redis 缓存缓存数据。</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>此 Memcache 填充码在协议级别运行，因此只要它使用 Memcached 协议通信，就可以供任何应用程序或应用程序框架使用。</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>先决条件</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Web Apps Memcache 填充码可以与任何应用程序一起使用，前提是使用 Memcached 协议通信。</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>就此特定示例来说，引用应用程序是一个可缩放的 WordPress 站点。</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>请按照以下文章中所述的步骤操作：</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>设置 Azure Redis Cache Service 的实例<ept id="p1">]</ept><bpt id="p2">[</bpt><ept id="p2">0]</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>部署可缩放的 WordPress 站点并预配 Redis 缓存实例后，你随时可以启用 Azure Web Apps 中的 Memcache 填充码。</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>启用 Web Apps Memcache 填充码</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>在 Azure 中国区，只能通过 Azure PowerShell 或 Azure CLI 管理 Redis 缓存</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>添加 REDIS<ph id="ph1">\_</ph>HOST 应用设置</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>你需要创建的第一个应用设置是 <bpt id="p1">**</bpt>REDIS<ph id="ph1">\_</ph>HOST<ept id="p1">**</ept> 应用设置。</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>此设置将对该填充码将缓存信息转发到的目的地进行设置。</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>REDIS<ph id="ph1">\_</ph>HOST 应用设置所需的值可以通过以下 PowerShell 命令进行检索。</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>将应用设置的密钥设置为 <bpt id="p1">**</bpt>REDIS<ph id="ph1">\_</ph>HOST<ept id="p1">**</ept>，将应用设置的值设置为 Redis 缓存实例的<bpt id="p2">**</bpt>主机名<ept id="p2">**</ept>。</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>添加 REDIS<ph id="ph1">\_</ph>KEY 应用设置</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>你需要创建的第二个应用设置是 <bpt id="p1">**</bpt>REDIS<ph id="ph1">\_</ph>KEY<ept id="p1">**</ept> 应用设置。</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>此设置提供了安全访问 Redis 缓存实例所需的身份验证令牌。</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>REDIS<ph id="ph1">\_</ph>KEY 应用设置所需的值可以通过以下的 PowerShell 命令行获得：</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>将应用设置的密钥设置为 <bpt id="p1">**</bpt>REDIS<ph id="ph1">\_</ph>KEY<ept id="p1">**</ept>，将应用设置的值设置为 Redis 缓存实例的<bpt id="p2">**</bpt>主密钥<ept id="p2">**</ept>。</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>添加 MEMCACHESHIM<ph id="ph1">\_</ph>REDIS<ph id="ph2">\_</ph>ENABLE 应用设置</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>最后一个应用设置用于启用 Web Apps 中的 Memcache 填充码，以便使用 REDIS<ph id="ph1">\_</ph>HOST 和 REDIS<ph id="ph2">\_</ph>KEY 来连接到 Azure Redis 缓存并转发缓存调用。</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>将应用设置的密钥设置为 <bpt id="p1">**</bpt>MEMCACHESHIM<ph id="ph1">\_</ph>REDIS<ph id="ph2">\_</ph>ENABLE<ept id="p1">**</ept>，并将其值设置为 <bpt id="p2">**</bpt>true<ept id="p2">**</ept>。</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>添加完这三 (3) 个应用设置以后，单击“保存”。</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>启用针对 PHP 的 Memcache 扩展</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>若要让应用程序使用 Memcache 协议进行沟通，必须将 Memcache 扩展安装到 PHP（用于 WordPress 站点的语言框架）。</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>下载 php<ph id="ph1">\_</ph>memcache 扩展</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>浏览到 <bpt id="p1">[</bpt>PECL<ept id="p1">]</ept><bpt id="p2">[</bpt><ept id="p2">6]</ept>。</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>在缓存类别下单击“<bpt id="p1">[</bpt>memcache<ept id="p1">]</ept><bpt id="p2">[</bpt><ept id="p2">7]</ept>”。</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>在下载列中，单击 DLL 链接。</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>PHP PECL  Web 应用</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>下载 Web Apps 中启用的 PHP 版本的非线性安全 (NTS) x86 链接。</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>（默认为 PHP 5.4）</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>PHP PECL  Web 应用 Memcache 包</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>启用 php<ph id="ph1">\_</ph>memcache 扩展</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>下载文件之后，将 <bpt id="p1">**</bpt>php<ph id="ph1">\_</ph>memcache.dll<ept id="p1">**</ept> 解压缩并上载到 <bpt id="p2">*</bpt><bpt id="p3">*</bpt>d:<ph id="ph2">\\</ph>home<ph id="ph3">\\</ph>site<ph id="ph4">\\</ph>wwwroot<ph id="ph5">\\</ph>bin<ph id="ph6">\\</ph>ext<ph id="ph7">\*</ph><ept id="p3">*</ept> 目录。将 php<ph id="ph8">\_</ph>memcache.dll 上载到 Web 应用后，你需要启用 PHP 运行时的扩展。若要在 Azure 管理门户中启用 Memcache 扩展，请打开 Web 应用的“配置”，然后添加键为 <ept id="p2">*</ept><bpt id="p4">*</bpt>PHP<ph id="ph9">\_</ph>EXTENSIONS<ept id="p4">*</ept><bpt id="p5">*</bpt>、值为 <ept id="p5">*</ept><bpt id="p6">*</bpt>bin<ph id="ph10">\\</ph>ext<ph id="ph11">\\</ph>php<ph id="ph12">\_</ph>memcache.dll<ept id="p6">*</ept>* 的新应用设置。</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>如果 Web 应用需要加载多个 PHP 扩展，则 PHP<ph id="ph1">\_</ph>EXTENSIONS 的值应为由逗号分隔的 DLL 文件相对路径的列表。</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>完成后，单击“保存”。</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>安装 Memcache WordPress 插件</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>你也可以从 WordPress.org 下载 <bpt id="p1">[</bpt>Memcached 对象缓存插件<ept id="p1">](https://wordpress.org/plugins/memcached/)</ept>。</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>在 WordPress 插件页上，单击“添加新项”。</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>WordPress 插件页</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>在搜索框中，键入 <bpt id="p1">**</bpt>memcached<ept id="p1">**</ept>，然后按 <bpt id="p2">**</bpt>Enter<ept id="p2">**</ept>。</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>WordPress 添加新项插件</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>在列表中查找“Memcached 对象缓存”，然后单击“立即安装”。</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>WordPress 安装 Memcache 插件</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>启用 Memcache WordPress 插件</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>按照此博客中关于<bpt id="p1">[</bpt>如何启用 Web Apps 中的站点扩展<ept id="p1">]</ept><bpt id="p2">[</bpt><ept id="p2">8]</ept>的说明，安装 Visual Studio Team Services。</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>在 <ph id="ph1">`wp-config.php`</ph> 文件中，将以下代码添加到该文件末尾附近停止编辑备注的上方。</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>粘贴此代码后，monaco 会自动保存该文档。</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>下一步是启用对象缓存插件。</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>这可通过以下操作实现：将 <bpt id="p1">**</bpt>object-cache.php<ept id="p1">**</ept> 从 <bpt id="p2">**</bpt>wp-content/plugins/memcached<ept id="p2">**</ept> 文件夹拖放到 <bpt id="p3">**</bpt>wp-content<ept id="p3">**</ept> 文件夹，以启用 Memcache 对象缓存功能。</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>定位 memcache object-cache.php 插件</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>现在，<bpt id="p1">**</bpt>object-cache.php<ept id="p1">**</ept> 文件位于 <bpt id="p2">**</bpt>wp-content<ept id="p2">**</ept> 文件夹中，Memcached 对象缓存已启用。</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>启用 memcache object-cache.php 插件</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>验证 Memcache 对象缓存插件是否正常运行</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>启用 Web Apps Memcache 填充码的所有步骤现已完成。</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>剩下的唯一一件事是，验证 Redis 缓存实例是否正在填充数据。</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>启用 Azure Redis 缓存中的非 SSL 端口支持</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>撰写本文时，Redis CLI 尚不支持 SSL 连接，因此以下步骤是必需的。</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>可以使用以下 PowerShell 命令启用非 SSL 端口。</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>从 redis-cli 连接到 Azure Redis Cache</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>此步骤假定 redis 已通过本地方式安装在你的开发计算机上。<bpt id="p1">[</bpt>按以下说明在本地安装 Redis<ept id="p1">]</ept><bpt id="p2">[</bpt><ept id="p2">9]</ept>。</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>打开你选择的命令行控制台并键入以下命令：</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>将 <bpt id="p1">**</bpt><ph id="ph1">&amp;lt;</ph>hostname-for-redis-cache<ph id="ph2">&amp;gt;</ph><ept id="p1">**</ept> 替换为实际的 xxxxx.redis.cache.chinacloudapi.cn 主机名，将 <bpt id="p2">**</bpt><ph id="ph3">&amp;lt;</ph>primary-key-for-redis-cache<ph id="ph4">&amp;gt;</ph><ept id="p2">**</ept> 替换为缓存的访问密钥，然后按 <bpt id="p3">**</bpt>Enter<ept id="p3">**</ept>。</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>CLI 连接到 Redis 缓存实例之后，发出任何 Redis 命令。</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>在下面的屏幕截图中，我已选择列出密钥。</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>在终端从 Redis CLI 连接到 Azure Redis 缓存</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>列出密钥的调用应返回一个值。</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>如果没有，请尝试导航到 Web 应用，然后再重试。</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>结束语</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>祝贺你！</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>WordPress 应用现在有了集中式的内存中缓存，这将有助于提高吞吐量。</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>请记住，Web Apps Memcache 填充码可以与任何 Memcache 客户端结合使用，无需考虑编程语言或应用程序框架。</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>若要提供反馈或者提问有关 Web Apps Memcache 填充码的问题，请在 <bpt id="p1">[</bpt>MSDN 论坛<ept id="p1">]</ept><bpt id="p2">[</bpt><ept id="p2">10]</ept>或 <bpt id="p3">[</bpt>CSDN<ept id="p3">]</ept><bpt id="p4">[</bpt><ept id="p4">11]</ept> 上发布相关文章。</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>