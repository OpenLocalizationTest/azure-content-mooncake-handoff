<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">38f34278fdea32dbdbe62af6612bbd9871fa8cd1</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>使用 .NET 将文件上载到媒体服务帐户</source>
          <target state="new">使用 .NET 将文件上载到媒体服务帐户</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何通过创建和上载资产将媒体内容加入媒体服务。</source>
          <target state="new">了解如何通过创建和上载资产将媒体内容加入媒体服务。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>使用 .NET 将文件上载到媒体服务帐户</source>
          <target state="new">使用 .NET 将文件上载到媒体服务帐户</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>在媒体服务中，可以将数字文件上载（引入）到资产中。<bpt id="p1">**</bpt>资产<ept id="p1">**</ept>实体可以包含视频、音频、图像、缩略图集合、图文轨迹和隐藏字幕文件（以及有关这些文件的元数据。） 上载文件完成后，相关内容即安全地存储在云中供后续处理和流式处理。</source>
          <target state="new">在媒体服务中，可以将数字文件上载（引入）到资产中。<bpt id="p1">**</bpt>资产<ept id="p1">**</ept>实体可以包含视频、音频、图像、缩略图集合、图文轨迹和隐藏字幕文件（以及有关这些文件的元数据。） 上载文件完成后，相关内容即安全地存储在云中供后续处理和流式处理。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>资产中的文件称为<bpt id="p1">**</bpt>资产文件<ept id="p1">**</ept>。<bpt id="p2">**</bpt>AssetFile<ept id="p2">**</ept> 实例和实际媒体文件是两个不同的对象。AssetFile 实例包含有关媒体文件的元数据，而媒体文件包含实际媒体内容。</source>
          <target state="new">资产中的文件称为<bpt id="p1">**</bpt>资产文件<ept id="p1">**</ept>。<bpt id="p2">**</bpt>AssetFile<ept id="p2">**</ept> 实例和实际媒体文件是两个不同的对象。AssetFile 实例包含有关媒体文件的元数据，而媒体文件包含实际媒体内容。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>在创建资产时，可以指定以下加密选项。</source>
          <target state="new">在创建资产时，可以指定以下加密选项。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>无<ept id="p1">**</ept> - 不使用加密。这是默认值。请注意，使用此选项时，你的内容在传送过程中或静态存储过程中都不会受到保护。如果计划使用渐进式下载交付 MP4，则使用此选项。</source>
          <target state="new"><bpt id="p1">**</bpt>无<ept id="p1">**</ept> - 不使用加密。这是默认值。请注意，使用此选项时，你的内容在传送过程中或静态存储过程中都不会受到保护。如果计划使用渐进式下载交付 MP4，则使用此选项。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CommonEncryption<ept id="p1">**</ept> - 上载经过常用加密或 PlayReady DRM 加密并受其保护的内容（例如，受 PlayReady DRM 保护的平滑流）时使用此选项。</source>
          <target state="new"><bpt id="p1">**</bpt>CommonEncryption<ept id="p1">**</ept> - 上载经过常用加密或 PlayReady DRM 加密并受其保护的内容（例如，受 PlayReady DRM 保护的平滑流）时使用此选项。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>EnvelopeEncrypted<ept id="p1">**</ept> – 如果要上载使用 AES 加密的 HLS，请使用此选项。请注意，Transform Manager 必须已对文件进行编码和加密。</source>
          <target state="new"><bpt id="p1">**</bpt>EnvelopeEncrypted<ept id="p1">**</ept> – 如果要上载使用 AES 加密的 HLS，请使用此选项。请注意，Transform Manager 必须已对文件进行编码和加密。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>StorageEncrypted<ept id="p1">**</ept> - 使用 AES-256 位加密在本地加密明文内容，然后将其上载到 Azure Storage 中以加密形式静态存储相关内容。受存储加密保护的资产将在编码前自动解密并放入经过加密的文件系统中，并可选择在重新上载为新的输出资产前重新加密。存储加密的主要用例是在磁盘上通过静态增强加密来保护高品质的输入媒体文件。</source>
          <target state="new"><bpt id="p1">**</bpt>StorageEncrypted<ept id="p1">**</ept> - 使用 AES-256 位加密在本地加密明文内容，然后将其上载到 Azure Storage 中以加密形式静态存储相关内容。受存储加密保护的资产将在编码前自动解密并放入经过加密的文件系统中，并可选择在重新上载为新的输出资产前重新加密。存储加密的主要用例是在磁盘上通过静态增强加密来保护高品质的输入媒体文件。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>媒体服务为资产提供磁盘上的存储加密，而不是通过数字权限管理器 (DRM) 等线路提供加密。</source>
          <target state="new">媒体服务为资产提供磁盘上的存储加密，而不是通过数字权限管理器 (DRM) 等线路提供加密。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>如果你的资产已经过存储加密，则必须配置资产传送策略。有关详细信息，请参阅<bpt id="p1">[</bpt>配置资产传送策略<ept id="p1">](/documentation/articles/media-services-dotnet-configure-asset-delivery-policy)</ept>。</source>
          <target state="new">如果你的资产已经过存储加密，则必须配置资产传送策略。有关详细信息，请参阅<bpt id="p1">[</bpt>配置资产传送策略<ept id="p1">](/documentation/articles/media-services-dotnet-configure-asset-delivery-policy)</ept>。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>如果指定使用 <bpt id="p1">**</bpt>CommonEncrypted<ept id="p1">**</ept> 选项或 <bpt id="p2">**</bpt>EnvelopeEncypted<ept id="p2">**</ept> 选项加密资产，则需要将资产关联到 <bpt id="p3">**</bpt>ContentKey<ept id="p3">**</ept>。有关详细信息，请参阅<bpt id="p4">[</bpt>如何创建 ContentKey<ept id="p4">](/documentation/articles/media-services-dotnet-create-contentkey)</ept>。</source>
          <target state="new">如果指定使用 <bpt id="p1">**</bpt>CommonEncrypted<ept id="p1">**</ept> 选项或 <bpt id="p2">**</bpt>EnvelopeEncypted<ept id="p2">**</ept> 选项加密资产，则需要将资产关联到 <bpt id="p3">**</bpt>ContentKey<ept id="p3">**</ept>。有关详细信息，请参阅<bpt id="p4">[</bpt>如何创建 ContentKey<ept id="p4">](/documentation/articles/media-services-dotnet-create-contentkey)</ept>。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>如果指定使用 <bpt id="p1">**</bpt>StorageEncrypted<ept id="p1">**</ept> 选项加密资产，适用于 .NET 的媒体服务 SDK 将为资产创建 <bpt id="p2">**</bpt>StorateEncrypted<ept id="p2">**</ept> <bpt id="p3">**</bpt>ContentKey<ept id="p3">**</ept>。</source>
          <target state="new">如果指定使用 <bpt id="p1">**</bpt>StorageEncrypted<ept id="p1">**</ept> 选项加密资产，适用于 .NET 的媒体服务 SDK 将为资产创建 <bpt id="p2">**</bpt>StorateEncrypted<ept id="p2">**</ept> <bpt id="p3">**</bpt>ContentKey<ept id="p3">**</ept>。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>构建流内容的 URL 时，媒体服务会使用 IAssetFile.Name 属性的值（如 http://{AMSAccount}.origin.mediaservices.chinacloudapi.cn/{GUID}/{IAssetFile.Name}/streamingParameters.）。出于这个原因，不允许使用百分号编码。<bpt id="p1">**</bpt>Name<ept id="p1">**</ept> 属性的值不能含有任何以下保留的<bpt id="p2">[</bpt>百分号编码字符<ept id="p2">](http://zh.wikipedia.org/wiki/百分号编码#.E4.BF.9D.E7.95.99.E5.AD.97.E7.AC.A6.E7.9A.84.E7.99.BE.E5.88.86.E5.8F.B7.E7.BC.96.E7.A0.81)</ept>：!*'();:@&amp;=+$,/?%#"。此外，文件扩展名中只能含有一个“.”。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>构建流内容的 URL 时，媒体服务会使用 IAssetFile.Name 属性的值（如 http://{AMSAccount}.origin.mediaservices.chinacloudapi.cn/{GUID}/{IAssetFile.Name}/streamingParameters.）。出于这个原因，不允许使用百分号编码。<bpt id="p1">**</bpt>Name<ept id="p1">**</ept> 属性的值不能含有任何以下保留的<bpt id="p2">[</bpt>百分号编码字符<ept id="p2">](http://zh.wikipedia.org/wiki/百分号编码#.E4.BF.9D.E7.95.99.E5.AD.97.E7.AC.A6.E7.9A.84.E7.99.BE.E5.88.86.E5.8F.B7.E7.BC.96.E7.A0.81)</ept>：!*'();:@&amp;=+$,/?%#"。此外，文件扩展名中只能含有一个“.”。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>本主题说明如何使用媒体服务.NET SDK 以及媒体服务.NET SDK Extensions 将文件上载到媒体服务资产中。</source>
          <target state="new">本主题说明如何使用媒体服务.NET SDK 以及媒体服务.NET SDK Extensions 将文件上载到媒体服务资产中。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>使用媒体服务 .NET SDK 上载单个文件</source>
          <target state="new">使用媒体服务 .NET SDK 上载单个文件</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>以下示例代码使用 .NET SDK 执行以下任务：</source>
          <target state="new">以下示例代码使用 .NET SDK 执行以下任务：</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>创建空资产。</source>
          <target state="new">创建空资产。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>创建要与资产关联的 AssetFile 实例。</source>
          <target state="new">创建要与资产关联的 AssetFile 实例。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>创建用于定义权限以及资产访问持续时间的 AccessPolicy 实例。</source>
          <target state="new">创建用于定义权限以及资产访问持续时间的 AccessPolicy 实例。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>创建用于提供资产访问权限的 Locator 实例。</source>
          <target state="new">创建用于提供资产访问权限的 Locator 实例。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>将单个媒体文件上载到媒体服务。</source>
          <target state="new">将单个媒体文件上载到媒体服务。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>使用媒体服务 .NET SDK 上载多个文件</source>
          <target state="new">使用媒体服务 .NET SDK 上载多个文件</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>以下代码演示如何创建资产及上载多个文件。</source>
          <target state="new">以下代码演示如何创建资产及上载多个文件。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>代码将执行以下操作：</source>
          <target state="new">代码将执行以下操作：</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>使用上一步中定义的 CreateEmptyAsset 方法创建一个空资产。</source>
          <target state="new">使用上一步中定义的 CreateEmptyAsset 方法创建一个空资产。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>创建用于定义权限以及资产访问持续时间的 <bpt id="p1">**</bpt>AccessPolicy<ept id="p1">**</ept> 实例。</source>
          <target state="new">创建用于定义权限以及资产访问持续时间的 <bpt id="p1">**</bpt>AccessPolicy<ept id="p1">**</ept> 实例。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>创建用于提供资产访问权限的 <bpt id="p1">**</bpt>Locator<ept id="p1">**</ept> 实例。</source>
          <target state="new">创建用于提供资产访问权限的 <bpt id="p1">**</bpt>Locator<ept id="p1">**</ept> 实例。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>创建 <bpt id="p1">**</bpt>BlobTransferClient<ept id="p1">**</ept> 实例。此类型表示对 Azure Blob 进行操作的客户端。在此示例中，我们使用客户端来监视上载进度。</source>
          <target state="new">创建 <bpt id="p1">**</bpt>BlobTransferClient<ept id="p1">**</ept> 实例。此类型表示对 Azure Blob 进行操作的客户端。在此示例中，我们使用客户端来监视上载进度。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>枚举指定目录下的所有文件，并为每个文件创建一个 <bpt id="p1">**</bpt>AssetFile<ept id="p1">**</ept> 实例。</source>
          <target state="new">枚举指定目录下的所有文件，并为每个文件创建一个 <bpt id="p1">**</bpt>AssetFile<ept id="p1">**</ept> 实例。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>使用 <bpt id="p1">**</bpt>UploadAsync<ept id="p1">**</ept> 方法将文件上载到媒体服务中。</source>
          <target state="new">使用 <bpt id="p1">**</bpt>UploadAsync<ept id="p1">**</ept> 方法将文件上载到媒体服务中。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> 使用 UploadAsync 方法可确保调用不会阻塞并且文件并行上载。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> 使用 UploadAsync 方法可确保调用不会阻塞并且文件并行上载。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>上载大量资产时，请注意以下事项。</source>
          <target state="new">上载大量资产时，请注意以下事项。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>每个线程创建一个新的 <bpt id="p1">**</bpt>CloudMediaContext<ept id="p1">**</ept> 对象。<bpt id="p2">**</bpt>CloudMediaContext<ept id="p2">**</ept> 类不是线程安全的。</source>
          <target state="new">每个线程创建一个新的 <bpt id="p1">**</bpt>CloudMediaContext<ept id="p1">**</ept> 对象。<bpt id="p2">**</bpt>CloudMediaContext<ept id="p2">**</ept> 类不是线程安全的。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>将 NumberOfConcurrentTransfers 从默认值 2 增加到更高的值（如 5）。设置此属性将影响 <bpt id="p1">**</bpt>CloudMediaContext<ept id="p1">**</ept> 的所有实例。</source>
          <target state="new">将 NumberOfConcurrentTransfers 从默认值 2 增加到更高的值（如 5）。设置此属性将影响 <bpt id="p1">**</bpt>CloudMediaContext<ept id="p1">**</ept> 的所有实例。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>将 ParallelTransferThreadCount 保留为默认值 10。</source>
          <target state="new">将 ParallelTransferThreadCount 保留为默认值 10。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="ingest_in_bulk"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>使用媒体服务 .NET SDK 批量引入资产</source>
          <target state="new"><ph id="ph1">&lt;a id="ingest_in_bulk"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>使用媒体服务 .NET SDK 批量引入资产</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>上载大型资产文件可能在资产创建过程中形成瓶颈。批量引入资产（简称“批量引入”）涉及到将资产创建过程与上载过程分离。若要使用批量引入方法，请创建一个描述资产及其关联文件的清单 (IngestManifest)。然后，你可以使用所选上载方法将关联的文件上载到该清单的 Blob 容器。Azure 媒体服务将会监视与清单关联的 Blob 容器。文件上载到 Blob 容器后，Azure 媒体服务将基于清单 (IngestManifestAsset) 中资产的配置完成资产创建过程。</source>
          <target state="new">上载大型资产文件可能在资产创建过程中形成瓶颈。批量引入资产（简称“批量引入”）涉及到将资产创建过程与上载过程分离。若要使用批量引入方法，请创建一个描述资产及其关联文件的清单 (IngestManifest)。然后，你可以使用所选上载方法将关联的文件上载到该清单的 Blob 容器。Azure 媒体服务将会监视与清单关联的 Blob 容器。文件上载到 Blob 容器后，Azure 媒体服务将基于清单 (IngestManifestAsset) 中资产的配置完成资产创建过程。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>若要创建新的 IngestManifest，请调用通过 CloudMediaContext 中的 IngestManifests 集合公开的 Create 方法。此方法将使用你提供的清单名称创建一个新的 IngestManifest。</source>
          <target state="new">若要创建新的 IngestManifest，请调用通过 CloudMediaContext 中的 IngestManifests 集合公开的 Create 方法。此方法将使用你提供的清单名称创建一个新的 IngestManifest。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>创建将与批量 IngestManifest 关联的资产。在要批量引入的资产上配置所需的加密选项。</source>
          <target state="new">创建将与批量 IngestManifest 关联的资产。在要批量引入的资产上配置所需的加密选项。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>一个 IngestManifestAsset 将一个资产与一个用于批量引入的批量 IngestManifest 相关联。它还关联构成每个资产的 AssetFiles。若要创建 IngestManifestAsset，请使用服务器上下文中的 Create 方法。</source>
          <target state="new">一个 IngestManifestAsset 将一个资产与一个用于批量引入的批量 IngestManifest 相关联。它还关联构成每个资产的 AssetFiles。若要创建 IngestManifestAsset，请使用服务器上下文中的 Create 方法。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>以下示例演示如何添加两个新的 IngestManifestAssets，这两项将以前创建的两个资产关联到批量引入清单。每个 IngestManifestAsset 还关联一组将在批量引入期间为每个资产上载的文件。</source>
          <target state="new">以下示例演示如何添加两个新的 IngestManifestAssets，这两项将以前创建的两个资产关联到批量引入清单。每个 IngestManifestAsset 还关联一组将在批量引入期间为每个资产上载的文件。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>可以使用任何能够将资产文件上载到 Blob 存储容器 URI（由 IngestManifest 的 <bpt id="p1">**</bpt>IIngestManifest.BlobStorageUriForUpload<ept id="p1">**</ept> 属性提供）的高速客户端应用程序。一个明显的高速上载服务就是<bpt id="p2">[</bpt>适用于 Azure 应用程序的点播 Aspera<ept id="p2">](https://datamarket.azure.com/application/2cdbc511-cb12-4715-9871-c7e7fbbb82a6)</ept>。你还可以编写代码来上载资产文件，如以下代码示例所示。</source>
          <target state="new">可以使用任何能够将资产文件上载到 Blob 存储容器 URI（由 IngestManifest 的 <bpt id="p1">**</bpt>IIngestManifest.BlobStorageUriForUpload<ept id="p1">**</ept> 属性提供）的高速客户端应用程序。一个明显的高速上载服务就是<bpt id="p2">[</bpt>适用于 Azure 应用程序的点播 Aspera<ept id="p2">](https://datamarket.azure.com/application/2cdbc511-cb12-4715-9871-c7e7fbbb82a6)</ept>。你还可以编写代码来上载资产文件，如以下代码示例所示。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>以下代码示例中显示了用于上载本主题中使用的示例资源文件的代码。</source>
          <target state="new">以下代码示例中显示了用于上载本主题中使用的示例资源文件的代码。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>可以通过轮询 <bpt id="p1">**</bpt>IngestManifest<ept id="p1">**</ept> 的 Statistics 属性来确定与 <bpt id="p2">**</bpt>IngestManifest<ept id="p2">**</ept> 关联的所有资产的批量引入进度。若要更新进度信息，每次轮询 Statistics 属性时，都必须使用新的 <bpt id="p3">**</bpt>CloudMediaContext<ept id="p3">**</ept>。</source>
          <target state="new">可以通过轮询 <bpt id="p1">**</bpt>IngestManifest<ept id="p1">**</ept> 的 Statistics 属性来确定与 <bpt id="p2">**</bpt>IngestManifest<ept id="p2">**</ept> 关联的所有资产的批量引入进度。若要更新进度信息，每次轮询 Statistics 属性时，都必须使用新的 <bpt id="p3">**</bpt>CloudMediaContext<ept id="p3">**</ept>。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>以下示例演示如何按 <bpt id="p1">**</bpt>ID<ept id="p1">**</ept> 轮询 IngestManifest。</source>
          <target state="new">以下示例演示如何按 <bpt id="p1">**</bpt>ID<ept id="p1">**</ept> 轮询 IngestManifest。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>使用 .NET SDK Extensions 上载文件</source>
          <target state="new">使用 .NET SDK Extensions 上载文件</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>以下示例演示如何使用 .NET SDK Extensions 上载单个文件。在此情况下，将使用 <bpt id="p1">**</bpt>CreateFromFile<ept id="p1">**</ept> 方法，但也可以使用异步版本 (<bpt id="p2">**</bpt>CreateFromFileAsync<ept id="p2">**</ept>)。<bpt id="p3">**</bpt>CreateFromFile<ept id="p3">**</ept> 方法可让你指定文件名、加密选项和回调，以报告文件的上载进度。</source>
          <target state="new">以下示例演示如何使用 .NET SDK Extensions 上载单个文件。在此情况下，将使用 <bpt id="p1">**</bpt>CreateFromFile<ept id="p1">**</ept> 方法，但也可以使用异步版本 (<bpt id="p2">**</bpt>CreateFromFileAsync<ept id="p2">**</ept>)。<bpt id="p3">**</bpt>CreateFromFile<ept id="p3">**</ept> 方法可让你指定文件名、加密选项和回调，以报告文件的上载进度。</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>以下示例将调用 UploadFile 函数，并指定存储加密作为资产创建选项。</source>
          <target state="new">以下示例将调用 UploadFile 函数，并指定存储加密作为资产创建选项。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>将资产上载到媒体服务后，请转到<bpt id="p1">[</bpt>如何获取媒体处理器<ept id="p1">][]</ept>主题。</source>
          <target state="new">将资产上载到媒体服务后，请转到<bpt id="p1">[</bpt>如何获取媒体处理器<ept id="p1">][]</ept>主题。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>