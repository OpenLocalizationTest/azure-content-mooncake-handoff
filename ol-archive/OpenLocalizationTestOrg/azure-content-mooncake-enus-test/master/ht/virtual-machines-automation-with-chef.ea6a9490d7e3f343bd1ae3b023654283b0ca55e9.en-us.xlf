<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">edaa72f94919d78454f036d35cfe309c13cae44f</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>使用 Chef 部署 Azure 虚拟机 | Azure</source>
          <target state="new">使用 Chef 部署 Azure 虚拟机 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何使用 Chef 在 Azure 中自动执行虚拟机的部署和配置</source>
          <target state="new">了解如何使用 Chef 在 Azure 中自动执行虚拟机的部署和配置</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>使用 Chef 自动执行 Azure 虚拟机部署</source>
          <target state="new">使用 Chef 自动执行 Azure 虚拟机部署</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Chef 是一个强大的工具，用于提供自动化和所需的状态配置。</source>
          <target state="new">Chef 是一个强大的工具，用于提供自动化和所需的状态配置。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>使用我们的最新 cloud-api 版本，Chef 提供了与 Azure 的无缝集成，使得你能够通过单个命令设置和部署配置状态。</source>
          <target state="new">使用我们的最新 cloud-api 版本，Chef 提供了与 Azure 的无缝集成，使得你能够通过单个命令设置和部署配置状态。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>在本文中，我将向你展示如何设置你的 Chef 环境来设置 Azure 虚拟机，并引导你完成创建一个策略或“食谱”并将此指南部署到 Azure VM 的过程。</source>
          <target state="new">在本文中，我将向你展示如何设置你的 Chef 环境来设置 Azure 虚拟机，并引导你完成创建一个策略或“食谱”并将此指南部署到 Azure VM 的过程。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>让我们开始吧！</source>
          <target state="new">让我们开始吧！</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Chef 基础知识</source>
          <target state="new">Chef 基础知识</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>在开始之前，建议你首先熟悉一下 Chef 的基本概念。<ph id="ph1">&lt;a href="http://www.chef.io/chef" target="_blank"&gt;</ph>此处<ph id="ph2">&lt;/a&gt;</ph>有大量资料，建议你在尝试此演练之前快速阅读一下。不过，在我们开始之前，我会扼要重述一下基础知识。</source>
          <target state="new">在开始之前，建议你首先熟悉一下 Chef 的基本概念。<ph id="ph1">&lt;a href="http://www.chef.io/chef" target="_blank"&gt;</ph>此处<ph id="ph2">&lt;/a&gt;</ph>有大量资料，建议你在尝试此演练之前快速阅读一下。不过，在我们开始之前，我会扼要重述一下基础知识。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>下图描绘了概要的 Chef 体系结构。</source>
          <target state="new">下图描绘了概要的 Chef 体系结构。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Chef 有三个主要的体系结构组件。<bpt id="p1">**</bpt>Chef 服务器、Chef 客户端（节点）<ept id="p1">**</ept>和 <bpt id="p2">**</bpt>Chef 工作站<ept id="p2">**</ept>。</source>
          <target state="new">Chef 有三个主要的体系结构组件。<bpt id="p1">**</bpt>Chef 服务器、Chef 客户端（节点）<ept id="p1">**</ept>和 <bpt id="p2">**</bpt>Chef 工作站<ept id="p2">**</ept>。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Chef 服务器<ept id="p1">**</ept>是我们的管理点，对于 Chef 服务器有两种选择：托管解决方案和本地解决方案。我们将使用托管解决方案。</source>
          <target state="new"><bpt id="p1">**</bpt>Chef 服务器<ept id="p1">**</ept>是我们的管理点，对于 Chef 服务器有两种选择：托管解决方案和本地解决方案。我们将使用托管解决方案。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Chef 客户端（节点）<ept id="p1">**</ept>是位于你在管理的服务器上的代理。</source>
          <target state="new"><bpt id="p1">**</bpt>Chef 客户端（节点）<ept id="p1">**</ept>是位于你在管理的服务器上的代理。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Chef 工作站<ept id="p1">**</ept>是我们的管理工作站，我们将在其中创建策略并执行管理命令。我们从 Chef 工作站运行<bpt id="p2">**</bpt>“knife”<ept id="p2">**</ept>命令来管理我们的基础结构。</source>
          <target state="new"><bpt id="p1">**</bpt>Chef 工作站<ept id="p1">**</ept>是我们的管理工作站，我们将在其中创建策略并执行管理命令。我们从 Chef 工作站运行<bpt id="p2">**</bpt>“knife”<ept id="p2">**</ept>命令来管理我们的基础结构。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>我们还引入了“食谱”和“配方”的概念。它们实际上是我们定义并应用于我们的服务器的策略。</source>
          <target state="new">我们还引入了“食谱”和“配方”的概念。它们实际上是我们定义并应用于我们的服务器的策略。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>准备工作站</source>
          <target state="new">准备工作站</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>首先，让我们准备工作站。我使用的是标准 Windows 工作站。我们需要创建一个目录来存储我们的配置文件和食谱。</source>
          <target state="new">首先，让我们准备工作站。我使用的是标准 Windows 工作站。我们需要创建一个目录来存储我们的配置文件和食谱。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>首先，创建一个名为 <bpt id="p1">**</bpt>C:\\chef<ept id="p1">**</ept> 的目录。</source>
          <target state="new">首先，创建一个名为 <bpt id="p1">**</bpt>C:\\chef<ept id="p1">**</ept> 的目录。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>然后，创建另一个目录 <bpt id="p1">**</bpt>c:\\chef\\cookbooks<ept id="p1">**</ept></source>
          <target state="new">然后，创建另一个目录 <bpt id="p1">**</bpt>c:\\chef\\cookbooks<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>现在，我们需要下载 Azure 设置文件，以便 Chef 可以与我们的 Azure 订阅进行通信。</source>
          <target state="new">现在，我们需要下载 Azure 设置文件，以便 Chef 可以与我们的 Azure 订阅进行通信。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>从此处下载你的发布设置：<ph id="ph1">&lt;a href="https://manage.windowsazure.cn/publishsettings/" target="_blank"&gt;</ph>https://manage.windowsazure.cn/publishsettings/<ph id="ph2">&lt;/a&gt;</ph></source>
          <target state="new">从此处下载你的发布设置：<ph id="ph1">&lt;a href="https://manage.windowsazure.cn/publishsettings/" target="_blank"&gt;</ph>https://manage.windowsazure.cn/publishsettings/<ph id="ph2">&lt;/a&gt;</ph></target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>将发布设置文件保存到 <bpt id="p1">**</bpt>C:\\chef<ept id="p1">**</ept> 中</source>
          <target state="new">将发布设置文件保存到 <bpt id="p1">**</bpt>C:\\chef<ept id="p1">**</ept> 中</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>创建托管的 Chef 帐户</source>
          <target state="new">创建托管的 Chef 帐户</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>注册托管的 Chef 帐户：<ph id="ph1">&lt;a href="https://manage.chef.io/signup" target="_blank"&gt;</ph>https://manage.chef.io/signup<ph id="ph2">&lt;/a&gt;</ph></source>
          <target state="new">注册托管的 Chef 帐户：<ph id="ph1">&lt;a href="https://manage.chef.io/signup" target="_blank"&gt;</ph>https://manage.chef.io/signup<ph id="ph2">&lt;/a&gt;</ph></target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>在注册过程中，会要求你创建一个新组织。</source>
          <target state="new">在注册过程中，会要求你创建一个新组织。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>在创建你的组织后，下载初学者工具包。</source>
          <target state="new">在创建你的组织后，下载初学者工具包。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>注意：<ept id="p1">**</ept>如果你收到提示，警告你将重置你的密钥，可以继续操作，因为我们尚未配置现有基础结构。</source>
          <target state="new"><bpt id="p1">**</bpt>注意：<ept id="p1">**</ept>如果你收到提示，警告你将重置你的密钥，可以继续操作，因为我们尚未配置现有基础结构。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>此初学者工具包 zip 文件包含你的组织的配置文件和密钥。</source>
          <target state="new">此初学者工具包 zip 文件包含你的组织的配置文件和密钥。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>配置 Chef 工作站</source>
          <target state="new">配置 Chef 工作站</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>将 chef-starter.zip 的内容提取到 <bpt id="p1">**</bpt>C:\\chef<ept id="p1">**</ept></source>
          <target state="new">将 chef-starter.zip 的内容提取到 <bpt id="p1">**</bpt>C:\\chef<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>将 <bpt id="p1">**</bpt>chef-starter\\chef-repo.chef<ept id="p1">**</ept> 下的所有文件都复制到 <bpt id="p2">**</bpt>c:\\chef<ept id="p2">**</ept> 中</source>
          <target state="new">将 <bpt id="p1">**</bpt>chef-starter\\chef-repo.chef<ept id="p1">**</ept> 下的所有文件都复制到 <bpt id="p2">**</bpt>c:\\chef<ept id="p2">**</ept> 中</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>你的目录现在看起来应当与下图类似：</source>
          <target state="new">你的目录现在看起来应当与下图类似：</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>你现在应当有 4 个文件，包括位于根目录 c:\\chef 中的 Azure 发布文件</source>
          <target state="new">你现在应当有 4 个文件，包括位于根目录 c:\\chef 中的 Azure 发布文件</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>PEM 文件包含你的组织和用于通信的管理私钥，而 <bpt id="p1">**</bpt>knife.rb<ept id="p1">**</ept> 文件包含你的 knife 配置。你将需要编辑 <bpt id="p2">**</bpt>knife.rb<ept id="p2">**</ept> 文件。</source>
          <target state="new">PEM 文件包含你的组织和用于通信的管理私钥，而 <bpt id="p1">**</bpt>knife.rb<ept id="p1">**</ept> 文件包含你的 knife 配置。你将需要编辑 <bpt id="p2">**</bpt>knife.rb<ept id="p2">**</ept> 文件。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>在你选择的编辑器中打开该文件并修改“cookbook_path”：从路径中删除 /../，使其如下所示：</source>
          <target state="new">在你选择的编辑器中打开该文件并修改“cookbook_path”：从路径中删除 /../，使其如下所示：</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>另外，请添加以下行以反映你的 Azure 发布设置文件的名称。</source>
          <target state="new">另外，请添加以下行以反映你的 Azure 发布设置文件的名称。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>你的 knife.rb 文件现在看起来应当如下所示：</source>
          <target state="new">你的 knife.rb 文件现在看起来应当如下所示：</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>这些行将确保 Knife 在执行 Azure 操作期间引用 c:\\chef\\cookbooks 下的 cookbooks 目录并且还使用我们的 Azure 发布设置文件。</source>
          <target state="new">这些行将确保 Knife 在执行 Azure 操作期间引用 c:\\chef\\cookbooks 下的 cookbooks 目录并且还使用我们的 Azure 发布设置文件。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>安装 Chef 开发工具包</source>
          <target state="new">安装 Chef 开发工具包</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>接下来，下载并安装 ChefDK（Chef 开发工具包）来设置你的 Chef 工作站。</source>
          <target state="new">接下来，下载并安装 ChefDK（Chef 开发工具包）来设置你的 Chef 工作站。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a href="http://downloads.getchef.com/chef-dk/windows" target="_blank"&gt;</ph>http://downloads.getchef.com/chef-dk/windows<ph id="ph2">&lt;/a&gt;</ph></source>
          <target state="new"><ph id="ph1">&lt;a href="http://downloads.getchef.com/chef-dk/windows" target="_blank"&gt;</ph>http://downloads.getchef.com/chef-dk/windows<ph id="ph2">&lt;/a&gt;</ph></target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>这简单明了。让其安装在默认位置 c:\\opscode 中。此安装将花费大约 10 分钟时间。</source>
          <target state="new">这简单明了。让其安装在默认位置 c:\\opscode 中。此安装将花费大约 10 分钟时间。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>确认你的 PATH 变量包含以下条目：C:\\opscode\\chefdk\\bin;C:\\opscode\\chefdk\\embedded\\bin;c:\\users\\yourusername.chefdk\\gem\\ruby\\2.0.0\\bin</source>
          <target state="new">确认你的 PATH 变量包含以下条目：C:\\opscode\\chefdk\\bin;C:\\opscode\\chefdk\\embedded\\bin;c:\\users\\yourusername.chefdk\\gem\\ruby\\2.0.0\\bin</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>如果未包含，请务必添加这些路径！</source>
          <target state="new">如果未包含，请务必添加这些路径！</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>请注意，该路径的顺序非常重要！<ept id="p1">**</ept> 如果你的 opscode 路径未采用正确的顺序，你将会遇到问题。</source>
          <target state="new"><bpt id="p1">**</bpt>请注意，该路径的顺序非常重要！<ept id="p1">**</ept> 如果你的 opscode 路径未采用正确的顺序，你将会遇到问题。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>在继续操作之前重新启动你的工作站。</source>
          <target state="new">在继续操作之前重新启动你的工作站。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>接下来，我们将安装 Knife Azure 扩展。这将为 Knife 提供“Azure 插件”。</source>
          <target state="new">接下来，我们将安装 Knife Azure 扩展。这将为 Knife 提供“Azure 插件”。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>运行以下命令：</source>
          <target state="new">运行以下命令：</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>注意：<ept id="p1">**</ept>–pre 参数确保你收到 knife azure 插件的最新 RC 版本，该版本提供对最新 API 集的访问。</source>
          <target state="new"><bpt id="p1">**</bpt>注意：<ept id="p1">**</ept>–pre 参数确保你收到 knife azure 插件的最新 RC 版本，该版本提供对最新 API 集的访问。</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>同时，可能还会安装许多依赖项。</source>
          <target state="new">同时，可能还会安装许多依赖项。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>若要确保所有项都已正确配置，请运行：</source>
          <target state="new">若要确保所有项都已正确配置，请运行：</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>如果所有项都已正确配置，你会看到可用 Azure 映像的列表滚动显示。</source>
          <target state="new">如果所有项都已正确配置，你会看到可用 Azure 映像的列表滚动显示。</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>祝贺你。工作站已设置！</source>
          <target state="new">祝贺你。工作站已设置！</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>创建食谱</source>
          <target state="new">创建食谱</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>食谱由 Chef 用来定义你希望在托管客户端上执行的一组命令。创建食谱简单明了，我们将使用命令 chef generate cookbook 来生成我们的食谱模板。我将像自动部署 IIS 的策略一样调用我的食谱 Web 服务器。</source>
          <target state="new">食谱由 Chef 用来定义你希望在托管客户端上执行的一组命令。创建食谱简单明了，我们将使用命令 chef generate cookbook 来生成我们的食谱模板。我将像自动部署 IIS 的策略一样调用我的食谱 Web 服务器。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>在 C:\\Chef 目录下运行以下命令：</source>
          <target state="new">在 C:\\Chef 目录下运行以下命令：</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>这将在 <bpt id="p1">**</bpt>C:\\Chef\\cookbooks\\webserver<ept id="p1">**</ept> 目录下生成一组文件。 现在，我们需要定义我们希望 Chef 客户端在托管 VM 上执行的一组命令。</source>
          <target state="new">这将在 <bpt id="p1">**</bpt>C:\\Chef\\cookbooks\\webserver<ept id="p1">**</ept> 目录下生成一组文件。 现在，我们需要定义我们希望 Chef 客户端在托管 VM 上执行的一组命令。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>这些命令存储在文件 <bpt id="p1">**</bpt>default.rb<ept id="p1">**</ept> 中。 在此文件中，我将定义一组命令来安装 IIS、启动 IIS 并将模板文件复制到 wwwroot 文件夹中。</source>
          <target state="new">这些命令存储在文件 <bpt id="p1">**</bpt>default.rb<ept id="p1">**</ept> 中。 在此文件中，我将定义一组命令来安装 IIS、启动 IIS 并将模板文件复制到 wwwroot 文件夹中。</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>修改 <bpt id="p1">**</bpt>C:\\chef\\cookbooks\\webserver\\recipes\\default.rb<ept id="p1">**</ept> 并添加以下行：</source>
          <target state="new">修改 <bpt id="p1">**</bpt>C:\\chef\\cookbooks\\webserver\\recipes\\default.rb<ept id="p1">**</ept> 并添加以下行：</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>在完成后，保存该文件。</source>
          <target state="new">在完成后，保存该文件。</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>创建模板</source>
          <target state="new">创建模板</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>如上文提到的那样，我们需要生成一个模板文件，该文件将用作我们的 default.html 页面。</source>
          <target state="new">如上文提到的那样，我们需要生成一个模板文件，该文件将用作我们的 default.html 页面。</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>执行以下命令来生成模板：</source>
          <target state="new">执行以下命令来生成模板：</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>现在导航到文件 <bpt id="p1">**</bpt>C:\\chef\\cookbooks\\webserver\\templates\\default\\Default.htm.erb<ept id="p1">**</ept> 并编辑该文件。</source>
          <target state="new">现在导航到文件 <bpt id="p1">**</bpt>C:\\chef\\cookbooks\\webserver\\templates\\default\\Default.htm.erb<ept id="p1">**</ept> 并编辑该文件。</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>添加一些简单的“Hello World”html 代码并保存该文件。</source>
          <target state="new">添加一些简单的“Hello World”html 代码并保存该文件。</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>将食谱上载到 Chef 服务器</source>
          <target state="new">将食谱上载到 Chef 服务器</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>在此步骤中，我们将制作我们已在本地计算机上创建的食谱的副本并将其上载到 Chef 托管服务器。上载完成后，食谱将显示在“策略”选项卡下。</source>
          <target state="new">在此步骤中，我们将制作我们已在本地计算机上创建的食谱的副本并将其上载到 Chef 托管服务器。上载完成后，食谱将显示在“策略”选项卡下。</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>使用 Knife Azure 部署虚拟机</source>
          <target state="new">使用 Knife Azure 部署虚拟机</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>现在，我们将部署 Azure 虚拟机并应用“Webserver”食谱，该食谱将安装我们的 IIS Web 服务和默认网页。</source>
          <target state="new">现在，我们将部署 Azure 虚拟机并应用“Webserver”食谱，该食谱将安装我们的 IIS Web 服务和默认网页。</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>若要执行此操作，请使用 <bpt id="p1">**</bpt>knife azure server create<ept id="p1">**</ept> 命令。</source>
          <target state="new">若要执行此操作，请使用 <bpt id="p1">**</bpt>knife azure server create<ept id="p1">**</ept> 命令。</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>下面是该命令的示例：</source>
          <target state="new">下面是该命令的示例：</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>各个参数不言自明。替换你的特定变量并运行。</source>
          <target state="new">各个参数不言自明。替换你的特定变量并运行。</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>注意：<ept id="p1">**</ept>通过命令行，我还通过使用 –tcp-endpoints 参数自动执行终结点网络筛选器规则。我已打开端口 80 和 3389 来提供对我的网页和 RDP 会话的访问。</source>
          <target state="new"><bpt id="p1">**</bpt>注意：<ept id="p1">**</ept>通过命令行，我还通过使用 –tcp-endpoints 参数自动执行终结点网络筛选器规则。我已打开端口 80 和 3389 来提供对我的网页和 RDP 会话的访问。</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>在运行该命令后，访问 Azure 门户，你会看到你的计算机已开始设置。</source>
          <target state="new">在运行该命令后，访问 Azure 门户，你会看到你的计算机已开始设置。</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>返回到命令提示符：</source>
          <target state="new">返回到命令提示符：</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>在部署完成后，我们应当能够通过端口 80 连接到 web 服务，因为我们在通过 knife azure 命令设置 VM 时已打开了该端口。因为此 VM 是我的云服务中的唯一 VM，所以我将使用云服务 URL 来连接它。</source>
          <target state="new">在部署完成后，我们应当能够通过端口 80 连接到 web 服务，因为我们在通过 knife azure 命令设置 VM 时已打开了该端口。因为此 VM 是我的云服务中的唯一 VM，所以我将使用云服务 URL 来连接它。</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>如你所见，我的 html 代码富有创造性:)</source>
          <target state="new">如你所见，我的 html 代码富有创造性:)</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>不要忘记，我们还可以从 Azure 门户使用端口 3389 通过 RDP 会话进行连接。</source>
          <target state="new">不要忘记，我们还可以从 Azure 门户使用端口 3389 通过 RDP 会话进行连接。</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>希望这对你有所帮助！ 现在就使用 Azure 开始你的基础结构即代码之旅吧！</source>
          <target state="new">希望这对你有所帮助！ 现在就使用 Azure 开始你的基础结构即代码之旅吧！</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>