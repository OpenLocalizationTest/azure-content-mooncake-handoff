<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5c476ccc35c5e4f3fd1888013003111af45dada</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>分片映射管理 | Azure</source>
          <target state="new">分片映射管理 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>如何使用弹性数据库客户端库 ShardMapManager</source>
          <target state="new">如何使用弹性数据库客户端库 ShardMapManager</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>分片映射管理</source>
          <target state="new">分片映射管理</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>使用<bpt id="p1">[</bpt>弹性数据库客户端库<ept id="p1">](/documentation/articles/sql-database-elastic-database-client-library)</ept>管理分片应用程序。在分片数据库环境中，<bpt id="p2">[</bpt><bpt id="p3">**</bpt>分片映射<ept id="p3">**</ept><ept id="p2">](/documentation/articles/sql-database-elastic-scale-glossary)</ept>将维护相关信息，以便应用程序可以根据<bpt id="p4">**</bpt>分片键<ept id="p4">**</ept>的值连接到相应的数据库。了解如何构建这些映射对于分片映射管理至关重要。</source>
          <target state="new">使用<bpt id="p1">[</bpt>弹性数据库客户端库<ept id="p1">](/documentation/articles/sql-database-elastic-database-client-library)</ept>管理分片应用程序。在分片数据库环境中，<bpt id="p2">[</bpt><bpt id="p3">**</bpt>分片映射<ept id="p3">**</ept><ept id="p2">](/documentation/articles/sql-database-elastic-scale-glossary)</ept>将维护相关信息，以便应用程序可以根据<bpt id="p4">**</bpt>分片键<ept id="p4">**</ept>的值连接到相应的数据库。了解如何构建这些映射对于分片映射管理至关重要。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>分片映射</source>
          <target state="new">分片映射</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>支持的分片键的 .Net 类型</source>
          <target state="new">支持的分片键的 .Net 类型</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>灵活扩展支持将以下 .Net Framework 类型用作分片键：</source>
          <target state="new">灵活扩展支持将以下 .Net Framework 类型用作分片键：</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>integer</source>
          <target state="new">integer</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>long</source>
          <target state="new">long</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>guid</source>
          <target state="new">guid</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>字节</source>
          <target state="new">字节</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>datetime</source>
          <target state="new">datetime</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>timespan</source>
          <target state="new">timespan</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>datetimeoffset</source>
          <target state="new">datetimeoffset</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>列表和范围分片映射</source>
          <target state="new">列表和范围分片映射</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>使用<bpt id="p1">**</bpt>各个分片键值的列表<ept id="p1">**</ept>或<bpt id="p2">**</bpt>分片键值的范围<ept id="p2">**</ept>可构造分片映射。</source>
          <target state="new">使用<bpt id="p1">**</bpt>各个分片键值的列表<ept id="p1">**</ept>或<bpt id="p2">**</bpt>分片键值的范围<ept id="p2">**</ept>可构造分片映射。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>列表分片映射</source>
          <target state="new">列表分片映射</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>分片<ept id="p1">**</ept>包含 <bpt id="p2">**</bpt>shardlet<ept id="p2">**</ept>，shardlet 到分片的映射由分片映射维护。<bpt id="p3">**</bpt>列表分片映射<ept id="p3">**</ept>是可标识 shardlet 的单独键值和可用作分片的数据库之间的关联项。<bpt id="p4">**</bpt>列表映射<ept id="p4">**</ept>是显式的（例如，键 1 映射到数据库 A），不同的键值可以映射到同一数据库（键值 3 和 6 可同时引用数据库 B）。</source>
          <target state="new"><bpt id="p1">**</bpt>分片<ept id="p1">**</ept>包含 <bpt id="p2">**</bpt>shardlet<ept id="p2">**</ept>，shardlet 到分片的映射由分片映射维护。<bpt id="p3">**</bpt>列表分片映射<ept id="p3">**</ept>是可标识 shardlet 的单独键值和可用作分片的数据库之间的关联项。<bpt id="p4">**</bpt>列表映射<ept id="p4">**</ept>是显式的（例如，键 1 映射到数据库 A），不同的键值可以映射到同一数据库（键值 3 和 6 可同时引用数据库 B）。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>键</source>
          <target state="new">键</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>分片位置</source>
          <target state="new">分片位置</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="new">1</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Database\_A</source>
          <target state="new">Database\_A</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="new">3</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Database\_B</source>
          <target state="new">Database\_B</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="new">4</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Database\_C</source>
          <target state="new">Database\_C</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>6</source>
          <target state="new">6</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Database\_B</source>
          <target state="new">Database\_B</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>范围分片映射</source>
          <target state="new">范围分片映射</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>在<bpt id="p1">**</bpt>范围分片映射<ept id="p1">**</ept>中，键范围由 <bpt id="p2">**</bpt>[Low Value, High Value)<ept id="p2">**</ept> 对描述，其中 <bpt id="p3">*</bpt>Low Value<ept id="p3">*</ept> 是范围中的最小键，而 <bpt id="p4">*</bpt>High Value<ept id="p4">*</ept> 是第一个大于范围的值。</source>
          <target state="new">在<bpt id="p1">**</bpt>范围分片映射<ept id="p1">**</ept>中，键范围由 <bpt id="p2">**</bpt>[Low Value, High Value)<ept id="p2">**</ept> 对描述，其中 <bpt id="p3">*</bpt>Low Value<ept id="p3">*</ept> 是范围中的最小键，而 <bpt id="p4">*</bpt>High Value<ept id="p4">*</ept> 是第一个大于范围的值。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>例如，<bpt id="p1">**</bpt>[0, 100)<ept id="p1">**</ept> 包括所有大于或等于 0 且小于 100 的整数。请注意，多个范围可指向同一数据库，并且支持多个不连续的范围（例如，在下面的示例中，[100,200) 和 [400,600) 可同时指向数据库 C。）</source>
          <target state="new">例如，<bpt id="p1">**</bpt>[0, 100)<ept id="p1">**</ept> 包括所有大于或等于 0 且小于 100 的整数。请注意，多个范围可指向同一数据库，并且支持多个不连续的范围（例如，在下面的示例中，[100,200) 和 [400,600) 可同时指向数据库 C。）</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>键</source>
          <target state="new">键</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>分片位置</source>
          <target state="new">分片位置</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>[1,50)</source>
          <target state="new">[1,50)</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Database\_A</source>
          <target state="new">Database\_A</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>[50,100)</source>
          <target state="new">[50,100)</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Database\_B</source>
          <target state="new">Database\_B</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>[100,200)</source>
          <target state="new">[100,200)</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Database\_C</source>
          <target state="new">Database\_C</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>[400,600)</source>
          <target state="new">[400,600)</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Database\_C</source>
          <target state="new">Database\_C</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>上面所示的每个表都是 <bpt id="p1">**</bpt>ShardMap<ept id="p1">**</ept> 对象的概念性示例。每一行都是单个 <bpt id="p2">**</bpt>PointMapping<ept id="p2">**</ept>（适用于列表分片映射）对象或 <bpt id="p3">**</bpt>RangeMapping<ept id="p3">**</ept>（适用于范围分片映射）对象的简化示例。</source>
          <target state="new">上面所示的每个表都是 <bpt id="p1">**</bpt>ShardMap<ept id="p1">**</ept> 对象的概念性示例。每一行都是单个 <bpt id="p2">**</bpt>PointMapping<ept id="p2">**</ept>（适用于列表分片映射）对象或 <bpt id="p3">**</bpt>RangeMapping<ept id="p3">**</ept>（适用于范围分片映射）对象的简化示例。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>分片映射管理器</source>
          <target state="new">分片映射管理器</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>在客户端库中，分片映射管理器是分片映射的集合。由 <bpt id="p1">**</bpt>ShardMapManager<ept id="p1">**</ept> .Net 对象管理的数据保存在以下三个位置中：</source>
          <target state="new">在客户端库中，分片映射管理器是分片映射的集合。由 <bpt id="p1">**</bpt>ShardMapManager<ept id="p1">**</ept> .Net 对象管理的数据保存在以下三个位置中：</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>全局分片映射 (GSM)<ept id="p1">**</ept>：当你创建 <bpt id="p2">**</bpt>ShardMapManager<ept id="p2">**</ept> 时，可为其所有的分片映射指定某个数据库以用作存储库。将自动创建特殊的表和存储过程以管理信息。这通常是小型数据库且可轻松进行访问，但不应用于满足应用程序的其他需求。这些表位于名为 <bpt id="p3">**</bpt>\_\_ShardManagement<ept id="p3">**</ept> 的特殊架构中。</source>
          <target state="new"><bpt id="p1">**</bpt>全局分片映射 (GSM)<ept id="p1">**</ept>：当你创建 <bpt id="p2">**</bpt>ShardMapManager<ept id="p2">**</ept> 时，可为其所有的分片映射指定某个数据库以用作存储库。将自动创建特殊的表和存储过程以管理信息。这通常是小型数据库且可轻松进行访问，但不应用于满足应用程序的其他需求。这些表位于名为 <bpt id="p3">**</bpt>\_\_ShardManagement<ept id="p3">**</ept> 的特殊架构中。</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>局部分片映射 (LSM)<ept id="p1">**</ept>：将修改你在分片映射内指定为分片的每个数据库，以包含多个小表和特殊存储过程，其中包括特定于该分片的分片映射信息并对其进行管理。对于 GSM 中的信息而言，该信息是冗余的，但应用程序通过该信息可验证缓存的分片映射信息，而无需将所有负载置于 GSM 上；应用程序可使用 LSM 确定缓存的映射是否仍然有效。与每个分片上的 LSM 对应的表都位于架构 <bpt id="p2">**</bpt>\_\_ShardManagement<ept id="p2">**</ept> 中。</source>
          <target state="new"><bpt id="p1">**</bpt>局部分片映射 (LSM)<ept id="p1">**</ept>：将修改你在分片映射内指定为分片的每个数据库，以包含多个小表和特殊存储过程，其中包括特定于该分片的分片映射信息并对其进行管理。对于 GSM 中的信息而言，该信息是冗余的，但应用程序通过该信息可验证缓存的分片映射信息，而无需将所有负载置于 GSM 上；应用程序可使用 LSM 确定缓存的映射是否仍然有效。与每个分片上的 LSM 对应的表都位于架构 <bpt id="p2">**</bpt>\_\_ShardManagement<ept id="p2">**</ept> 中。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>应用程序缓存<ept id="p1">**</ept>：每个用于访问 <bpt id="p2">**</bpt>ShardMapManager<ept id="p2">**</ept> 对象的应用程序实例都可维护其映射的本地内存中缓存。它存储最近检索到的路由信息。</source>
          <target state="new"><bpt id="p1">**</bpt>应用程序缓存<ept id="p1">**</ept>：每个用于访问 <bpt id="p2">**</bpt>ShardMapManager<ept id="p2">**</ept> 对象的应用程序实例都可维护其映射的本地内存中缓存。它存储最近检索到的路由信息。</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>构造 ShardMapManager</source>
          <target state="new">构造 ShardMapManager</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>使用工厂模式实例化应用程序中的 <bpt id="p1">**</bpt>ShardMapManager<ept id="p1">**</ept> 对象。通过 <bpt id="p2">**</bpt>ShardMapManagerFactory.GetSqlShardMapManager<ept id="p2">**</ept> 方法可获取具有 <bpt id="p3">**</bpt>ConnectionString<ept id="p3">**</ept> 形式的凭据（包括用于保存 GSM 的服务器名称和数据库名称），并返回 <bpt id="p4">**</bpt>ShardMapManager<ept id="p4">**</ept> 的实例。</source>
          <target state="new">使用工厂模式实例化应用程序中的 <bpt id="p1">**</bpt>ShardMapManager<ept id="p1">**</ept> 对象。通过 <bpt id="p2">**</bpt>ShardMapManagerFactory.GetSqlShardMapManager<ept id="p2">**</ept> 方法可获取具有 <bpt id="p3">**</bpt>ConnectionString<ept id="p3">**</ept> 形式的凭据（包括用于保存 GSM 的服务器名称和数据库名称），并返回 <bpt id="p4">**</bpt>ShardMapManager<ept id="p4">**</ept> 的实例。</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>在应用程序的初始化代码内，每个应用域只应实例化 <bpt id="p1">**</bpt>ShardMapManager<ept id="p1">**</ept> 一次。<bpt id="p2">**</bpt>ShardMapManager<ept id="p2">**</ept> 可包含任意数量的分片映射。尽管对于许多应用程序而言，单个分片映射可能是足够的，但有时针对不同的架构或出于特定目的，需使用不同的数据库集，在这些情况下多个分片可能更合适。</source>
          <target state="new">在应用程序的初始化代码内，每个应用域只应实例化 <bpt id="p1">**</bpt>ShardMapManager<ept id="p1">**</ept> 一次。<bpt id="p2">**</bpt>ShardMapManager<ept id="p2">**</ept> 可包含任意数量的分片映射。尽管对于许多应用程序而言，单个分片映射可能是足够的，但有时针对不同的架构或出于特定目的，需使用不同的数据库集，在这些情况下多个分片可能更合适。</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>在此代码中，应用程序尝试打开现有的 <bpt id="p1">**</bpt>ShardMapManager<ept id="p1">**</ept>。如果表示全局 <bpt id="p2">**</bpt>ShardMapManager<ept id="p2">**</ept> (GSM) 的对象尚未存在于数据库内，则客户端库将在此处创建这些对象。</source>
          <target state="new">在此代码中，应用程序尝试打开现有的 <bpt id="p1">**</bpt>ShardMapManager<ept id="p1">**</ept>。如果表示全局 <bpt id="p2">**</bpt>ShardMapManager<ept id="p2">**</ept> (GSM) 的对象尚未存在于数据库内，则客户端库将在此处创建这些对象。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>你可以使用 Powershell 作为替代方法来创建新的分片映射管理器。<bpt id="p1">[</bpt>此处<ept id="p1">](https://gallery.technet.microsoft.com/scriptcenter/Azure-SQL-DB-Elastic-731883db)</ept>提供了一个示例。</source>
          <target state="new">你可以使用 Powershell 作为替代方法来创建新的分片映射管理器。<bpt id="p1">[</bpt>此处<ept id="p1">](https://gallery.technet.microsoft.com/scriptcenter/Azure-SQL-DB-Elastic-731883db)</ept>提供了一个示例。</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>分片映射管理凭据</source>
          <target state="new">分片映射管理凭据</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>通常，用于管理和操作分片映射的应用程序不同于那些使用分片映射路由连接的应用程序。</source>
          <target state="new">通常，用于管理和操作分片映射的应用程序不同于那些使用分片映射路由连接的应用程序。</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>对于管理分片映射（添加或更改分片、分片映射等）的应用程序，你必须使用“在 GSM 数据库和用作分片的每个数据库上都具有读/写权限的凭据”实例化 <bpt id="p1">**</bpt>ShardMapManager<ept id="p1">**</ept>。在输入或更改分片映射信息时，这些凭据必须允许编写 GSM 和 LSM 中的表，以及在新分片上创建 LSM 表。</source>
          <target state="new">对于管理分片映射（添加或更改分片、分片映射等）的应用程序，你必须使用“在 GSM 数据库和用作分片的每个数据库上都具有读/写权限的凭据”实例化 <bpt id="p1">**</bpt>ShardMapManager<ept id="p1">**</ept>。在输入或更改分片映射信息时，这些凭据必须允许编写 GSM 和 LSM 中的表，以及在新分片上创建 LSM 表。</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>仅元数据受影响</source>
          <target state="new">仅元数据受影响</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>用于填充或更改 <bpt id="p1">**</bpt>ShardMapManager<ept id="p1">**</ept> 数据的方法不会更改存储在分片本身中的用户数据。例如，类似于 <bpt id="p2">**</bpt>CreateShard<ept id="p2">**</ept>、<bpt id="p3">**</bpt>DeleteShard<ept id="p3">**</ept>、<bpt id="p4">**</bpt>UpdateMapping<ept id="p4">**</ept> 等的方法仅影响分片映射元数据，而不会删除、添加或更改分片中所包含的用户数据。但是，这些方法旨在与您执行的单独操作结合使用，以创建或删除实际数据库，或者将行从一个分片移动到另一个分片，以使分片环境恢复均衡。（弹性数据库工具附带的<bpt id="p5">**</bpt>拆分-合并<ept id="p5">**</ept>工具将使用这些 API 并安排在分片之间移动实际数据。）</source>
          <target state="new">用于填充或更改 <bpt id="p1">**</bpt>ShardMapManager<ept id="p1">**</ept> 数据的方法不会更改存储在分片本身中的用户数据。例如，类似于 <bpt id="p2">**</bpt>CreateShard<ept id="p2">**</ept>、<bpt id="p3">**</bpt>DeleteShard<ept id="p3">**</ept>、<bpt id="p4">**</bpt>UpdateMapping<ept id="p4">**</ept> 等的方法仅影响分片映射元数据，而不会删除、添加或更改分片中所包含的用户数据。但是，这些方法旨在与您执行的单独操作结合使用，以创建或删除实际数据库，或者将行从一个分片移动到另一个分片，以使分片环境恢复均衡。（弹性数据库工具附带的<bpt id="p5">**</bpt>拆分-合并<ept id="p5">**</ept>工具将使用这些 API 并安排在分片之间移动实际数据。）</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>填充分片映射：示例</source>
          <target state="new">填充分片映射：示例</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>下面显示了用于填充特定分片映射的操作的示例序列。此代码将执行下列步骤：</source>
          <target state="new">下面显示了用于填充特定分片映射的操作的示例序列。此代码将执行下列步骤：</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>将在分片映射管理器中创建新的分片映射。</source>
          <target state="new">将在分片映射管理器中创建新的分片映射。</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>将两个不同分片的元数据添加到分片映射。</source>
          <target state="new">将两个不同分片的元数据添加到分片映射。</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>将添加各种键范围映射，并且将显示分片映射的整体内容。</source>
          <target state="new">将添加各种键范围映射，并且将显示分片映射的整体内容。</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>在遇到意外的错误时，可采用一种让整个方法重新安全运行的方式来编写代码 - 每个请求都在尝试创建分片或映射前测试其是否已存在。以下代码假定已在由字符串 <bpt id="p1">**</bpt>shardServer<ept id="p1">**</ept> 引用的服务器中创建名为 <bpt id="p2">**</bpt>sample\_shard\_0<ept id="p2">**</ept>、<bpt id="p3">**</bpt>sample\_shard\_1<ept id="p3">**</ept> 和 <bpt id="p4">**</bpt>sample\_shard\_2<ept id="p4">**</ept> 的数据库。</source>
          <target state="new">在遇到意外的错误时，可采用一种让整个方法重新安全运行的方式来编写代码 - 每个请求都在尝试创建分片或映射前测试其是否已存在。以下代码假定已在由字符串 <bpt id="p1">**</bpt>shardServer<ept id="p1">**</ept> 引用的服务器中创建名为 <bpt id="p2">**</bpt>sample\_shard\_0<ept id="p2">**</ept>、<bpt id="p3">**</bpt>sample\_shard\_1<ept id="p3">**</ept> 和 <bpt id="p4">**</bpt>sample\_shard\_2<ept id="p4">**</ept> 的数据库。</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>使用 PowerShell 脚本也可达到相同的结果。<bpt id="p1">[</bpt>此处<ept id="p1">](https://gallery.technet.microsoft.com/scriptcenter/Azure-SQL-DB-Elastic-731883db)</ept>提供了某些 PowerShell 示例。</source>
          <target state="new">使用 PowerShell 脚本也可达到相同的结果。<bpt id="p1">[</bpt>此处<ept id="p1">](https://gallery.technet.microsoft.com/scriptcenter/Azure-SQL-DB-Elastic-731883db)</ept>提供了某些 PowerShell 示例。</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>填充完分片映射后，即可创建或改编数据访问应用程序，以便使用这些映射。在需要更改<bpt id="p1">**</bpt>映射布局<ept id="p1">**</ept>之前，无需重新填充或操作映射。</source>
          <target state="new">填充完分片映射后，即可创建或改编数据访问应用程序，以便使用这些映射。在需要更改<bpt id="p1">**</bpt>映射布局<ept id="p1">**</ept>之前，无需重新填充或操作映射。</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>依赖于数据的路由</source>
          <target state="new">依赖于数据的路由</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>需要数据库连接的应用程序需要充分使用分片映射管理器，以执行特定于应用的数据操作。在分片应用程序中，这些连接现在必须与相应的目标数据库相关联。这称为<bpt id="p1">**</bpt>数据相关的路由<ept id="p1">**</ept>。对于这些应用程序，通过使用在 GSM 数据库上具有只读访问权限的凭据，实例化来自工厂的分片映射管理器对象。以后，单独的连接请求将提供连接相应分片数据库时所需的凭据。</source>
          <target state="new">需要数据库连接的应用程序需要充分使用分片映射管理器，以执行特定于应用的数据操作。在分片应用程序中，这些连接现在必须与相应的目标数据库相关联。这称为<bpt id="p1">**</bpt>数据相关的路由<ept id="p1">**</ept>。对于这些应用程序，通过使用在 GSM 数据库上具有只读访问权限的凭据，实例化来自工厂的分片映射管理器对象。以后，单独的连接请求将提供连接相应分片数据库时所需的凭据。</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>请注意，这些应用程序（使用通过具有只读权限的凭据打开的 <bpt id="p1">**</bpt>ShardMapManager<ept id="p1">**</ept>）将无法更改映射。为了满足这些需求，请创建特定于管理的应用程序或 PowerShell 脚本，以提供如前所述的更高级别权限的凭据。</source>
          <target state="new">请注意，这些应用程序（使用通过具有只读权限的凭据打开的 <bpt id="p1">**</bpt>ShardMapManager<ept id="p1">**</ept>）将无法更改映射。为了满足这些需求，请创建特定于管理的应用程序或 PowerShell 脚本，以提供如前所述的更高级别权限的凭据。</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>有关详细信息，请参阅<bpt id="p1">[</bpt>数据相关的路由<ept id="p1">](/documentation/articles/sql-database-elastic-scale-data-dependent-routing)</ept>。</source>
          <target state="new">有关详细信息，请参阅<bpt id="p1">[</bpt>数据相关的路由<ept id="p1">](/documentation/articles/sql-database-elastic-scale-data-dependent-routing)</ept>。</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>修改分片映射</source>
          <target state="new">修改分片映射</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>可采用不同方式更改分片映射。以下所有方法都可修改用于描述分片及其映射的元数据，但这些方法不以物理方式修改分片内的数据，也不创建或删除实际数据库。下面所述的分片映射上的某些操作可能需要与以物理方式移动数据或添加和删除用作分片的数据库的管理操作进行协调。</source>
          <target state="new">可采用不同方式更改分片映射。以下所有方法都可修改用于描述分片及其映射的元数据，但这些方法不以物理方式修改分片内的数据，也不创建或删除实际数据库。下面所述的分片映射上的某些操作可能需要与以物理方式移动数据或添加和删除用作分片的数据库的管理操作进行协调。</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>这些方法作为构建基块一同工作，以便在分片的数据库环境中修改数据的总体分发情况。</source>
          <target state="new">这些方法作为构建基块一同工作，以便在分片的数据库环境中修改数据的总体分发情况。</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>若要添加或删除分片：请使用 <bpt id="p1">**</bpt>CreateShard<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>DeleteShard<ept id="p2">**</ept>。</source>
          <target state="new">若要添加或删除分片：请使用 <bpt id="p1">**</bpt>CreateShard<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>DeleteShard<ept id="p2">**</ept>。</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>若要执行这些操作，表示目标分片的服务器和数据库必须已经存在。这些方法不会对数据库本身产生任何影响，仅对分片映射上的元数据产生影响。</source>
          <target state="new">若要执行这些操作，表示目标分片的服务器和数据库必须已经存在。这些方法不会对数据库本身产生任何影响，仅对分片映射上的元数据产生影响。</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>若要创建或删除映射到分片的点或范围：请使用 <bpt id="p1">**</bpt>CreateRangeMapping<ept id="p1">**</ept>、<bpt id="p2">**</bpt>DeleteMapping<ept id="p2">**</ept>、<bpt id="p3">**</bpt>CreatePointMapping<ept id="p3">**</ept>。</source>
          <target state="new">若要创建或删除映射到分片的点或范围：请使用 <bpt id="p1">**</bpt>CreateRangeMapping<ept id="p1">**</ept>、<bpt id="p2">**</bpt>DeleteMapping<ept id="p2">**</ept>、<bpt id="p3">**</bpt>CreatePointMapping<ept id="p3">**</ept>。</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>许多不同的点或范围可映射到相同的分片。这些方法仅影响元数据，而不会影响已显示在分片中的任何数据。如果为了与 <bpt id="p1">**</bpt>DeleteMapping<ept id="p1">**</ept> 操作保持一致而需要将数据从数据库中删除，你将需要单独执行这些操作，但需要结合使用这些方法。</source>
          <target state="new">许多不同的点或范围可映射到相同的分片。这些方法仅影响元数据，而不会影响已显示在分片中的任何数据。如果为了与 <bpt id="p1">**</bpt>DeleteMapping<ept id="p1">**</ept> 操作保持一致而需要将数据从数据库中删除，你将需要单独执行这些操作，但需要结合使用这些方法。</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>将现有的范围拆分为两个，或将相邻的范围合并为一个：请使用 <bpt id="p1">**</bpt>SplitMapping<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>MergeMappings<ept id="p2">**</ept>。</source>
          <target state="new">将现有的范围拆分为两个，或将相邻的范围合并为一个：请使用 <bpt id="p1">**</bpt>SplitMapping<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>MergeMappings<ept id="p2">**</ept>。</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>请注意，拆分和合并操作<bpt id="p1">**</bpt>不更改键值要映射到的分片<ept id="p1">**</ept>。拆分操作可将现有的范围拆分为两个部分，但在映射到相同分片时同时保留这两个部分。对在已映射到相同分片的两个相邻的范围进行合并操作，从而可将其合并到单个范围中。若要在分片之间移动点或范围本身，需要将 <bpt id="p2">**</bpt>UpdateMapping<ept id="p2">**</ept> 与移动的实际数据结合使用，才能进行协调。当需要移动数据时，你可以使用弹性数据库工具中随附的<bpt id="p3">**</bpt>拆分/合并<ept id="p3">**</ept>服务，以将分片映射的更改与数据移动相协调。</source>
          <target state="new">请注意，拆分和合并操作<bpt id="p1">**</bpt>不更改键值要映射到的分片<ept id="p1">**</ept>。拆分操作可将现有的范围拆分为两个部分，但在映射到相同分片时同时保留这两个部分。对在已映射到相同分片的两个相邻的范围进行合并操作，从而可将其合并到单个范围中。若要在分片之间移动点或范围本身，需要将 <bpt id="p2">**</bpt>UpdateMapping<ept id="p2">**</ept> 与移动的实际数据结合使用，才能进行协调。当需要移动数据时，你可以使用弹性数据库工具中随附的<bpt id="p3">**</bpt>拆分/合并<ept id="p3">**</ept>服务，以将分片映射的更改与数据移动相协调。</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>将单独的点或范围重新映射（或移动）到不同的分片：请使用 <bpt id="p1">**</bpt>UpdateMapping<ept id="p1">**</ept>。</source>
          <target state="new">将单独的点或范围重新映射（或移动）到不同的分片：请使用 <bpt id="p1">**</bpt>UpdateMapping<ept id="p1">**</ept>。</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>由于可能需要将数据从一个分片移动到另一个分片，以便与 <bpt id="p1">**</bpt>UpdateMapping<ept id="p1">**</ept> 操作保持一致，因此你将需要单独执行此移动，但需要结合使用这些方法。</source>
          <target state="new">由于可能需要将数据从一个分片移动到另一个分片，以便与 <bpt id="p1">**</bpt>UpdateMapping<ept id="p1">**</ept> 操作保持一致，因此你将需要单独执行此移动，但需要结合使用这些方法。</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>若要在联机和脱机状态下执行映射：请使用 <bpt id="p1">**</bpt>MarkMappingOffline<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>MarkMappingOnline<ept id="p2">**</ept> 来控制映射的联机状态。</source>
          <target state="new">若要在联机和脱机状态下执行映射：请使用 <bpt id="p1">**</bpt>MarkMappingOffline<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>MarkMappingOnline<ept id="p2">**</ept> 来控制映射的联机状态。</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>仅当映射处于“脱机”状态时才允许在分片映射上进行某些操作，其中包括 <bpt id="p1">**</bpt>UpdateMapping<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>DeleteMapping<ept id="p2">**</ept>。当映射处于脱机状态时，基于该映射中所包含的键的数据依赖请求将返回一个错误。此外，当范围首次处于脱机状态时，所有到受影响的分片的连接都将自动终止，以防止因范围的更改而导致查询出现不一致或不完整的结果。</source>
          <target state="new">仅当映射处于“脱机”状态时才允许在分片映射上进行某些操作，其中包括 <bpt id="p1">**</bpt>UpdateMapping<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>DeleteMapping<ept id="p2">**</ept>。当映射处于脱机状态时，基于该映射中所包含的键的数据依赖请求将返回一个错误。此外，当范围首次处于脱机状态时，所有到受影响的分片的连接都将自动终止，以防止因范围的更改而导致查询出现不一致或不完整的结果。</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>映射是 .Net 中的不可变对象。以上会更改映射的所有方法也会使代码中任何对映射的引用失效。为了更轻松地执行操作序列来更改映射的状态，所有会更改映射的方法都将返回新的映射引用，以便能够链接操作。例如，若要在 shardmap sm 中删除包含索引键 25 的现有映射，可以执行以下命令：</source>
          <target state="new">映射是 .Net 中的不可变对象。以上会更改映射的所有方法也会使代码中任何对映射的引用失效。为了更轻松地执行操作序列来更改映射的状态，所有会更改映射的方法都将返回新的映射引用，以便能够链接操作。例如，若要在 shardmap sm 中删除包含索引键 25 的现有映射，可以执行以下命令：</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>添加分片</source>
          <target state="new">添加分片</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>对于已经存在的分片映射，应用程序通常仅需要添加新分片，以处理预期的新键或键范围数据。例如，由租户 ID 分片的应用程序可能需要为新的租户设置新分片，或者在每个新的月份开始之前，每月分片的数据可能需要设置新分片。</source>
          <target state="new">对于已经存在的分片映射，应用程序通常仅需要添加新分片，以处理预期的新键或键范围数据。例如，由租户 ID 分片的应用程序可能需要为新的租户设置新分片，或者在每个新的月份开始之前，每月分片的数据可能需要设置新分片。</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>如果新的键值范围还不是现有映射的组成部分且无需移动数据，则添加新分片以及将新的键或范围关联到该分片非常简单。有关添加新分片的详细信息，请参阅<bpt id="p1">[</bpt>添加新分片<ept id="p1">](/documentation/articles/sql-database-elastic-scale-add-a-shard)</ept>。</source>
          <target state="new">如果新的键值范围还不是现有映射的组成部分且无需移动数据，则添加新分片以及将新的键或范围关联到该分片非常简单。有关添加新分片的详细信息，请参阅<bpt id="p1">[</bpt>添加新分片<ept id="p1">](/documentation/articles/sql-database-elastic-scale-add-a-shard)</ept>。</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>但是，在需要移动数据的情况下，需要拆分/合并工具并结合使用必要的分片映射更新，才能安排在分片之间移动数据。有关使用拆分/合并工具的详细信息，请参阅<bpt id="p1">[</bpt>拆分/合并概述<ept id="p1">](/documentation/articles/sql-database-elastic-scale-overview-split-and-merge)</ept></source>
          <target state="new">但是，在需要移动数据的情况下，需要拆分/合并工具并结合使用必要的分片映射更新，才能安排在分片之间移动数据。有关使用拆分/合并工具的详细信息，请参阅<bpt id="p1">[</bpt>拆分/合并概述<ept id="p1">](/documentation/articles/sql-database-elastic-scale-overview-split-and-merge)</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>