<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aaad2bb0bff96bf7145839394878530d56c260f8</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>在 Azure 上运行 MariaDB (MySQL) 群集</source>
          <target state="new">在 Azure 上运行 MariaDB (MySQL) 群集</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>在 Azure 虚拟机上创建 MariaDB + Galera MySQL 群集</source>
          <target state="new">在 Azure 虚拟机上创建 MariaDB + Galera MySQL 群集</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>MariaDB (MySQL) 群集 - Azure 教程</source>
          <target state="new">MariaDB (MySQL) 群集 - Azure 教程</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>我们正在创建的是 <bpt id="p1">[</bpt><ept id="p1">MariaDB](https://mariadb.org/en/about/)</ept> 的多主机 <bpt id="p2">[</bpt><ept id="p2">Galera](http://galeracluster.com/products/)</ept> 群集，这是 MySQL 的嵌入式替代版本，具有稳健性、可扩展性和可靠性，可在 Azure 虚拟机上的高度可用环境中使用。</source>
          <target state="new">我们正在创建的是 <bpt id="p1">[</bpt><ept id="p1">MariaDB](https://mariadb.org/en/about/)</ept> 的多主机 <bpt id="p2">[</bpt><ept id="p2">Galera](http://galeracluster.com/products/)</ept> 群集，这是 MySQL 的嵌入式替代版本，具有稳健性、可扩展性和可靠性，可在 Azure 虚拟机上的高度可用环境中使用。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>体系结构概述</source>
          <target state="new">体系结构概述</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>本主题中将执行下列步骤：</source>
          <target state="new">本主题中将执行下列步骤：</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>创建包含 3 个节点的群集</source>
          <target state="new">创建包含 3 个节点的群集</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>将数据磁盘与操作系统磁盘隔离开来</source>
          <target state="new">将数据磁盘与操作系统磁盘隔离开来</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>在 RAID-0/条带化设置下创建数据磁盘，以提高 IOPS</source>
          <target state="new">在 RAID-0/条带化设置下创建数据磁盘，以提高 IOPS</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>使用 Azure 负载平衡器，以使 3 个节点的负载保持平衡</source>
          <target state="new">使用 Azure 负载平衡器，以使 3 个节点的负载保持平衡</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>为了最大程度地减少重复工作，可创建一个包含 MariaDB+Galera 的 VM 映像，并将其用于创建其他群集 VM。</source>
          <target state="new">为了最大程度地减少重复工作，可创建一个包含 MariaDB+Galera 的 VM 映像，并将其用于创建其他群集 VM。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>体系结构</source>
          <target state="new">体系结构</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>本主题将使用 <bpt id="p1">[</bpt><ept id="p1">Azure CLI]</ept> 工具，所以请确保下载这些工具，并根据说明将其连接到你的 Azure 订阅。如果你需要对 Azure CLI 中可用命令的参考，可单击此链接以查看 <bpt id="p2">[</bpt><ept id="p2">Azure CLI 命令参考]</ept>。你还将需要<bpt id="p3">[</bpt><ept id="p3">创建用于身份验证的 SSH 密钥]</ept>，并记下 <bpt id="p4">**</bpt>.pem 文件的位置<ept id="p4">**</ept>。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>本主题将使用 <bpt id="p1">[</bpt><ept id="p1">Azure CLI]</ept> 工具，所以请确保下载这些工具，并根据说明将其连接到你的 Azure 订阅。如果你需要对 Azure CLI 中可用命令的参考，可单击此链接以查看 <bpt id="p2">[</bpt><ept id="p2">Azure CLI 命令参考]</ept>。你还将需要<bpt id="p3">[</bpt><ept id="p3">创建用于身份验证的 SSH 密钥]</ept>，并记下 <bpt id="p4">**</bpt>.pem 文件的位置<ept id="p4">**</ept>。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>创建模板</source>
          <target state="new">创建模板</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>基础结构</source>
          <target state="new">基础结构</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>创建地缘组，以将资源保存在一起</source>
          <target state="new">创建地缘组，以将资源保存在一起</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>创建虚拟网络</source>
          <target state="new">创建虚拟网络</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>创建存储帐户，以保存所有磁盘。请注意，不要将超过 40 个常用磁盘放置在同一存储帐户上，以免达到存储帐户的 20,000 IOPS 上限。在本例中，我们的磁盘数量远低于这个数字，所以为了简单起见，我们将所有磁盘都存储在同一帐户上。</source>
          <target state="new">创建存储帐户，以保存所有磁盘。请注意，不要将超过 40 个常用磁盘放置在同一存储帐户上，以免达到存储帐户的 20,000 IOPS 上限。在本例中，我们的磁盘数量远低于这个数字，所以为了简单起见，我们将所有磁盘都存储在同一帐户上。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>查找 CentOS 7 虚拟机映像的名称</source>
          <target state="new">查找 CentOS 7 虚拟机映像的名称</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>该输出将如 <ph id="ph1">`5112500ae3b842c8b9c604889f8753c3__OpenLogic-CentOS-70-20140926`</ph> 所示。在以下步骤中使用该名称。</source>
          <target state="new">该输出将如 <ph id="ph1">`5112500ae3b842c8b9c604889f8753c3__OpenLogic-CentOS-70-20140926`</ph> 所示。在以下步骤中使用该名称。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>创建 VM 模板，将 <bpt id="p1">**</bpt>/path/to/key.pem<ept id="p1">**</ept> 替换为已生成的 .pem SSH 密钥的存储位置路径</source>
          <target state="new">创建 VM 模板，将 <bpt id="p1">**</bpt>/path/to/key.pem<ept id="p1">**</ept> 替换为已生成的 .pem SSH 密钥的存储位置路径</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>将 4 个 500GB 的数据磁盘附加到 VM，以便在 RAID 配置中使用</source>
          <target state="new">将 4 个 500GB 的数据磁盘附加到 VM，以便在 RAID 配置中使用</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>通过 SSH 登录到你在 <bpt id="p1">**</bpt>mariadbhatemplate.chinacloudapp.cn:22<ept id="p1">**</ept> 创建的模板 VM，并使用私钥进行连接。</source>
          <target state="new">通过 SSH 登录到你在 <bpt id="p1">**</bpt>mariadbhatemplate.chinacloudapp.cn:22<ept id="p1">**</ept> 创建的模板 VM，并使用私钥进行连接。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>软件</source>
          <target state="new">软件</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>获取根</source>
          <target state="new">获取根</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>安装 RAID 支持：</source>
          <target state="new">安装 RAID 支持：</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>安装 mdadm</source>
          <target state="new">安装 mdadm</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>创建具有 EXT4 文件系统的 RAID0/条带化配置</source>
          <target state="new">创建具有 EXT4 文件系统的 RAID0/条带化配置</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>创建装入点目录</source>
          <target state="new">创建装入点目录</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>检索新创建的 RAID 设备的 UUID</source>
          <target state="new">检索新创建的 RAID 设备的 UUID</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>编辑 /etc/fstab</source>
          <target state="new">编辑 /etc/fstab</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>将设备添加到此位置，以便在重新启动时自动安装，并将 UUID 替换为之前从 <bpt id="p1">**</bpt>blkid<ept id="p1">**</ept> 命令中获取的值</source>
          <target state="new">将设备添加到此位置，以便在重新启动时自动安装，并将 UUID 替换为之前从 <bpt id="p1">**</bpt>blkid<ept id="p1">**</ept> 命令中获取的值</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>装载新分区</source>
          <target state="new">装载新分区</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>安装 MariaDB：</source>
          <target state="new">安装 MariaDB：</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>创建 MariaDB.repo 文件：</source>
          <target state="new">创建 MariaDB.repo 文件：</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>在其中填充以下内容</source>
          <target state="new">在其中填充以下内容</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>删除现有后缀和 mariadb-libs，以免产生冲突</source>
          <target state="new">删除现有后缀和 mariadb-libs，以免产生冲突</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>安装包含 Galera 的 MariaDB</source>
          <target state="new">安装包含 Galera 的 MariaDB</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>将 MySQL 数据目录移动到 RAID 块设备</source>
          <target state="new">将 MySQL 数据目录移动到 RAID 块设备</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>将当前 MySQL 目录复制到其新位置，然后删除旧目录</source>
          <target state="new">将当前 MySQL 目录复制到其新位置，然后删除旧目录</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>相应地设置新目录上的权限</source>
          <target state="new">相应地设置新目录上的权限</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>创建一个符号链接，将旧目录指向 RAID 分区上的新位置</source>
          <target state="new">创建一个符号链接，将旧目录指向 RAID 分区上的新位置</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SELinux 会干扰群集操作<ept id="p1">](http://galeracluster.com/documentation-webpages/configuration.html#selinux)</ept>，所以在当前会话中有必要将其禁用（直到兼容版本出现）。编辑 <ph id="ph1">`/etc/selinux/config`</ph> 以禁止其后续重新启动：</source>
          <target state="new"><bpt id="p1">[</bpt>SELinux 会干扰群集操作<ept id="p1">](http://galeracluster.com/documentation-webpages/configuration.html#selinux)</ept>，所以在当前会话中有必要将其禁用（直到兼容版本出现）。编辑 <ph id="ph1">`/etc/selinux/config`</ph> 以禁止其后续重新启动：</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>验证 MySQL 是否运行</source>
          <target state="new">验证 MySQL 是否运行</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>启动 MySQL</source>
          <target state="new">启动 MySQL</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>保护 MySQL 安装、设置根密码、删除匿名用户，禁用远程根登录并删除测试数据库</source>
          <target state="new">保护 MySQL 安装、设置根密码、删除匿名用户，禁用远程根登录并删除测试数据库</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>在数据库上创建一个用户，以便在群集操作中使用，也可以选择在应用程序中使用</source>
          <target state="new">在数据库上创建一个用户，以便在群集操作中使用，也可以选择在应用程序中使用</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>停止 MySQL</source>
          <target state="new">停止 MySQL</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>创建配置占位符</source>
          <target state="new">创建配置占位符</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>编辑 MySQL 配置，以便为群集设置创建一个占位符。现在不要替换 <bpt id="p1">**</bpt><ph id="ph1">`&lt;Vairables&gt;`</ph><ept id="p1">**</ept> 或取消注释。当我们通过此模板创建 VM 后，才需执行此操作。</source>
          <target state="new">编辑 MySQL 配置，以便为群集设置创建一个占位符。现在不要替换 <bpt id="p1">**</bpt><ph id="ph1">`&lt;Vairables&gt;`</ph><ept id="p1">**</ept> 或取消注释。当我们通过此模板创建 VM 后，才需执行此操作。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>编辑 <bpt id="p1">**</bpt><bpt id="p2">[</bpt><ept id="p2">galera]</ept><ept id="p1">**</ept> 部分，并将其清空</source>
          <target state="new">编辑 <bpt id="p1">**</bpt><bpt id="p2">[</bpt><ept id="p2">galera]</ept><ept id="p1">**</ept> 部分，并将其清空</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>编辑 <bpt id="p1">**</bpt>[mariadb]<ept id="p1">**</ept> 部分</source>
          <target state="new">编辑 <bpt id="p1">**</bpt>[mariadb]<ept id="p1">**</ept> 部分</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>打开防火墙上的所需端口（在 CentOS 7 上使用 FirewallD）</source>
          <target state="new">打开防火墙上的所需端口（在 CentOS 7 上使用 FirewallD）</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>MySQL：<ph id="ph1">`firewall-cmd --zone=public --add-port=3306/tcp --permanent`</ph></source>
          <target state="new">MySQL：<ph id="ph1">`firewall-cmd --zone=public --add-port=3306/tcp --permanent`</ph></target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>GALERA：<ph id="ph1">`firewall-cmd --zone=public --add-port=4567/tcp --permanent`</ph></source>
          <target state="new">GALERA：<ph id="ph1">`firewall-cmd --zone=public --add-port=4567/tcp --permanent`</ph></target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>GALERA IST：<ph id="ph1">`firewall-cmd --zone=public --add-port=4568/tcp --permanent`</ph></source>
          <target state="new">GALERA IST：<ph id="ph1">`firewall-cmd --zone=public --add-port=4568/tcp --permanent`</ph></target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>RSYNC：<ph id="ph1">`firewall-cmd --zone=public --add-port=4444/tcp --permanent`</ph></source>
          <target state="new">RSYNC：<ph id="ph1">`firewall-cmd --zone=public --add-port=4444/tcp --permanent`</ph></target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>重新加载防火墙：<ph id="ph1">`firewall-cmd --reload`</ph></source>
          <target state="new">重新加载防火墙：<ph id="ph1">`firewall-cmd --reload`</ph></target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>优化系统性能。有关更多详细信息，请参阅本文中的<bpt id="p1">[</bpt><ept id="p1">性能优化策略]</ept>。</source>
          <target state="new">优化系统性能。有关更多详细信息，请参阅本文中的<bpt id="p1">[</bpt><ept id="p1">性能优化策略]</ept>。</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>再次编辑 MySQL 配置文件</source>
          <target state="new">再次编辑 MySQL 配置文件</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>编辑 <bpt id="p1">**</bpt>[mariadb]<ept id="p1">**</ept> 部分，后接以下内容</source>
          <target state="new">编辑 <bpt id="p1">**</bpt>[mariadb]<ept id="p1">**</ept> 部分，后接以下内容</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>建议 <bpt id="p1">**</bpt>innodb\_buffer\_pool\_size<ept id="p1">**</ept> 占用 VM 的 70% 内存。对于 RAM 为 3.5GB 的 Medium Azure VM，这里已设置为 2.45GB。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>建议 <bpt id="p1">**</bpt>innodb\_buffer\_pool\_size<ept id="p1">**</ept> 占用 VM 的 70% 内存。对于 RAM 为 3.5GB 的 Medium Azure VM，这里已设置为 2.45GB。</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>停止 MySQL 并禁用 MySQL 服务在启动时运行，以免在添加新节点时导致群集混乱，然后取消设置机器。</source>
          <target state="new">停止 MySQL 并禁用 MySQL 服务在启动时运行，以免在添加新节点时导致群集混乱，然后取消设置机器。</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>通过门户捕获 VM。（目前，<bpt id="p1">[</bpt><ept id="p1">Azure CLI 工具中的问题 #1268]</ept> 描述的事实是，Azure CLI 工具所捕获的映像并没有捕获所附加的数据磁盘。）</source>
          <target state="new">通过门户捕获 VM。（目前，<bpt id="p1">[</bpt><ept id="p1">Azure CLI 工具中的问题 #1268]</ept> 描述的事实是，Azure CLI 工具所捕获的映像并没有捕获所附加的数据磁盘。）</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>通过门户关闭机器</source>
          <target state="new">通过门户关闭机器</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>单击“捕获”并将映像名称指定为 <bpt id="p1">**</bpt>mariadb-galera-image<ept id="p1">**</ept>，然后提供描述并选中“我已运行 waagent”。<ph id="ph1">![</ph>捕获虚拟机<ph id="ph2">](./media/virtual-machines-mariadb-cluster/Capture.png)![</ph>捕获虚拟机<ph id="ph3">](./media/virtual-machines-mariadb-cluster/Capture2.PNG)</ph></source>
          <target state="new">单击“捕获”并将映像名称指定为 <bpt id="p1">**</bpt>mariadb-galera-image<ept id="p1">**</ept>，然后提供描述并选中“我已运行 waagent”。<ph id="ph1">![</ph>捕获虚拟机<ph id="ph2">](./media/virtual-machines-mariadb-cluster/Capture.png)![</ph>捕获虚拟机<ph id="ph3">](./media/virtual-machines-mariadb-cluster/Capture2.PNG)</ph></target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>创建群集</source>
          <target state="new">创建群集</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>使用刚才创建的模板创建 3 个 VM，然后配置并启动群集。</source>
          <target state="new">使用刚才创建的模板创建 3 个 VM，然后配置并启动群集。</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>从之前创建的 <bpt id="p1">**</bpt>mariadb-galera-image<ept id="p1">**</ept> 映像创建第一个 CentOS 7 VM，设置虚拟网络名称为 <bpt id="p2">**</bpt>mariadbvnet<ept id="p2">**</ept>、子网为 <bpt id="p3">**</bpt>mariadb<ept id="p3">**</ept>、虚拟机大小为“中等”，传入云服务名称为 <bpt id="p4">**</bpt>mariadbha<ept id="p4">**</ept>（或者你希望通过 mariadbha.chinacloudapp.cn 访问的任何名称），将此虚拟机的名称设置为 <bpt id="p5">**</bpt>mariadb1<ept id="p5">**</ept>、用户名设置为 <bpt id="p6">**</bpt>azureuser<ept id="p6">**</ept>，启用 SSH 访问并传送 SSH 证书 .pem 文件，并将 <bpt id="p7">**</bpt>/path/to/key.pem<ept id="p7">**</ept> 替换为已生成的 .pem SSH 密钥的存储位置路径。</source>
          <target state="new">从之前创建的 <bpt id="p1">**</bpt>mariadb-galera-image<ept id="p1">**</ept> 映像创建第一个 CentOS 7 VM，设置虚拟网络名称为 <bpt id="p2">**</bpt>mariadbvnet<ept id="p2">**</ept>、子网为 <bpt id="p3">**</bpt>mariadb<ept id="p3">**</ept>、虚拟机大小为“中等”，传入云服务名称为 <bpt id="p4">**</bpt>mariadbha<ept id="p4">**</ept>（或者你希望通过 mariadbha.chinacloudapp.cn 访问的任何名称），将此虚拟机的名称设置为 <bpt id="p5">**</bpt>mariadb1<ept id="p5">**</ept>、用户名设置为 <bpt id="p6">**</bpt>azureuser<ept id="p6">**</ept>，启用 SSH 访问并传送 SSH 证书 .pem 文件，并将 <bpt id="p7">**</bpt>/path/to/key.pem<ept id="p7">**</ept> 替换为已生成的 .pem SSH 密钥的存储位置路径。</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>[WACOM.NOTE]为清楚起见，以下命令拆开显示在多行内，但每个都应作为一整行进行输入。</source>
          <target state="new">[WACOM.NOTE]为清楚起见，以下命令拆开显示在多行内，但每个都应作为一整行进行输入。</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>通过<bpt id="p1">_</bpt>连接<ept id="p1">_</ept>到当前创建的 <bpt id="p2">**</bpt>mariadbha<ept id="p2">**</ept> 云服务、更改 <bpt id="p3">**</bpt>VM 名称<ept id="p3">**</ept>，并将 <bpt id="p4">**</bpt>SSH 端口<ept id="p4">**</ept>更改为不会与同一云服务中的其他 VM 产生冲突的独特端口，创建另外 2 个虚拟机。</source>
          <target state="new">通过<bpt id="p1">_</bpt>连接<ept id="p1">_</ept>到当前创建的 <bpt id="p2">**</bpt>mariadbha<ept id="p2">**</ept> 云服务、更改 <bpt id="p3">**</bpt>VM 名称<ept id="p3">**</ept>，并将 <bpt id="p4">**</bpt>SSH 端口<ept id="p4">**</ept>更改为不会与同一云服务中的其他 VM 产生冲突的独特端口，创建另外 2 个虚拟机。</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>以及对于 MariaDB3</source>
          <target state="new">以及对于 MariaDB3</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>你需获取 3 个 VM 各自的内部 IP 地址，才能执行后续步骤：</source>
          <target state="new">你需获取 3 个 VM 各自的内部 IP 地址，才能执行后续步骤：</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>获取 IP 地址</source>
          <target state="new">获取 IP 地址</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>通过 SSH 登录到 3 个 VM，并编辑每个虚拟机的配置文件</source>
          <target state="new">通过 SSH 登录到 3 个 VM，并编辑每个虚拟机的配置文件</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>删除开始处的 <bpt id="p1">**</bpt>#<ept id="p1">**</ept>，取消对 <bpt id="p2">**</bpt><ph id="ph1">`wsrep_cluster_name`</ph><ept id="p2">**</ept> 和 <bpt id="p3">**</bpt><ph id="ph2">`wsrep_cluster_address`</ph><ept id="p3">**</ept> 的注释，并验证其是否为所需内容。此外，将 <bpt id="p4">**</bpt><ph id="ph3">`wsrep_node_address`</ph><ept id="p4">**</ept> 中的 <bpt id="p5">**</bpt><ph id="ph4">`&lt;ServerIP&gt;`</ph><ept id="p5">**</ept> 和 <bpt id="p6">**</bpt><ph id="ph5">`wsrep_node_name`</ph><ept id="p6">**</ept> 中的 <bpt id="p7">**</bpt><ph id="ph6">`&lt;NodeName&gt;`</ph><ept id="p7">**</ept> 分别替换为 VM 的 IP 地址和名称，然后同样取消这些行的注释。</source>
          <target state="new">删除开始处的 <bpt id="p1">**</bpt>#<ept id="p1">**</ept>，取消对 <bpt id="p2">**</bpt><ph id="ph1">`wsrep_cluster_name`</ph><ept id="p2">**</ept> 和 <bpt id="p3">**</bpt><ph id="ph2">`wsrep_cluster_address`</ph><ept id="p3">**</ept> 的注释，并验证其是否为所需内容。此外，将 <bpt id="p4">**</bpt><ph id="ph3">`wsrep_node_address`</ph><ept id="p4">**</ept> 中的 <bpt id="p5">**</bpt><ph id="ph4">`&lt;ServerIP&gt;`</ph><ept id="p5">**</ept> 和 <bpt id="p6">**</bpt><ph id="ph5">`wsrep_node_name`</ph><ept id="p6">**</ept> 中的 <bpt id="p7">**</bpt><ph id="ph6">`&lt;NodeName&gt;`</ph><ept id="p7">**</ept> 分别替换为 VM 的 IP 地址和名称，然后同样取消这些行的注释。</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>启动 MariaDB1 上的群集，并允许其在启动时运行</source>
          <target state="new">启动 MariaDB1 上的群集，并允许其在启动时运行</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>在 MariaDB2 和 MariaDB3 上启动 MySQL，并允许其在启动时运行</source>
          <target state="new">在 MariaDB2 和 MariaDB3 上启动 MySQL，并允许其在启动时运行</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>对群集进行负载平衡</source>
          <target state="new">对群集进行负载平衡</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>在创建聚集 VM 时，你将其添加到了名为 <bpt id="p1">**</bpt>clusteravset<ept id="p1">**</ept> 的可用性集中，以确保其放置在不同的容错和更新域上，且 Azure 不会同时在所有虚拟机上执行维护。此配置符合该 Azure 服务级别协议 (SLA) 将支持的要求。</source>
          <target state="new">在创建聚集 VM 时，你将其添加到了名为 <bpt id="p1">**</bpt>clusteravset<ept id="p1">**</ept> 的可用性集中，以确保其放置在不同的容错和更新域上，且 Azure 不会同时在所有虚拟机上执行维护。此配置符合该 Azure 服务级别协议 (SLA) 将支持的要求。</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>现在，使用 Azure 负载平衡器，以平衡 3 个节点之间的请求。</source>
          <target state="new">现在，使用 Azure 负载平衡器，以平衡 3 个节点之间的请求。</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>在使用 Azure CLI 的机器上运行以下命令。命令参数结构是：<ph id="ph1">`azure vm endpoint create-multiple &lt;MachineName&gt; &lt;PublicPort&gt;:&lt;VMPort&gt;:&lt;Protocol&gt;:&lt;EnableDirectServerReturn&gt;:&lt;Load Balanced Set Name&gt;:&lt;ProbeProtocol&gt;:&lt;ProbePort&gt;`</ph></source>
          <target state="new">在使用 Azure CLI 的机器上运行以下命令。命令参数结构是：<ph id="ph1">`azure vm endpoint create-multiple &lt;MachineName&gt; &lt;PublicPort&gt;:&lt;VMPort&gt;:&lt;Protocol&gt;:&lt;EnableDirectServerReturn&gt;:&lt;Load Balanced Set Name&gt;:&lt;ProbeProtocol&gt;:&lt;ProbePort&gt;`</ph></target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>最后，由于 CLI 将负载平衡器的探测时间间隔设置为 15 秒（可能有点太长了），可以在门户中的“终结点”下更改任一 VM 的该时间间隔</source>
          <target state="new">最后，由于 CLI 将负载平衡器的探测时间间隔设置为 15 秒（可能有点太长了），可以在门户中的“终结点”下更改任一 VM 的该时间间隔</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>编辑终结点</source>
          <target state="new">编辑终结点</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>然后单击“重新配置负载平衡集”，并转到下一步</source>
          <target state="new">然后单击“重新配置负载平衡集”，并转到下一步</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>重新配置负载平衡集</source>
          <target state="new">重新配置负载平衡集</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>然后将“探测时间间隔”设置为 5 秒，并保存</source>
          <target state="new">然后将“探测时间间隔”设置为 5 秒，并保存</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>更改探测时间间隔</source>
          <target state="new">更改探测时间间隔</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>验证群集</source>
          <target state="new">验证群集</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>繁琐的工作已经完成。现在应该可以在 <ph id="ph1">`mariadbha.chinacloudapp.cn:3306`</ph> 访问群集，这将触发负载平衡器并在 3 个 VM 之间顺利、高效地路由请求。</source>
          <target state="new">繁琐的工作已经完成。现在应该可以在 <ph id="ph1">`mariadbha.chinacloudapp.cn:3306`</ph> 访问群集，这将触发负载平衡器并在 3 个 VM 之间顺利、高效地路由请求。</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>使用偏好的 MySQL 客户端进行连接，或直接从任一 VM 进行连接，以验证此群集是否正常运行。</source>
          <target state="new">使用偏好的 MySQL 客户端进行连接，或直接从任一 VM 进行连接，以验证此群集是否正常运行。</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>然后，创建新的数据库并在其中填充一些数据</source>
          <target state="new">然后，创建新的数据库并在其中填充一些数据</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>将导致以下表格</source>
          <target state="new">将导致以下表格</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>在本文中，你在运行 CentOS 7 的 Azure 虚拟机上创建了包含 3 个节点的 MariaDB + Galera 高度可用群集。VM 已通过 Azure 负载平衡器实现了负载平衡。</source>
          <target state="new">在本文中，你在运行 CentOS 7 的 Azure 虚拟机上创建了包含 3 个节点的 MariaDB + Galera 高度可用群集。VM 已通过 Azure 负载平衡器实现了负载平衡。</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>你可能希望找到<bpt id="p1">[</bpt><ept id="p1">另一种方式在 Linux 上对 MySQL 进行集群]</ept>以及探究如何<bpt id="p2">[</bpt><ept id="p2">优化和测试 Azure Linux VM 上的 MySQL 性能]</ept>。</source>
          <target state="new">你可能希望找到<bpt id="p1">[</bpt><ept id="p1">另一种方式在 Linux 上对 MySQL 进行集群]</ept>以及探究如何<bpt id="p2">[</bpt><ept id="p2">优化和测试 Azure Linux VM 上的 MySQL 性能]</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>