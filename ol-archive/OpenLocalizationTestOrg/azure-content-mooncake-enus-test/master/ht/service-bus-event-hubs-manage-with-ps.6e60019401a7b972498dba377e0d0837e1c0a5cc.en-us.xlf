<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42497adc873afdbce7c27122846ec9c8e4d96cc3</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>使用 PowerShell 管理 Service Bus 和事件中心资源</source>
          <target state="new">使用 PowerShell 管理 Service Bus 和事件中心资源</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>使用 PowerShell 创建和管理 Service Bus 和事件中心资源</source>
          <target state="new">使用 PowerShell 创建和管理 Service Bus 和事件中心资源</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>使用 PowerShell 管理 Service Bus 和事件中心资源</source>
          <target state="new">使用 PowerShell 管理 Service Bus 和事件中心资源</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Azure PowerShell 是一个脚本编写环境，可用于控制和自动执行 Azure 服务的部署和管理。本文介绍如何通过本地 Azure PowerShell 控制台使用 PowerShell 来设置和管理 Service Bus 实体（如命名空间、队列和事件中心）。</source>
          <target state="new">Azure PowerShell 是一个脚本编写环境，可用于控制和自动执行 Azure 服务的部署和管理。本文介绍如何通过本地 Azure PowerShell 控制台使用 PowerShell 来设置和管理 Service Bus 实体（如命名空间、队列和事件中心）。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>先决条件</source>
          <target state="new">先决条件</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>在开始之前，你需要具备以下项：</source>
          <target state="new">在开始之前，你需要具备以下项：</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Azure 订阅。Azure 是基于订阅的平台。有关获取订阅的详细信息，请参阅<bpt id="p1">[</bpt>购买选项<ept id="p1">][试用版]</ept>。</source>
          <target state="new">Azure 订阅。Azure 是基于订阅的平台。有关获取订阅的详细信息，请参阅<bpt id="p1">[</bpt>购买选项<ept id="p1">][试用版]</ept>。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>配备 Azure PowerShell 的计算机。有关说明，请参阅<bpt id="p1">[</bpt>安装和配置 Azure PowerShell<ept id="p1">][]</ept>。</source>
          <target state="new">配备 Azure PowerShell 的计算机。有关说明，请参阅<bpt id="p1">[</bpt>安装和配置 Azure PowerShell<ept id="p1">][]</ept>。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>大致了解 PowerShell 脚本、NuGet 包和 .NET Framework。</source>
          <target state="new">大致了解 PowerShell 脚本、NuGet 包和 .NET Framework。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>包含对用于 Service Bus 的 .NET 程序集的引用</source>
          <target state="new">包含对用于 Service Bus 的 .NET 程序集的引用</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>通过有限数量的 PowerShell cmdlet 可以管理 Service Bus。若要设置未通过现有 cmdlet 公开的实体，可以通过引用 <bpt id="p1">[</bpt><ept id="p1">Service Bus NuGet 包]</ept>从 PowerShell 中使用用于 Service Bus 的 .NET 客户端。</source>
          <target state="new">通过有限数量的 PowerShell cmdlet 可以管理 Service Bus。若要设置未通过现有 cmdlet 公开的实体，可以通过引用 <bpt id="p1">[</bpt><ept id="p1">Service Bus NuGet 包]</ept>从 PowerShell 中使用用于 Service Bus 的 .NET 客户端。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>首先，请确保该脚本可以找到随 NuGet 包一起安装的 <bpt id="p1">**</bpt>Microsoft.ServiceBus.dll<ept id="p1">**</ept> 程序集。为了灵活起见，该脚本执行以下步骤：</source>
          <target state="new">首先，请确保该脚本可以找到随 NuGet 包一起安装的 <bpt id="p1">**</bpt>Microsoft.ServiceBus.dll<ept id="p1">**</ept> 程序集。为了灵活起见，该脚本执行以下步骤：</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>确定调用它的路径。</source>
          <target state="new">确定调用它的路径。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>遍历路径直到找到名为 <ph id="ph1">`packages`</ph> 的文件夹为止。该文件夹是在安装 NuGet 包时创建的。</source>
          <target state="new">遍历路径直到找到名为 <ph id="ph1">`packages`</ph> 的文件夹为止。该文件夹是在安装 NuGet 包时创建的。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>以递归方式在 <ph id="ph1">`packages`</ph> 文件夹中搜索名为 <bpt id="p1">**</bpt>Microsoft.ServiceBus.dll<ept id="p1">**</ept> 的程序集。</source>
          <target state="new">以递归方式在 <ph id="ph1">`packages`</ph> 文件夹中搜索名为 <bpt id="p1">**</bpt>Microsoft.ServiceBus.dll<ept id="p1">**</ept> 的程序集。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>引用该程序集，以便类型可供以后使用。</source>
          <target state="new">引用该程序集，以便类型可供以后使用。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>下面说明如何在 PowerShell 脚本中实现这些步骤：</source>
          <target state="new">下面说明如何在 PowerShell 脚本中实现这些步骤：</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>设置 Service Bus 命名空间</source>
          <target state="new">设置 Service Bus 命名空间</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>使用 Service Bus 命名空间时，你可以使用两个 cmdlet：<bpt id="p1">[</bpt><ept id="p1">Get-AzureSBNamespace]</ept> 和 <bpt id="p2">[</bpt><ept id="p2">New-AzureSBNamespace]</ept>，而不是 .NET SDK。</source>
          <target state="new">使用 Service Bus 命名空间时，你可以使用两个 cmdlet：<bpt id="p1">[</bpt><ept id="p1">Get-AzureSBNamespace]</ept> 和 <bpt id="p2">[</bpt><ept id="p2">New-AzureSBNamespace]</ept>，而不是 .NET SDK。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>本示例在脚本中创建几个本地变量：<ph id="ph1">`$Namespace`</ph> 和 <ph id="ph2">`$Location`</ph>。</source>
          <target state="new">本示例在脚本中创建几个本地变量：<ph id="ph1">`$Namespace`</ph> 和 <ph id="ph2">`$Location`</ph>。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`$Namespace`</ph> 是我们要使用的 Service Bus 命名空间的名称。</source>
          <target state="new"><ph id="ph1">`$Namespace`</ph> 是我们要使用的 Service Bus 命名空间的名称。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`$Location`</ph> 标识我们要在其中设置命名空间的数据中心。</source>
          <target state="new"><ph id="ph1">`$Location`</ph> 标识我们要在其中设置命名空间的数据中心。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`$CurrentNamespace`</ph> 将存储我们检索（或创建）的引用命名空间。</source>
          <target state="new"><ph id="ph1">`$CurrentNamespace`</ph> 将存储我们检索（或创建）的引用命名空间。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>在实际脚本中，<ph id="ph1">`$Namespace`</ph> 和 <ph id="ph2">`$Location`</ph> 可作为参数传递。</source>
          <target state="new">在实际脚本中，<ph id="ph1">`$Namespace`</ph> 和 <ph id="ph2">`$Location`</ph> 可作为参数传递。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>此部分脚本执行以下任务：</source>
          <target state="new">此部分脚本执行以下任务：</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>尝试使用提供的名称检索 Service Bus 命名空间。</source>
          <target state="new">尝试使用提供的名称检索 Service Bus 命名空间。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>如果找到该命名空间，则报告它找到的内容。</source>
          <target state="new">如果找到该命名空间，则报告它找到的内容。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>如果找不到该命名空间，则会创建该命名空间，然后检索新创建的命名空间。</source>
          <target state="new">如果找不到该命名空间，则会创建该命名空间，然后检索新创建的命名空间。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>若要设置其他 Service Bus 实体，请从 SDK 创建 <ph id="ph1">`NamespaceManager`</ph> 对象的一个实例。可以使用 <bpt id="p1">[</bpt><ept id="p1">Get-AzureSBAuthorizationRule]</ept> cmdlet 来检索用于提供连接字符串的授权规则。此示例在 <ph id="ph2">`$NamespaceManager`</ph> 变量中存储对 <ph id="ph3">`NamespaceManager`</ph> 实例的引用。此脚本稍后将使用 <ph id="ph4">`$NamespaceManager`</ph> 来设置其他实体。</source>
          <target state="new">若要设置其他 Service Bus 实体，请从 SDK 创建 <ph id="ph1">`NamespaceManager`</ph> 对象的一个实例。可以使用 <bpt id="p1">[</bpt><ept id="p1">Get-AzureSBAuthorizationRule]</ept> cmdlet 来检索用于提供连接字符串的授权规则。此示例在 <ph id="ph2">`$NamespaceManager`</ph> 变量中存储对 <ph id="ph3">`NamespaceManager`</ph> 实例的引用。此脚本稍后将使用 <ph id="ph4">`$NamespaceManager`</ph> 来设置其他实体。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>设置其他 Service Bus 实体</source>
          <target state="new">设置其他 Service Bus 实体</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>若要设置其他实体（如队列、主题和事件中心），可以使用 <bpt id="p1">[</bpt><ept id="p1">.NET API for Service Bus]</ept>。更多详细示例（包括其他实体）将在本文末尾提及。</source>
          <target state="new">若要设置其他实体（如队列、主题和事件中心），可以使用 <bpt id="p1">[</bpt><ept id="p1">.NET API for Service Bus]</ept>。更多详细示例（包括其他实体）将在本文末尾提及。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>创建事件中心</source>
          <target state="new">创建事件中心</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>此部分脚本将再创建四个本地变量。这些变量用于实例化 <ph id="ph1">`EventHubDescription`</ph> 对象。此脚本执行以下任务：</source>
          <target state="new">此部分脚本将再创建四个本地变量。这些变量用于实例化 <ph id="ph1">`EventHubDescription`</ph> 对象。此脚本执行以下任务：</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>使用 <ph id="ph1">`NamespaceManager`</ph> 对象检查由 <ph id="ph2">`$Path`</ph> 标识的事件中心是否存在。</source>
          <target state="new">使用 <ph id="ph1">`NamespaceManager`</ph> 对象检查由 <ph id="ph2">`$Path`</ph> 标识的事件中心是否存在。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>如果不存在，将创建 <ph id="ph1">`EventHubDescription`</ph> 并将其传递到 <ph id="ph2">`NamespaceManager`</ph> 类的 <ph id="ph3">`CreateEventHubIfNotExists`</ph> 方法。</source>
          <target state="new">如果不存在，将创建 <ph id="ph1">`EventHubDescription`</ph> 并将其传递到 <ph id="ph2">`NamespaceManager`</ph> 类的 <ph id="ph3">`CreateEventHubIfNotExists`</ph> 方法。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>确定事件中心可用后，请使用 <ph id="ph1">`ConsumerGroupDescription`</ph> 和 <ph id="ph2">`NamespaceManager`</ph> 创建使用者组。</source>
          <target state="new">确定事件中心可用后，请使用 <ph id="ph1">`ConsumerGroupDescription`</ph> 和 <ph id="ph2">`NamespaceManager`</ph> 创建使用者组。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>创建队列</source>
          <target state="new">创建队列</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>若要创建队列或主题，请按前一部分所述执行命名空间检查。</source>
          <target state="new">若要创建队列或主题，请按前一部分所述执行命名空间检查。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>创建主题</source>
          <target state="new">创建主题</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>本文提供使用 PowerShell 预配服务总线实体的基本概述。尽管通过引用 Microsoft.ServiceBus.dll 程序集有有限数量的 PowerShell cmdlet 可用于管理 Service Bus 消息实体，但可以使用 .NET 客户端库执行的任何操作几乎也可以在 PowerShell 脚本中执行。</source>
          <target state="new">本文提供使用 PowerShell 预配服务总线实体的基本概述。尽管通过引用 Microsoft.ServiceBus.dll 程序集有有限数量的 PowerShell cmdlet 可用于管理 Service Bus 消息实体，但可以使用 .NET 客户端库执行的任何操作几乎也可以在 PowerShell 脚本中执行。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>以下博客文章提供了更多详细示例：</source>
          <target state="new">以下博客文章提供了更多详细示例：</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>如何使用 PowerShell 脚本创建 Service Bus 队列、主题和订阅</source>
          <target state="new">如何使用 PowerShell 脚本创建 Service Bus 队列、主题和订阅</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>如何使用 PowerShell 脚本创建 Service Bus 命名空间和事件中心</source>
          <target state="new">如何使用 PowerShell 脚本创建 Service Bus 命名空间和事件中心</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>一些现成的脚本也可供下载：</source>
          <target state="new">一些现成的脚本也可供下载：</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>服务总线 PowerShell 脚本</source>
          <target state="new">服务总线 PowerShell 脚本</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>