<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">85ae7cf08697e2038f372d60aa60fe55fc03cbf9</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>利用乐观并发处理数据库写入冲突（Windows 应用商店）| Microsoft Azure</source>
          <target state="new">利用乐观并发处理数据库写入冲突（Windows 应用商店）| Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何处理服务器上和 Windows 应用商店应用程序中的数据库写入冲突。</source>
          <target state="new">了解如何处理服务器上和 Windows 应用商店应用程序中的数据库写入冲突。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>处理数据库写入冲突</source>
          <target state="new">处理数据库写入冲突</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;</source>
          <target state="new">&amp;nbsp;</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>概述</source>
          <target state="new">概述</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>本教程旨在帮助你更好地理解在两个或两个以上客户端写入 Windows 应用商店应用程序中的同一条数据库记录时，如何处理发生的冲突。在某些情况下，两个或两个以上客户端可能会同时将更改写入同一项目。如果没有任何冲突检测，则最后一次写入会覆盖任何以前的更新，即使这并不是所需要的结果。Azure 移动服务为检测和解决这些冲突提供支持。本主题将指导你完成用于处理服务器上和应用程序中数据库写入冲突的步骤。</source>
          <target state="new">本教程旨在帮助你更好地理解在两个或两个以上客户端写入 Windows 应用商店应用程序中的同一条数据库记录时，如何处理发生的冲突。在某些情况下，两个或两个以上客户端可能会同时将更改写入同一项目。如果没有任何冲突检测，则最后一次写入会覆盖任何以前的更新，即使这并不是所需要的结果。Azure 移动服务为检测和解决这些冲突提供支持。本主题将指导你完成用于处理服务器上和应用程序中数据库写入冲突的步骤。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>在本教程中，你将向快速入门应用添加功能以处理更新 TodoItem 数据库时可能发生的争用。</source>
          <target state="new">在本教程中，你将向快速入门应用添加功能以处理更新 TodoItem 数据库时可能发生的争用。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>先决条件</source>
          <target state="new">先决条件</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>本教程需要的内容如下</source>
          <target state="new">本教程需要的内容如下</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Microsoft Visual Studio 2013 或更高版本。</source>
          <target state="new">Microsoft Visual Studio 2013 或更高版本。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>本教程基于移动服务快速入门。在开始本教程之前，必须先[完成移动服务入门]。</source>
          <target state="new">本教程基于移动服务快速入门。在开始本教程之前，必须先[完成移动服务入门]。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>[Azure 帐户]</source>
          <target state="new">[Azure 帐户]</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Azure 移动服务 NuGet 包 1.1.0 或更高版本。若要获取最新版本，请执行以下步骤：</source>
          <target state="new">Azure 移动服务 NuGet 包 1.1.0 或更高版本。若要获取最新版本，请执行以下步骤：</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 中，打开项目并右键单击解决方案资源管理器中的项目，然后单击“管理 Nuget 包”。</source>
          <target state="new">在 Visual Studio 中，打开项目并右键单击解决方案资源管理器中的项目，然后单击“管理 Nuget 包”。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>![][19]</source>
          <target state="new">![][19]</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>展开“联机”并单击“Microsoft 和 .NET”。在“搜索”文本框中输入“Azure 移动服务”。针对 <bpt id="p1">**</bpt>Azure 移动服务<ept id="p1">**</ept> NuGet 包单击“安装”。</source>
          <target state="new">展开“联机”并单击“Microsoft 和 .NET”。在“搜索”文本框中输入“Azure 移动服务”。针对 <bpt id="p1">**</bpt>Azure 移动服务<ept id="p1">**</ept> NuGet 包单击“安装”。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>![][20]</source>
          <target state="new">![][20]</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>更新应用程序以允许更新</source>
          <target state="new">更新应用程序以允许更新</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>在本节中，你将更新 TodoList 用户界面，以便更新列表框控件中每个项目的文本。列表框将包含针对数据库表中每个项目的复选框和文本框控件。你将能够更新 TodoItem 的文本字段。应用程序将处理该文本框的 <ph id="ph1">`LostFocus`</ph> 事件以更新数据库中的项目。</source>
          <target state="new">在本节中，你将更新 TodoList 用户界面，以便更新列表框控件中每个项目的文本。列表框将包含针对数据库表中每个项目的复选框和文本框控件。你将能够更新 TodoItem 的文本字段。应用程序将处理该文本框的 <ph id="ph1">`LostFocus`</ph> 事件以更新数据库中的项目。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 中，打开在[移动服务入门]教程中下载的 TodoList 项目。</source>
          <target state="new">在 Visual Studio 中，打开在[移动服务入门]教程中下载的 TodoList 项目。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 解决方案资源管理器中，打开 MainPage.xaml 并将 <ph id="ph1">`ListView`</ph> 定义替换为下面所示的 <ph id="ph2">`ListView`</ph> 并保存更改。</source>
          <target state="new">在 Visual Studio 解决方案资源管理器中，打开 MainPage.xaml 并将 <ph id="ph1">`ListView`</ph> 定义替换为下面所示的 <ph id="ph2">`ListView`</ph> 并保存更改。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 解决方案资源管理器中，打开共享项目中的 MainPage.cs。将事件处理程序添加到 TextBox <ph id="ph1">`LostFocus`</ph> 事件的 MainPage，如下所示。</source>
          <target state="new">在 Visual Studio 解决方案资源管理器中，打开共享项目中的 MainPage.cs。将事件处理程序添加到 TextBox <ph id="ph1">`LostFocus`</ph> 事件的 MainPage，如下所示。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>在共享项目的 MainPage.cs 中，添加事件处理程序中引用的 MainPage <ph id="ph1">`UpdateToDoItem()`</ph> 方法的定义，如下所示。</source>
          <target state="new">在共享项目的 MainPage.cs 中，添加事件处理程序中引用的 MainPage <ph id="ph1">`UpdateToDoItem()`</ph> 方法的定义，如下所示。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>现在，当文本框失去焦点时，应用程序将对每个项目的文本更改写回到数据库。</source>
          <target state="new">现在，当文本框失去焦点时，应用程序将对每个项目的文本更改写回到数据库。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>在应用程序中启用冲突检测</source>
          <target state="new">在应用程序中启用冲突检测</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>在某些情况下，两个或两个以上客户端可能会同时将更改写入同一项目。如果没有任何冲突检测，则最后一次写入会覆盖任何以前的更新，即使这并不是所需要的结果。[乐观并发控制]假定每个事务均可以提交，因此不使用任何资源锁定。提交事务之前，乐观并发控制将验证是否没有其他事务修改了数据。如果数据已修改，则将回滚正在提交的事务。Azure 移动服务通过使用添加到每个表的 <ph id="ph1">`__version`</ph> 系统属性列跟踪对每个项的更改，支持乐观并发控制。在本节中，我们将使应用程序能够通过 <ph id="ph2">`__version`</ph> 系统属性检测这些写入冲突。如果记录自上次查询以来已更改，则应用程序在更新尝试期间将收到 <ph id="ph3">`MobileServicePreconditionFailedException`</ph> 发出的通知。然后，它将能够选择是将其更改提交到数据库，还是保持对数据库的上次更改不变。有关移动服务的系统属性的详细信息，请参阅[系统属性]。</source>
          <target state="new">在某些情况下，两个或两个以上客户端可能会同时将更改写入同一项目。如果没有任何冲突检测，则最后一次写入会覆盖任何以前的更新，即使这并不是所需要的结果。[乐观并发控制]假定每个事务均可以提交，因此不使用任何资源锁定。提交事务之前，乐观并发控制将验证是否没有其他事务修改了数据。如果数据已修改，则将回滚正在提交的事务。Azure 移动服务通过使用添加到每个表的 <ph id="ph1">`__version`</ph> 系统属性列跟踪对每个项的更改，支持乐观并发控制。在本节中，我们将使应用程序能够通过 <ph id="ph2">`__version`</ph> 系统属性检测这些写入冲突。如果记录自上次查询以来已更改，则应用程序在更新尝试期间将收到 <ph id="ph3">`MobileServicePreconditionFailedException`</ph> 发出的通知。然后，它将能够选择是将其更改提交到数据库，还是保持对数据库的上次更改不变。有关移动服务的系统属性的详细信息，请参阅[系统属性]。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>打开共享项目中的 TodoItem.cs，使用以下代码更新 <ph id="ph1">`TodoItem`</ph> 类定义以包括 <ph id="ph2">`__version`</ph> 系统属性，从而启用对写入冲突检测的支持。</source>
          <target state="new">打开共享项目中的 TodoItem.cs，使用以下代码更新 <ph id="ph1">`TodoItem`</ph> 类定义以包括 <ph id="ph2">`__version`</ph> 系统属性，从而启用对写入冲突检测的支持。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>使用非类型表时，请通过将 Version 标志添加到表的 SystemProperties 来启用乐观并发。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>使用非类型表时，请通过将 Version 标志添加到表的 SystemProperties 来启用乐观并发。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>