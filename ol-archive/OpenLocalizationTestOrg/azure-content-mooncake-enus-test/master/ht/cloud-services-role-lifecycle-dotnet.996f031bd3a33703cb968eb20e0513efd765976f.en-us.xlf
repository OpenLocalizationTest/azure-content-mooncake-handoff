<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">097d4f066891f67a74436a4f60f1bbd289e4fa4d</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>处理云服务生命周期事件 | Azure</source>
          <target state="new">处理云服务生命周期事件 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何在 .NET 中使用云服务角色的生命周期方法</source>
          <target state="new">了解如何在 .NET 中使用云服务角色的生命周期方法</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>在 .NET 中自定义 Web 角色或辅助角色的生命周期</source>
          <target state="new">在 .NET 中自定义 Web 角色或辅助角色的生命周期</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>在创建辅助角色时，你需要扩展 <bpt id="p1">[</bpt>RoleEntryPoint<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.serviceruntime.roleentrypoint.aspx)</ept> 类，重写该类提供的方法可以响应生命周期事件。此类对于 Web 角色而言是可选的，因此你主要将它用于响应生命周期事件。</source>
          <target state="new">在创建辅助角色时，你需要扩展 <bpt id="p1">[</bpt>RoleEntryPoint<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.serviceruntime.roleentrypoint.aspx)</ept> 类，重写该类提供的方法可以响应生命周期事件。此类对于 Web 角色而言是可选的，因此你主要将它用于响应生命周期事件。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>扩展 RoleEntryPoint 类</source>
          <target state="new">扩展 RoleEntryPoint 类</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>RoleEntryPoint<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.serviceruntime.roleentrypoint.aspx)</ept> 类包含由 Azure 在<bpt id="p2">**</bpt>启动<ept id="p2">**</ept>、<bpt id="p3">**</bpt>运行<ept id="p3">**</ept>或<bpt id="p4">**</bpt>停止<ept id="p4">**</ept> Web 角色或辅助角色时调用的方法。你可以选择重写这些方法来管理角色初始化、角色关闭序列或角色执行线程。</source>
          <target state="new"><bpt id="p1">[</bpt>RoleEntryPoint<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.serviceruntime.roleentrypoint.aspx)</ept> 类包含由 Azure 在<bpt id="p2">**</bpt>启动<ept id="p2">**</ept>、<bpt id="p3">**</bpt>运行<ept id="p3">**</ept>或<bpt id="p4">**</bpt>停止<ept id="p4">**</ept> Web 角色或辅助角色时调用的方法。你可以选择重写这些方法来管理角色初始化、角色关闭序列或角色执行线程。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>在扩展 <bpt id="p1">**</bpt>RoleEntryPoint<ept id="p1">**</ept> 时，应该了解方法的以下行为：</source>
          <target state="new">在扩展 <bpt id="p1">**</bpt>RoleEntryPoint<ept id="p1">**</ept> 时，应该了解方法的以下行为：</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>OnStart<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.serviceruntime.roleentrypoint.onstart.aspx)</ept> 和 <bpt id="p2">[</bpt>OnStop<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.serviceruntime.roleentrypoint.onstop.aspx)</ept> 方法返回布尔值，因此可以从这些方法返回 <bpt id="p3">**</bpt>false<ept id="p3">**</ept>。</source>
          <target state="new"><bpt id="p1">[</bpt>OnStart<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.serviceruntime.roleentrypoint.onstart.aspx)</ept> 和 <bpt id="p2">[</bpt>OnStop<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.serviceruntime.roleentrypoint.onstop.aspx)</ept> 方法返回布尔值，因此可以从这些方法返回 <bpt id="p3">**</bpt>false<ept id="p3">**</ept>。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>如果你的代码返回 <bpt id="p1">**</bpt>false<ept id="p1">**</ept>，则该角色进程将突然终止，而不会运行可能拥有的任何关闭序列。一般来说，应该避免从 <bpt id="p2">**</bpt>OnStart<ept id="p2">**</ept> 方法返回 <bpt id="p3">**</bpt>false<ept id="p3">**</ept>。</source>
          <target state="new">如果你的代码返回 <bpt id="p1">**</bpt>false<ept id="p1">**</ept>，则该角色进程将突然终止，而不会运行可能拥有的任何关闭序列。一般来说，应该避免从 <bpt id="p2">**</bpt>OnStart<ept id="p2">**</ept> 方法返回 <bpt id="p3">**</bpt>false<ept id="p3">**</ept>。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>RoleEntryPoint<ept id="p1">**</ept> 方法重载中未捕获的任何异常都被视为未处理的异常。</source>
          <target state="new"><bpt id="p1">**</bpt>RoleEntryPoint<ept id="p1">**</ept> 方法重载中未捕获的任何异常都被视为未处理的异常。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>如果某个生命周期方法中发生异常，则 Azure 将引发 <bpt id="p1">[</bpt>UnhandledException<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/system.appdomain.unhandledexception.aspx)</ept> 事件，然后进程会终止。角色脱机后，Azure 会将它重新启动。如果出现未处理的异常，则不会引发 <bpt id="p2">[</bpt>Stopping<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.serviceruntime.roleenvironment.stopping.aspx)</ept> 事件，并且不会调用 <bpt id="p3">**</bpt>OnStop<ept id="p3">**</ept> 方法。</source>
          <target state="new">如果某个生命周期方法中发生异常，则 Azure 将引发 <bpt id="p1">[</bpt>UnhandledException<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/system.appdomain.unhandledexception.aspx)</ept> 事件，然后进程会终止。角色脱机后，Azure 会将它重新启动。如果出现未处理的异常，则不会引发 <bpt id="p2">[</bpt>Stopping<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.serviceruntime.roleenvironment.stopping.aspx)</ept> 事件，并且不会调用 <bpt id="p3">**</bpt>OnStop<ept id="p3">**</ept> 方法。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>如果角色未启动，或者在初始化、繁忙和停止状态之间循环，可能是因为每次角色重新启动生命周期事件时，你的代码都引发了未处理的异常。在这种情况下，请使用 <bpt id="p1">[</bpt>UnhandledException<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/system.appdomain.unhandledexception.aspx)</ept> 事件来确定异常的原因并采用适当的方法进行处理。角色也可能会从 <bpt id="p2">[</bpt>Run<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.serviceruntime.roleentrypoint.run.aspx)</ept> 方法返回，从而促使角色重新启动。有关部署状态的详细信息，请参阅<bpt id="p3">[</bpt>导致角色回收的常见问题<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/azure/gg465402.aspx)</ept>。</source>
          <target state="new">如果角色未启动，或者在初始化、繁忙和停止状态之间循环，可能是因为每次角色重新启动生命周期事件时，你的代码都引发了未处理的异常。在这种情况下，请使用 <bpt id="p1">[</bpt>UnhandledException<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/system.appdomain.unhandledexception.aspx)</ept> 事件来确定异常的原因并采用适当的方法进行处理。角色也可能会从 <bpt id="p2">[</bpt>Run<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.serviceruntime.roleentrypoint.run.aspx)</ept> 方法返回，从而促使角色重新启动。有关部署状态的详细信息，请参阅<bpt id="p3">[</bpt>导致角色回收的常见问题<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/azure/gg465402.aspx)</ept>。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>如果你使用 <bpt id="p1">[</bpt>Azure Tools for Microsoft Visual Studio<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/ee405484.aspx)</ept> 开发应用程序，则角色项目模板将自动在 WebRole.cs 和 WorkerRole.cs 文件中为你扩展 <bpt id="p2">**</bpt>RoleEntryPoint<ept id="p2">**</ept> 类。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>如果你使用 <bpt id="p1">[</bpt>Azure Tools for Microsoft Visual Studio<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/ee405484.aspx)</ept> 开发应用程序，则角色项目模板将自动在 WebRole.cs 和 WorkerRole.cs 文件中为你扩展 <bpt id="p2">**</bpt>RoleEntryPoint<ept id="p2">**</ept> 类。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>OnStart 方法</source>
          <target state="new">OnStart 方法</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>当 Azure 使角色实例联机时，就会调用 <bpt id="p1">**</bpt>OnStart<ept id="p1">**</ept> 方法。OnStart 代码执行时，角色实例被标记为 <bpt id="p2">**</bpt>Busy<ept id="p2">**</ept>，并且负载平衡器不会将外部通信引导到该角色。你可以重写此方法以执行初始化工作，例如实现事件处理程序和启动 <bpt id="p3">[</bpt>Azure Diagnostics<ept id="p3">](/documentation/articles/cloud-services-how-to-monitor)</ept>。</source>
          <target state="new">当 Azure 使角色实例联机时，就会调用 <bpt id="p1">**</bpt>OnStart<ept id="p1">**</ept> 方法。OnStart 代码执行时，角色实例被标记为 <bpt id="p2">**</bpt>Busy<ept id="p2">**</ept>，并且负载平衡器不会将外部通信引导到该角色。你可以重写此方法以执行初始化工作，例如实现事件处理程序和启动 <bpt id="p3">[</bpt>Azure Diagnostics<ept id="p3">](/documentation/articles/cloud-services-how-to-monitor)</ept>。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>如果 <bpt id="p1">**</bpt>OnStart<ept id="p1">**</ept> 返回 <bpt id="p2">**</bpt>true<ept id="p2">**</ept>，则该实例已成功初始化，并且 Azure 已调用 <bpt id="p3">**</bpt>RoleEntryPoint.Run<ept id="p3">**</ept> 方法。如果 <bpt id="p4">**</bpt>OnStart<ept id="p4">**</ept> 返回 <bpt id="p5">**</bpt>false<ept id="p5">**</ept>，则角色将立即终止，而不执行任何计划中的关闭序列。</source>
          <target state="new">如果 <bpt id="p1">**</bpt>OnStart<ept id="p1">**</ept> 返回 <bpt id="p2">**</bpt>true<ept id="p2">**</ept>，则该实例已成功初始化，并且 Azure 已调用 <bpt id="p3">**</bpt>RoleEntryPoint.Run<ept id="p3">**</ept> 方法。如果 <bpt id="p4">**</bpt>OnStart<ept id="p4">**</ept> 返回 <bpt id="p5">**</bpt>false<ept id="p5">**</ept>，则角色将立即终止，而不执行任何计划中的关闭序列。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>下面的代码示例演示如何重写 <bpt id="p1">**</bpt>OnStart<ept id="p1">**</ept> 方法。当角色实例启动并设置将日志记录数据传输到存储帐户时，此方法将配置并启动诊断监视器：</source>
          <target state="new">下面的代码示例演示如何重写 <bpt id="p1">**</bpt>OnStart<ept id="p1">**</ept> 方法。当角色实例启动并设置将日志记录数据传输到存储帐户时，此方法将配置并启动诊断监视器：</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>OnStop 方法</source>
          <target state="new">OnStop 方法</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>OnStop<ept id="p1">**</ept> 方法在 Azure 使角色实例脱机之后并且在进程退出之前被调用。可以重写此方法来调用角色实例所需的代码，以便彻底关闭此角色实例。</source>
          <target state="new"><bpt id="p1">**</bpt>OnStop<ept id="p1">**</ept> 方法在 Azure 使角色实例脱机之后并且在进程退出之前被调用。可以重写此方法来调用角色实例所需的代码，以便彻底关闭此角色实例。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph>如果出于某些原因而不是用户启动的关闭而调用 <bpt id="p1">**</bpt>OnStop<ept id="p1">**</ept> 方法，则此方法中运行的代码必须在有限的时间内完成。这段时间过后，进程将被终止，因此你必须确保 <bpt id="p2">**</bpt>OnStop<ept id="p2">**</ept> 方法中的代码能够快速运行或者不必完全运行。引发 <bpt id="p3">**</bpt>Stopping<ept id="p3">**</ept> 事件后，会调用 <bpt id="p4">**</bpt>OnStop<ept id="p4">**</ept> 方法。</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph>如果出于某些原因而不是用户启动的关闭而调用 <bpt id="p1">**</bpt>OnStop<ept id="p1">**</ept> 方法，则此方法中运行的代码必须在有限的时间内完成。这段时间过后，进程将被终止，因此你必须确保 <bpt id="p2">**</bpt>OnStop<ept id="p2">**</ept> 方法中的代码能够快速运行或者不必完全运行。引发 <bpt id="p3">**</bpt>Stopping<ept id="p3">**</ept> 事件后，会调用 <bpt id="p4">**</bpt>OnStop<ept id="p4">**</ept> 方法。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Run 方法</source>
          <target state="new">Run 方法</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>可以重写 <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> 方法以便为角色实例实现长时间运行的线程。</source>
          <target state="new">可以重写 <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> 方法以便为角色实例实现长时间运行的线程。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>重写 <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> 方法不是必需的；默认实现可以启动一个永远休眠的线程。如果你重写 <bpt id="p2">**</bpt>Run<ept id="p2">**</ept> 方法，你的代码应会被无限期阻止。如果 <bpt id="p3">**</bpt>Run<ept id="p3">**</ept> 方法返回，角色将正常自动回收；也就是说，Azure 将引发 <bpt id="p4">**</bpt>Stopping<ept id="p4">**</ept> 事件并调用 <bpt id="p5">**</bpt>OnStop<ept id="p5">**</ept> 方法，因此在角色脱机之前可能执行了你的关闭序列。</source>
          <target state="new">重写 <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> 方法不是必需的；默认实现可以启动一个永远休眠的线程。如果你重写 <bpt id="p2">**</bpt>Run<ept id="p2">**</ept> 方法，你的代码应会被无限期阻止。如果 <bpt id="p3">**</bpt>Run<ept id="p3">**</ept> 方法返回，角色将正常自动回收；也就是说，Azure 将引发 <bpt id="p4">**</bpt>Stopping<ept id="p4">**</ept> 事件并调用 <bpt id="p5">**</bpt>OnStop<ept id="p5">**</ept> 方法，因此在角色脱机之前可能执行了你的关闭序列。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>为 Web 角色实现 ASP.NET 生命周期方法</source>
          <target state="new">为 Web 角色实现 ASP.NET 生命周期方法</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>除了 <bpt id="p1">**</bpt>RoleEntryPoint<ept id="p1">**</ept> 类提供的方法以外，还可以使用 ASP.NET 生命周期方法来管理 Web 角色的初始化和关闭序列。如果要将现有的 ASP.NET 应用程序迁移到 Azure，此方法可能有利于解决兼容性问题。ASP.NET 生命周期方法将从 <bpt id="p2">**</bpt>RoleEntryPoint<ept id="p2">**</ept> 方法中调用。<bpt id="p3">**</bpt>Application\_Start<ept id="p3">**</ept> 方法将在 <bpt id="p4">**</bpt>RoleEntryPoint.OnStart<ept id="p4">**</ept> 方法结束后调用。<bpt id="p5">**</bpt>Application\_End<ept id="p5">**</ept> 方法将在 <bpt id="p6">**</bpt>RoleEntryPoint.OnStop<ept id="p6">**</ept> 方法调用前调用。</source>
          <target state="new">除了 <bpt id="p1">**</bpt>RoleEntryPoint<ept id="p1">**</ept> 类提供的方法以外，还可以使用 ASP.NET 生命周期方法来管理 Web 角色的初始化和关闭序列。如果要将现有的 ASP.NET 应用程序迁移到 Azure，此方法可能有利于解决兼容性问题。ASP.NET 生命周期方法将从 <bpt id="p2">**</bpt>RoleEntryPoint<ept id="p2">**</ept> 方法中调用。<bpt id="p3">**</bpt>Application\_Start<ept id="p3">**</ept> 方法将在 <bpt id="p4">**</bpt>RoleEntryPoint.OnStart<ept id="p4">**</ept> 方法结束后调用。<bpt id="p5">**</bpt>Application\_End<ept id="p5">**</ept> 方法将在 <bpt id="p6">**</bpt>RoleEntryPoint.OnStop<ept id="p6">**</ept> 方法调用前调用。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>了解如何<bpt id="p1">[</bpt>创建云服务包<ept id="p1">](/documentation/articles/cloud-services-model-and-package)</ept>。</source>
          <target state="new">了解如何<bpt id="p1">[</bpt>创建云服务包<ept id="p1">](/documentation/articles/cloud-services-model-and-package)</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>