<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fdefeb575c49cf599bffc8e569609c1870adf000</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>弹性数据库作业入门</source>
          <target state="new">弹性数据库作业入门</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>如何使用弹性数据库作业</source>
          <target state="new">如何使用弹性数据库作业</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>弹性数据库作业入门</source>
          <target state="new">弹性数据库作业入门</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Azure SQL 数据库的弹性数据库作业（预览版）可让你跨多个数据库可靠执行 T-SQL 脚本，同时自动重试并提供最终完成保证。有关弹性数据库作业功能的详细信息，请参阅<bpt id="p1">[</bpt>功能概述页<ept id="p1">](/documentation/articles/sql-database-elastic-jobs-overview)</ept>。</source>
          <target state="new">Azure SQL 数据库的弹性数据库作业（预览版）可让你跨多个数据库可靠执行 T-SQL 脚本，同时自动重试并提供最终完成保证。有关弹性数据库作业功能的详细信息，请参阅<bpt id="p1">[</bpt>功能概述页<ept id="p1">](/documentation/articles/sql-database-elastic-jobs-overview)</ept>。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>本主题对<bpt id="p1">[</bpt>弹性数据库工具入门<ept id="p1">](/documentation/articles/sql-database-elastic-scale-get-started)</ept>中的示例做了延伸。完成本主题后，你将学会如何创建和管理用于管理一组相关数据库的作业。</source>
          <target state="new">本主题对<bpt id="p1">[</bpt>弹性数据库工具入门<ept id="p1">](/documentation/articles/sql-database-elastic-scale-get-started)</ept>中的示例做了延伸。完成本主题后，你将学会如何创建和管理用于管理一组相关数据库的作业。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>先决条件</source>
          <target state="new">先决条件</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>下载并运行<bpt id="p1">[</bpt>弹性数据库工具示例入门<ept id="p1">](/documentation/articles/sql-database-elastic-scale-get-started)</ept>。</source>
          <target state="new">下载并运行<bpt id="p1">[</bpt>弹性数据库工具示例入门<ept id="p1">](/documentation/articles/sql-database-elastic-scale-get-started)</ept>。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>使用示例应用程序创建分片映射管理器</source>
          <target state="new">使用示例应用程序创建分片映射管理器</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>在此处，你将创建分片映射管理器以及多个分片，然后将数据插入分片。如果你的分片中设置了分片数据，则你可以跳过下面的步骤，直接转到下一部分。</source>
          <target state="new">在此处，你将创建分片映射管理器以及多个分片，然后将数据插入分片。如果你的分片中设置了分片数据，则你可以跳过下面的步骤，直接转到下一部分。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>生成并运行<bpt id="p1">**</bpt>弹性数据库工具入门<ept id="p1">**</ept>示例应用程序。一直执行到<bpt id="p2">[</bpt>下载和运行示例应用<ept id="p2">](/documentation/articles/sql-database-elastic-scale-get-started/#Getting-started-with-elastic-database-tools)</ept>部分中的步骤 7。在步骤 7 结束时，你将看到以下命令提示符：</source>
          <target state="new">生成并运行<bpt id="p1">**</bpt>弹性数据库工具入门<ept id="p1">**</ept>示例应用程序。一直执行到<bpt id="p2">[</bpt>下载和运行示例应用<ept id="p2">](/documentation/articles/sql-database-elastic-scale-get-started/#Getting-started-with-elastic-database-tools)</ept>部分中的步骤 7。在步骤 7 结束时，你将看到以下命令提示符：</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>命令提示符</source>
          <target state="new">命令提示符</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>在命令窗口中键入“1”，然后按 <bpt id="p1">**</bpt>Enter<ept id="p1">**</ept>。这会创建分片映射管理器，并将两个分片添加到服务器。然后键入“3”并按 <bpt id="p2">**</bpt>Enter<ept id="p2">**</ept>；重复该操作四次。这会在你的分片中插入示例数据行。</source>
          <target state="new">在命令窗口中键入“1”，然后按 <bpt id="p1">**</bpt>Enter<ept id="p1">**</ept>。这会创建分片映射管理器，并将两个分片添加到服务器。然后键入“3”并按 <bpt id="p2">**</bpt>Enter<ept id="p2">**</ept>；重复该操作四次。这会在你的分片中插入示例数据行。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Azure 门户<ept id="p1">](https://manage.windowsazure.cn)</ept>应会在 v12 服务器中显示三个新的数据库：</source>
          <target state="new"><bpt id="p1">[</bpt>Azure 门户<ept id="p1">](https://manage.windowsazure.cn)</ept>应会在 v12 服务器中显示三个新的数据库：</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Visual Studio 确认</source>
          <target state="new">Visual Studio 确认</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>现在，我们将创建一个自定义数据库集合，用于反映分片映射中的所有数据库。这样，我们便可以创建和执行用于跨分片添加新表的作业。</source>
          <target state="new">现在，我们将创建一个自定义数据库集合，用于反映分片映射中的所有数据库。这样，我们便可以创建和执行用于跨分片添加新表的作业。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>我们通常会使用 <bpt id="p1">**</bpt>New-AzureSqlJobTarget<ept id="p1">**</ept> cmdlet 来创建分片映射目标。必须将分片映射管理器数据库设置为数据库目标，然后将特定分片映射指定为目标。而我们的做法是枚举服务器中的所有数据库，并将这些数据库添加到 master 数据库除外的其他新自定义集合。</source>
          <target state="new">我们通常会使用 <bpt id="p1">**</bpt>New-AzureSqlJobTarget<ept id="p1">**</ept> cmdlet 来创建分片映射目标。必须将分片映射管理器数据库设置为数据库目标，然后将特定分片映射指定为目标。而我们的做法是枚举服务器中的所有数据库，并将这些数据库添加到 master 数据库除外的其他新自定义集合。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>创建自定义集合并将服务器中的所有数据库添加到 master 除外的自定义集合目标。</source>
          <target state="new">创建自定义集合并将服务器中的所有数据库添加到 master 除外的自定义集合目标。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>创建 T-SQL 脚本用于跨数据库执行</source>
          <target state="new">创建 T-SQL 脚本用于跨数据库执行</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>创建作业以跨自定义数据库组执行脚本</source>
          <target state="new">创建作业以跨自定义数据库组执行脚本</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>执行作业</source>
          <target state="new">执行作业</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>以下 PowerShell 脚本可以用于执行现有的作业：</source>
          <target state="new">以下 PowerShell 脚本可以用于执行现有的作业：</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>更新以下变量以反映要执行的所需作业名称：</source>
          <target state="new">更新以下变量以反映要执行的所需作业名称：</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>检索单个作业执行的状态</source>
          <target state="new">检索单个作业执行的状态</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>使用相同 <bpt id="p1">**</bpt>Get-AzureSqlJobExecution<ept id="p1">**</ept> cmdlet 搭配 <bpt id="p2">**</bpt>IncludeChildren<ept id="p2">**</ept> 参数，以查看子作业执行的状态，还就是针对作为作业目标的每个数据库的每个作业执行的特定状态。</source>
          <target state="new">使用相同 <bpt id="p1">**</bpt>Get-AzureSqlJobExecution<ept id="p1">**</ept> cmdlet 搭配 <bpt id="p2">**</bpt>IncludeChildren<ept id="p2">**</ept> 参数，以查看子作业执行的状态，还就是针对作为作业目标的每个数据库的每个作业执行的特定状态。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>查看多个作业执行的状态</source>
          <target state="new">查看多个作业执行的状态</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-AzureSqlJobExecution<ept id="p1">**</ept> cmdlet 具有多个可选参数，用于显示多个作业执行（已通过提供的参数进行筛选）。下面演示了 Get-AzureSqlJobExecution 的一些可能的用法：</source>
          <target state="new"><bpt id="p1">**</bpt>Get-AzureSqlJobExecution<ept id="p1">**</ept> cmdlet 具有多个可选参数，用于显示多个作业执行（已通过提供的参数进行筛选）。下面演示了 Get-AzureSqlJobExecution 的一些可能的用法：</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>检索所有处于活动状态的顶级作业执行：</source>
          <target state="new">检索所有处于活动状态的顶级作业执行：</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>检索所有顶级作业执行，包括非活动的作业执行：</source>
          <target state="new">检索所有顶级作业执行，包括非活动的作业执行：</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>检索已提供作业执行 ID 的所有子作业执行，包括非活动的作业执行：</source>
          <target state="new">检索已提供作业执行 ID 的所有子作业执行，包括非活动的作业执行：</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>检索使用计划/作业组合创建的所有作业执行，包括非活动的作业：</source>
          <target state="new">检索使用计划/作业组合创建的所有作业执行，包括非活动的作业：</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>检索以指定的分片映射为目标的所有作业，包括非活动的作业：</source>
          <target state="new">检索以指定的分片映射为目标的所有作业，包括非活动的作业：</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>检索以指定的自定义集合为目标的所有作业，包括非活动的作业：</source>
          <target state="new">检索以指定的自定义集合为目标的所有作业，包括非活动的作业：</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>检索特定作业执行内的作业任务执行的列表：</source>
          <target state="new">检索特定作业执行内的作业任务执行的列表：</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>检索作业任务执行详细信息：</source>
          <target state="new">检索作业任务执行详细信息：</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>以下 PowerShell 脚本可用于查看作业任务执行的详细信息，在调试执行失败时特别有用。</source>
          <target state="new">以下 PowerShell 脚本可用于查看作业任务执行的详细信息，在调试执行失败时特别有用。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>检索作业任务执行内的失败</source>
          <target state="new">检索作业任务执行内的失败</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>JobTaskExecution 对象包括任务生命周期的属性以及 Message 属性。如果作业任务执行失败，生命周期属性将设为 <bpt id="p1">*</bpt>Failed<ept id="p1">*</ept>，且消息属性将设为生成的异常消息及其堆栈。如果作业不成功，必须查看给定操作不成功的作业任务的详细信息。</source>
          <target state="new">JobTaskExecution 对象包括任务生命周期的属性以及 Message 属性。如果作业任务执行失败，生命周期属性将设为 <bpt id="p1">*</bpt>Failed<ept id="p1">*</ept>，且消息属性将设为生成的异常消息及其堆栈。如果作业不成功，必须查看给定操作不成功的作业任务的详细信息。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>等待作业执行完成</source>
          <target state="new">等待作业执行完成</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>以下 PowerShell 脚本可用于等待作业任务完成：</source>
          <target state="new">以下 PowerShell 脚本可用于等待作业任务完成：</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>创建自定义执行策略</source>
          <target state="new">创建自定义执行策略</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>弹性数据库作业支持创建可在启动作业时应用的自定义执行策略。</source>
          <target state="new">弹性数据库作业支持创建可在启动作业时应用的自定义执行策略。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>执行策略当前允许定义：</source>
          <target state="new">执行策略当前允许定义：</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>名称：执行策略的标识符。</source>
          <target state="new">名称：执行策略的标识符。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>作业超时：弹性数据库作业取消作业之前的总时间。</source>
          <target state="new">作业超时：弹性数据库作业取消作业之前的总时间。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>初始重试间隔：第一次重试之前等待的间隔。</source>
          <target state="new">初始重试间隔：第一次重试之前等待的间隔。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>最大重试间隔：要使用的重试间隔上限。</source>
          <target state="new">最大重试间隔：要使用的重试间隔上限。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>重试间隔回退系数：用于计算每两次重试的下一个间隔系数。使用以下公式：(初始重试间隔) * Math.pow((间隔回退指数),(重试次数) - 2)。</source>
          <target state="new">重试间隔回退系数：用于计算每两次重试的下一个间隔系数。使用以下公式：(初始重试间隔) * Math.pow((间隔回退指数),(重试次数) - 2)。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>最大尝试次数：重试在作业中执行的最大次数。</source>
          <target state="new">最大尝试次数：重试在作业中执行的最大次数。</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>默认的执行策略使用以下值：</source>
          <target state="new">默认的执行策略使用以下值：</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>名称：默认执行策略</source>
          <target state="new">名称：默认执行策略</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>作业超时：1 周</source>
          <target state="new">作业超时：1 周</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>初始重试间隔：100 毫秒</source>
          <target state="new">初始重试间隔：100 毫秒</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>最大重试间隔：30 分钟</source>
          <target state="new">最大重试间隔：30 分钟</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>重试间隔系数：2</source>
          <target state="new">重试间隔系数：2</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>最大尝试次数：2,147,483,647</source>
          <target state="new">最大尝试次数：2,147,483,647</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>创建所需的执行策略：</source>
          <target state="new">创建所需的执行策略：</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>更新自定义执行策略</source>
          <target state="new">更新自定义执行策略</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>更新要更新的所需执行策略：</source>
          <target state="new">更新要更新的所需执行策略：</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>取消作业</source>
          <target state="new">取消作业</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>弹性数据库作业支持作业取消请求。如果弹性数据库作业检测到当前正在执行作业的取消请求，它将尝试停止作业。</source>
          <target state="new">弹性数据库作业支持作业取消请求。如果弹性数据库作业检测到当前正在执行作业的取消请求，它将尝试停止作业。</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>弹性数据库作业可通过两种不同的方式执行取消：</source>
          <target state="new">弹性数据库作业可通过两种不同的方式执行取消：</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>取消当前正在执行的任务：如果在任务正在执行时检测到取消，将在当前正在执行的任务层面尝试取消。例如：当尝试取消时，如果有某个长时间运行的查询当前正在执行，将尝试取消该查询。</source>
          <target state="new">取消当前正在执行的任务：如果在任务正在执行时检测到取消，将在当前正在执行的任务层面尝试取消。例如：当尝试取消时，如果有某个长时间运行的查询当前正在执行，将尝试取消该查询。</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>取消任务重试：如果控制线程在启动任务执行之前检测到取消，控制线程将避免启动该任务，并将请求声明为已取消。</source>
          <target state="new">取消任务重试：如果控制线程在启动任务执行之前检测到取消，控制线程将避免启动该任务，并将请求声明为已取消。</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>如果针对父作业请求了作业取消，则会对父作业及其所有子作业执行取消请求。</source>
          <target state="new">如果针对父作业请求了作业取消，则会对父作业及其所有子作业执行取消请求。</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>若要提交取消请求，请使用 <bpt id="p1">**</bpt>Stop-AzureSqlJobExecution<ept id="p1">**</ept> cmdlet 并设置 <bpt id="p2">**</bpt>JobExecutionId<ept id="p2">**</ept> 参数。</source>
          <target state="new">若要提交取消请求，请使用 <bpt id="p1">**</bpt>Stop-AzureSqlJobExecution<ept id="p1">**</ept> cmdlet 并设置 <bpt id="p2">**</bpt>JobExecutionId<ept id="p2">**</ept> 参数。</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>根据名称和作业的历史记录删除作业</source>
          <target state="new">根据名称和作业的历史记录删除作业</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>弹性数据库作业支持异步删除作业。可将某个作业标记为待删除，系统将在作业的作业执行都已完成后，删除该作业及其所有作业历史记录。系统不会自动取消处于活动状态的作业执行。</source>
          <target state="new">弹性数据库作业支持异步删除作业。可将某个作业标记为待删除，系统将在作业的作业执行都已完成后，删除该作业及其所有作业历史记录。系统不会自动取消处于活动状态的作业执行。</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>必须调用 Stop-AzureSqlJobExecution 来取消处于活动状态的作业执行。</source>
          <target state="new">必须调用 Stop-AzureSqlJobExecution 来取消处于活动状态的作业执行。</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>若要触发作业删除，请使用 <bpt id="p1">**</bpt>Remove-AzureSqlJob<ept id="p1">**</ept> cmdlet 并设置 <bpt id="p2">**</bpt>JobName<ept id="p2">**</ept> 参数。</source>
          <target state="new">若要触发作业删除，请使用 <bpt id="p1">**</bpt>Remove-AzureSqlJob<ept id="p1">**</ept> cmdlet 并设置 <bpt id="p2">**</bpt>JobName<ept id="p2">**</ept> 参数。</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>创建自定义数据库目标</source>
          <target state="new">创建自定义数据库目标</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>自定义数据库目标可以在弹性数据库作业中定义，可用于直接执行或包含在自定义数据库组内。由于<bpt id="p1">**</bpt>弹性数据库池<ept id="p1">**</ept>尚不能通过 PowerShell API 直接支持，你只需创建自定义数据库目标和自定义数据库集合目标，其中包含池中的所有数据库。</source>
          <target state="new">自定义数据库目标可以在弹性数据库作业中定义，可用于直接执行或包含在自定义数据库组内。由于<bpt id="p1">**</bpt>弹性数据库池<ept id="p1">**</ept>尚不能通过 PowerShell API 直接支持，你只需创建自定义数据库目标和自定义数据库集合目标，其中包含池中的所有数据库。</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>设置以下变量以反映所需的数据库信息：</source>
          <target state="new">设置以下变量以反映所需的数据库信息：</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>创建自定义数据库集合目标</source>
          <target state="new">创建自定义数据库集合目标</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>可以自定义数据库集合目标，以跨多个已定义数据库目标执行。创建数据库组之后，数据库可与自定义集合目标相关联。</source>
          <target state="new">可以自定义数据库集合目标，以跨多个已定义数据库目标执行。创建数据库组之后，数据库可与自定义集合目标相关联。</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>设置以下变量以反映所需的自定义集合目标配置：</source>
          <target state="new">设置以下变量以反映所需的自定义集合目标配置：</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>将数据库添加到自定义数据库集合目标</source>
          <target state="new">将数据库添加到自定义数据库集合目标</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>数据库目标可以与自定义数据库集合目标相关联，以创建数据库组。每当创建以自定义数据库集合目标为目标的作业时，都会在执行时扩展为以关联到该组的数据库为目标。</source>
          <target state="new">数据库目标可以与自定义数据库集合目标相关联，以创建数据库组。每当创建以自定义数据库集合目标为目标的作业时，都会在执行时扩展为以关联到该组的数据库为目标。</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>将所需的数据库添加到特定的自定义集合：</source>
          <target state="new">将所需的数据库添加到特定的自定义集合：</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>查看自定义数据库集合目标内的数据库</source>
          <target state="new">查看自定义数据库集合目标内的数据库</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>使用 <bpt id="p1">**</bpt>Get-AzureSqlJobTarget<ept id="p1">**</ept> cmdlet 检索自定义数据库集合目标内的子数据库。</source>
          <target state="new">使用 <bpt id="p1">**</bpt>Get-AzureSqlJobTarget<ept id="p1">**</ept> cmdlet 检索自定义数据库集合目标内的子数据库。</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>创建作业以跨自定义数据库集合目标执行脚本</source>
          <target state="new">创建作业以跨自定义数据库集合目标执行脚本</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>使用 <bpt id="p1">**</bpt>New-AzureSqlJob<ept id="p1">**</ept> cmdlet 可以针对自定义数据库集合目标定义的数据库组创建作业。弹性数据库作业将作业扩展为多个子作业（每个子作业映射到与自定义数据库集合目标关联的数据库），并确保脚本针对每个数据库执行。同样，重要的是脚本具有幂等处理重试的弹性。</source>
          <target state="new">使用 <bpt id="p1">**</bpt>New-AzureSqlJob<ept id="p1">**</ept> cmdlet 可以针对自定义数据库集合目标定义的数据库组创建作业。弹性数据库作业将作业扩展为多个子作业（每个子作业映射到与自定义数据库集合目标关联的数据库），并确保脚本针对每个数据库执行。同样，重要的是脚本具有幂等处理重试的弹性。</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>跨数据库收集数据</source>
          <target state="new">跨数据库收集数据</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>弹性数据库作业<ept id="p1">**</ept>支持跨数据库组执行查询，并将结果发送到指定的数据库表。可以在事实之后查询数据表，以查看每个数据库的查询结果。这提供了跨多个数据库执行查询的异步机制。例如其中一个数据库暂时不可用的失败案例是通过重试自动处理。</source>
          <target state="new"><bpt id="p1">**</bpt>弹性数据库作业<ept id="p1">**</ept>支持跨数据库组执行查询，并将结果发送到指定的数据库表。可以在事实之后查询数据表，以查看每个数据库的查询结果。这提供了跨多个数据库执行查询的异步机制。例如其中一个数据库暂时不可用的失败案例是通过重试自动处理。</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>如果不存在与返回的结果集架构相符的指定目标表，则自动创建该表。如果脚本执行返回多个结果集，弹性数据库作业只将第一个结果集发送到提供的目标表。</source>
          <target state="new">如果不存在与返回的结果集架构相符的指定目标表，则自动创建该表。如果脚本执行返回多个结果集，弹性数据库作业只将第一个结果集发送到提供的目标表。</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>以下 PowerShell 脚本可用于执行脚本，将其结果收集到指定的表。此脚本假设已创建一个可输出单个结果集的 T-SQL 脚本，并且已创建自定义的数据库集合目标。</source>
          <target state="new">以下 PowerShell 脚本可用于执行脚本，将其结果收集到指定的表。此脚本假设已创建一个可输出单个结果集的 T-SQL 脚本，并且已创建自定义的数据库集合目标。</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>设置以下项以反映所需的脚本、凭据和执行目标：</source>
          <target state="new">设置以下项以反映所需的脚本、凭据和执行目标：</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>创建和启动用于数据库收集方案的作业</source>
          <target state="new">创建和启动用于数据库收集方案的作业</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>使用作业触发器创建作业执行计划</source>
          <target state="new">使用作业触发器创建作业执行计划</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>以下 PowerShell 脚本可用于创建重复计划。此脚本使用一分钟间隔，但是 New-AzureSqlJobSchedule 也支持 -DayInterval、-HourInterval、-MonthInterval 和 -WeekInterval 参数。可以通过传递 -OneTime 来创建仅执行一次的计划。</source>
          <target state="new">以下 PowerShell 脚本可用于创建重复计划。此脚本使用一分钟间隔，但是 New-AzureSqlJobSchedule 也支持 -DayInterval、-HourInterval、-MonthInterval 和 -WeekInterval 参数。可以通过传递 -OneTime 来创建仅执行一次的计划。</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>创建新计划：</source>
          <target state="new">创建新计划：</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>创建作业触发器，使作业按时间计划执行</source>
          <target state="new">创建作业触发器，使作业按时间计划执行</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>可以定义作业触发器，使作业根据时间计划执行。以下 PowerShell 脚本可用于创建作业触发器。</source>
          <target state="new">可以定义作业触发器，使作业根据时间计划执行。以下 PowerShell 脚本可用于创建作业触发器。</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>设置以下变量以对应于所需的作业和计划：</source>
          <target state="new">设置以下变量以对应于所需的作业和计划：</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>删除计划的关联，以停止按计划执行作业</source>
          <target state="new">删除计划的关联，以停止按计划执行作业</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>若要通过作业触发器中断作业重复执行，可以删除作业触发器。使用 <bpt id="p1">**</bpt>Remove-AzureSqlJobTrigger<ept id="p1">**</ept> cmdlet 删除作业触发器，以停止作业根据计划执行。</source>
          <target state="new">若要通过作业触发器中断作业重复执行，可以删除作业触发器。使用 <bpt id="p1">**</bpt>Remove-AzureSqlJobTrigger<ept id="p1">**</ept> cmdlet 删除作业触发器，以停止作业根据计划执行。</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>将弹性数据库查询结果导入 Excel</source>
          <target state="new">将弹性数据库查询结果导入 Excel</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>你可以将查询结果导入到 Excel 文件。</source>
          <target state="new">你可以将查询结果导入到 Excel 文件。</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>启动 Excel 2013。</source>
          <target state="new">启动 Excel 2013。</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>导航到“数据”功能区。</source>
          <target state="new">导航到“数据”功能区。</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>单击“从其他源”，然后单击“从 SQL Server”。</source>
          <target state="new">单击“从其他源”，然后单击“从 SQL Server”。</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>从其他源导入 Excel</source>
          <target state="new">从其他源导入 Excel</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>在“数据连接向导”中，键入服务器名称和登录凭据。然后，单击“下一步”。</source>
          <target state="new">在“数据连接向导”中，键入服务器名称和登录凭据。然后，单击“下一步”。</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>在对话框“选择包含所需数据的数据库”中，选择 <bpt id="p1">**</bpt>ElasticDBQuery<ept id="p1">**</ept> 数据库。</source>
          <target state="new">在对话框“选择包含所需数据的数据库”中，选择 <bpt id="p1">**</bpt>ElasticDBQuery<ept id="p1">**</ept> 数据库。</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>在列表视图中选择“客户”表并单击“下一步”。然后单击“完成”。</source>
          <target state="new">在列表视图中选择“客户”表并单击“下一步”。然后单击“完成”。</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>在“导入数据”窗体中的“请选择该数据在工作簿中的显示方式”下，选择“表”，然后单击“确定”。</source>
          <target state="new">在“导入数据”窗体中的“请选择该数据在工作簿中的显示方式”下，选择“表”，然后单击“确定”。</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>存储在不同分片中、来自“客户”表的所有行将填入 Excel 工作表。</source>
          <target state="new">存储在不同分片中、来自“客户”表的所有行将填入 Excel 工作表。</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>现在，你可以使用 Excel 的强大数据功能。你可以使用包含服务器名称、数据库名称和凭据的连接字符串，将 BI 和数据集成工具连接到弹性查询数据库。请确保支持将 SQL Server 用作工具的数据源。你可以引用弹性查询数据库和外部表，就如同使用工具连接的任何其他 SQL Server 数据库和 SQL Server 表一样。</source>
          <target state="new">现在，你可以使用 Excel 的强大数据功能。你可以使用包含服务器名称、数据库名称和凭据的连接字符串，将 BI 和数据集成工具连接到弹性查询数据库。请确保支持将 SQL Server 用作工具的数据源。你可以引用弹性查询数据库和外部表，就如同使用工具连接的任何其他 SQL Server 数据库和 SQL Server 表一样。</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>成本</source>
          <target state="new">成本</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>使用弹性数据库查询功能不会产生额外的费用。但是，目前此功能只能在用作终结点的高级数据库上使用，但分片可以是任何服务层。</source>
          <target state="new">使用弹性数据库查询功能不会产生额外的费用。但是，目前此功能只能在用作终结点的高级数据库上使用，但分片可以是任何服务层。</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>有关价格信息，请参阅 <bpt id="p1">[</bpt>SQL 数据库定价详细信息<ept id="p1">](/home/features/sql-database/#price)</ept>。</source>
          <target state="new">有关价格信息，请参阅 <bpt id="p1">[</bpt>SQL 数据库定价详细信息<ept id="p1">](/home/features/sql-database/#price)</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>