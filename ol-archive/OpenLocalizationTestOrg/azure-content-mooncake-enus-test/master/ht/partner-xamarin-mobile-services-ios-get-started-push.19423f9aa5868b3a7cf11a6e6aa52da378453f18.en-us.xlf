<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">26f73ed11e557e323c86b0cacd26c8b4ef1eb912</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>向移动服务应用程序添加推送通知 (Xamarin.iOS) - 移动服务</source>
          <target state="new">向移动服务应用程序添加推送通知 (Xamarin.iOS) - 移动服务</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何借助 Azure 移动服务在 Xamarin.iOS 应用程序中使用推送通知。</source>
          <target state="new">了解如何借助 Azure 移动服务在 Xamarin.iOS 应用程序中使用推送通知。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>向移动服务应用程序添加推送通知</source>
          <target state="new">向移动服务应用程序添加推送通知</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;</source>
          <target state="new">&amp;nbsp;</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>概述</source>
          <target state="new">概述</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>本主题说明如何使用 Azure 移动服务向 Xamarin.iOS 8 应用程序发送推送通知。在本教程中，你将要使用 Apple 推送通知服务 (APNS) 向<bpt id="p1">[</bpt><ept id="p1">移动服务入门]</ept>项目添加推送通知。完成本教程后，每次插入一条记录时，你的移动服务就会发送一条推送通知。</source>
          <target state="new">本主题说明如何使用 Azure 移动服务向 Xamarin.iOS 8 应用程序发送推送通知。在本教程中，你将要使用 Apple 推送通知服务 (APNS) 向<bpt id="p1">[</bpt><ept id="p1">移动服务入门]</ept>项目添加推送通知。完成本教程后，每次插入一条记录时，你的移动服务就会发送一条推送通知。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>本教程需要的内容如下：</source>
          <target state="new">本教程需要的内容如下：</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>IOS 8 设备（无法在 iOS 模拟器中测试推送通知）</source>
          <target state="new">IOS 8 设备（无法在 iOS 模拟器中测试推送通知）</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>iOS 开发人员计划成员身份</source>
          <target state="new">iOS 开发人员计划成员身份</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Xamarin.iOS Studio</source>
          <target state="new">Xamarin.iOS Studio</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Azure 移动服务组件</source>
          <target state="new">Azure 移动服务组件</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph>根据 APNS 的要求，你必须在支持 iOS 的设备（iPhone 或 iPad）而不是在模拟器上部署和测试推送通知。</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph>根据 APNS 的要求，你必须在支持 iOS 的设备（iPhone 或 iPad）而不是在模拟器上部署和测试推送通知。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>APNS 使用证书对你的移动服务进行身份验证。按照以下说明创建必要的证书并将其上载到你的移动服务。有关正式的 APNS 功能文档，请参阅 <bpt id="p1">[</bpt><ept id="p1">Apple 推送通知服务]</ept>。</source>
          <target state="new">APNS 使用证书对你的移动服务进行身份验证。按照以下说明创建必要的证书并将其上载到你的移动服务。有关正式的 APNS 功能文档，请参阅 <bpt id="p1">[</bpt><ept id="p1">Apple 推送通知服务]</ept>。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="certificates"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>生成证书签名请求文件</source>
          <target state="new"><ph id="ph1">&lt;a name="certificates"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>生成证书签名请求文件</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>首先，你必须生成证书签名请求 (CSR) 文件，Apple 将使用该文件生成签名证书。</source>
          <target state="new">首先，你必须生成证书签名请求 (CSR) 文件，Apple 将使用该文件生成签名证书。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>从“Utilities”（实用工具）中，运行 <bpt id="p1">**</bpt>Keychain Access<ept id="p1">**</ept> 工具。</source>
          <target state="new">从“Utilities”（实用工具）中，运行 <bpt id="p1">**</bpt>Keychain Access<ept id="p1">**</ept> 工具。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>单击“Keychain Access”，展开“Certificate Assistant”（证书助理），然后单击“Request a Certificate from a Certificate Authority...”（从证书颁发机构请求证书...）。</source>
          <target state="new">单击“Keychain Access”，展开“Certificate Assistant”（证书助理），然后单击“Request a Certificate from a Certificate Authority...”（从证书颁发机构请求证书...）。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>输入你的“User Email Address”（用户电子邮件地址），键入“Common Name”（公用名）值，确保已选择“Saved to disk”（保存到磁盘），然后单击“Continue”（继续）。</source>
          <target state="new">输入你的“User Email Address”（用户电子邮件地址），键入“Common Name”（公用名）值，确保已选择“Saved to disk”（保存到磁盘），然后单击“Continue”（继续）。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>在“Save As”（另存为）中为证书签名请求 (CSR) 文件键入一个名称，在“Where”（位置）中选择一个位置，然后单击“Save”（保存）。</source>
          <target state="new">在“Save As”（另存为）中为证书签名请求 (CSR) 文件键入一个名称，在“Where”（位置）中选择一个位置，然后单击“Save”（保存）。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>请记住你选择的位置。</source>
          <target state="new">请记住你选择的位置。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>接下来，你将要向 Apple 注册你的应用程序、启用推送通知并上载这个导出的 CSR 以创建一个推送证书。</source>
          <target state="new">接下来，你将要向 Apple 注册你的应用程序、启用推送通知并上载这个导出的 CSR 以创建一个推送证书。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="register"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>为推送通知注册应用程序</source>
          <target state="new"><ph id="ph1">&lt;a name="register"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>为推送通知注册应用程序</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>若要将推送通知从移动服务发送到 iOS 应用程序，你必须向 Apple 注册应用程序，并注册推送通知。</source>
          <target state="new">若要将推送通知从移动服务发送到 iOS 应用程序，你必须向 Apple 注册应用程序，并注册推送通知。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>如果你尚未注册应用程序，请导航到 Apple 开发人员中心的 <ph id="ph1">&lt;a href="http://go.microsoft.com/fwlink/p/?LinkId=272456" target="_blank"&gt;</ph>iOS 设置门户<ph id="ph2">&lt;/a&gt;</ph>，使用 Apple ID 登录，单击“Identifiers”（标识符），然后单击“App IDs”（应用程序 ID），最后单击“+”符号创建应用程序的应用程序 ID。</source>
          <target state="new">如果你尚未注册应用程序，请导航到 Apple 开发人员中心的 <ph id="ph1">&lt;a href="http://go.microsoft.com/fwlink/p/?LinkId=272456" target="_blank"&gt;</ph>iOS 设置门户<ph id="ph2">&lt;/a&gt;</ph>，使用 Apple ID 登录，单击“Identifiers”（标识符），然后单击“App IDs”（应用程序 ID），最后单击“+”符号创建应用程序的应用程序 ID。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>在“Description”（说明）中为应用程序键入一个名称，记住唯一的“Bundle Identifier”（捆绑标识符），在“App Services”（应用程序服务）部分中选中“Push Notifications”（推送通知）选项，然后单击“Continue”（继续）。此示例将使用 ID <bpt id="p1">**</bpt>MobileServices.Quickstart<ept id="p1">**</ept>，但你不可以重用这个 ID，因为应用程序 ID 在所有用户之间必须唯一。因此，建议在应用程序名称的后面附加完整名称或首字母。</source>
          <target state="new">在“Description”（说明）中为应用程序键入一个名称，记住唯一的“Bundle Identifier”（捆绑标识符），在“App Services”（应用程序服务）部分中选中“Push Notifications”（推送通知）选项，然后单击“Continue”（继续）。此示例将使用 ID <bpt id="p1">**</bpt>MobileServices.Quickstart<ept id="p1">**</ept>，但你不可以重用这个 ID，因为应用程序 ID 在所有用户之间必须唯一。因此，建议在应用程序名称的后面附加完整名称或首字母。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>此时将会生成你的应用程序 ID 并请求你<bpt id="p1">**</bpt>提交<ept id="p1">**</ept>该信息。单击“提交”。</source>
          <target state="new">此时将会生成你的应用程序 ID 并请求你<bpt id="p1">**</bpt>提交<ept id="p1">**</ept>该信息。单击“提交”。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>单击“Submit”（提交）后，你将会看到如下所示的“Registration complete”（注册已完成）屏幕。单击“Done”（完成）。</source>
          <target state="new">单击“Submit”（提交）后，你将会看到如下所示的“Registration complete”（注册已完成）屏幕。单击“Done”（完成）。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>找到你刚刚创建的应用程序 ID，然后单击其行。</source>
          <target state="new">找到你刚刚创建的应用程序 ID，然后单击其行。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>单击应用程序 ID 会显示有关应用程序和应用程序 ID 的详细信息。单击“设置”按钮。</source>
          <target state="new">单击应用程序 ID 会显示有关应用程序和应用程序 ID 的详细信息。单击“设置”按钮。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>滚动到屏幕底部并单击“Development Push SSL Certificate”（开发推送 SSL 证书 ）部分下的“Create Certificate...”（创建证书...）按钮。</source>
          <target state="new">滚动到屏幕底部并单击“Development Push SSL Certificate”（开发推送 SSL 证书 ）部分下的“Create Certificate...”（创建证书...）按钮。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>将显示“Add iOS Certificate”（添加 iOS 证书）助手。</source>
          <target state="new">将显示“Add iOS Certificate”（添加 iOS 证书）助手。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>注意：本教程使用开发证书。注册生产证书时使用相同的过程。将证书上载至移动服务时，只需确保设置了相同的证书类型即可。</source>
          <target state="new">注意：本教程使用开发证书。注册生产证书时使用相同的过程。将证书上载至移动服务时，只需确保设置了相同的证书类型即可。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>单击“Choose File”（选择文件），浏览到前面保存 CSR 文件的位置，然后单击“Generate”（生成）。</source>
          <target state="new">单击“Choose File”（选择文件），浏览到前面保存 CSR 文件的位置，然后单击“Generate”（生成）。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>门户创建证书之后，请单击“Download”（下载）按钮，然后单击“Done”（完成）。</source>
          <target state="new">门户创建证书之后，请单击“Download”（下载）按钮，然后单击“Done”（完成）。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>随后将会下载签名证书并将其保存到计算机上的 Downloads 文件夹。</source>
          <target state="new">随后将会下载签名证书并将其保存到计算机上的 Downloads 文件夹。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>注意：默认情况下，下载的文件（开发证书）名为 <ph id="ph1">&lt;strong&gt;</ph>aps\_development.cer<ph id="ph2">&lt;/strong&gt;</ph>。</source>
          <target state="new">注意：默认情况下，下载的文件（开发证书）名为 <ph id="ph1">&lt;strong&gt;</ph>aps\_development.cer<ph id="ph2">&lt;/strong&gt;</ph>。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>双击下载的推送证书 <bpt id="p1">**</bpt>aps\_development.cer<ept id="p1">**</ept>。</source>
          <target state="new">双击下载的推送证书 <bpt id="p1">**</bpt>aps\_development.cer<ept id="p1">**</ept>。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>将在 Keychain 中安装新证书，如下所示：</source>
          <target state="new">将在 Keychain 中安装新证书，如下所示：</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>注意：证书中的名称可能不同，但将以 <ph id="ph1">&lt;strong&gt;</ph>Apple Development iOS Push Notification Services:<ph id="ph2">&lt;/strong&gt;</ph> 作为前缀。</source>
          <target state="new">注意：证书中的名称可能不同，但将以 <ph id="ph1">&lt;strong&gt;</ph>Apple Development iOS Push Notification Services:<ph id="ph2">&lt;/strong&gt;</ph> 作为前缀。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>稍后，你将要使用此证书生成一个 .p12 文件，并将其上载到移动服务以使用 APNS 启用身份验证。</source>
          <target state="new">稍后，你将要使用此证书生成一个 .p12 文件，并将其上载到移动服务以使用 APNS 启用身份验证。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="profile"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>为应用程序创建配置文件</source>
          <target state="new"><ph id="ph1">&lt;a name="profile"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>为应用程序创建配置文件</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>返回 <ph id="ph1">&lt;a href="http://go.microsoft.com/fwlink/p/?LinkId=272456" target="_blank"&gt;</ph>iOS 设置门户<ph id="ph2">&lt;/a&gt;</ph>，选择“Provisioning Profiles”（设置配置文件），选择“All”（全部），然后单击“+”按钮创建一个新的配置文件。此时会启动“Add iOS Provisiong Profile”（添加 iOS 设置配置文件）向导。</source>
          <target state="new">返回 <ph id="ph1">&lt;a href="http://go.microsoft.com/fwlink/p/?LinkId=272456" target="_blank"&gt;</ph>iOS 设置门户<ph id="ph2">&lt;/a&gt;</ph>，选择“Provisioning Profiles”（设置配置文件），选择“All”（全部），然后单击“+”按钮创建一个新的配置文件。此时会启动“Add iOS Provisiong Profile”（添加 iOS 设置配置文件）向导。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>选择“Development”（开发）下的“iOS App Development”（iOS 应用程序开发）作为设置配置文件类型，然后单击“Continue”（继续）。</source>
          <target state="new">选择“Development”（开发）下的“iOS App Development”（iOS 应用程序开发）作为设置配置文件类型，然后单击“Continue”（继续）。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>接下来，从“App ID”（应用程序 ID）下拉列表中选择移动服务快速入门应用程序的应用程序 ID，然后单击“Continue”（继续）。</source>
          <target state="new">接下来，从“App ID”（应用程序 ID）下拉列表中选择移动服务快速入门应用程序的应用程序 ID，然后单击“Continue”（继续）。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>在“Select certificates”（选择证书）屏幕中，选择前面创建的证书，然后单击“Continue”（继续）。</source>
          <target state="new">在“Select certificates”（选择证书）屏幕中，选择前面创建的证书，然后单击“Continue”（继续）。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>接下来，选择要用于测试的“Devices”（设备），然后单击“Continue”（继续）。</source>
          <target state="new">接下来，选择要用于测试的“Devices”（设备），然后单击“Continue”（继续）。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>最后，在“Profile Name”（配置文件名称）中为配置文件选取一个名称，单击“Generate”（生成），然后单击“Done”（完成）。</source>
          <target state="new">最后，在“Profile Name”（配置文件名称）中为配置文件选取一个名称，单击“Generate”（生成），然后单击“Done”（完成）。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>此操作可创建新的配置文件。</source>
          <target state="new">此操作可创建新的配置文件。</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="configure-mobileServices"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>配置移动服务以发送推送请求</source>
          <target state="new"><ph id="ph1">&lt;a name="configure-mobileServices"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>配置移动服务以发送推送请求</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>将应用注册到 APNS 并配置项目后，接下来必须配置移动服务以便与 APNS 集成。</source>
          <target state="new">将应用注册到 APNS 并配置项目后，接下来必须配置移动服务以便与 APNS 集成。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>在 Keychain Access 中，右键单击新证书，单击“Export”（导出），为文件命名，选择 <bpt id="p1">**</bpt>.p12<ept id="p1">**</ept> 格式，然后单击“Save”（保存）。</source>
          <target state="new">在 Keychain Access 中，右键单击新证书，单击“Export”（导出），为文件命名，选择 <bpt id="p1">**</bpt>.p12<ept id="p1">**</ept> 格式，然后单击“Save”（保存）。</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>记下文件名和导出的证书的位置。</source>
          <target state="new">记下文件名和导出的证书的位置。</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>登录到 <bpt id="p1">[</bpt><ept id="p1">Azure 经典门户]</ept>，单击“移动服务”，然后单击你的应用。</source>
          <target state="new">登录到 <bpt id="p1">[</bpt><ept id="p1">Azure 经典门户]</ept>，单击“移动服务”，然后单击你的应用。</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>单击“推送”选项卡，单击“Apple 推送通知设置”下的“上载”。</source>
          <target state="new">单击“推送”选项卡，单击“Apple 推送通知设置”下的“上载”。</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>此时将显示“上载证书”对话框。</source>
          <target state="new">此时将显示“上载证书”对话框。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>单击“文件”，选择导出的 .p12 证书文件，输入密码，确保已选择正确的“模式”，单击勾选图标，然后单击“保存”。</source>
          <target state="new">单击“文件”，选择导出的 .p12 证书文件，输入密码，确保已选择正确的“模式”，单击勾选图标，然后单击“保存”。</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>现在，你的移动服务已配置为使用 APNS。</source>
          <target state="new">现在，你的移动服务已配置为使用 APNS。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="configure-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>配置 Xamarin.iOS 应用程序</source>
          <target state="new"><ph id="ph1">&lt;a name="configure-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>配置 Xamarin.iOS 应用程序</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>在 Xamarin.Studio 中，打开 <bpt id="p1">**</bpt>Info.plist<ept id="p1">**</ept>，然后使用前面创建的 ID 更新“捆绑标识符”。</source>
          <target state="new">在 Xamarin.Studio 中，打开 <bpt id="p1">**</bpt>Info.plist<ept id="p1">**</ept>，然后使用前面创建的 ID 更新“捆绑标识符”。</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>向下滚动到“Background Modes”（后台模式）并选中“Enable Background Modes”（启用后台模式）框和“Remote notifications”（远程通知）框。</source>
          <target state="new">向下滚动到“Background Modes”（后台模式）并选中“Enable Background Modes”（启用后台模式）框和“Remote notifications”（远程通知）框。</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>在解决方案面板中双击你的项目以打开“Project Options”（项目选项）。</source>
          <target state="new">在解决方案面板中双击你的项目以打开“Project Options”（项目选项）。</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>在“Build”（生成）下面选择“iOS Bundle Signing”（iOS 捆绑签名），并选择你刚刚为此项目设置的“Identity”（标识）和“Provisioning profile”（设置配置文件）。</source>
          <target state="new">在“Build”（生成）下面选择“iOS Bundle Signing”（iOS 捆绑签名），并选择你刚刚为此项目设置的“Identity”（标识）和“Provisioning profile”（设置配置文件）。</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>这可以确保 Xamarin 项目使用新配置文件进行代码签名。有关正式的 Xamarin 设备设置文档，请参阅 <bpt id="p1">[</bpt><ept id="p1">Xamarin 设备设置]</ept>。</source>
          <target state="new">这可以确保 Xamarin 项目使用新配置文件进行代码签名。有关正式的 Xamarin 设备设置文档，请参阅 <bpt id="p1">[</bpt><ept id="p1">Xamarin 设备设置]</ept>。</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="add-push"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>向应用程序添加推送通知</source>
          <target state="new"><ph id="ph1">&lt;a name="add-push"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>向应用程序添加推送通知</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>在 Xamarin.Studio 中，打开 AppDelegate.cs 文件，并添加以下属性：</source>
          <target state="new">在 Xamarin.Studio 中，打开 AppDelegate.cs 文件，并添加以下属性：</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>打开 <bpt id="p1">**</bpt>TodoItem<ept id="p1">**</ept> 类，并添加以下属性：</source>
          <target state="new">打开 <bpt id="p1">**</bpt>TodoItem<ept id="p1">**</ept> 类，并添加以下属性：</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>QSTodoService<ept id="p1">**</ept> 中，将现有的客户端声明重写为：</source>
          <target state="new">在 <bpt id="p1">**</bpt>QSTodoService<ept id="p1">**</ept> 中，将现有的客户端声明重写为：</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>然后添加以下方法，以便 <bpt id="p1">**</bpt>AppDelegate<ept id="p1">**</ept> 稍后可以获取客户端来注册推送通知：</source>
          <target state="new">然后添加以下方法，以便 <bpt id="p1">**</bpt>AppDelegate<ept id="p1">**</ept> 稍后可以获取客户端来注册推送通知：</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>AppDelegate<ept id="p1">**</ept> 中，重写 <bpt id="p2">**</bpt>FinishedLaunching<ept id="p2">**</ept> 事件：</source>
          <target state="new">在 <bpt id="p1">**</bpt>AppDelegate<ept id="p1">**</ept> 中，重写 <bpt id="p2">**</bpt>FinishedLaunching<ept id="p2">**</ept> 事件：</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>AppDelegate<ept id="p1">**</ept> 中，重写 <bpt id="p2">**</bpt>RegisteredForRemoteNotifications<ept id="p2">**</ept> 事件：</source>
          <target state="new">在 <bpt id="p1">**</bpt>AppDelegate<ept id="p1">**</ept> 中，重写 <bpt id="p2">**</bpt>RegisteredForRemoteNotifications<ept id="p2">**</ept> 事件：</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>AppDelegate<ept id="p1">**</ept> 中，重写 <bpt id="p2">**</bpt>ReceivedRemoteNotification<ept id="p2">**</ept> 事件：</source>
          <target state="new">在 <bpt id="p1">**</bpt>AppDelegate<ept id="p1">**</ept> 中，重写 <bpt id="p2">**</bpt>ReceivedRemoteNotification<ept id="p2">**</ept> 事件：</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>QSTodoListViewController<ept id="p1">**</ept> 中，修改 <bpt id="p2">**</bpt>OnAdd<ept id="p2">**</ept> 操作以获取存储在 <bpt id="p3">**</bpt>AppDelegeate<ept id="p3">**</ept> 中的设备标记，并将它存储到所添加的 <bpt id="p4">**</bpt>TodoItem<ept id="p4">**</ept> 中。</source>
          <target state="new">在 <bpt id="p1">**</bpt>QSTodoListViewController<ept id="p1">**</ept> 中，修改 <bpt id="p2">**</bpt>OnAdd<ept id="p2">**</ept> 操作以获取存储在 <bpt id="p3">**</bpt>AppDelegeate<ept id="p3">**</ept> 中的设备标记，并将它存储到所添加的 <bpt id="p4">**</bpt>TodoItem<ept id="p4">**</ept> 中。</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>string deviceToken = ((AppDelegate)UIApplication.SharedApplication.Delegate).DeviceToken;</source>
          <target state="new">string deviceToken = ((AppDelegate)UIApplication.SharedApplication.Delegate).DeviceToken;</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>你的应用现已更新，可支持推送通知。</source>
          <target state="new">你的应用现已更新，可支持推送通知。</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="update-scripts"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>在 Azure 经典门户中更新已注册的插入脚本</source>
          <target state="new"><ph id="ph1">&lt;a name="update-scripts"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>在 Azure 经典门户中更新已注册的插入脚本</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">[</bpt><ept id="p1">Azure 经典门户]</ept>中，单击“数据”选项卡，然后单击“TodoItem”表。</source>
          <target state="new">在 <bpt id="p1">[</bpt><ept id="p1">Azure 经典门户]</ept>中，单击“数据”选项卡，然后单击“TodoItem”表。</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>todoitem<ept id="p1">**</ept> 中，单击“脚本”选项卡，然后选择“插入”。</source>
          <target state="new">在 <bpt id="p1">**</bpt>todoitem<ept id="p1">**</ept> 中，单击“脚本”选项卡，然后选择“插入”。</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>将显示当 <bpt id="p1">**</bpt>TodoItem<ept id="p1">**</ept> 表中发生插入时所调用的函数。</source>
          <target state="new">将显示当 <bpt id="p1">**</bpt>TodoItem<ept id="p1">**</ept> 表中发生插入时所调用的函数。</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>将 insert 函数替换为以下代码，然后单击“保存”：</source>
          <target state="new">将 insert 函数替换为以下代码，然后单击“保存”：</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>这将会注册一个新的插入脚本，该脚本使用<bpt id="p1">[</bpt><ept id="p1">apns 对象]</ept>将推送通知（插入的文本）发送到插入请求中提供的设备。</source>
          <target state="new">这将会注册一个新的插入脚本，该脚本使用<bpt id="p1">[</bpt><ept id="p1">apns 对象]</ept>将推送通知（插入的文本）发送到插入请求中提供的设备。</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>此脚本将延迟发送通知，使你有足够的时间关闭应用程序以接收 toast 通知。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>此脚本将延迟发送通知，使你有足够的时间关闭应用程序以接收 toast 通知。</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="test"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>在应用程序中测试推送通知</source>
          <target state="new"><ph id="ph1">&lt;a name="test"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>在应用程序中测试推送通知</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>在支持 iOS 的设备中按“运行”按钮以生成项目并启动应用程序，然后单击“确定”接受推送通知</source>
          <target state="new">在支持 iOS 的设备中按“运行”按钮以生成项目并启动应用程序，然后单击“确定”接受推送通知</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>你必须显式接受来自应用程序的推送通知。此请求只会在首次运行应用程序时出现。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>你必须显式接受来自应用程序的推送通知。此请求只会在首次运行应用程序时出现。</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>在应用中键入有意义的文本（例如 <bpt id="p1">_</bpt>A new Mobile Services task<ept id="p1">_</ept>），然后单击加号 (<bpt id="p2">**</bpt>+<ept id="p2">**</ept>) 图标。</source>
          <target state="new">在应用中键入有意义的文本（例如 <bpt id="p1">_</bpt>A new Mobile Services task<ept id="p1">_</ept>），然后单击加号 (<bpt id="p2">**</bpt>+<ept id="p2">**</ept>) 图标。</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>检查是否已收到通知，然后单击“确定”以取消通知。</source>
          <target state="new">检查是否已收到通知，然后单击“确定”以取消通知。</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>重复步骤 2 并立即关闭应用程序，然后检查是否已显示以下 toast。</source>
          <target state="new">重复步骤 2 并立即关闭应用程序，然后检查是否已显示以下 toast。</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>你已成功完成本教程。</source>
          <target state="new">你已成功完成本教程。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>