<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8d4ad46ad3dd720f24850e55a38c659b716332e</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="update-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>更新应用以调用自定义 API</source>
          <target state="new"><ph id="ph1">&lt;a name="update-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>更新应用以调用自定义 API</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>我们将在现有按钮旁边添加一个标记为"Complete All"（完成全部）的按钮，并将两个按钮都下移一行。在 Eclipse 中，打开您的快速启动项目中的  <bpt id="p1">*</bpt>res\layout\activity_to_do.xml<ept id="p1">*</ept> 文件，找到包含名为  <ph id="ph1">`buttonAddToDo`</ph> 的 <bpt id="p2">**</bpt>Button<ept id="p2">**</ept> 元素的 <bpt id="p3">**</bpt>LinearLayout<ept id="p3">**</ept> 元素。复制 <bpt id="p4">**</bpt>LinearLayout<ept id="p4">**</ept> 并将其紧邻着粘贴在原始元素之后。将 <bpt id="p5">**</bpt>Button<ept id="p5">**</ept> 元素从第一个 <bpt id="p6">**</bpt>LinearLayout<ept id="p6">**</ept> 中删除。</source>
          <target state="new">我们将在现有按钮旁边添加一个标记为"Complete All"（完成全部）的按钮，并将两个按钮都下移一行。在 Eclipse 中，打开您的快速启动项目中的  <bpt id="p1">*</bpt>res\layout\activity_to_do.xml<ept id="p1">*</ept> 文件，找到包含名为  <ph id="ph1">`buttonAddToDo`</ph> 的 <bpt id="p2">**</bpt>Button<ept id="p2">**</ept> 元素的 <bpt id="p3">**</bpt>LinearLayout<ept id="p3">**</ept> 元素。复制 <bpt id="p4">**</bpt>LinearLayout<ept id="p4">**</ept> 并将其紧邻着粘贴在原始元素之后。将 <bpt id="p5">**</bpt>Button<ept id="p5">**</ept> 元素从第一个 <bpt id="p6">**</bpt>LinearLayout<ept id="p6">**</ept> 中删除。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>在第二个 <bpt id="p1">**</bpt>LinearLayout<ept id="p1">**</ept> 中，删除 <bpt id="p2">**</bpt>EditText<ept id="p2">**</ept> 元素，并将以下代码紧邻着添加到现有 <bpt id="p3">**</bpt>Button<ept id="p3">**</ept> 元素之后：</source>
          <target state="new">在第二个 <bpt id="p1">**</bpt>LinearLayout<ept id="p1">**</ept> 中，删除 <bpt id="p2">**</bpt>EditText<ept id="p2">**</ept> 元素，并将以下代码紧邻着添加到现有 <bpt id="p3">**</bpt>Button<ept id="p3">**</ept> 元素之后：</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>这样可将新按钮添加到页面中的单独一行上，位于现有按钮旁边。</source>
          <target state="new">这样可将新按钮添加到页面中的单独一行上，位于现有按钮旁边。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>第二个 <bpt id="p1">**</bpt>LinearLayout<ept id="p1">**</ept> 现在如下所示：</source>
          <target state="new">第二个 <bpt id="p1">**</bpt>LinearLayout<ept id="p1">**</ept> 现在如下所示：</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>打开 res\values\string.xml 文件并添加以下代码行：</source>
          <target state="new">打开 res\values\string.xml 文件并添加以下代码行：</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>在 Package Explorer 的  <bpt id="p1">*</bpt>src<ept id="p1">*</ept> 文件夹中，右键单击项目名称 (<ph id="ph1">`com.example.{your projects name}`</ph>)，然后依次选择<bpt id="p2">**</bpt>"新建"<ept id="p2">**</ept>、<bpt id="p3">**</bpt>"类"<ept id="p3">**</ept>。在对话框的类名称字段中，输入 <bpt id="p4">**</bpt>MarkAllResult<ept id="p4">**</ept>、选择"确定"，然后使用以下代码替代生成的类定义：</source>
          <target state="new">在 Package Explorer 的  <bpt id="p1">*</bpt>src<ept id="p1">*</ept> 文件夹中，右键单击项目名称 (<ph id="ph1">`com.example.{your projects name}`</ph>)，然后依次选择<bpt id="p2">**</bpt>"新建"<ept id="p2">**</ept>、<bpt id="p3">**</bpt>"类"<ept id="p3">**</ept>。在对话框的类名称字段中，输入 <bpt id="p4">**</bpt>MarkAllResult<ept id="p4">**</ept>、选择"确定"，然后使用以下代码替代生成的类定义：</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>此类用于保存自定义 API 返回的行计数值。</source>
          <target state="new">此类用于保存自定义 API 返回的行计数值。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>找到 <bpt id="p1">**</bpt>ToDoActivity.java<ept id="p1">**</ept> 文件中的 <bpt id="p2">**</bpt>refreshItemsFromTable<ept id="p2">**</ept> 方法，并确认  <ph id="ph1">`try`</ph> 块中的第一行代码如下所示：</source>
          <target state="new">找到 <bpt id="p1">**</bpt>ToDoActivity.java<ept id="p1">**</ept> 文件中的 <bpt id="p2">**</bpt>refreshItemsFromTable<ept id="p2">**</ept> 方法，并确认  <ph id="ph1">`try`</ph> 块中的第一行代码如下所示：</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>这样可以筛选项，使得查询不返回已完成的项。</source>
          <target state="new">这样可以筛选项，使得查询不返回已完成的项。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>请确保 <bpt id="p1">**</bpt>ToDoActivity.java<ept id="p1">**</ept> 文件的开头包含下列 import 语句：</source>
          <target state="new">请确保 <bpt id="p1">**</bpt>ToDoActivity.java<ept id="p1">**</ept> 文件的开头包含下列 import 语句：</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>ToDoActivity.java<ept id="p1">**</ept> 文件中，添加以下方法：</source>
          <target state="new">在 <bpt id="p1">**</bpt>ToDoActivity.java<ept id="p1">**</ept> 文件中，添加以下方法：</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>public void completeItem(View view) {</source>
          <target state="new">public void completeItem(View view) {</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>此方法可处理新按钮的 <bpt id="p1">**</bpt>Click<ept id="p1">**</ept> 事件。<bpt id="p2">**</bpt>invokeApi<ept id="p2">**</ept> 方法在客户端上调用，该客户端向新的自定义 API 发送 POST 请求。与任何错误相同，自定义 API 返回的结果也显示在消息对话框中。</source>
          <target state="new">此方法可处理新按钮的 <bpt id="p1">**</bpt>Click<ept id="p1">**</ept> 事件。<bpt id="p2">**</bpt>invokeApi<ept id="p2">**</ept> 方法在客户端上调用，该客户端向新的自定义 API 发送 POST 请求。与任何错误相同，自定义 API 返回的结果也显示在消息对话框中。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>测试应用程序</source>
          <target state="new">测试应用程序</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>在"运行"菜单中，单击"运行"，以便在 Android 模拟器中启动项目。</source>
          <target state="new">在"运行"菜单中，单击"运行"，以便在 Android 模拟器中启动项目。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>这将执行使用 Android SDK 构建的应用，该应用使用客户端库发送一个查询，该查询从你的移动服务返回项目。</source>
          <target state="new">这将执行使用 Android SDK 构建的应用，该应用使用客户端库发送一个查询，该查询从你的移动服务返回项目。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>在应用的"插入 TodoItem"中键入一些文本，然后单击"添加"。</source>
          <target state="new">在应用的"插入 TodoItem"中键入一些文本，然后单击"添加"。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>重复上述步骤，直至您将多个 ToDo 项添加到列表。</source>
          <target state="new">重复上述步骤，直至您将多个 ToDo 项添加到列表。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>单击"完成全部"按钮。</source>
          <target state="new">单击"完成全部"按钮。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>此时会显示一个消息框，指示标记为完成的多个项，并再次执行筛选查询，将所有项从列表中清除。</source>
          <target state="new">此时会显示一个消息框，指示标记为完成的多个项，并再次执行筛选查询，将所有项从列表中清除。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>