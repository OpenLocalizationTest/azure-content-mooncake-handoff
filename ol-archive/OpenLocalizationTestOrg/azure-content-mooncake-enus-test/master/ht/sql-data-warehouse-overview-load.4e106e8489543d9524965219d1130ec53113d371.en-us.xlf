<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">deabab195b63b54c8a5f033edace92a7225c6a62</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>将数据载入 SQL 数据仓库 | Azure</source>
          <target state="new">将数据载入 SQL 数据仓库 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解有关在 SQL 数据仓库中加载数据的常见方案</source>
          <target state="new">了解有关在 SQL 数据仓库中加载数据的常见方案</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>将数据载入 SQL 数据仓库</source>
          <target state="new">将数据载入 SQL 数据仓库</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SQL 数据仓库提供许多选项用于加载数据，包括：</source>
          <target state="new">SQL 数据仓库提供许多选项用于加载数据，包括：</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>PolyBase</source>
          <target state="new">PolyBase</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Azure 数据工厂</source>
          <target state="new">Azure 数据工厂</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>BCP 命令行实用程序</source>
          <target state="new">BCP 命令行实用程序</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>SQL Server 集成服务 (SSIS)</source>
          <target state="new">SQL Server 集成服务 (SSIS)</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>第三方数据加载工具</source>
          <target state="new">第三方数据加载工具</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>尽管上述所有方法可以配合 SQL 数据仓库使用，但 PolyBase 能够以透明方式并行处理 Azure Blob 存储的负载，这使它成为加载数据最快的工具。查看有关<bpt id="p1">[</bpt>使用 PolyBase 加载数据<ept id="p1">][]</ept>的更多信息。此外，由于许多用户都在寻求从本地源初始加载数百 GB 到数十 TB 的数据，因此在以下部分中，我们将针对初始数据的加载提供一些指导。</source>
          <target state="new">尽管上述所有方法可以配合 SQL 数据仓库使用，但 PolyBase 能够以透明方式并行处理 Azure Blob 存储的负载，这使它成为加载数据最快的工具。查看有关<bpt id="p1">[</bpt>使用 PolyBase 加载数据<ept id="p1">][]</ept>的更多信息。此外，由于许多用户都在寻求从本地源初始加载数百 GB 到数十 TB 的数据，因此在以下部分中，我们将针对初始数据的加载提供一些指导。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>从 SQL Server 初始加载到 SQL 数据仓库</source>
          <target state="new">从 SQL Server 初始加载到 SQL 数据仓库</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>从本地 SQL Server 实例加载到 SQL 数据仓库时，建议采用以下步骤：</source>
          <target state="new">从本地 SQL Server 实例加载到 SQL 数据仓库时，建议采用以下步骤：</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>BCP<ept id="p1">**</ept> SQL Server 数据转为平面文件</source>
          <target state="new"><bpt id="p1">**</bpt>BCP<ept id="p1">**</ept> SQL Server 数据转为平面文件</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>使用 <bpt id="p1">**</bpt>AZCopy<ept id="p1">**</ept> 或<bpt id="p2">**</bpt>导入/导出<ept id="p2">**</ept>（适用于大型数据集）将文件转移到 Azure</source>
          <target state="new">使用 <bpt id="p1">**</bpt>AZCopy<ept id="p1">**</ept> 或<bpt id="p2">**</bpt>导入/导出<ept id="p2">**</ept>（适用于大型数据集）将文件转移到 Azure</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>将 PolyBase 配置为从你的存储帐户读取你的文件</source>
          <target state="new">将 PolyBase 配置为从你的存储帐户读取你的文件</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>使用 <bpt id="p1">**</bpt>PolyBase<ept id="p1">**</ept> 创建新表并加载数据</source>
          <target state="new">使用 <bpt id="p1">**</bpt>PolyBase<ept id="p1">**</ept> 创建新表并加载数据</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>在以下部分中，我们将深入探讨每个步骤并提供过程示例。</source>
          <target state="new">在以下部分中，我们将深入探讨每个步骤并提供过程示例。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>从 SQL Server 等系统移动数据之前，建议参阅文档 Web 应用上的<bpt id="p1">[</bpt>迁移架构<ept id="p1">][]</ept>和<bpt id="p2">[</bpt>迁移代码<ept id="p2">][]</ept>文章。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>从 SQL Server 等系统移动数据之前，建议参阅文档 Web 应用上的<bpt id="p1">[</bpt>迁移架构<ept id="p1">][]</ept>和<bpt id="p2">[</bpt>迁移代码<ept id="p2">][]</ept>文章。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>使用 BCP 导出文件</source>
          <target state="new">使用 BCP 导出文件</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>若要准备将文件转移到 Azure，必须将它们导出到平面文件。最佳做法是使用 BCP 命令行实用程序。如果你还没有此实用程序，可以与<bpt id="p1">[</bpt>适用于 SQL Server 的 Microsoft 命令行实用程序<ept id="p1">][]</ept>一起下载。示例 BCP 命令如下所示：</source>
          <target state="new">若要准备将文件转移到 Azure，必须将它们导出到平面文件。最佳做法是使用 BCP 命令行实用程序。如果你还没有此实用程序，可以与<bpt id="p1">[</bpt>适用于 SQL Server 的 Microsoft 命令行实用程序<ept id="p1">][]</ept>一起下载。示例 BCP 命令如下所示：</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>此命令将获取查询的结果，并将它们导出到所选目录中的文件。可以通过一次对不同的表运行多个 BCP 命令，来并行处理该过程。这样可让你对服务器的每个核心最多运行一个 BCP 进程。我们建议以不同的配置尝试几个较小的操作，以确定哪种配置最适合你的环境。</source>
          <target state="new">此命令将获取查询的结果，并将它们导出到所选目录中的文件。可以通过一次对不同的表运行多个 BCP 命令，来并行处理该过程。这样可让你对服务器的每个核心最多运行一个 BCP 进程。我们建议以不同的配置尝试几个较小的操作，以确定哪种配置最适合你的环境。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>此外，在使用 PolyBase 加载时，请注意，PolyBase 尚不支持 UTF-16，所有文件必须采用 UTF-8。可以轻松地完成此操作，方法是在 BCP 命令中包含“-c”标志，或者，可以使用以下代码将平面文件从 UTF-16 转换为 UTF-8：</source>
          <target state="new">此外，在使用 PolyBase 加载时，请注意，PolyBase 尚不支持 UTF-16，所有文件必须采用 UTF-8。可以轻松地完成此操作，方法是在 BCP 命令中包含“-c”标志，或者，可以使用以下代码将平面文件从 UTF-16 转换为 UTF-8：</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>成功将数据导出到文件后，可以开始将它们移到 Azure。完成此操作的方法是使用 AZCopy 或使用导入/导出服务，如以下部分所述。</source>
          <target state="new">成功将数据导出到文件后，可以开始将它们移到 Azure。完成此操作的方法是使用 AZCopy 或使用导入/导出服务，如以下部分所述。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>使用 AZCopy 或导入/导出加载到 Azure</source>
          <target state="new">使用 AZCopy 或导入/导出加载到 Azure</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>如果要移动 5-10 TB 范围或以上的数据，建议使用我们的磁盘传送服务<bpt id="p1">[</bpt>导入/导出<ept id="p1">][]</ept>来完成移动。但是，在我们的研究中，我们已经能够使用公共 Internet 配合 AZCopy，轻松地移动单个数字 TB 范围中的数据。此过程还可以加速或通过 ExpressRoute 扩展。</source>
          <target state="new">如果要移动 5-10 TB 范围或以上的数据，建议使用我们的磁盘传送服务<bpt id="p1">[</bpt>导入/导出<ept id="p1">][]</ept>来完成移动。但是，在我们的研究中，我们已经能够使用公共 Internet 配合 AZCopy，轻松地移动单个数字 TB 范围中的数据。此过程还可以加速或通过 ExpressRoute 扩展。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>以下步骤详细说明如何使用 AZCopy 将数据从本地移入 Azure 存储帐户。如果你在同一区域没有 Azure 存储帐户，可以遵循 <bpt id="p1">[</bpt>Azure 存储空间文档<ept id="p1">][]</ept>创建一个。还可以从不同区域中的存储帐户加载数据，但在此情况下，性能不是最佳的。</source>
          <target state="new">以下步骤详细说明如何使用 AZCopy 将数据从本地移入 Azure 存储帐户。如果你在同一区域没有 Azure 存储帐户，可以遵循 <bpt id="p1">[</bpt>Azure 存储空间文档<ept id="p1">][]</ept>创建一个。还可以从不同区域中的存储帐户加载数据，但在此情况下，性能不是最佳的。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>本文档假设你已安装的 AZCopy 命令行实用程序，而且能够使用 Powershell 运行它。如果不是这样，请遵循 <bpt id="p1">[</bpt>AZCopy 安装说明<ept id="p1">][]</ept>。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>本文档假设你已安装的 AZCopy 命令行实用程序，而且能够使用 Powershell 运行它。如果不是这样，请遵循 <bpt id="p1">[</bpt>AZCopy 安装说明<ept id="p1">][]</ept>。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>现在，已提供一组使用 BCP 创建的文件，因此 AzCopy 只需从 Azure powershell 或通过运行 powershell 脚本来运行。在更高的级别中，运行 AZCopy 所需的提示将采用以下格式：</source>
          <target state="new">现在，已提供一组使用 BCP 创建的文件，因此 AzCopy 只需从 Azure powershell 或通过运行 powershell 脚本来运行。在更高的级别中，运行 AZCopy 所需的提示将采用以下格式：</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>除了基本做法外，我们还建议采用以下最佳实践，使用 AZCopy 加载：</source>
          <target state="new">除了基本做法外，我们还建议采用以下最佳实践，使用 AZCopy 加载：</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>并发连接<ept id="p1">**</ept>：除了增加同时运行的 AZCopy 操作数目外，还可以设置 /NC 参数来进一步并行处理 AZCopy 操作本身，这对目标打开多个并发连接。尽管此参数最高可以设置为 512，但是我们发现最佳的数据传输发生在 256，因此建议测试值的数目，以确定哪个数目最适合你的配置。</source>
          <target state="new"><bpt id="p1">**</bpt>并发连接<ept id="p1">**</ept>：除了增加同时运行的 AZCopy 操作数目外，还可以设置 /NC 参数来进一步并行处理 AZCopy 操作本身，这对目标打开多个并发连接。尽管此参数最高可以设置为 512，但是我们发现最佳的数据传输发生在 256，因此建议测试值的数目，以确定哪个数目最适合你的配置。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Express Route<ept id="p1">**</ept>：如上所述，如果启用 Express Route，可以加速此过程。ExpressRoute 和步骤的概述可在 <bpt id="p2">[</bpt>ExpressRoute 文档<ept id="p2">][]</ept>中找到。</source>
          <target state="new"><bpt id="p1">**</bpt>Express Route<ept id="p1">**</ept>：如上所述，如果启用 Express Route，可以加速此过程。ExpressRoute 和步骤的概述可在 <bpt id="p2">[</bpt>ExpressRoute 文档<ept id="p2">][]</ept>中找到。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>文件夹结构<ept id="p1">**</ept>：若要更轻松地使用 PolyBase 进行传输，请确定每个表都映射到自己的文件夹。这样，稍后使用 PolyBase 加载时，将简化步骤并将其减到最少。换言之，如果表分区成多个文件，或者即使是文件夹中的子目录，也没有任何影响。</source>
          <target state="new"><bpt id="p1">**</bpt>文件夹结构<ept id="p1">**</ept>：若要更轻松地使用 PolyBase 进行传输，请确定每个表都映射到自己的文件夹。这样，稍后使用 PolyBase 加载时，将简化步骤并将其减到最少。换言之，如果表分区成多个文件，或者即使是文件夹中的子目录，也没有任何影响。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>配置 PolyBase</source>
          <target state="new">配置 PolyBase</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>既然数据位于 Azure 存储 Blob 中，我们就可以使用 PolyBase 将它导入 SQL 数据仓库实例。以下步骤仅适用于配置，而且对于每个 SQL 数据仓库实例、用户或存储帐户，其中许多步骤只需完成一次即可。<bpt id="p1">[</bpt>使用 PolyBase 加载数据<ept id="p1">][]</ept>文档中也详细描述了这些步骤。</source>
          <target state="new">既然数据位于 Azure 存储 Blob 中，我们就可以使用 PolyBase 将它导入 SQL 数据仓库实例。以下步骤仅适用于配置，而且对于每个 SQL 数据仓库实例、用户或存储帐户，其中许多步骤只需完成一次即可。<bpt id="p1">[</bpt>使用 PolyBase 加载数据<ept id="p1">][]</ept>文档中也详细描述了这些步骤。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>创建数据库主密钥。<ept id="p1">**</ept> 每个数据库只需完成这项操作一次。</source>
          <target state="new"><bpt id="p1">**</bpt>创建数据库主密钥。<ept id="p1">**</ept> 每个数据库只需完成这项操作一次。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>创建数据库范围的凭据。<ept id="p1">**</ept> 仅当你要创建新的凭据/用户时，才需要创建此操作，否则可以使用前面创建的凭据。</source>
          <target state="new"><bpt id="p1">**</bpt>创建数据库范围的凭据。<ept id="p1">**</ept> 仅当你要创建新的凭据/用户时，才需要创建此操作，否则可以使用前面创建的凭据。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>创建外部文件格式。<ept id="p1">**</ept> 外部文件格式也可以重复使用。仅当你要上载新类型的文件时，才需要创建一个格式。</source>
          <target state="new"><bpt id="p1">**</bpt>创建外部文件格式。<ept id="p1">**</ept> 外部文件格式也可以重复使用。仅当你要上载新类型的文件时，才需要创建一个格式。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>创建外部数据源。<ept id="p1">**</ept> 指向存储帐户时，如果从同一个容器加载，则你可以使用外部数据源。对于 'LOCATION' 参数，请使用以下格式的位置：'wasbs://mycontainer@ test.blob.core.chinacloudapi.cn/path'。</source>
          <target state="new"><bpt id="p1">**</bpt>创建外部数据源。<ept id="p1">**</ept> 指向存储帐户时，如果从同一个容器加载，则你可以使用外部数据源。对于 'LOCATION' 参数，请使用以下格式的位置：'wasbs://mycontainer@ test.blob.core.chinacloudapi.cn/path'。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>适当配置存储帐户后，你可以继续将数据载入 SQL 数据仓库。</source>
          <target state="new">适当配置存储帐户后，你可以继续将数据载入 SQL 数据仓库。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>使用 PolyBase 加载数据</source>
          <target state="new">使用 PolyBase 加载数据</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>配置 PolyBase 后，只需创建一个外部表，指向存储中的数据，然后将该数据映射到 SQL 数据仓库内的新表，即可将数据直接载入 SQL 数据仓库。可以使用以下两个简单命令来完成此操作。</source>
          <target state="new">配置 PolyBase 后，只需创建一个外部表，指向存储中的数据，然后将该数据映射到 SQL 数据仓库内的新表，即可将数据直接载入 SQL 数据仓库。可以使用以下两个简单命令来完成此操作。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>使用 'CREATE EXTERNAL TABLE' 命令来定义数据结构。若要确保快速且有效地捕获数据的状态，我们建议在 SSMS 中编写 SQL Server 表的脚本，然后根据外部表的差异手动调整。在 Azure 中创建外部表之后，它将继续指向相同的位置，即使更新了数据或添加了其他数据。</source>
          <target state="new">使用 'CREATE EXTERNAL TABLE' 命令来定义数据结构。若要确保快速且有效地捕获数据的状态，我们建议在 SSMS 中编写 SQL Server 表的脚本，然后根据外部表的差异手动调整。在 Azure 中创建外部表之后，它将继续指向相同的位置，即使更新了数据或添加了其他数据。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>使用 'CREATE TABLE...AS SELECT' 语句加载数据。</source>
          <target state="new">使用 'CREATE TABLE...AS SELECT' 语句加载数据。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>请注意，你还可以使用更详细的 SELECT 语句，从表加载行的子部分。但是，由于 PolyBase 目前不会将额外的计算资源推送到存储帐户，因此，如果你使用 SELECT 语句加载子部分，速度不会比加载整个数据集更快。</source>
          <target state="new">请注意，你还可以使用更详细的 SELECT 语句，从表加载行的子部分。但是，由于 PolyBase 目前不会将额外的计算资源推送到存储帐户，因此，如果你使用 SELECT 语句加载子部分，速度不会比加载整个数据集更快。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>除了 <ph id="ph1">`CREATE TABLE...AS SELECT`</ph> 语句外，还可以使用 'INSERT...INTO' 语句，将数据从外部表加载到预先存在的表。</source>
          <target state="new">除了 <ph id="ph1">`CREATE TABLE...AS SELECT`</ph> 语句外，还可以使用 'INSERT...INTO' 语句，将数据从外部表加载到预先存在的表。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>基于新加载的数据创建统计信息</source>
          <target state="new">基于新加载的数据创建统计信息</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Azure SQL 数据仓库尚不支持自动创建或自动更新统计信息。为了获得查询的最佳性能，在首次加载数据或者在数据发生重大更改之后，创建所有表的所有列统计信息非常重要。有关统计信息的详细说明，请参阅开发主题组中的<bpt id="p1">[</bpt>统计信息<ept id="p1">][]</ept>主题。以下快速示例说明如何基于此示例中加载的表创建统计信息。</source>
          <target state="new">Azure SQL 数据仓库尚不支持自动创建或自动更新统计信息。为了获得查询的最佳性能，在首次加载数据或者在数据发生重大更改之后，创建所有表的所有列统计信息非常重要。有关统计信息的详细说明，请参阅开发主题组中的<bpt id="p1">[</bpt>统计信息<ept id="p1">][]</ept>主题。以下快速示例说明如何基于此示例中加载的表创建统计信息。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>有关更多开发技巧，请参阅<bpt id="p1">[</bpt>开发概述<ept id="p1">][]</ept>。</source>
          <target state="new">有关更多开发技巧，请参阅<bpt id="p1">[</bpt>开发概述<ept id="p1">][]</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>