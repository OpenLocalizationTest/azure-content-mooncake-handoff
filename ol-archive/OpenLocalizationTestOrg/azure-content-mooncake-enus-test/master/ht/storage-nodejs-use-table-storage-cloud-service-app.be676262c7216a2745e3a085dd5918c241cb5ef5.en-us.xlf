<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e817b6cbaf25e29a1f8e1fb47503578c5bad6f0</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>使用表存储构建 Web 应用 (Node.js) | Azure</source>
          <target state="new">使用表存储构建 Web 应用 (Node.js) | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>本教程以“使用 Express 构建 Web 应用程序”教程为基础，演示如何添加 Azure 存储服务和 Azure 模块。</source>
          <target state="new">本教程以“使用 Express 构建 Web 应用程序”教程为基础，演示如何添加 Azure 存储服务和 Azure 模块。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>使用存储构建 Node.js Web 应用程序</source>
          <target state="new">使用存储构建 Node.js Web 应用程序</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>概述</source>
          <target state="new">概述</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>在本教程中，你将通过将用于 Node.js 的 Azure 客户端库与数据管理服务结合使用，来扩展在<bpt id="p1">[</bpt><ept id="p1">使用 Express 生成 Node.js Web 应用程序]</ept>教程中创建的应用程序。你将扩展你的应用程序以创建可部署到 Azure 的基于 Web 的任务列表应用程序。用户可以通过任务列表来检索任务、添加新任务以及将任务标记为已完成。</source>
          <target state="new">在本教程中，你将通过将用于 Node.js 的 Azure 客户端库与数据管理服务结合使用，来扩展在<bpt id="p1">[</bpt><ept id="p1">使用 Express 生成 Node.js Web 应用程序]</ept>教程中创建的应用程序。你将扩展你的应用程序以创建可部署到 Azure 的基于 Web 的任务列表应用程序。用户可以通过任务列表来检索任务、添加新任务以及将任务标记为已完成。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>任务项存储在 Azure 存储空间中。Azure 存储空间提供了具有容错能力且可用性非常好的非结构化数据存储。Azure 存储空间包含一些可用来存储和访问数据的数据结构，你可以通过 Azure SDK for Node.js 中包含的 API 或通过 REST API 利用存储服务。有关详细信息，请参阅<bpt id="p1">[</bpt><ept id="p1">在 Azure 中存储和访问数据]</ept>。</source>
          <target state="new">任务项存储在 Azure 存储空间中。Azure 存储空间提供了具有容错能力且可用性非常好的非结构化数据存储。Azure 存储空间包含一些可用来存储和访问数据的数据结构，你可以通过 Azure SDK for Node.js 中包含的 API 或通过 REST API 利用存储服务。有关详细信息，请参阅<bpt id="p1">[</bpt><ept id="p1">在 Azure 中存储和访问数据]</ept>。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>本教程假定你已完成 <bpt id="p1">[</bpt><ept id="p1">Node.js Web 应用程序]</ept>和<bpt id="p2">[</bpt>使用 Express 生成 Node.js<ept id="p2">][Node.js Web Application using Express]</ept> 教程。</source>
          <target state="new">本教程假定你已完成 <bpt id="p1">[</bpt><ept id="p1">Node.js Web 应用程序]</ept>和<bpt id="p2">[</bpt>使用 Express 生成 Node.js<ept id="p2">][Node.js Web Application using Express]</ept> 教程。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>你将学习以下内容：</source>
          <target state="new">你将学习以下内容：</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>如何操作 Jade 模板引擎</source>
          <target state="new">如何操作 Jade 模板引擎</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>如何操作 Azure 数据管理服务</source>
          <target state="new">如何操作 Azure 数据管理服务</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>以下是已完成应用程序的屏幕快照：</source>
          <target state="new">以下是已完成应用程序的屏幕快照：</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Internet Explorer 中已完成的网页</source>
          <target state="new">Internet Explorer 中已完成的网页</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>在 Web.Config 中设置存储凭据</source>
          <target state="new">在 Web.Config 中设置存储凭据</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>若要访问 Azure 存储空间，你需要传入存储凭据。为此，您将使用 web.config 应用程序设置。这些设置将作为环境变量传递给 Node，然后再由 Azure SDK 进行读取。</source>
          <target state="new">若要访问 Azure 存储空间，你需要传入存储凭据。为此，您将使用 web.config 应用程序设置。这些设置将作为环境变量传递给 Node，然后再由 Azure SDK 进行读取。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> 仅在将应用程序部署到 Azure 时才使用存储凭据。应用程序在模拟器中运行时将使用存储模拟器。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> 仅在将应用程序部署到 Azure 时才使用存储凭据。应用程序在模拟器中运行时将使用存储模拟器。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>执行下列步骤可检索存储帐户凭据并将这些凭据添加到 web.config 设置中：</source>
          <target state="new">执行下列步骤可检索存储帐户凭据并将这些凭据添加到 web.config 设置中：</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>如果尚未打开 Azure PowerShell，请通过在“开始”菜单中展开“所有程序”、“Azure”，右键单击“Azure PowerShell”，然后选择“以管理员身份运行”启动 Azure PowerShell。</source>
          <target state="new">如果尚未打开 Azure PowerShell，请通过在“开始”菜单中展开“所有程序”、“Azure”，右键单击“Azure PowerShell”，然后选择“以管理员身份运行”启动 Azure PowerShell。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>将目录更改到包含你的应用程序的文件夹。例如，C:\\node\\tasklist\\WebRole1。</source>
          <target state="new">将目录更改到包含你的应用程序的文件夹。例如，C:\\node\\tasklist\\WebRole1。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>从 Azure Powershell 窗口中，输入以下 cmdlet 以检索存储帐户信息：</source>
          <target state="new">从 Azure Powershell 窗口中，输入以下 cmdlet 以检索存储帐户信息：</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>这样可以检索与托管服务关联的存储帐户和帐户密钥的列表。</source>
          <target state="new">这样可以检索与托管服务关联的存储帐户和帐户密钥的列表。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> 由于在你部署服务时 Azure SDK 会创建一个存储帐户，因此在前面的指南中部署你的应用程序之后应当已存在一个存储帐户。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> 由于在你部署服务时 Azure SDK 会创建一个存储帐户，因此在前面的指南中部署你的应用程序之后应当已存在一个存储帐户。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>打开 <bpt id="p1">**</bpt>ServiceDefinition.csdef<ept id="p1">**</ept> 文件，该文件包含将应用程序部署到 Azure 时所使用的环境设置：</source>
          <target state="new">打开 <bpt id="p1">**</bpt>ServiceDefinition.csdef<ept id="p1">**</ept> 文件，该文件包含将应用程序部署到 Azure 时所使用的环境设置：</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>Environment<ept id="p1">**</ept> 元素下插入以下块，使用你要用于部署的存储帐户的帐户名称和主密钥替换 {STORAGE ACCOUNT} 和 {STORAGE ACCESS KEY}：</source>
          <target state="new">在 <bpt id="p1">**</bpt>Environment<ept id="p1">**</ept> 元素下插入以下块，使用你要用于部署的存储帐户的帐户名称和主密钥替换 {STORAGE ACCOUNT} 和 {STORAGE ACCESS KEY}：</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>web.cloud.config 文件内容</source>
          <target state="new">web.cloud.config 文件内容</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>保存该文件并关闭记事本。</source>
          <target state="new">保存该文件并关闭记事本。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>安装其他模块</source>
          <target state="new">安装其他模块</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>使用以下命令在本地安装 azure、[node-uuid]、[nconf] 和 [async] 模块，并将它们的一个条目保存到 <bpt id="p1">**</bpt>package.json<ept id="p1">**</ept> 文件：</source>
          <target state="new">使用以下命令在本地安装 azure、[node-uuid]、[nconf] 和 [async] 模块，并将它们的一个条目保存到 <bpt id="p1">**</bpt>package.json<ept id="p1">**</ept> 文件：</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>此命令的输出看上去应如下所示：</source>
          <target state="new">此命令的输出看上去应如下所示：</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>在 Node 应用程序中使用表服务</source>
          <target state="new">在 Node 应用程序中使用表服务</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>在本节中，你将通过添加一个包含你的任务模型的 <bpt id="p1">**</bpt>task.js<ept id="p1">**</ept> 文件来扩展 <bpt id="p2">**</bpt>express<ept id="p2">**</ept> 命令创建的基本应用程序。你还将修改现有 <bpt id="p3">**</bpt>app.js<ept id="p3">**</ept> 并创建使用该模型的新 <bpt id="p4">**</bpt>tasklist.js<ept id="p4">**</ept> 文件。</source>
          <target state="new">在本节中，你将通过添加一个包含你的任务模型的 <bpt id="p1">**</bpt>task.js<ept id="p1">**</ept> 文件来扩展 <bpt id="p2">**</bpt>express<ept id="p2">**</ept> 命令创建的基本应用程序。你还将修改现有 <bpt id="p3">**</bpt>app.js<ept id="p3">**</ept> 并创建使用该模型的新 <bpt id="p4">**</bpt>tasklist.js<ept id="p4">**</ept> 文件。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>创建模型</source>
          <target state="new">创建模型</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>WebRole1<ept id="p1">**</ept> 目录中，创建一个名为 <bpt id="p2">**</bpt>models<ept id="p2">**</ept> 的新目录。</source>
          <target state="new">在 <bpt id="p1">**</bpt>WebRole1<ept id="p1">**</ept> 目录中，创建一个名为 <bpt id="p2">**</bpt>models<ept id="p2">**</ept> 的新目录。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>models<ept id="p1">**</ept> 目录中，创建一个名为 <bpt id="p2">**</bpt>task.js<ept id="p2">**</ept> 的新文件。此文件将包含你的应用程序创建的任务的模型。</source>
          <target state="new">在 <bpt id="p1">**</bpt>models<ept id="p1">**</ept> 目录中，创建一个名为 <bpt id="p2">**</bpt>task.js<ept id="p2">**</ept> 的新文件。此文件将包含你的应用程序创建的任务的模型。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>task.js<ept id="p1">**</ept> 文件的开头，添加以下代码来引用所需的库：</source>
          <target state="new">在 <bpt id="p1">**</bpt>task.js<ept id="p1">**</ept> 文件的开头，添加以下代码来引用所需的库：</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>接下来，你将添加代码以定义和导出 Task 对象。此对象负责与表连接。</source>
          <target state="new">接下来，你将添加代码以定义和导出 Task 对象。此对象负责与表连接。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>接下来，添加以下代码来定义 Task 对象的其他方法，这些方法允许与表中存储的数据交互：</source>
          <target state="new">接下来，添加以下代码来定义 Task 对象的其他方法，这些方法允许与表中存储的数据交互：</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>保存并关闭 <bpt id="p1">**</bpt>task.js<ept id="p1">**</ept> 文件。</source>
          <target state="new">保存并关闭 <bpt id="p1">**</bpt>task.js<ept id="p1">**</ept> 文件。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>创建控制器</source>
          <target state="new">创建控制器</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>WebRole1/routes<ept id="p1">**</ept> 目录中，创建一个名为 <bpt id="p2">**</bpt>tasklist.js<ept id="p2">**</ept> 的新文件并在文本编辑器中将其打开。</source>
          <target state="new">在 <bpt id="p1">**</bpt>WebRole1/routes<ept id="p1">**</ept> 目录中，创建一个名为 <bpt id="p2">**</bpt>tasklist.js<ept id="p2">**</ept> 的新文件并在文本编辑器中将其打开。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>将以下代码添加到 <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept>。这将加载 <bpt id="p2">**</bpt>tasklist.js<ept id="p2">**</ept> 使用的 azure 和 async 模块。这还将定义 <bpt id="p3">**</bpt>TaskList<ept id="p3">**</ept> 函数，将向该函数传递我们之前定义的 <bpt id="p4">**</bpt>Task<ept id="p4">**</ept> 对象的一个实例：</source>
          <target state="new">将以下代码添加到 <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept>。这将加载 <bpt id="p2">**</bpt>tasklist.js<ept id="p2">**</ept> 使用的 azure 和 async 模块。这还将定义 <bpt id="p3">**</bpt>TaskList<ept id="p3">**</ept> 函数，将向该函数传递我们之前定义的 <bpt id="p4">**</bpt>Task<ept id="p4">**</ept> 对象的一个实例：</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>继续向 <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept> 文件添加用于<bpt id="p2">**</bpt>showTasks<ept id="p2">**</ept>、<bpt id="p3">**</bpt>addTask<ept id="p3">**</ept> 和 <bpt id="p4">**</bpt>completeTasks<ept id="p4">**</ept> 的方法：</source>
          <target state="new">继续向 <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept> 文件添加用于<bpt id="p2">**</bpt>showTasks<ept id="p2">**</ept>、<bpt id="p3">**</bpt>addTask<ept id="p3">**</ept> 和 <bpt id="p4">**</bpt>completeTasks<ept id="p4">**</ept> 的方法：</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>保存 <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept> 文件。</source>
          <target state="new">保存 <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept> 文件。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>修改 app.js</source>
          <target state="new">修改 app.js</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>WebRole1<ept id="p1">**</ept> 目录中，用文本编辑器打开 <bpt id="p2">**</bpt>app.js<ept id="p2">**</ept> 文件。</source>
          <target state="new">在 <bpt id="p1">**</bpt>WebRole1<ept id="p1">**</ept> 目录中，用文本编辑器打开 <bpt id="p2">**</bpt>app.js<ept id="p2">**</ept> 文件。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>在该文件的开头，添加以下内容来加载 azure 模块并设置表名称和分区键：</source>
          <target state="new">在该文件的开头，添加以下内容来加载 azure 模块并设置表名称和分区键：</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>在 app.js 文件中，向下滚动到以下行：</source>
          <target state="new">在 app.js 文件中，向下滚动到以下行：</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>将上面的行替换为下面显示的代码。这将通过与你的存储帐户的连接初始化 <ph id="ph1">&lt;strong&gt;</ph>Task<ph id="ph2">&lt;/strong&gt;</ph> 的实例。这是 <ph id="ph3">&lt;strong&gt;</ph>TaskList<ph id="ph4">&lt;/strong&gt;</ph> 的密码，TaskList 将使用该密码与表服务进行通信：</source>
          <target state="new">将上面的行替换为下面显示的代码。这将通过与你的存储帐户的连接初始化 <ph id="ph1">&lt;strong&gt;</ph>Task<ph id="ph2">&lt;/strong&gt;</ph> 的实例。这是 <ph id="ph3">&lt;strong&gt;</ph>TaskList<ph id="ph4">&lt;/strong&gt;</ph> 的密码，TaskList 将使用该密码与表服务进行通信：</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>保存 <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> 文件。</source>
          <target state="new">保存 <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> 文件。</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>修改索引视图</source>
          <target state="new">修改索引视图</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>将目录更改为 <bpt id="p1">**</bpt>views<ept id="p1">**</ept> 目录并在文本编辑器中打开 <bpt id="p2">**</bpt>index.jade<ept id="p2">**</ept> 文件。</source>
          <target state="new">将目录更改为 <bpt id="p1">**</bpt>views<ept id="p1">**</ept> 目录并在文本编辑器中打开 <bpt id="p2">**</bpt>index.jade<ept id="p2">**</ept> 文件。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>将 <bpt id="p1">**</bpt>index.jade<ept id="p1">**</ept> 文件的内容替换为以下代码。这将定义用于显示现有任务的视图，以及用于添加新任务和将现有任务标记为已完成的表单。</source>
          <target state="new">将 <bpt id="p1">**</bpt>index.jade<ept id="p1">**</ept> 文件的内容替换为以下代码。这将定义用于显示现有任务的视图，以及用于添加新任务和将现有任务标记为已完成的表单。</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>保存并关闭 <bpt id="p1">**</bpt>index.jade<ept id="p1">**</ept> 文件。</source>
          <target state="new">保存并关闭 <bpt id="p1">**</bpt>index.jade<ept id="p1">**</ept> 文件。</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>修改全局布局</source>
          <target state="new">修改全局布局</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>views<ept id="p1">**</ept> 目录中的 <bpt id="p2">**</bpt>layout.jade<ept id="p2">**</ept> 文件用作其他 .<bpt id="p3">**</bpt>jade<ept id="p3">**</ept> 文件的全局模板。在此步骤中，你将对其进行修改以使用 <bpt id="p4">[</bpt>Twitter Bootstrap<ept id="p4">](https://github.com/twbs/bootstrap)</ept>（一个可以轻松设计美观 Web 应用的工具包）。</source>
          <target state="new"><bpt id="p1">**</bpt>views<ept id="p1">**</ept> 目录中的 <bpt id="p2">**</bpt>layout.jade<ept id="p2">**</ept> 文件用作其他 .<bpt id="p3">**</bpt>jade<ept id="p3">**</ept> 文件的全局模板。在此步骤中，你将对其进行修改以使用 <bpt id="p4">[</bpt>Twitter Bootstrap<ept id="p4">](https://github.com/twbs/bootstrap)</ept>（一个可以轻松设计美观 Web 应用的工具包）。</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>下载并提取 <bpt id="p1">[</bpt>Twitter Bootstrap<ept id="p1">](http://getbootstrap.com)</ept> 的文件。将 <bpt id="p2">**</bpt>bootstrap.min.css<ept id="p2">**</ept> 文件从 <bpt id="p3">**</bpt>bootstrap\\dist\\css<ept id="p3">**</ept> 文件夹复制到你的 tasklist 应用程序的 <bpt id="p4">**</bpt>public\\stylesheets<ept id="p4">**</ept> 目录中。</source>
          <target state="new">下载并提取 <bpt id="p1">[</bpt>Twitter Bootstrap<ept id="p1">](http://getbootstrap.com)</ept> 的文件。将 <bpt id="p2">**</bpt>bootstrap.min.css<ept id="p2">**</ept> 文件从 <bpt id="p3">**</bpt>bootstrap\\dist\\css<ept id="p3">**</ept> 文件夹复制到你的 tasklist 应用程序的 <bpt id="p4">**</bpt>public\\stylesheets<ept id="p4">**</ept> 目录中。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>从 <bpt id="p1">**</bpt>views<ept id="p1">**</ept> 文件夹中，用文本编辑器打开 <bpt id="p2">**</bpt>layout.jade<ept id="p2">**</ept> 并将其内容替换为以下代码：</source>
          <target state="new">从 <bpt id="p1">**</bpt>views<ept id="p1">**</ept> 文件夹中，用文本编辑器打开 <bpt id="p2">**</bpt>layout.jade<ept id="p2">**</ept> 并将其内容替换为以下代码：</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>保存 <bpt id="p1">**</bpt>layout.jade<ept id="p1">**</ept> 文件。</source>
          <target state="new">保存 <bpt id="p1">**</bpt>layout.jade<ept id="p1">**</ept> 文件。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>在模拟器中运行应用程序</source>
          <target state="new">在模拟器中运行应用程序</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>使用以下命令在模拟器中启动应用程序。</source>
          <target state="new">使用以下命令在模拟器中启动应用程序。</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>浏览器将打开并显示以下页面：</source>
          <target state="new">浏览器将打开并显示以下页面：</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>标题为 My Task List 的网页，其中所含的表包含任务和用于添加新任务的字段。</source>
          <target state="new">标题为 My Task List 的网页，其中所含的表包含任务和用于添加新任务的字段。</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>使用窗体添加项，或通过将其标记为完成来删除现有项。</source>
          <target state="new">使用窗体添加项，或通过将其标记为完成来删除现有项。</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>将应用程序发布到 Azure</source>
          <target state="new">将应用程序发布到 Azure</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>在 Windows PowerShell 窗口中，调用以下 cmdlet 将托管服务重新部署到 Azure。</source>
          <target state="new">在 Windows PowerShell 窗口中，调用以下 cmdlet 将托管服务重新部署到 Azure。</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>将 <bpt id="p1">**</bpt>myuniquename<ept id="p1">**</ept> 替换为此应用程序的唯一名称。将 <bpt id="p2">**</bpt>datacentername<ept id="p2">**</ept> 替换为 Azure 数据中心的名称，例如“中国北部”。</source>
          <target state="new">将 <bpt id="p1">**</bpt>myuniquename<ept id="p1">**</ept> 替换为此应用程序的唯一名称。将 <bpt id="p2">**</bpt>datacentername<ept id="p2">**</ept> 替换为 Azure 数据中心的名称，例如“中国北部”。</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>部署完成后，你将看到如下响应：</source>
          <target state="new">部署完成后，你将看到如下响应：</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>与先前一样，由于你指定了 <bpt id="p1">**</bpt>-launch<ept id="p1">**</ept> 选项，因此在发布完成后，浏览器将打开并显示正在 Azure 中运行的应用程序。</source>
          <target state="new">与先前一样，由于你指定了 <bpt id="p1">**</bpt>-launch<ept id="p1">**</ept> 选项，因此在发布完成后，浏览器将打开并显示正在 Azure 中运行的应用程序。</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>浏览器窗口中显示 My Task List 页面。URL 表明该页面现在托管在 Azure 上。</source>
          <target state="new">浏览器窗口中显示 My Task List 页面。URL 表明该页面现在托管在 Azure 上。</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>停止并删除应用程序</source>
          <target state="new">停止并删除应用程序</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>在部署应用程序后，你可能希望禁用它，以避免在试用期内产生费用或生成和部署其他应用程序。</source>
          <target state="new">在部署应用程序后，你可能希望禁用它，以避免在试用期内产生费用或生成和部署其他应用程序。</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Azure 将按使用的服务器小时数对 Web 角色实例计费。你的应用程序部署之后就会开始使用服务器时间，即使相关实例并未运行且处于停止状态也是如此。</source>
          <target state="new">Azure 将按使用的服务器小时数对 Web 角色实例计费。你的应用程序部署之后就会开始使用服务器时间，即使相关实例并未运行且处于停止状态也是如此。</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>以下步骤演示了如何停止和删除应用程序。</source>
          <target state="new">以下步骤演示了如何停止和删除应用程序。</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>在 Windows PowerShell 窗口中，使用以下 cmdlet 以停止上一节中创建的服务部署：</source>
          <target state="new">在 Windows PowerShell 窗口中，使用以下 cmdlet 以停止上一节中创建的服务部署：</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>停止服务可能需要花费几分钟时间。在服务停止时，你会收到一条指示服务已停止的消息。</source>
          <target state="new">停止服务可能需要花费几分钟时间。在服务停止时，你会收到一条指示服务已停止的消息。</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>若要删除服务，请调用以下 cmdlet：</source>
          <target state="new">若要删除服务，请调用以下 cmdlet：</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>在出现提示时，输入 <bpt id="p1">**</bpt>Y<ept id="p1">**</ept> 以删除服务。</source>
          <target state="new">在出现提示时，输入 <bpt id="p1">**</bpt>Y<ept id="p1">**</ept> 以删除服务。</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>删除服务可能需要花费几分钟时间。删除服务后，你将收到一条指示服务已被删除的消息。</source>
          <target state="new">删除服务可能需要花费几分钟时间。删除服务后，你将收到一条指示服务已被删除的消息。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>