<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf5794e8bf8ee3c670aa0ec0c684204fe5339deb</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>在 Linux VM 上运行 OpenFOAM 与 HPC Pack | Azure</source>
          <target state="new">在 Linux VM 上运行 OpenFOAM 与 HPC Pack | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>在 Azure 上部署 Microsoft HPC Pack 群集，并在多个 Linux 计算节点上跨 RDMA 网络运行 OpenFOAM 作业。</source>
          <target state="new">在 Azure 上部署 Microsoft HPC Pack 群集，并在多个 Linux 计算节点上跨 RDMA 网络运行 OpenFOAM 作业。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>在 Azure 中的 Linux RDMA 群集上运行 OpenFoam 和 Microsoft HPC Pack</source>
          <target state="new">在 Azure 中的 Linux RDMA 群集上运行 OpenFoam 和 Microsoft HPC Pack</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>本文介绍如何在 Azure 上部署 Microsoft HPC Pack 群集，以及如何在多个跨 Azure 远程直接内存访问 (RDMA) 网络进行连接的 Linux 计算节点上运行 <bpt id="p1">[</bpt>OpenFoam<ept id="p1">](http://openfoam.com/)</ept> 作业和 Intel MPI。</source>
          <target state="new">本文介绍如何在 Azure 上部署 Microsoft HPC Pack 群集，以及如何在多个跨 Azure 远程直接内存访问 (RDMA) 网络进行连接的 Linux 计算节点上运行 <bpt id="p1">[</bpt>OpenFoam<ept id="p1">](http://openfoam.com/)</ept> 作业和 Intel MPI。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>[AZURE.INCLUDE <bpt id="p1">[</bpt>了解部署模型<ept id="p1">](../includes/learn-about-deployment-models-classic-include.md)</ept>]资源管理器模型。</source>
          <target state="new">[AZURE.INCLUDE <bpt id="p1">[</bpt>了解部署模型<ept id="p1">](../includes/learn-about-deployment-models-classic-include.md)</ept>]资源管理器模型。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>OpenFOAM（Open Field Operation and Manipulation 的缩写）是免费提供的开源计算流体动力学 (CFD) 软件包，广泛用于商业和学术组织的工程和科学项目中。它包括各种网格工具，最主要的工具是 snappyHexMesh，这是一个并行处理式网格器，适用于复杂的 CAD 几何以及预处理和后处理。几乎所有进程都是并行运行的，因此用户可以根据自己的需要充分利用计算机硬件。</source>
          <target state="new">OpenFOAM（Open Field Operation and Manipulation 的缩写）是免费提供的开源计算流体动力学 (CFD) 软件包，广泛用于商业和学术组织的工程和科学项目中。它包括各种网格工具，最主要的工具是 snappyHexMesh，这是一个并行处理式网格器，适用于复杂的 CAD 几何以及预处理和后处理。几乎所有进程都是并行运行的，因此用户可以根据自己的需要充分利用计算机硬件。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Microsoft HPC Pack 可提供在 Azure 虚拟机群集上运行各种大型 HPC 和并行应用程序的功能，包括 MPI 应用程序。从 Microsoft HPC Pack 2012 R2 Update 2 开始，HPC Pack 还支持在 HPC Pack 群集中部署的 Linux 计算节点 VM 上运行 Linux HPC 应用程序。有关将 Linux 计算节点与 HPC Pack 一起使用的简介，请参阅 <bpt id="p1">[</bpt>Azure 的 HPC Pack 群集中的 Linux 计算节点入门<ept id="p1">](/documentation/articles/virtual-machines-linux-cluster-hpcpack)</ept>。</source>
          <target state="new">Microsoft HPC Pack 可提供在 Azure 虚拟机群集上运行各种大型 HPC 和并行应用程序的功能，包括 MPI 应用程序。从 Microsoft HPC Pack 2012 R2 Update 2 开始，HPC Pack 还支持在 HPC Pack 群集中部署的 Linux 计算节点 VM 上运行 Linux HPC 应用程序。有关将 Linux 计算节点与 HPC Pack 一起使用的简介，请参阅 <bpt id="p1">[</bpt>Azure 的 HPC Pack 群集中的 Linux 计算节点入门<ept id="p1">](/documentation/articles/virtual-machines-linux-cluster-hpcpack)</ept>。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>本文假设你已对 Linux 系统管理以及如何在 Linux HPC 群集上运行 MPI 工作负荷有所了解。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>本文假设你已对 Linux 系统管理以及如何在 Linux HPC 群集上运行 MPI 工作负荷有所了解。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>先决条件</source>
          <target state="new">先决条件</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>具有 Linux 计算节点的 HPC Pack 群集<ept id="p1">**</ept> - 请参阅 <bpt id="p2">[</bpt>Azure 的 HPC Pack 群集中的 Linux 计算节点入门<ept id="p2">](/documentation/articles/virtual-machines-linux-cluster-hpcpack)</ept>，了解使用 Azure PowerShell 脚本和 Azure 应用商店中的 HPC Pack 映像，在 Azure 上部署 HPC Pack 群集与 Linux 计算节点的先决条件和步骤。如需使用 A8 计算密集型实例来访问 Azure RDMA 网络的其他注意事项，请参阅<bpt id="p3">[</bpt>关于 A8、A9、A10 和 A11 计算密集型实例<ept id="p3">](/documentation/articles/virtual-machines-a8-a9-a10-a11-specs)</ept>。</source>
          <target state="new"><bpt id="p1">**</bpt>具有 Linux 计算节点的 HPC Pack 群集<ept id="p1">**</ept> - 请参阅 <bpt id="p2">[</bpt>Azure 的 HPC Pack 群集中的 Linux 计算节点入门<ept id="p2">](/documentation/articles/virtual-machines-linux-cluster-hpcpack)</ept>，了解使用 Azure PowerShell 脚本和 Azure 应用商店中的 HPC Pack 映像，在 Azure 上部署 HPC Pack 群集与 Linux 计算节点的先决条件和步骤。如需使用 A8 计算密集型实例来访问 Azure RDMA 网络的其他注意事项，请参阅<bpt id="p3">[</bpt>关于 A8、A9、A10 和 A11 计算密集型实例<ept id="p3">](/documentation/articles/virtual-machines-a8-a9-a10-a11-specs)</ept>。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>下面是一个示例 XML 配置文件，可以与脚本配合使用以部署基于 Azure 的 HPC Pack 群集，群集中包含一个 A8 大小的 Windows Server 2012 R2 头节点和 2 个 A8 大小的 SUSE Linux Enterprise Server 12 计算节点。请将订阅和服务名称替换为相应值。</source>
          <target state="new">下面是一个示例 XML 配置文件，可以与脚本配合使用以部署基于 Azure 的 HPC Pack 群集，群集中包含一个 A8 大小的 Windows Server 2012 R2 头节点和 2 个 A8 大小的 SUSE Linux Enterprise Server 12 计算节点。请将订阅和服务名称替换为相应值。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>目前，在 Azure 中实现 Linux RDMA 联网只能在特定的 VM 上进行，这些 VM 是通过 Azure 应用商店中启用了 RDMA 的 SUSE Linux Enterprise Server 12 映像 (b4590d9e3ed742e4a1d46e5424aa335e\_\_suse-sles-12-hpc-v20150708) 创建的。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>目前，在 Azure 中实现 Linux RDMA 联网只能在特定的 VM 上进行，这些 VM 是通过 Azure 应用商店中启用了 RDMA 的 SUSE Linux Enterprise Server 12 映像 (b4590d9e3ed742e4a1d46e5424aa335e\_\_suse-sles-12-hpc-v20150708) 创建的。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Intel MPI<ept id="p1">**</ept> - 若要在 Azure 的 Linux 计算节点上运行 OpenFOAM，你需要 <bpt id="p2">[</bpt>Intel.com site<ept id="p2">](https://software.intel.com/zh-cn/intel-mpi-library/)</ept> 提供的 Intel MPI Library 5 运行时。在后面的步骤中，你需要在 Linux 计算节点上安装 Intel MPI。为此，向 Intel 注册后，请点击确认电子邮件中的链接转到相关网页，并复制相应版本的 Intel MPI 所对应的 .tgz 文件的下载链接。本文基于 Intel MPI 版本 5.0.3.048。</source>
          <target state="new"><bpt id="p1">**</bpt>Intel MPI<ept id="p1">**</ept> - 若要在 Azure 的 Linux 计算节点上运行 OpenFOAM，你需要 <bpt id="p2">[</bpt>Intel.com site<ept id="p2">](https://software.intel.com/zh-cn/intel-mpi-library/)</ept> 提供的 Intel MPI Library 5 运行时。在后面的步骤中，你需要在 Linux 计算节点上安装 Intel MPI。为此，向 Intel 注册后，请点击确认电子邮件中的链接转到相关网页，并复制相应版本的 Intel MPI 所对应的 .tgz 文件的下载链接。本文基于 Intel MPI 版本 5.0.3.048。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>OpenFOAM Source Pack<ept id="p1">**</ept> - 从 <bpt id="p2">[</bpt>OpenFOAM Foundation 站点<ept id="p2">](http://www.openfoam.org/download/source.php)</ept>下载 Linux 版 OpenFOAM Source Pack 软件。本文基于 2.3.1 版的 Source Pack（以 OpenFOAM-2.3.1.tgz 形式供用户下载）。请按本文后面的说明，在 Linux 计算节点上对 OpenFOAM 进行解包和编译。</source>
          <target state="new"><bpt id="p1">**</bpt>OpenFOAM Source Pack<ept id="p1">**</ept> - 从 <bpt id="p2">[</bpt>OpenFOAM Foundation 站点<ept id="p2">](http://www.openfoam.org/download/source.php)</ept>下载 Linux 版 OpenFOAM Source Pack 软件。本文基于 2.3.1 版的 Source Pack（以 OpenFOAM-2.3.1.tgz 形式供用户下载）。请按本文后面的说明，在 Linux 计算节点上对 OpenFOAM 进行解包和编译。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>EnSight<ept id="p1">**</ept>（可选）- 若要查看 OpenFOAM 模拟结果，请下载 Windows 版的 <bpt id="p2">[</bpt>EnSight<ept id="p2">](https://www.ceisoftware.com/download/)</ept> 可视化和分析程序并将其安装在 HPC Pack 群集的头节点上。EnSight 站点提供了许可和下载信息。</source>
          <target state="new"><bpt id="p1">**</bpt>EnSight<ept id="p1">**</ept>（可选）- 若要查看 OpenFOAM 模拟结果，请下载 Windows 版的 <bpt id="p2">[</bpt>EnSight<ept id="p2">](https://www.ceisoftware.com/download/)</ept> 可视化和分析程序并将其安装在 HPC Pack 群集的头节点上。EnSight 站点提供了许可和下载信息。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>在计算节点之间建立互信关系</source>
          <target state="new">在计算节点之间建立互信关系</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>在多个 Linux 节点上运行跨节点作业需要节点彼此信任（通过 <bpt id="p1">**</bpt>rsh<ept id="p1">**</ept> 或 <bpt id="p2">**</bpt>ssh<ept id="p2">**</ept>）。使用 Microsoft HPC Pack IaaS 部署脚本创建 HPC Pack 群集时，此脚本会自动为指定的管理员帐户建立永久性互信关系。对于在群集域中创建的非管理员用户，分配作业时必须在节点之间建立临时互信关系，并在作业完成后销毁互信关系。若要为每个用户执行此操作，请向群集提供一个 HPC Pack 用于建立信任关系的 RSA 密钥对。</source>
          <target state="new">在多个 Linux 节点上运行跨节点作业需要节点彼此信任（通过 <bpt id="p1">**</bpt>rsh<ept id="p1">**</ept> 或 <bpt id="p2">**</bpt>ssh<ept id="p2">**</ept>）。使用 Microsoft HPC Pack IaaS 部署脚本创建 HPC Pack 群集时，此脚本会自动为指定的管理员帐户建立永久性互信关系。对于在群集域中创建的非管理员用户，分配作业时必须在节点之间建立临时互信关系，并在作业完成后销毁互信关系。若要为每个用户执行此操作，请向群集提供一个 HPC Pack 用于建立信任关系的 RSA 密钥对。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>生成一个 RSA 密钥对</source>
          <target state="new">生成一个 RSA 密钥对</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>通过运行 Linux <bpt id="p1">**</bpt>ssh keygen<ept id="p1">**</ept> 命令，可以很容易生成一个 RSA 密钥对，其中包含一个公钥和一个私钥。</source>
          <target state="new">通过运行 Linux <bpt id="p1">**</bpt>ssh keygen<ept id="p1">**</ept> 命令，可以很容易生成一个 RSA 密钥对，其中包含一个公钥和一个私钥。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>登录到 Linux 计算机。</source>
          <target state="new">登录到 Linux 计算机。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>运行以下命令。</source>
          <target state="new">运行以下命令。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>将目录切换到 ~/.ssh 目录。私钥存储在 id\_rsa 中，公钥存储在 id\_rsa.pub 中。</source>
          <target state="new">将目录切换到 ~/.ssh 目录。私钥存储在 id\_rsa 中，公钥存储在 id\_rsa.pub 中。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>私钥和公钥</source>
          <target state="new">私钥和公钥</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>将密钥对添加到 HPC Pack 群集中</source>
          <target state="new">将密钥对添加到 HPC Pack 群集中</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>使用 HPC Pack 管理员帐户（运行部署脚本时设置的管理员帐户），以远程桌面连接方式连接至头节点。</source>
          <target state="new">使用 HPC Pack 管理员帐户（运行部署脚本时设置的管理员帐户），以远程桌面连接方式连接至头节点。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>使用 Windows Server 标准程序，在群集的 Active Directory 域中创建一个域用户帐户。例如，在头节点上使用 Active Directory 用户和计算机工具。本文中的示例假设你创建了一个名为 hpclab\\hpcuser 域用户。</source>
          <target state="new">使用 Windows Server 标准程序，在群集的 Active Directory 域中创建一个域用户帐户。例如，在头节点上使用 Active Directory 用户和计算机工具。本文中的示例假设你创建了一个名为 hpclab\\hpcuser 域用户。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>创建一个名为 C:\\cred.xml 的文件，将 RSA 密钥数据复制到此文件中。你可以在本文末尾的示例文件中找到此文件的一个示例。</source>
          <target state="new">创建一个名为 C:\\cred.xml 的文件，将 RSA 密钥数据复制到此文件中。你可以在本文末尾的示例文件中找到此文件的一个示例。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>打开命令提示符，输入以下命令，为 hpclab\\hpcuser 帐户设置凭据数据。使用 <bpt id="p1">**</bpt>extendeddata<ept id="p1">**</ept> 参数传递你为关键数据创建的 C:\\cred.xml 文件的名称。</source>
          <target state="new">打开命令提示符，输入以下命令，为 hpclab\\hpcuser 帐户设置凭据数据。使用 <bpt id="p1">**</bpt>extendeddata<ept id="p1">**</ept> 参数传递你为关键数据创建的 C:\\cred.xml 文件的名称。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>如果你在一个 Linux 节点上生成 RSA 密钥对，请记住在使用完成后删除这些密钥。如果找到一个现有 id\_rsa 文件或 id\_rsa.pub 文件，HPC Pack 并不会建立互信关系。</source>
          <target state="new">如果你在一个 Linux 节点上生成 RSA 密钥对，请记住在使用完成后删除这些密钥。如果找到一个现有 id\_rsa 文件或 id\_rsa.pub 文件，HPC Pack 并不会建立互信关系。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph>我们不建议在共享群集上以群集管理员的身份运行 Linux 作业，因为由管理员提交的作业会在 Linux 节点的根帐户下运行。由非管理员用户提交的作业会在本地 Linux 用户帐户（名称与作业用户相同）下运行，HPC Pack 会在分配了此作业的所有节点内为这位 Linux 用户建立互信关系。在运行作业之前，你可以在 Linux 节点上手动设置 Linux 用户，也可以在提交作业时由 HPC Pack 自动创建用户。如果 HPC Pack 创建了一个用户，则作业完成后 HPC Pack 会删除此用户。在节点上完成作业后删除密钥，以减少安全威胁。</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph>我们不建议在共享群集上以群集管理员的身份运行 Linux 作业，因为由管理员提交的作业会在 Linux 节点的根帐户下运行。由非管理员用户提交的作业会在本地 Linux 用户帐户（名称与作业用户相同）下运行，HPC Pack 会在分配了此作业的所有节点内为这位 Linux 用户建立互信关系。在运行作业之前，你可以在 Linux 节点上手动设置 Linux 用户，也可以在提交作业时由 HPC Pack 自动创建用户。如果 HPC Pack 创建了一个用户，则作业完成后 HPC Pack 会删除此用户。在节点上完成作业后删除密钥，以减少安全威胁。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>为 Linux 节点设置文件共享</source>
          <target state="new">为 Linux 节点设置文件共享</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>现在，在头节点上对一个文件夹设置标准 SMB 共享，然后在所有 Linux 节点上装载此共享文件夹，就可以支持 Linux 节点使用一个通用路径访问应用程序文件。你可以根据需要使用其他文件共享选项，例如 Azure 文件共享（建议用于多种方案）或 NFS 共享。请参阅 <bpt id="p1">[</bpt>Azure 的 HPC Pack 群集中的 Linux 计算节点入门<ept id="p1">](virtual-machines-linux-cluster-hpcpack.md)</ept>中的文件共享信息和详细步骤。</source>
          <target state="new">现在，在头节点上对一个文件夹设置标准 SMB 共享，然后在所有 Linux 节点上装载此共享文件夹，就可以支持 Linux 节点使用一个通用路径访问应用程序文件。你可以根据需要使用其他文件共享选项，例如 Azure 文件共享（建议用于多种方案）或 NFS 共享。请参阅 <bpt id="p1">[</bpt>Azure 的 HPC Pack 群集中的 Linux 计算节点入门<ept id="p1">](virtual-machines-linux-cluster-hpcpack.md)</ept>中的文件共享信息和详细步骤。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>在头节点上创建一个文件夹，然后通过设置读/写权限与所有人共享。例如，在头节点上将 C:\\OpenFOAM 共享为 \\\SUSE12RDMA-HN\\OpenFOAM。在此处，<bpt id="p1">*</bpt>SUSE12RDMA-HN<ept id="p1">*</ept> 是头节点的主机名。</source>
          <target state="new">在头节点上创建一个文件夹，然后通过设置读/写权限与所有人共享。例如，在头节点上将 C:\\OpenFOAM 共享为 \\\SUSE12RDMA-HN\\OpenFOAM。在此处，<bpt id="p1">*</bpt>SUSE12RDMA-HN<ept id="p1">*</ept> 是头节点的主机名。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>打开 Windows PowerShell 窗口并运行以下命令来装载共享文件夹。</source>
          <target state="new">打开 Windows PowerShell 窗口并运行以下命令来装载共享文件夹。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>第一个命令在 LinuxNodes 组中的所有节点上创建名为 /openfoam 的文件夹。第二个命令将共享文件夹 //SUSE12RDMA-HN/OpenFOAM 装载到 dir\_mode 和 file\_mode 位设置为 777 的 Linux 节点上。该命令中的<bpt id="p1">*</bpt>用户名<ept id="p1">*</ept>和<bpt id="p2">*</bpt>密码<ept id="p2">*</ept>应是头节点上的用户的凭据。</source>
          <target state="new">第一个命令在 LinuxNodes 组中的所有节点上创建名为 /openfoam 的文件夹。第二个命令将共享文件夹 //SUSE12RDMA-HN/OpenFOAM 装载到 dir\_mode 和 file\_mode 位设置为 777 的 Linux 节点上。该命令中的<bpt id="p1">*</bpt>用户名<ept id="p1">*</ept>和<bpt id="p2">*</bpt>密码<ept id="p2">*</ept>应是头节点上的用户的凭据。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>第二个命令中的 “<ph id="ph2">`” 符号是 PowerShell 的转义符号。“`</ph>,” 表示 “,”（逗号字符）是命令的一部分。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>第二个命令中的 “<ph id="ph2">`” 符号是 PowerShell 的转义符号。“`</ph>,” 表示 “,”（逗号字符）是命令的一部分。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>安装 MPI 和 OpenFOAM</source>
          <target state="new">安装 MPI 和 OpenFOAM</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>若要在 RDMA 网络上以 MPI 作业的形式运行 OpenFOAM，你需要使用 Intel MPI 库编译 OpenFOAM。</source>
          <target state="new">若要在 RDMA 网络上以 MPI 作业的形式运行 OpenFOAM，你需要使用 Intel MPI 库编译 OpenFOAM。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>你需要先运行多个 <bpt id="p1">**</bpt>clusrun<ept id="p1">**</ept> 命令，在所有 Linux 节点上安装 Intel MPI 库和 OpenFOAM。使用以前配置的头节点共享在 Linux 节点中共享安装文件。</source>
          <target state="new">你需要先运行多个 <bpt id="p1">**</bpt>clusrun<ept id="p1">**</ept> 命令，在所有 Linux 节点上安装 Intel MPI 库和 OpenFOAM。使用以前配置的头节点共享在 Linux 节点中共享安装文件。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph>这些安装和编译步骤属于示例，需要对 Linux 系统管理有一定的了解，以确保正确安装相关内容（尤其是编译器和库）。你可能需要根据 Intel MPI 和 OpenFOAM 的版本修改某些环境变量或其他设置。有关详细信息，请参阅 <bpt id="p1">[</bpt>Intel MPI Library for Linux 安装指南<ept id="p1">](http://scc.ustc.edu.cn/zlsc/tc4600/intel/impi/INSTALL.html)</ept>和 <bpt id="p2">[</bpt>OpenFOAM Source Pack 安装<ept id="p2">](http://www.openfoam.org/download/source.php)</ept>。</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph>这些安装和编译步骤属于示例，需要对 Linux 系统管理有一定的了解，以确保正确安装相关内容（尤其是编译器和库）。你可能需要根据 Intel MPI 和 OpenFOAM 的版本修改某些环境变量或其他设置。有关详细信息，请参阅 <bpt id="p1">[</bpt>Intel MPI Library for Linux 安装指南<ept id="p1">](http://scc.ustc.edu.cn/zlsc/tc4600/intel/impi/INSTALL.html)</ept>和 <bpt id="p2">[</bpt>OpenFOAM Source Pack 安装<ept id="p2">](http://www.openfoam.org/download/source.php)</ept>。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>安装 Intel MPI</source>
          <target state="new">安装 Intel MPI</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>将下载的 Intel MPI 安装包（在此示例中为 l\_mpi\_p\_5.0.3.048.tgz）保存到头节点上的 C:\\OpenFoam 中，使得 Linux 节点能够从 /openfoam 访问此文件。然后，运行 <bpt id="p1">**</bpt>clusrun<ept id="p1">**</ept> 在所有 Linux 节点上安装 Intel MPI Library。</source>
          <target state="new">将下载的 Intel MPI 安装包（在此示例中为 l\_mpi\_p\_5.0.3.048.tgz）保存到头节点上的 C:\\OpenFoam 中，使得 Linux 节点能够从 /openfoam 访问此文件。然后，运行 <bpt id="p1">**</bpt>clusrun<ept id="p1">**</ept> 在所有 Linux 节点上安装 Intel MPI Library。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>以下命令复制安装包并将其解压缩到每个节点上的 /opt/intel。</source>
          <target state="new">以下命令复制安装包并将其解压缩到每个节点上的 /opt/intel。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>若要以无提示方式安装 Intel MPI Library，请使用 silent.cfg 文件。你可以在本文末尾的示例文件中找到一个示例。将此文件放在共享文件夹 /openfoam 中。有关 silent.cfg 文件的详细信息，请参阅 <bpt id="p1">[</bpt>Intel MPI Library for Linux 安装指南 - 无提示安装<ept id="p1">](http://scc.ustc.edu.cn/zlsc/tc4600/intel/impi/INSTALL.html#silentinstall)</ept>。</source>
          <target state="new">若要以无提示方式安装 Intel MPI Library，请使用 silent.cfg 文件。你可以在本文末尾的示例文件中找到一个示例。将此文件放在共享文件夹 /openfoam 中。有关 silent.cfg 文件的详细信息，请参阅 <bpt id="p1">[</bpt>Intel MPI Library for Linux 安装指南 - 无提示安装<ept id="p1">](http://scc.ustc.edu.cn/zlsc/tc4600/intel/impi/INSTALL.html#silentinstall)</ept>。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph>请确保将你的 silent.cfg 文件另存为带有 Linux 换行（仅 LF，而不是 CR LF）的文本文件。这可确保其在 Linux 节点上正常运行。</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph>请确保将你的 silent.cfg 文件另存为带有 Linux 换行（仅 LF，而不是 CR LF）的文本文件。这可确保其在 Linux 节点上正常运行。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>在静默模式下安装 Intel MPI Library。</source>
          <target state="new">在静默模式下安装 Intel MPI Library。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>配置 MPI</source>
          <target state="new">配置 MPI</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>测试时，应将以下行添加到每个 Linux 节点的 /etc/security/limits.conf 中：</source>
          <target state="new">测试时，应将以下行添加到每个 Linux 节点的 /etc/security/limits.conf 中：</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>更新 limits.conf 文件之后，请重新启动 Linux 节点。例如，使用以下 <bpt id="p1">**</bpt>clusrun<ept id="p1">**</ept> 命令。</source>
          <target state="new">更新 limits.conf 文件之后，请重新启动 Linux 节点。例如，使用以下 <bpt id="p1">**</bpt>clusrun<ept id="p1">**</ept> 命令。</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>重新启动之后，请确保将共享文件夹以 /openfoam 形式装入。</source>
          <target state="new">重新启动之后，请确保将共享文件夹以 /openfoam 形式装入。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>编译并安装 OpenFOAM</source>
          <target state="new">编译并安装 OpenFOAM</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>将下载的 OpenFOAM Source Pack 安装包（在此示例中为 OpenFOAM-2.3.1.tgz）保存到头节点上的 C:\\OpenFoam 中，使得 Linux 节点能够从 /openfoam 访问此文件。然后，运行 <bpt id="p1">**</bpt>clusrun<ept id="p1">**</ept> 在所有 Linux 节点上编译 OpenFOAM。</source>
          <target state="new">将下载的 OpenFOAM Source Pack 安装包（在此示例中为 OpenFOAM-2.3.1.tgz）保存到头节点上的 C:\\OpenFoam 中，使得 Linux 节点能够从 /openfoam 访问此文件。然后，运行 <bpt id="p1">**</bpt>clusrun<ept id="p1">**</ept> 在所有 Linux 节点上编译 OpenFOAM。</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>在每个 Linux 节点上创建 /opt/OpenFOAM 文件夹，将源包复制到该文件夹中，然后解压缩。</source>
          <target state="new">在每个 Linux 节点上创建 /opt/OpenFOAM 文件夹，将源包复制到该文件夹中，然后解压缩。</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>若要通过 Intel MPI Library 编译 OpenFOAM，请先针对 Intel MPI 和 OpenFOAM 设置某些环境变量。使用名为 settings.sh 的 bash 脚本来执行该操作。你可以在本文末尾的示例文件中找到一个示例。将此文件（保存时带有 Linux 换行）置于共享文件夹 /openfoam 中。此文件还包含可以随后用来运行 OpenFOAM 作业的 MPI 和 OpenFOAM 运行时设置。</source>
          <target state="new">若要通过 Intel MPI Library 编译 OpenFOAM，请先针对 Intel MPI 和 OpenFOAM 设置某些环境变量。使用名为 settings.sh 的 bash 脚本来执行该操作。你可以在本文末尾的示例文件中找到一个示例。将此文件（保存时带有 Linux 换行）置于共享文件夹 /openfoam 中。此文件还包含可以随后用来运行 OpenFOAM 作业的 MPI 和 OpenFOAM 运行时设置。</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>安装编译 OpenFOAM 所需的相关程序包。你可能需要添加存储库，具体取决于你的 Linux 分发。运行类似于以下命令的 <bpt id="p1">**</bpt>clusrun<ept id="p1">**</ept> 命令：</source>
          <target state="new">安装编译 OpenFOAM 所需的相关程序包。你可能需要添加存储库，具体取决于你的 Linux 分发。运行类似于以下命令的 <bpt id="p1">**</bpt>clusrun<ept id="p1">**</ept> 命令：</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>运行以下命令以编译 OpenFOAM。编译过程需一段时间才能完成，并且会生成大量可供标准输出的日志信息，因此请使用 <bpt id="p1">**</bpt>/interleaved<ept id="p1">**</ept> 选项来交错显示输出。</source>
          <target state="new">运行以下命令以编译 OpenFOAM。编译过程需一段时间才能完成，并且会生成大量可供标准输出的日志信息，因此请使用 <bpt id="p1">**</bpt>/interleaved<ept id="p1">**</ept> 选项来交错显示输出。</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>命令中的“\`”符号是 PowerShell 的转义符号。“\`&amp;”表示“&amp;”是命令的一部分。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>命令中的“\`”符号是 PowerShell 的转义符号。“\`&amp;”表示“&amp;”是命令的一部分。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>准备运行 OpenFOAM 作业</source>
          <target state="new">准备运行 OpenFOAM 作业</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>现在，请准备好在 2 个 Linux 节点上运行名为 sloshingTank3D 的 MPI 作业，该作业是 OpenFoam 示例之一。</source>
          <target state="new">现在，请准备好在 2 个 Linux 节点上运行名为 sloshingTank3D 的 MPI 作业，该作业是 OpenFoam 示例之一。</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>设置运行时环境</source>
          <target state="new">设置运行时环境</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>在头节点的 Windows PowerShell 窗口运行以下命令，以便在所有 Linux 节点上设置 MPI 和 OpenFOAM 的运行时环境。（此命令仅适用于 SUSE Linux。）</source>
          <target state="new">在头节点的 Windows PowerShell 窗口运行以下命令，以便在所有 Linux 节点上设置 MPI 和 OpenFOAM 的运行时环境。（此命令仅适用于 SUSE Linux。）</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>准备示例数据</source>
          <target state="new">准备示例数据</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>使用以前配置的头节点共享在 Linux 节点中共享文件（装载为 /openfoam）。</source>
          <target state="new">使用以前配置的头节点共享在 Linux 节点中共享文件（装载为 /openfoam）。</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>通过 SSH 连接到 Linux 计算节点之一。</source>
          <target state="new">通过 SSH 连接到 Linux 计算节点之一。</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>如果你尚未执行此操作，请运行以下命令以设置 OpenFOAM 运行时环境。</source>
          <target state="new">如果你尚未执行此操作，请运行以下命令以设置 OpenFOAM 运行时环境。</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>将 sloshingTank3D 示例复制到共享文件夹，然后导航到该文件夹。</source>
          <target state="new">将 sloshingTank3D 示例复制到共享文件夹，然后导航到该文件夹。</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>使用此示例的默认参数时，可能需要数十分钟或更长的时间才能运行，因此你可能需要修改部分参数，使其运行速度加快。一种简单的方法是修改 system/controlDict 文件中的时间步骤变量 deltaT 和 writeInterval，该文件存储与时间控制以及解决方案数据的读取和写入相关的所有输入数据。例如，你可以将 deltaT 的值从 0.05 更改为 0.5，将 writeInterval 的值从 0.05 更改为 0.5。</source>
          <target state="new">使用此示例的默认参数时，可能需要数十分钟或更长的时间才能运行，因此你可能需要修改部分参数，使其运行速度加快。一种简单的方法是修改 system/controlDict 文件中的时间步骤变量 deltaT 和 writeInterval，该文件存储与时间控制以及解决方案数据的读取和写入相关的所有输入数据。例如，你可以将 deltaT 的值从 0.05 更改为 0.5，将 writeInterval 的值从 0.05 更改为 0.5。</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>修改步骤变量</source>
          <target state="new">修改步骤变量</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>在 system/decomposeParDict 文件中指定变量的所需值。此示例使用 2 个 Linux 节点，每个节点 8 个内核，因此可将 numberOfSubdomains 设置为 16，将 hierarchicalCoeffs 的 n 设置为 (1 1 16)，这表示使用 16 个流程并行运行 OpenFOAM。有关如何并行运行 OpenFOAM 的详细信息，请参阅 <bpt id="p1">[</bpt>OpenFOAM 用户指南：3.4 并行运行应用程序<ept id="p1">](http://cfd.direct/openfoam/user-guide/running-applications-parallel/#x12-820003.4)</ept>。</source>
          <target state="new">在 system/decomposeParDict 文件中指定变量的所需值。此示例使用 2 个 Linux 节点，每个节点 8 个内核，因此可将 numberOfSubdomains 设置为 16，将 hierarchicalCoeffs 的 n 设置为 (1 1 16)，这表示使用 16 个流程并行运行 OpenFOAM。有关如何并行运行 OpenFOAM 的详细信息，请参阅 <bpt id="p1">[</bpt>OpenFOAM 用户指南：3.4 并行运行应用程序<ept id="p1">](http://cfd.direct/openfoam/user-guide/running-applications-parallel/#x12-820003.4)</ept>。</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>对过程进行分解</source>
          <target state="new">对过程进行分解</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>从 sloshingTank3D 目录运行以下命令，对示例数据进行准备。</source>
          <target state="new">从 sloshingTank3D 目录运行以下命令，对示例数据进行准备。</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>在头节点上，你会看到示例数据文件已复制到 C:\\OpenFoam\\sloshingTank3D 中。（C:\\OpenFoam 是头节点上的共享文件夹。）</source>
          <target state="new">在头节点上，你会看到示例数据文件已复制到 C:\\OpenFoam\\sloshingTank3D 中。（C:\\OpenFoam 是头节点上的共享文件夹。）</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>头节点上的数据文件</source>
          <target state="new">头节点上的数据文件</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>mpirun 的主机文件</source>
          <target state="new">mpirun 的主机文件</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>在此步骤中，你将创建一个可供 <bpt id="p1">**</bpt>mpirun<ept id="p1">**</ept> 命令使用的主机文件（计算节点的列表）。</source>
          <target state="new">在此步骤中，你将创建一个可供 <bpt id="p1">**</bpt>mpirun<ept id="p1">**</ept> 命令使用的主机文件（计算节点的列表）。</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>在其中一个 Linux 节点的 /openfoam 下创建名为 hostfile 的新文件，使用户可以在所有 Linux 节点的 /openfoam/hostfile 位置访问此文件。</source>
          <target state="new">在其中一个 Linux 节点的 /openfoam 下创建名为 hostfile 的新文件，使用户可以在所有 Linux 节点的 /openfoam/hostfile 位置访问此文件。</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>将 Linux 节点名称写入此文件中。在此示例中，该文件如下所示：</source>
          <target state="new">将 Linux 节点名称写入此文件中。在此示例中，该文件如下所示：</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph>你还可以在头节点的 C:\\OpenFoam\\hostfile 中创建此文件。如果这样做，你可以将你的脚本另存为带有 Linux 换行（仅 LF，而不是 CR LF）的文本文件。这可确保其在 Linux 节点上正常运行。</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph>你还可以在头节点的 C:\\OpenFoam\\hostfile 中创建此文件。如果这样做，你可以将你的脚本另存为带有 Linux 换行（仅 LF，而不是 CR LF）的文本文件。这可确保其在 Linux 节点上正常运行。</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>提交 OpenFOAM 作业</source>
          <target state="new">提交 OpenFOAM 作业</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>现在，你可以在 HPC 群集管理器中提交作业。部分作业任务需要将脚本 hpcimpirun.sh 传递到命令行中。</source>
          <target state="new">现在，你可以在 HPC 群集管理器中提交作业。部分作业任务需要将脚本 hpcimpirun.sh 传递到命令行中。</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>连接到你的群集头节点，然后启动 HPC 群集管理器。</source>
          <target state="new">连接到你的群集头节点，然后启动 HPC 群集管理器。</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>在“资源管理”中，确保 Linux 计算节点处于“联机”状态。如果节点未处于联机状态，请选择它们并单击“联机”。</source>
          <target state="new">在“资源管理”中，确保 Linux 计算节点处于“联机”状态。如果节点未处于联机状态，请选择它们并单击“联机”。</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>在“作业管理”中，单击“新作业”。</source>
          <target state="new">在“作业管理”中，单击“新作业”。</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>为作业输入一个名称，如 <bpt id="p1">_</bpt>sloshingTank3D<ept id="p1">_</ept>。</source>
          <target state="new">为作业输入一个名称，如 <bpt id="p1">_</bpt>sloshingTank3D<ept id="p1">_</ept>。</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>作业详细信息</source>
          <target state="new">作业详细信息</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>在“作业资源”中，将资源类型选为“节点”，并将“最小数量”设置为 2。这样就会在 2 个 Linux 节点上运行此作业，每个节点有 8 个内核（仅限本示例）。</source>
          <target state="new">在“作业资源”中，将资源类型选为“节点”，并将“最小数量”设置为 2。这样就会在 2 个 Linux 节点上运行此作业，每个节点有 8 个内核（仅限本示例）。</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>作业资源</source>
          <target state="new">作业资源</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>向作业添加 4 个任务，任务的命令行和设置如下。</source>
          <target state="new">向作业添加 4 个任务，任务的命令行和设置如下。</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>运行 <ph id="ph2">`source /openfoam/settings.sh`</ph> 将设置 OpenFOAM 和 MPI 运行时环境，因此下述每个任务会在调用 OpenFOAM 命令之前调用它。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>运行 <ph id="ph2">`source /openfoam/settings.sh`</ph> 将设置 OpenFOAM 和 MPI 运行时环境，因此下述每个任务会在调用 OpenFOAM 命令之前调用它。</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>任务 1<ept id="p1">**</ept>。运行 <bpt id="p2">**</bpt>decomposePar<ept id="p2">**</ept>，以便生成并行运行 <bpt id="p3">**</bpt>interDyMFoam<ept id="p3">**</ept> 所需的数据文件。</source>
          <target state="new"><bpt id="p1">**</bpt>任务 1<ept id="p1">**</ept>。运行 <bpt id="p2">**</bpt>decomposePar<ept id="p2">**</ept>，以便生成并行运行 <bpt id="p3">**</bpt>interDyMFoam<ept id="p3">**</ept> 所需的数据文件。</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>为任务分配 1 个节点</source>
          <target state="new">为任务分配 1 个节点</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>命令行<ept id="p1">**</ept> - <ph id="ph1">`source /openfoam/settings.sh &amp;&amp; decomposePar -force &gt; /openfoam/decomposePar${CCP_JOBID}.log`</ph></source>
          <target state="new"><bpt id="p1">**</bpt>命令行<ept id="p1">**</ept> - <ph id="ph1">`source /openfoam/settings.sh &amp;&amp; decomposePar -force &gt; /openfoam/decomposePar${CCP_JOBID}.log`</ph></target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>工作目录<ept id="p1">**</ept> - /openfoam/sloshingTank3D</source>
          <target state="new"><bpt id="p1">**</bpt>工作目录<ept id="p1">**</ept> - /openfoam/sloshingTank3D</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>请参阅下图。以相似的方式配置剩余任务。</source>
          <target state="new">请参阅下图。以相似的方式配置剩余任务。</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>任务 1 详细信息</source>
          <target state="new">任务 1 详细信息</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>任务 2<ept id="p1">**</ept>。并行运行 <bpt id="p2">**</bpt>interDyMFoam<ept id="p2">**</ept> 以计算示例。</source>
          <target state="new"><bpt id="p1">**</bpt>任务 2<ept id="p1">**</ept>。并行运行 <bpt id="p2">**</bpt>interDyMFoam<ept id="p2">**</ept> 以计算示例。</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>为任务分配 2 个节点</source>
          <target state="new">为任务分配 2 个节点</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>命令行<ept id="p1">**</ept> - <ph id="ph1">`source /openfoam/settings.sh &amp;&amp; /openfoam/hpcimpirun.sh interDyMFoam -parallel &gt; /openfoam/interDyMFoam${CCP_JOBID}.log`</ph></source>
          <target state="new"><bpt id="p1">**</bpt>命令行<ept id="p1">**</ept> - <ph id="ph1">`source /openfoam/settings.sh &amp;&amp; /openfoam/hpcimpirun.sh interDyMFoam -parallel &gt; /openfoam/interDyMFoam${CCP_JOBID}.log`</ph></target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>工作目录<ept id="p1">**</ept> - /openfoam/sloshingTank3D</source>
          <target state="new"><bpt id="p1">**</bpt>工作目录<ept id="p1">**</ept> - /openfoam/sloshingTank3D</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>任务 3<ept id="p1">**</ept>。运行 <bpt id="p2">**</bpt>reconstructPar<ept id="p2">**</ept>，将每个 processor\_N\_ 目录的时间目录集合并到一个时间目录集中。</source>
          <target state="new"><bpt id="p1">**</bpt>任务 3<ept id="p1">**</ept>。运行 <bpt id="p2">**</bpt>reconstructPar<ept id="p2">**</ept>，将每个 processor\_N\_ 目录的时间目录集合并到一个时间目录集中。</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>为任务分配 1 个节点</source>
          <target state="new">为任务分配 1 个节点</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>命令行<ept id="p1">**</ept> - <ph id="ph1">`source /openfoam/settings.sh &amp;&amp; reconstructPar &gt; /openfoam/reconstructPar${CCP_JOBID}.log`</ph></source>
          <target state="new"><bpt id="p1">**</bpt>命令行<ept id="p1">**</ept> - <ph id="ph1">`source /openfoam/settings.sh &amp;&amp; reconstructPar &gt; /openfoam/reconstructPar${CCP_JOBID}.log`</ph></target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>工作目录<ept id="p1">**</ept> - /openfoam/sloshingTank3D</source>
          <target state="new"><bpt id="p1">**</bpt>工作目录<ept id="p1">**</ept> - /openfoam/sloshingTank3D</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>任务 4<ept id="p1">**</ept>。并行运行 <bpt id="p2">**</bpt>foamToEnsight<ept id="p2">**</ept>，将 OpenFOAM 结果文件转换成 EnSight 格式，然后将 EnSight 文件置于示例目录的名为 Ensight 的目录中。</source>
          <target state="new"><bpt id="p1">**</bpt>任务 4<ept id="p1">**</ept>。并行运行 <bpt id="p2">**</bpt>foamToEnsight<ept id="p2">**</ept>，将 OpenFOAM 结果文件转换成 EnSight 格式，然后将 EnSight 文件置于示例目录的名为 Ensight 的目录中。</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>为任务分配 2 个节点</source>
          <target state="new">为任务分配 2 个节点</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>命令行<ept id="p1">**</ept> - <ph id="ph1">`source /openfoam/settings.sh &amp;&amp; /openfoam/hpcimpirun.sh foamToEnsight -parallel &gt; /openfoam/foamToEnsight${CCP_JOBID}.log`</ph></source>
          <target state="new"><bpt id="p1">**</bpt>命令行<ept id="p1">**</ept> - <ph id="ph1">`source /openfoam/settings.sh &amp;&amp; /openfoam/hpcimpirun.sh foamToEnsight -parallel &gt; /openfoam/foamToEnsight${CCP_JOBID}.log`</ph></target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>工作目录<ept id="p1">**</ept> - /openfoam/sloshingTank3D</source>
          <target state="new"><bpt id="p1">**</bpt>工作目录<ept id="p1">**</ept> - /openfoam/sloshingTank3D</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>按任务顺序的升序将依赖项添加到这些任务中。</source>
          <target state="new">按任务顺序的升序将依赖项添加到这些任务中。</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>任务依赖项</source>
          <target state="new">任务依赖项</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>单击“提交”运行此作业。</source>
          <target state="new">单击“提交”运行此作业。</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>默认情况下，HPC Pack 将以当前登录的用户帐户提交作业。单击“提交”后，你可能会看到一个对话框，提示你输入用户名和密码。</source>
          <target state="new">默认情况下，HPC Pack 将以当前登录的用户帐户提交作业。单击“提交”后，你可能会看到一个对话框，提示你输入用户名和密码。</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>作业凭据</source>
          <target state="new">作业凭据</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>在某些情况下，HPC Pack 会记住你之前输入的用户信息，并不会显示此对话框。为了使 HPC Pack 再次显示此对话框，在“命令提示符”窗口中输入以下命令，然后提交此作业。</source>
          <target state="new">在某些情况下，HPC Pack 会记住你之前输入的用户信息，并不会显示此对话框。为了使 HPC Pack 再次显示此对话框，在“命令提示符”窗口中输入以下命令，然后提交此作业。</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>根据你为示例设置的参数的不同，此作业可能需要数十分钟到数小时的时间才能完成。在热度地图中，你会看到该作业在 2 个 Linux 节点上运行。</source>
          <target state="new">根据你为示例设置的参数的不同，此作业可能需要数十分钟到数小时的时间才能完成。在热度地图中，你会看到该作业在 2 个 Linux 节点上运行。</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>热度地图</source>
          <target state="new">热度地图</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>每个节点上启动了 8 个进程。</source>
          <target state="new">每个节点上启动了 8 个进程。</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Linux 进程</source>
          <target state="new">Linux 进程</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>作业结束时，可在 C:\\OpenFoam\\sloshingTank3D 下的文件夹中找到作业结果，在 C:\\OpenFoam 中找到日志文件。</source>
          <target state="new">作业结束时，可在 C:\\OpenFoam\\sloshingTank3D 下的文件夹中找到作业结果，在 C:\\OpenFoam 中找到日志文件。</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>在 EnSight 中查看结果</source>
          <target state="new">在 EnSight 中查看结果</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>（可选）使用 <bpt id="p1">[</bpt>EnSight<ept id="p1">](https://www.ceisoftware.com/)</ept> 将 OpenFOAM 作业的结果可视化并对其进行分析。有关在 EnSight 中实现可视化和动画效果的详细信息，请参阅此<bpt id="p2">[</bpt>视频指南<ept id="p2">](http://www.ceisoftware.com/wp-content/uploads/screencasts/vof_visualization/vof_visualization.html)</ept>。</source>
          <target state="new">（可选）使用 <bpt id="p1">[</bpt>EnSight<ept id="p1">](https://www.ceisoftware.com/)</ept> 将 OpenFOAM 作业的结果可视化并对其进行分析。有关在 EnSight 中实现可视化和动画效果的详细信息，请参阅此<bpt id="p2">[</bpt>视频指南<ept id="p2">](http://www.ceisoftware.com/wp-content/uploads/screencasts/vof_visualization/vof_visualization.html)</ept>。</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>在头节点上安装 EnSight 后，启动它。</source>
          <target state="new">在头节点上安装 EnSight 后，启动它。</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>打开 C:\\OpenFoam\\sloshingTank3D\\EnSight\\sloshingTank3D.case。</source>
          <target state="new">打开 C:\\OpenFoam\\sloshingTank3D\\EnSight\\sloshingTank3D.case。</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>你会在查看器中看到一个储槽。</source>
          <target state="new">你会在查看器中看到一个储槽。</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>EnSight 中的罐</source>
          <target state="new">EnSight 中的罐</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>从 <bpt id="p1">**</bpt>internalMesh<ept id="p1">**</ept> 创建“等值面”，然后选择变量 <bpt id="p2">**</bpt>alpha\_water<ept id="p2">**</ept>。</source>
          <target state="new">从 <bpt id="p1">**</bpt>internalMesh<ept id="p1">**</ept> 创建“等值面”，然后选择变量 <bpt id="p2">**</bpt>alpha\_water<ept id="p2">**</ept>。</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>创建等值面</source>
          <target state="new">创建等值面</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>为前一步骤中创建的 <bpt id="p1">**</bpt>Isosurface\_part<ept id="p1">**</ept> 设置颜色。例如，将其设置为水蓝色。</source>
          <target state="new">为前一步骤中创建的 <bpt id="p1">**</bpt>Isosurface\_part<ept id="p1">**</ept> 设置颜色。例如，将其设置为水蓝色。</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>编辑等值面颜色</source>
          <target state="new">编辑等值面颜色</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>从“罐壁”创建“等值体”，方法是：在“部件”面板中选择“罐壁”，然后单击工具栏中的“等值面”按钮。</source>
          <target state="new">从“罐壁”创建“等值体”，方法是：在“部件”面板中选择“罐壁”，然后单击工具栏中的“等值面”按钮。</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>在对话框中，选择“等值体”作为“类型”，然后将“等值体范围”的最小值设置为 0.5。单击“使用所选部件创建”创建等值体。</source>
          <target state="new">在对话框中，选择“等值体”作为“类型”，然后将“等值体范围”的最小值设置为 0.5。单击“使用所选部件创建”创建等值体。</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>为前一步骤中创建的 <bpt id="p1">**</bpt>Iso\_volume\_part<ept id="p1">**</ept> 设置颜色。例如，将其设置为深水蓝色。</source>
          <target state="new">为前一步骤中创建的 <bpt id="p1">**</bpt>Iso\_volume\_part<ept id="p1">**</ept> 设置颜色。例如，将其设置为深水蓝色。</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>设置“罐壁”的颜色。例如，将其设置为透明的白色。</source>
          <target state="new">设置“罐壁”的颜色。例如，将其设置为透明的白色。</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>现在，请单击“播放”查看模拟结果。</source>
          <target state="new">现在，请单击“播放”查看模拟结果。</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>罐的结果</source>
          <target state="new">罐的结果</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>示例文件</source>
          <target state="new">示例文件</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>示例 cred.xml 文件</source>
          <target state="new">示例 cred.xml 文件</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>示例 silent.cfg 文件</source>
          <target state="new">示例 silent.cfg 文件</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>示例 settings.sh 脚本</source>
          <target state="new">示例 settings.sh 脚本</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>实例 hpcimpirun.sh 脚本</source>
          <target state="new">实例 hpcimpirun.sh 脚本</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>