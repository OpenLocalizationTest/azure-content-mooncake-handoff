<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53e2d9c684d84183c7e7d27d392bd4a151ff2cc0</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 中，右键单击“控制器”文件夹，展开“添加”，然后单击“新基架项”。这样将显示“添加基架”对话框。</source>
          <target state="new">在 Visual Studio 中，右键单击“控制器”文件夹，展开“添加”，然后单击“新基架项”。这样将显示“添加基架”对话框。</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>展开“Azure 移动服务”并单击“Azure 移动服务自定义控制器”，然后单击“添加”，提供 <ph id="ph1">`CompleteAllController`</ph> 的“控制器名称”，然后再次单击“添加”。</source>
          <target state="new">展开“Azure 移动服务”并单击“Azure 移动服务自定义控制器”，然后单击“添加”，提供 <ph id="ph1">`CompleteAllController`</ph> 的“控制器名称”，然后再次单击“添加”。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Web API“添加基架”对话框</source>
          <target state="new">Web API“添加基架”对话框</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>这样将创建新的名为 <bpt id="p1">**</bpt>CompleteAllController<ept id="p1">**</ept> 的空控制器类。</source>
          <target state="new">这样将创建新的名为 <bpt id="p1">**</bpt>CompleteAllController<ept id="p1">**</ept> 的空控制器类。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>如果你的对话框没有移动服务特定的基架，请创建新的“Web API 控制器 - 空”。在这个新控制器类中，添加公共 <bpt id="p1">**</bpt>Services<ept id="p1">**</ept> 属性，它将返回 <bpt id="p2">**</bpt>ApiServices<ept id="p2">**</ept> 类型。此属性用于从控制器内部访问服务器特定的设置。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>如果你的对话框没有移动服务特定的基架，请创建新的“Web API 控制器 - 空”。在这个新控制器类中，添加公共 <bpt id="p1">**</bpt>Services<ept id="p1">**</ept> 属性，它将返回 <bpt id="p2">**</bpt>ApiServices<ept id="p2">**</ept> 类型。此属性用于从控制器内部访问服务器特定的设置。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>CompleteAllController.cs<ept id="p1">**</ept> 中，添加以下 <bpt id="p2">**</bpt>using<ept id="p2">**</ept> 语句。将 <ph id="ph1">`todolistService`</ph> 替换为你的移动服务项目的命名空间，它应该是在移动服务名称后追加 <ph id="ph2">`Service`</ph>。</source>
          <target state="new">在 <bpt id="p1">**</bpt>CompleteAllController.cs<ept id="p1">**</ept> 中，添加以下 <bpt id="p2">**</bpt>using<ept id="p2">**</ept> 语句。将 <ph id="ph1">`todolistService`</ph> 替换为你的移动服务项目的命名空间，它应该是在移动服务名称后追加 <ph id="ph2">`Service`</ph>。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>CompleteAllController.cs<ept id="p1">**</ept> 中，添加以下类用于包装发送到客户端的响应。</source>
          <target state="new">在 <bpt id="p1">**</bpt>CompleteAllController.cs<ept id="p1">**</ept> 中，添加以下类用于包装发送到客户端的响应。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>将以下代码添加到新控制器。将 <ph id="ph1">`todolistContext`</ph> 替换为你的数据模型的 DbContext 名称，它应该是在移动服务名称后追加 <ph id="ph2">`Context`</ph>。同样，将 UPDATE 语句中的模式名称替换为你的移动服务名称。此代码使用<bpt id="p1">[</bpt>数据库类<ept id="p1">](http://msdn.microsoft.com/zh-cn/library/system.data.entity.database.aspx)</ept>来直接访问 <bpt id="p2">**</bpt>TodoItems<ept id="p2">**</ept> 表，以便在所有项上设置完成标志。此方法支持 POST 请求，已更改行的数量将以整数值形式返回至客户端。</source>
          <target state="new">将以下代码添加到新控制器。将 <ph id="ph1">`todolistContext`</ph> 替换为你的数据模型的 DbContext 名称，它应该是在移动服务名称后追加 <ph id="ph2">`Context`</ph>。同样，将 UPDATE 语句中的模式名称替换为你的移动服务名称。此代码使用<bpt id="p1">[</bpt>数据库类<ept id="p1">](http://msdn.microsoft.com/zh-cn/library/system.data.entity.database.aspx)</ept>来直接访问 <bpt id="p2">**</bpt>TodoItems<ept id="p2">**</ept> 表，以便在所有项上设置完成标志。此方法支持 POST 请求，已更改行的数量将以整数值形式返回至客户端。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>