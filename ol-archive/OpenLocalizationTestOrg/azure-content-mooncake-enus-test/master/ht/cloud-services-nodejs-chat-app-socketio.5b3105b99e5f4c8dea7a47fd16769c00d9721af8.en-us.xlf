<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d8a4fcc059e1ddecfc68369748e0eff4a55bda0</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>使用 Socket.io 构建 Node.js 应用程序 | Azure</source>
          <target state="new">使用 Socket.io 构建 Node.js 应用程序 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何在 Azure 上托管的 node.js 应用程序中使用 socket.io。</source>
          <target state="new">了解如何在 Azure 上托管的 node.js 应用程序中使用 socket.io。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>在 Azure 云服务中使用 Socket.IO 生成 Node.js 聊天应用程序</source>
          <target state="new">在 Azure 云服务中使用 Socket.IO 生成 Node.js 聊天应用程序</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Socket.IO 在 node.js 服务器和客户端之间提供实时通信。本教程指导你如何在 Azure 上托管一个基于 socket.IO 的聊天应用程序。有关 Socket.IO 的详细信息，请参阅 <bpt id="p1">&lt;</bpt><ept id="p1">http://socket.io/&gt;</ept>。</source>
          <target state="new">Socket.IO 在 node.js 服务器和客户端之间提供实时通信。本教程指导你如何在 Azure 上托管一个基于 socket.IO 的聊天应用程序。有关 Socket.IO 的详细信息，请参阅 <bpt id="p1">&lt;</bpt><ept id="p1">http://socket.io/&gt;</ept>。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>以下是已完成应用程序的屏幕快照：</source>
          <target state="new">以下是已完成应用程序的屏幕快照：</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>显示托管在 Azure 上的服务的浏览器窗口</source>
          <target state="new">显示托管在 Azure 上的服务的浏览器窗口</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>先决条件</source>
          <target state="new">先决条件</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>确保以下产品和版本已安装才能成功完成本文中的示例：</source>
          <target state="new">确保以下产品和版本已安装才能成功完成本文中的示例：</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>安装 <bpt id="p1">[</bpt>Visual Studio 2013<ept id="p1">](https://www.visualstudio.com/zh-cn/downloads/download-visual-studio-vs.aspx)</ept></source>
          <target state="new">安装 <bpt id="p1">[</bpt>Visual Studio 2013<ept id="p1">](https://www.visualstudio.com/zh-cn/downloads/download-visual-studio-vs.aspx)</ept></target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>安装 <bpt id="p1">[</bpt>Node.js<ept id="p1">](https://nodejs.org/download)</ept></source>
          <target state="new">安装 <bpt id="p1">[</bpt>Node.js<ept id="p1">](https://nodejs.org/download)</ept></target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>安装 <bpt id="p1">[</bpt>Python 2.7.10 版<ept id="p1">](https://www.python.org)</ept></source>
          <target state="new">安装 <bpt id="p1">[</bpt>Python 2.7.10 版<ept id="p1">](https://www.python.org)</ept></target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>创建云服务项目</source>
          <target state="new">创建云服务项目</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>以下步骤创建将托管 Socket.IO 应用程序的云服务项目。</source>
          <target state="new">以下步骤创建将托管 Socket.IO 应用程序的云服务项目。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>在“开始”菜单或“开始”屏幕中，搜索 <bpt id="p1">**</bpt>Azure PowerShell<ept id="p1">**</ept>。最后，右键单击“Azure PowerShell”并选择“以管理员身份运行”。</source>
          <target state="new">在“开始”菜单或“开始”屏幕中，搜索 <bpt id="p1">**</bpt>Azure PowerShell<ept id="p1">**</ept>。最后，右键单击“Azure PowerShell”并选择“以管理员身份运行”。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Azure PowerShell 图标</source>
          <target state="new">Azure PowerShell 图标</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>创建一个名为 <bpt id="p1">**</bpt>c:\\node<ept id="p1">**</ept> 的目录。</source>
          <target state="new">创建一个名为 <bpt id="p1">**</bpt>c:\\node<ept id="p1">**</ept> 的目录。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>将目录更改为 <bpt id="p1">**</bpt>c:\\node<ept id="p1">**</ept> 目录</source>
          <target state="new">将目录更改为 <bpt id="p1">**</bpt>c:\\node<ept id="p1">**</ept> 目录</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>输入以下命令以创建一个名为 <bpt id="p1">**</bpt>chatapp<ept id="p1">**</ept> 的新解决方案和一个名为 <bpt id="p2">**</bpt>WorkerRole1<ept id="p2">**</ept> 的辅助角色：</source>
          <target state="new">输入以下命令以创建一个名为 <bpt id="p1">**</bpt>chatapp<ept id="p1">**</ept> 的新解决方案和一个名为 <bpt id="p2">**</bpt>WorkerRole1<ept id="p2">**</ept> 的辅助角色：</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>你将看到以下响应：</source>
          <target state="new">你将看到以下响应：</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>new-azureservice 和 add-azurenodeworkerrole cmdlet 的输出</source>
          <target state="new">new-azureservice 和 add-azurenodeworkerrole cmdlet 的输出</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>下载聊天示例</source>
          <target state="new">下载聊天示例</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>对于此项目，我们将使用 <bpt id="p1">[</bpt><ept id="p1">Socket.IO GitHub 存储库]</ept>中的聊天示例。执行以下步骤下载该示例并将其添加到您先前创建的项目中。</source>
          <target state="new">对于此项目，我们将使用 <bpt id="p1">[</bpt><ept id="p1">Socket.IO GitHub 存储库]</ept>中的聊天示例。执行以下步骤下载该示例并将其添加到您先前创建的项目中。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>使用“克隆”按钮创建存储库的本地副本。你还可以使用“ZIP”按钮下载项目。</source>
          <target state="new">使用“克隆”按钮创建存储库的本地副本。你还可以使用“ZIP”按钮下载项目。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>显示 https://github.com/LearnBoost/socket.io/tree/master/examples/chat 的浏览器窗口，其中 ZIP 下载图标突出显示</source>
          <target state="new">显示 https://github.com/LearnBoost/socket.io/tree/master/examples/chat 的浏览器窗口，其中 ZIP 下载图标突出显示</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>浏览本地存储库的目录结构，找到 <bpt id="p1">**</bpt>examples\\chat<ept id="p1">**</ept> 目录。将该目录的内容复制到早先创建的 <bpt id="p2">**</bpt>C:\\node\\chatapp\\WorkerRole1<ept id="p2">**</ept> 目录。</source>
          <target state="new">浏览本地存储库的目录结构，找到 <bpt id="p1">**</bpt>examples\\chat<ept id="p1">**</ept> 目录。将该目录的内容复制到早先创建的 <bpt id="p2">**</bpt>C:\\node\\chatapp\\WorkerRole1<ept id="p2">**</ept> 目录。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>资源管理器，显示从存档中解压缩的 examples\\chat 目录的内容</source>
          <target state="new">资源管理器，显示从存档中解压缩的 examples\\chat 目录的内容</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>上面的屏幕截图中突出显示的项目是从 <bpt id="p1">**</bpt>examples\\chat<ept id="p1">**</ept> 目录复制的文件</source>
          <target state="new">上面的屏幕截图中突出显示的项目是从 <bpt id="p1">**</bpt>examples\\chat<ept id="p1">**</ept> 目录复制的文件</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>C:\\node\\chatapp\\WorkerRole1<ept id="p1">**</ept> 目录中，删除 <bpt id="p2">**</bpt>server.js<ept id="p2">**</ept> 文件，然后将 <bpt id="p3">**</bpt>app.js<ept id="p3">**</ept> 文件重命名为 <bpt id="p4">**</bpt>server.js<ept id="p4">**</ept>。这将删除前面由 <bpt id="p5">**</bpt>Add-AzureNodeWorkerRole<ept id="p5">**</ept> cmdlet 创建的默认 <bpt id="p6">**</bpt>server.js<ept id="p6">**</ept> 文件并用聊天示例中的应用程序文件取代。</source>
          <target state="new">在 <bpt id="p1">**</bpt>C:\\node\\chatapp\\WorkerRole1<ept id="p1">**</ept> 目录中，删除 <bpt id="p2">**</bpt>server.js<ept id="p2">**</ept> 文件，然后将 <bpt id="p3">**</bpt>app.js<ept id="p3">**</ept> 文件重命名为 <bpt id="p4">**</bpt>server.js<ept id="p4">**</ept>。这将删除前面由 <bpt id="p5">**</bpt>Add-AzureNodeWorkerRole<ept id="p5">**</ept> cmdlet 创建的默认 <bpt id="p6">**</bpt>server.js<ept id="p6">**</ept> 文件并用聊天示例中的应用程序文件取代。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>修改 Server.js 并安装模块</source>
          <target state="new">修改 Server.js 并安装模块</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>在 Azure 模拟器中测试应用程序之前，必须进行一些小改动。对 server.js 文件执行以下步骤：</source>
          <target state="new">在 Azure 模拟器中测试应用程序之前，必须进行一些小改动。对 server.js 文件执行以下步骤：</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 或任何文本编辑器中打开 <bpt id="p1">**</bpt>server.js<ept id="p1">**</ept> 文件。</source>
          <target state="new">在 Visual Studio 或任何文本编辑器中打开 <bpt id="p1">**</bpt>server.js<ept id="p1">**</ept> 文件。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>在 server.js 的开头处查找 <bpt id="p1">**</bpt>Module dependencies<ept id="p1">**</ept> 节，将包含 <bpt id="p2">**</bpt>sio = require('..//..//lib//socket.io')<ept id="p2">**</ept> 的行改为 <bpt id="p3">**</bpt>sio = require('socket.io')<ept id="p3">**</ept>，如下所示：</source>
          <target state="new">在 server.js 的开头处查找 <bpt id="p1">**</bpt>Module dependencies<ept id="p1">**</ept> 节，将包含 <bpt id="p2">**</bpt>sio = require('..//..//lib//socket.io')<ept id="p2">**</ept> 的行改为 <bpt id="p3">**</bpt>sio = require('socket.io')<ept id="p3">**</ept>，如下所示：</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>为了确保应用程序侦听正确端口，请在记事本或你喜爱的编辑器中打开 server.js，然后通过将 <bpt id="p1">**</bpt>3000<ept id="p1">**</ept> 替换为 <bpt id="p2">**</bpt>process.env.port<ept id="p2">**</ept> 来更改以下行，如下所示：</source>
          <target state="new">为了确保应用程序侦听正确端口，请在记事本或你喜爱的编辑器中打开 server.js，然后通过将 <bpt id="p1">**</bpt>3000<ept id="p1">**</ept> 替换为 <bpt id="p2">**</bpt>process.env.port<ept id="p2">**</ept> 来更改以下行，如下所示：</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>保存对 <bpt id="p1">**</bpt>server.js<ept id="p1">**</ept> 所做更改后，使用以下步骤安装所需的模块，然后在 Azure 模拟器中测试应用程序：</source>
          <target state="new">保存对 <bpt id="p1">**</bpt>server.js<ept id="p1">**</ept> 所做更改后，使用以下步骤安装所需的模块，然后在 Azure 模拟器中测试应用程序：</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>使用 <bpt id="p1">**</bpt>Azure PowerShell<ept id="p1">**</ept>，将目录切换到 <bpt id="p2">**</bpt>C:\\node\\chatapp\\WorkerRole1<ept id="p2">**</ept> 目录，然后使用以下命令安装此应用程序所需的模块：</source>
          <target state="new">使用 <bpt id="p1">**</bpt>Azure PowerShell<ept id="p1">**</ept>，将目录切换到 <bpt id="p2">**</bpt>C:\\node\\chatapp\\WorkerRole1<ept id="p2">**</ept> 目录，然后使用以下命令安装此应用程序所需的模块：</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>这将安装 package.json 文件中所列的模块。命令完成后，您应该看到类似下面的输出：</source>
          <target state="new">这将安装 package.json 文件中所列的模块。命令完成后，您应该看到类似下面的输出：</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>npm install 命令的输出</source>
          <target state="new">npm install 命令的输出</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>因为此示例最初是 Socket.IO GitHub 存储库的一部分，并通过相对路径直接引用了 Socket.IO 库，而 package.json 文件中未引用 Socket.IO，所以我们必须通过发出以下命令来安装它：</source>
          <target state="new">因为此示例最初是 Socket.IO GitHub 存储库的一部分，并通过相对路径直接引用了 Socket.IO 库，而 package.json 文件中未引用 Socket.IO，所以我们必须通过发出以下命令来安装它：</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>测试和部署</source>
          <target state="new">测试和部署</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>通过发出以下命令启动模拟器：</source>
          <target state="new">通过发出以下命令启动模拟器：</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>打开浏览器并导航到 ****http://127.0.0.1**。</source>
          <target state="new">打开浏览器并导航到 ****http://127.0.0.1**。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>当浏览器窗口打开时，输入一个昵称，然后按 Enter。这样，您就可以以特定昵称发布消息。要测试多用户功能，请使用同一 URL 打开另外的浏览器窗口但输入不同的昵称。</source>
          <target state="new">当浏览器窗口打开时，输入一个昵称，然后按 Enter。这样，您就可以以特定昵称发布消息。要测试多用户功能，请使用同一 URL 打开另外的浏览器窗口但输入不同的昵称。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>显示来自用户 1 和用户 2 的聊天消息的两个浏览器窗口</source>
          <target state="new">显示来自用户 1 和用户 2 的聊天消息的两个浏览器窗口</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>测试应用程序之后，发出以下命令停止仿真程序：</source>
          <target state="new">测试应用程序之后，发出以下命令停止仿真程序：</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>若要将应用程序部署到 Azure，请使用 <bpt id="p1">**</bpt>Publish-AzureServiceProject<ept id="p1">**</ept> cmdlet。例如：</source>
          <target state="new">若要将应用程序部署到 Azure，请使用 <bpt id="p1">**</bpt>Publish-AzureServiceProject<ept id="p1">**</ept> cmdlet。例如：</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> 确保使用唯一名称，否则发布过程会失败。部署完成后，浏览器将打开并导航到已部署的服务。</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> 确保使用唯一名称，否则发布过程会失败。部署完成后，浏览器将打开并导航到已部署的服务。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>如果你收到一条错误，指出导入的发布配置文件中不存在提供的订阅名称，则你必须先为你的订阅下载和导入发布配置文件，然后再部署到 Azure。请参阅<bpt id="p1">[</bpt>生成 Node.js 应用程序并将其部署到 Azure 云服务<ept id="p1">](/documentation/articles/cloud-services-nodejs-develop-deploy-app)</ept>中的<bpt id="p2">**</bpt>将应用程序部署到 Azure<ept id="p2">**</ept>部分</source>
          <target state="new">如果你收到一条错误，指出导入的发布配置文件中不存在提供的订阅名称，则你必须先为你的订阅下载和导入发布配置文件，然后再部署到 Azure。请参阅<bpt id="p1">[</bpt>生成 Node.js 应用程序并将其部署到 Azure 云服务<ept id="p1">](/documentation/articles/cloud-services-nodejs-develop-deploy-app)</ept>中的<bpt id="p2">**</bpt>将应用程序部署到 Azure<ept id="p2">**</ept>部分</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>显示托管在 Azure 上的服务的浏览器窗口</source>
          <target state="new">显示托管在 Azure 上的服务的浏览器窗口</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> 如果你收到一条错误，指出导入的发布配置文件中不存在提供的订阅名称，则你必须先为你的订阅下载和导入发布配置文件，然后再部署到 Azure。请参阅<bpt id="p1">[</bpt>生成 Node.js 应用程序并将其部署到 Azure 云服务<ept id="p1">](/documentation/articles/cloud-services-nodejs-develop-deploy-app)</ept>中的<bpt id="p2">**</bpt>将应用程序部署到 Azure<ept id="p2">**</ept>部分</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> 如果你收到一条错误，指出导入的发布配置文件中不存在提供的订阅名称，则你必须先为你的订阅下载和导入发布配置文件，然后再部署到 Azure。请参阅<bpt id="p1">[</bpt>生成 Node.js 应用程序并将其部署到 Azure 云服务<ept id="p1">](/documentation/articles/cloud-services-nodejs-develop-deploy-app)</ept>中的<bpt id="p2">**</bpt>将应用程序部署到 Azure<ept id="p2">**</ept>部分</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>你的应用程序现在即可在 Azure 上运行，并可使用 Socket.IO 在不同客户端之间中继聊天消息。</source>
          <target state="new">你的应用程序现在即可在 Azure 上运行，并可使用 Socket.IO 在不同客户端之间中继聊天消息。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> 为简单起见，此示例仅限于连接到同一实例的用户之间的聊天。这意味着如果云服务创建两个辅助角色实例，用户将只能够与连接到同一辅助角色实例的其他用户聊天。要缩放应用程序以使用多个角色实例，你可以使用像 Service Bus 这样的技术在实例之间共享 Socket.IO 存储状态。有关示例，请参阅 <bpt id="p1">[</bpt>Azure SDK for Node.js GitHub 存储库的<ept id="p1">](https://github.com/WindowsAzure/azure-sdk-for-node)</ept>中的服务总线队列和主题使用示例。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> 为简单起见，此示例仅限于连接到同一实例的用户之间的聊天。这意味着如果云服务创建两个辅助角色实例，用户将只能够与连接到同一辅助角色实例的其他用户聊天。要缩放应用程序以使用多个角色实例，你可以使用像 Service Bus 这样的技术在实例之间共享 Socket.IO 存储状态。有关示例，请参阅 <bpt id="p1">[</bpt>Azure SDK for Node.js GitHub 存储库的<ept id="p1">](https://github.com/WindowsAzure/azure-sdk-for-node)</ept>中的服务总线队列和主题使用示例。</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>在本教程中，你已了解如何创建在 Azure 云服务中托管的基本聊天应用程序。若要了解如何在 Azure 网站中托管此应用程序，请参阅<bpt id="p1">[</bpt>在 Azure 网站中使用 Socket.IO 生成 Node.js 聊天应用程序<ept id="p1">][chatwebsite]</ept>。</source>
          <target state="new">在本教程中，你已了解如何创建在 Azure 云服务中托管的基本聊天应用程序。若要了解如何在 Azure 网站中托管此应用程序，请参阅<bpt id="p1">[</bpt>在 Azure 网站中使用 Socket.IO 生成 Node.js 聊天应用程序<ept id="p1">][chatwebsite]</ept>。</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>有关详细信息，另请参阅 <bpt id="p1">[</bpt>Node.js 开发人员中心<ept id="p1">](/develop/nodejs)</ept>。</source>
          <target state="new">有关详细信息，另请参阅 <bpt id="p1">[</bpt>Node.js 开发人员中心<ept id="p1">](/develop/nodejs)</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>