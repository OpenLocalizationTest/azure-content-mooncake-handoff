<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7025941c513e644b8314a6baf62b3709fd7c76a</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>数据库事务单位 (DTU) 是 SQL 数据库中的度量单位，表示数据库基于实际度量（数据库事务）的相对性能。我们执行了针对联机事务处理 (OLTP) 请求通常需要执行的一组操作，然后度量了在全部加载的条件下每秒可以完成多少个事务（这是简短版本，你可以在<bpt id="p1">[</bpt>基准概述<ept id="p1">](/documentation/articles/sql-database-benchmark-overview)</ept>中阅读底层详细信息）。</source>
          <target state="new">数据库事务单位 (DTU) 是 SQL 数据库中的度量单位，表示数据库基于实际度量（数据库事务）的相对性能。我们执行了针对联机事务处理 (OLTP) 请求通常需要执行的一组操作，然后度量了在全部加载的条件下每秒可以完成多少个事务（这是简短版本，你可以在<bpt id="p1">[</bpt>基准概述<ept id="p1">](/documentation/articles/sql-database-benchmark-overview)</ept>中阅读底层详细信息）。</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>基本数据库具有 5 个 DTU，这意味着它每秒可以完成 5 个事务，而高级 P11 数据库具有 1750 个 DTU。</source>
          <target state="new">基本数据库具有 5 个 DTU，这意味着它每秒可以完成 5 个事务，而高级 P11 数据库具有 1750 个 DTU。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>SQL 数据库简介：按层和级别统计的单个数据库 DTU。</source>
          <target state="new">SQL 数据库简介：按层和级别统计的单个数据库 DTU。</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> 如果你要迁移现有的 SQL Server 数据库，则可使用第三方工具 <bpt id="p1">[</bpt>Azure SQL 数据库 DTU 计算器<ept id="p1">](http://dtucalculator.azurewebsites.net/)</ept>对你的数据库在 Azure SQL 数据库中可能需要的性能级别和服务层进行估算。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> 如果你要迁移现有的 SQL Server 数据库，则可使用第三方工具 <bpt id="p1">[</bpt>Azure SQL 数据库 DTU 计算器<ept id="p1">](http://dtucalculator.azurewebsites.net/)</ept>对你的数据库在 Azure SQL 数据库中可能需要的性能级别和服务层进行估算。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>DTU 与 eDTU</source>
          <target state="new">DTU 与 eDTU</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>单个数据库的 DTU 可直接转换为弹性数据库的 eDTU。例如，基本弹性数据库池中的一个数据库最多提供 5 个 eDTU。这与单个基本数据库的性能相同。不同之处在于弹性数据库不会使用池中的任何 eDTU，直到必须这样做。</source>
          <target state="new">单个数据库的 DTU 可直接转换为弹性数据库的 eDTU。例如，基本弹性数据库池中的一个数据库最多提供 5 个 eDTU。这与单个基本数据库的性能相同。不同之处在于弹性数据库不会使用池中的任何 eDTU，直到必须这样做。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SQL 数据库简介：按层列出的弹性池。</source>
          <target state="new">SQL 数据库简介：按层列出的弹性池。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>一个简单的示例可帮助你理解。创建一个具有 1000 个 DTU 的基本弹性数据库池并在其中放置了 800 个数据库。只要在任一时间点只使用 800 个数据库中的 200 个数据库（5 DTU X 200 = 1000），就不会达到池的容量，因此数据库性能不会降低。为清楚起见，此示例进行了简化。涉及的真实数学有些复杂。门户会为你执行数学计算，并会根据历史数据库使用情况提出建议。若要了解建议的工作方式，或者要自己执行数学计算，请参阅<bpt id="p1">[</bpt>弹性数据库池的价格和性能注意事项<ept id="p1">](/documentation/articles/sql-database-elastic-pool-guidance)</ept>。</source>
          <target state="new">一个简单的示例可帮助你理解。创建一个具有 1000 个 DTU 的基本弹性数据库池并在其中放置了 800 个数据库。只要在任一时间点只使用 800 个数据库中的 200 个数据库（5 DTU X 200 = 1000），就不会达到池的容量，因此数据库性能不会降低。为清楚起见，此示例进行了简化。涉及的真实数学有些复杂。门户会为你执行数学计算，并会根据历史数据库使用情况提出建议。若要了解建议的工作方式，或者要自己执行数学计算，请参阅<bpt id="p1">[</bpt>弹性数据库池的价格和性能注意事项<ept id="p1">](/documentation/articles/sql-database-elastic-pool-guidance)</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>