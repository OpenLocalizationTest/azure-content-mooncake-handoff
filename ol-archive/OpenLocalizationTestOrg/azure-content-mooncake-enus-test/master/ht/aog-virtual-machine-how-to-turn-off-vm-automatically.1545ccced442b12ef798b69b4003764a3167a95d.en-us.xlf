<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c720ea04ccc69c608bbea080e26028ce9c302672</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>自动化实现定时关闭虚拟机</source>
          <target state="new">自动化实现定时关闭虚拟机</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>在虚拟机中配置如何定时关闭虚拟机</source>
          <target state="new">在虚拟机中配置如何定时关闭虚拟机</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>自动化实现定时关闭虚拟机</source>
          <target state="new">自动化实现定时关闭虚拟机</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>本文包含以下内容</source>
          <target state="new">本文包含以下内容</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>前提条件</source>
          <target state="new">前提条件</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>如何实现定时关闭虚拟机</source>
          <target state="new">如何实现定时关闭虚拟机</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="prerequisite"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>前提条件</source>
          <target state="new"><ph id="ph1">&lt;a id="prerequisite"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>前提条件</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Controller机器上必须安装 Azure PowerShell，并且要在PowerShell里登录一次Azure, 请参见： <bpt id="p1">[</bpt>如何安装和配置 Azure PowserShell<ept id="p1">](/documentation/articles/powershell-install-configure)</ept></source>
          <target state="new">Controller机器上必须安装 Azure PowerShell，并且要在PowerShell里登录一次Azure, 请参见： <bpt id="p1">[</bpt>如何安装和配置 Azure PowserShell<ept id="p1">](/documentation/articles/powershell-install-configure)</ept></target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="operation"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何实现定时关闭虚拟机</source>
          <target state="new"><ph id="ph1">&lt;a id="operation"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>如何实现定时关闭虚拟机</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>配好Azure PowerShell以后，就可以用下面这个脚本创建定时关机任务。把下面的代码另存为一个 PowerShell 脚本保存到本地磁盘，比如叫<ph id="ph1">`Stop-AzureVMsOnSchedule.ps1`</ph></source>
          <target state="new">配好Azure PowerShell以后，就可以用下面这个脚本创建定时关机任务。把下面的代码另存为一个 PowerShell 脚本保存到本地磁盘，比如叫<ph id="ph1">`Stop-AzureVMsOnSchedule.ps1`</ph></target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>param(</source>
          <target state="new">param(</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The name of the VM(s) to start on schedule.</source>
          <target state="new">The name of the VM(s) to start on schedule.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Can be wildcard pattern.</source>
          <target state="new">Can be wildcard pattern.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>[Parameter(Mandatory = $true)]</source>
          <target state="new">[Parameter(Mandatory = $true)]</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>[string]$VMName,</source>
          <target state="new">[string]$VMName,</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The service name that $VMName belongs to.</source>
          <target state="new">The service name that $VMName belongs to.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>[Parameter(Mandatory = $true)]</source>
          <target state="new">[Parameter(Mandatory = $true)]</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>[string]$ServiceName,</source>
          <target state="new">[string]$ServiceName,</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The name of the scheduled task.</source>
          <target state="new">The name of the scheduled task.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>[Parameter(Mandatory = $true)]</source>
          <target state="new">[Parameter(Mandatory = $true)]</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>[string]$TaskName,</source>
          <target state="new">[string]$TaskName,</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The name of the "Stop" scheduled tasks.</source>
          <target state="new">The name of the "Stop" scheduled tasks.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>[Parameter(Mandatory = $true)]</source>
          <target state="new">[Parameter(Mandatory = $true)]</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>[DateTime]$At</source>
          <target state="new">[DateTime]$At</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The script has been tested on Powershell 3.0</source>
          <target state="new">The script has been tested on Powershell 3.0</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Set-StrictMode -Version 3</source>
          <target state="new">Set-StrictMode -Version 3</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Following modifies the Write-Verbose behavior to turn the messages on globally for this session</source>
          <target state="new">Following modifies the Write-Verbose behavior to turn the messages on globally for this session</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>$VerbosePreference = "Continue"</source>
          <target state="new">$VerbosePreference = "Continue"</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Check if Azure Powershell is avaiable</source>
          <target state="new">Check if Azure Powershell is avaiable</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>if ((Get-Module -ListAvailable Azure) -eq $null)</source>
          <target state="new">if ((Get-Module -ListAvailable Azure) -eq $null)</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>throw "Azure Powershell not found!</source>
          <target state="new">throw "Azure Powershell not found!</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Please install from http://www.windowsazure.com/en-us/downloads/#cmd-line-tools"</source>
          <target state="new">Please install from http://www.windowsazure.com/en-us/downloads/#cmd-line-tools"</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Define a scheduled task to stop the VM(s) on a schedule.</source>
          <target state="new">Define a scheduled task to stop the VM(s) on a schedule.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>$stopAzureVM = "Stop-AzureVM -Name " + $VMName + " -ServiceName " + $ServiceName + " -Force -Verbose"</source>
          <target state="new">$stopAzureVM = "Stop-AzureVM -Name " + $VMName + " -ServiceName " + $ServiceName + " -Force -Verbose"</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>$stopTaskTrigger = New-ScheduledTaskTrigger -Daily -At $At</source>
          <target state="new">$stopTaskTrigger = New-ScheduledTaskTrigger -Daily -At $At</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>$stopTaskAction = New-ScheduledTaskAction -Execute "PowerShell.exe" -Argument $stopAzureVM</source>
          <target state="new">$stopTaskAction = New-ScheduledTaskAction -Execute "PowerShell.exe" -Argument $stopAzureVM</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>$startTaskSettingsSet = New-ScheduledTaskSettingsSet  -AllowStartIfOnBatteries</source>
          <target state="new">$startTaskSettingsSet = New-ScheduledTaskSettingsSet  -AllowStartIfOnBatteries</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>$stopScheduledTask = New-ScheduledTask -Action $stopTaskAction -Trigger $stopTaskTrigger -Settings $startTaskSettingsSet</source>
          <target state="new">$stopScheduledTask = New-ScheduledTask -Action $stopTaskAction -Trigger $stopTaskTrigger -Settings $startTaskSettingsSet</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Register the scheduled tasks to start and stop the VM(s).</source>
          <target state="new">Register the scheduled tasks to start and stop the VM(s).</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Register-ScheduledTask -TaskName $TaskName -InputObject $stopScheduledTask</source>
          <target state="new">Register-ScheduledTask -TaskName $TaskName -InputObject $stopScheduledTask</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>还是刚才那个文件，右键用PowerShell运行，按PowerShell提示输入四个必要的参数：</source>
          <target state="new">还是刚才那个文件，右键用PowerShell运行，按PowerShell提示输入四个必要的参数：</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>VMName, 要关闭的Virtual Machine名称</source>
          <target state="new">VMName, 要关闭的Virtual Machine名称</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>ServiceName, 关联的服务名称</source>
          <target state="new">ServiceName, 关联的服务名称</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>TaskName, 任务名称</source>
          <target state="new">TaskName, 任务名称</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>At，具体操作时间</source>
          <target state="new">At，具体操作时间</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>然后到计划任务列表里就能刷出这个定时关机的任务了，可以测一下：</source>
          <target state="new">然后到计划任务列表里就能刷出这个定时关机的任务了，可以测一下：</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>到指定时候后PowerShell开始关机。</source>
          <target state="new">到指定时候后PowerShell开始关机。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>到Portal里验证一下，已经成功关机了.</source>
          <target state="new">到Portal里验证一下，已经成功关机了.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>