{
  "nodes": [
    {
      "content": "我在 Azure 自动化中的第一个 PowerShell 工作流 Runbook | Azure",
      "pos": [
        27,
        75
      ]
    },
    {
      "content": "本教程指导你使用 PowerShell 工作流创建、测试和发布一个简单的文本 Runbook。文中涵盖了多个概念，例如，对 Azure 资源进行身份验证和输入参数。",
      "pos": [
        94,
        176
      ]
    },
    {
      "content": "我的第一个 PowerShell 工作流 Runbook",
      "pos": [
        383,
        411
      ]
    },
    {
      "content": "本教程将指导你在 Azure 自动化中创建 PowerShell 工作流 Runbook。我们将从一个简单的 Runbook 开始，我们将测试和发布该 Runbook，同时介绍如何跟踪 Runbook 作业的状态。然后我们将通过修改 Runbook 来实际管理 Azure 资源，这种情况下将启动 Azure 虚拟机。然后我们将通过添加 Runbook 参数来使该 Runbook 更稳健。",
      "pos": [
        414,
        609
      ]
    },
    {
      "content": "先决条件",
      "pos": [
        614,
        618
      ]
    },
    {
      "content": "为了完成本教程，你需要满足以下条件。",
      "pos": [
        620,
        638
      ]
    },
    {
      "pos": [
        642,
        700
      ],
      "content": "Azure 订阅创建新存储帐户。如果你没有订阅，可以<bpt id=\"p1\">[</bpt>注册免费试用版<ept id=\"p1\">](/pricing/1rmb-trial/)</ept>。"
    },
    {
      "pos": [
        703,
        773
      ],
      "content": "用于保存 Runbook 的<bpt id=\"p1\">[</bpt>自动化帐户<ept id=\"p1\">](/documentation/articles/automation-configuring)</ept>。"
    },
    {
      "content": "Azure 虚拟机。我们将停止并启动该计算机，因此其不应为生产用计算机。",
      "pos": [
        776,
        812
      ]
    },
    {
      "pos": [
        815,
        931
      ],
      "content": "用于对 Azure 资源进行身份验证的 <bpt id=\"p1\">[</bpt>Azure Active Directory 和自动化资产<ept id=\"p1\">](/documentation/articles/automation-configuring)</ept>。此用户必须有权启动和停止虚拟机。"
    },
    {
      "content": "步骤 1 - 创建新的 Runbook",
      "pos": [
        936,
        955
      ]
    },
    {
      "pos": [
        957,
        997
      ],
      "content": "我们首先创建一个输出文本 <bpt id=\"p1\">*</bpt>Hello World<ept id=\"p1\">*</ept> 的简单 Runbook 。"
    },
    {
      "content": "在 Azure 管理门户中，单击“新建”&gt;“应用程序服务”&gt;“自动化”&gt;“RUNBOOK”&gt;“快速创建”。",
      "pos": [
        1002,
        1055
      ]
    },
    {
      "pos": [
        1059,
        1141
      ],
      "content": "输入 <bpt id=\"p1\">**</bpt>RUNBOOK 名称<ept id=\"p1\">**</ept>和<bpt id=\"p2\">**</bpt>说明<ept id=\"p2\">**</ept>，然后选择一个<bpt id=\"p3\">**</bpt>自动化帐户<ept id=\"p3\">**</ept>。如果你没有自动化帐户，可以通过选择“创建新的自动化帐户”并输入“帐户名”来创建一个"
    },
    {
      "content": "创建 Runbook 后，可以在自动化帐户的“RUNBOOK”磁贴中找到它。",
      "pos": [
        1145,
        1183
      ]
    },
    {
      "content": "单击 Runbook 的“创作”磁贴以启用文本编辑器。",
      "pos": [
        1187,
        1214
      ]
    },
    {
      "content": "步骤 2 - 将代码添加到 Runbook",
      "pos": [
        1219,
        1240
      ]
    },
    {
      "content": "你可以直接将代码键入 Runbook 中，或者通过“库”控件选择 cmdlet、Runbook 和资产，并使用任何相关的参数将它们添加到 Runbook。在本演练中，我们将直接键入 Runbook。",
      "pos": [
        1242,
        1341
      ]
    },
    {
      "content": "我们的 Runbook 目前是空的，只有必需的<bpt id=\"p1\">*</bpt>工作流<ept id=\"p1\">*</ept>关键字、Runbook 名称以及括住整个工作流的大括号。",
      "pos": [
        1346,
        1402
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Runbook 控制<ph id=\"ph2\">](./media/automation-first-runbook-textual/empty-runbook.png)</ph>",
      "pos": [
        1407,
        1480
      ]
    },
    {
      "content": "在括号之间键入 <bpt id=\"p1\">*</bpt>Write-Output \"Hello World\"<ept id=\"p1\">*</ept>。",
      "pos": [
        1484,
        1521
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Hello world<ph id=\"ph2\">](./media/automation-first-runbook-textual/hello-world.png)</ph>",
      "pos": [
        1526,
        1598
      ]
    },
    {
      "content": "通过单击“保存”来保存 Runbook。",
      "pos": [
        1604,
        1624
      ]
    },
    {
      "content": "步骤 3 - 测试 Runbook",
      "pos": [
        1633,
        1650
      ]
    },
    {
      "content": "在我们发布 Runbook 使其可在生产中使用之前，我们要对其进行测试以确保其能正常工作。测试 Runbook 时，你可以运行其“草稿”版本并以交互方式查看其输出。",
      "pos": [
        1652,
        1734
      ]
    },
    {
      "content": "单击“测试”打开“测试”窗格。然后单击“是”确认。",
      "pos": [
        1740,
        1765
      ]
    },
    {
      "content": "几秒钟后，你将看到输出窗格中显示消息“Hello World”。",
      "pos": [
        1769,
        1801
      ]
    },
    {
      "content": "步骤 4 - 发布和启动 Runbook",
      "pos": [
        1806,
        1826
      ]
    },
    {
      "content": "我们刚刚创建的 Runbook 仍处于草稿模式。我们需要发布该 Runbook，然后才可将其用于生产。当发布 Runbook 时，你可以用草稿版本覆盖现有的已发布版本。在本例中，我们还没有已发布版本，因为我们刚刚创建 Runbook。",
      "pos": [
        1828,
        1945
      ]
    },
    {
      "content": "单击“发布”以发布该 Runbook，然后在出现提示时单击“是”。",
      "pos": [
        1950,
        1983
      ]
    },
    {
      "content": "如果你在自动化帐户的“Runbook”磁贴中查看该 Runbook，它的“创作状态”会显示为“已发布”。",
      "pos": [
        1988,
        2040
      ]
    },
    {
      "content": "单击“启动”以启动 Runbook，然后在出现提示时单击“是”。",
      "pos": [
        2044,
        2076
      ]
    },
    {
      "content": "单击“查看作业”以查看刚刚启动的作业的摘要。",
      "pos": [
        2080,
        2102
      ]
    },
    {
      "content": "作业状态显示在“作业摘要”中，几秒钟后，“输出”下面会显示前面执行测试后的相同输出。",
      "pos": [
        2106,
        2148
      ]
    },
    {
      "content": "返回到你的 Runbook。在“作业”磁贴下，你可以看到创建的作业列表将筛选上述 Runbook。",
      "pos": [
        2152,
        2201
      ]
    },
    {
      "content": "单击一个作业，你可以看到该作业的“摘要”和“历史记录”。",
      "pos": [
        2206,
        2234
      ]
    },
    {
      "content": "步骤 5 - 添加身份验证来管理 Azure 资源",
      "pos": [
        2240,
        2265
      ]
    },
    {
      "pos": [
        2267,
        2417
      ],
      "content": "我们已经测试并发布 Runbook，但到目前为止它不执行任何有用的操作。我们想要让其管理 Azure 资源。然而，除非使用“先决条件”中引用的凭据对其进行身份验证，否则它将无法进行管理<bpt id=\"p1\">[</bpt><ept id=\"p1\">](#prerequisites)</ept>。我们使用 <bpt id=\"p2\">**</bpt>Add-AzureAccount<ept id=\"p2\">**</ept> cmdlet 实现此目的。"
    },
    {
      "content": "通过单击“创作”磁贴 &gt;“草稿”标记 &gt;“编辑 Runbook”打开文本编辑器。",
      "pos": [
        2423,
        2463
      ]
    },
    {
      "pos": [
        2468,
        2503
      ],
      "content": "我们不再需要 <bpt id=\"p1\">**</bpt>Write-Output<ept id=\"p1\">**</ept> 行，因此请直接删除它。"
    },
    {
      "content": "将光标放在大括号之间的空白行上。",
      "pos": [
        2508,
        2524
      ]
    },
    {
      "content": "单击“插入”&gt;“设置”&gt;“获取 Windows PowerShell 凭据”，然后选择所需的凭据。",
      "pos": [
        2529,
        2578
      ]
    },
    {
      "pos": [
        2583,
        2711
      ],
      "content": "如果你没有凭据，可以通过单击“管理”&gt;“添加凭据”来创建一个凭据。有关详细信息，请参阅 <bpt id=\"p1\">[</bpt>Azure Active Directory 用户和自动化凭据资产<ept id=\"p1\">](/documentation/articles/automation-configuring)</ept>。"
    },
    {
      "pos": [
        2716,
        2781
      ],
      "content": "在 <bpt id=\"p1\">**</bpt>Get-AutomationPSCredential<ept id=\"p1\">**</ept> 前面，输入 <bpt id=\"p2\">*</bpt>$Credential =<ept id=\"p2\">*</ept> 以将凭据分配给变量。"
    },
    {
      "pos": [
        2787,
        2867
      ],
      "content": "在下一行中键入 <bpt id=\"p1\">*</bpt>Add-AzureAccount -Credential $Credential –Environment AzureChinaCloud<ept id=\"p1\">*</ept>。"
    },
    {
      "content": "单击“测试”，然后在出现提示时单击“是”。",
      "pos": [
        3076,
        3097
      ]
    },
    {
      "content": "完成后，你应会收到类似于下面的输出，这是向凭据中的用户返回的信息。其中确认凭据有效。",
      "pos": [
        3103,
        3145
      ]
    },
    {
      "content": "身份验证",
      "pos": [
        3152,
        3156
      ]
    },
    {
      "content": "步骤 6 – 添加用于启动虚拟机的代码",
      "pos": [
        3229,
        3248
      ]
    },
    {
      "content": "在 Runbook 对 Azure 订阅进行身份验证后，我们可以管理资源。我们将添加一个命令用于启动虚拟机。你可以在你的 Azure 订阅中选取任何虚拟机，现在我们会将该名称硬编码到 cmdlet 中。",
      "pos": [
        3250,
        3351
      ]
    },
    {
      "pos": [
        3356,
        3462
      ],
      "content": "在 <bpt id=\"p1\">*</bpt>Add-AzureAccount<ept id=\"p1\">*</ept> 后面，键入 <bpt id=\"p2\">*</bpt>Start-AzureVM -Name 'VMName' -ServiceName 'VMServiceName'<ept id=\"p2\">*</ept> 并提供要启动的虚拟机的名称和服务名称。"
    },
    {
      "content": "保存 Runbook，然后单击“测试”，以便我们可以测试 Runbook。",
      "pos": [
        3749,
        3786
      ]
    },
    {
      "content": "步骤 7 - 将输入参数添加到 Runbook",
      "pos": [
        3792,
        3815
      ]
    },
    {
      "content": "我们的 Runbook 目前会启动我们在 Runbook 中硬编码的虚拟机，但如果可以在启动 Runbook 时指定虚拟机，它会更有用。我们现在将输入参数添加到 Runbook，以提供该功能。",
      "pos": [
        3817,
        3913
      ]
    },
    {
      "content": "将 <bpt id=\"p1\">*</bpt>VMName<ept id=\"p1\">*</ept> 和 <bpt id=\"p2\">*</bpt>VMServiceName<ept id=\"p2\">*</ept> 的参数添加到 Runbook，并将这些变量与 <bpt id=\"p3\">**</bpt>Start-AzureVM<ept id=\"p3\">**</ept> cmdlet 配合使用，如下图所示。",
      "pos": [
        3918,
        4006
      ]
    },
    {
      "content": "保存 Runbook 并打开“测试”窗格。请注意，现在可以为将在测试中使用的两个输入变量提供值。",
      "pos": [
        4398,
        4446
      ]
    },
    {
      "content": "关闭“测试”窗格。",
      "pos": [
        4452,
        4461
      ]
    },
    {
      "content": "单击“发布”以发布 Runbook 的新版本。",
      "pos": [
        4467,
        4490
      ]
    },
    {
      "content": "停止在上一步中启动的虚拟机。",
      "pos": [
        4496,
        4510
      ]
    },
    {
      "pos": [
        4516,
        4576
      ],
      "content": "单击“启动”以启动 Runbook。键入要启动的虚拟机的 <bpt id=\"p1\">**</bpt>VMName<ept id=\"p1\">**</ept> 和 <bpt id=\"p2\">**</bpt>VMServiceName<ept id=\"p2\">**</ept>。"
    },
    {
      "content": "一旦 Runbook 完成后，检查已启动的虚拟机。",
      "pos": [
        4582,
        4607
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"我在 Azure 自动化中的第一个 PowerShell 工作流 Runbook | Azure\"\n    description=\"本教程指导你使用 PowerShell 工作流创建、测试和发布一个简单的文本 Runbook。文中涵盖了多个概念，例如，对 Azure 资源进行身份验证和输入参数。\"\n    services=\"automation\"\n    documentationCenter=\"\"\n    authors=\"bwren\"\n    manager=\"stevenka\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"automation\"\n    ms.date=\"09/17/2015\"\n    wacn.date=\"11/27/2015\"/>\n\n\n# 我的第一个 PowerShell 工作流 Runbook\n\n\n本教程将指导你在 Azure 自动化中创建 PowerShell 工作流 Runbook。我们将从一个简单的 Runbook 开始，我们将测试和发布该 Runbook，同时介绍如何跟踪 Runbook 作业的状态。然后我们将通过修改 Runbook 来实际管理 Azure 资源，这种情况下将启动 Azure 虚拟机。然后我们将通过添加 Runbook 参数来使该 Runbook 更稳健。\n\n## 先决条件\n\n为了完成本教程，你需要满足以下条件。\n\n- Azure 订阅创建新存储帐户。如果你没有订阅，可以[注册免费试用版](/pricing/1rmb-trial/)。\n- 用于保存 Runbook 的[自动化帐户](/documentation/articles/automation-configuring)。\n- Azure 虚拟机。我们将停止并启动该计算机，因此其不应为生产用计算机。\n- 用于对 Azure 资源进行身份验证的 [Azure Active Directory 和自动化资产](/documentation/articles/automation-configuring)。此用户必须有权启动和停止虚拟机。\n\n## 步骤 1 - 创建新的 Runbook\n\n我们首先创建一个输出文本 *Hello World* 的简单 Runbook 。\n\n1. 在 Azure 管理门户中，单击“新建”>“应用程序服务”>“自动化”>“RUNBOOK”>“快速创建”。\n2. 输入 **RUNBOOK 名称**和**说明**，然后选择一个**自动化帐户**。如果你没有自动化帐户，可以通过选择“创建新的自动化帐户”并输入“帐户名”来创建一个\n3. 创建 Runbook 后，可以在自动化帐户的“RUNBOOK”磁贴中找到它。\n4. 单击 Runbook 的“创作”磁贴以启用文本编辑器。\n\n## 步骤 2 - 将代码添加到 Runbook\n\n你可以直接将代码键入 Runbook 中，或者通过“库”控件选择 cmdlet、Runbook 和资产，并使用任何相关的参数将它们添加到 Runbook。在本演练中，我们将直接键入 Runbook。\n\n1. 我们的 Runbook 目前是空的，只有必需的*工作流*关键字、Runbook 名称以及括住整个工作流的大括号。<br> ![Runbook 控制](./media/automation-first-runbook-textual/empty-runbook.png)\n2. 在括号之间键入 *Write-Output \"Hello World\"*。<br> ![Hello world](./media/automation-first-runbook-textual/hello-world.png)\n3.   通过单击“保存”来保存 Runbook。<br>\n\n## 步骤 3 - 测试 Runbook\n\n在我们发布 Runbook 使其可在生产中使用之前，我们要对其进行测试以确保其能正常工作。测试 Runbook 时，你可以运行其“草稿”版本并以交互方式查看其输出。\n \n2. 单击“测试”打开“测试”窗格。然后单击“是”确认。\n3. 几秒钟后，你将看到输出窗格中显示消息“Hello World”。\n\n## 步骤 4 - 发布和启动 Runbook\n\n我们刚刚创建的 Runbook 仍处于草稿模式。我们需要发布该 Runbook，然后才可将其用于生产。当发布 Runbook 时，你可以用草稿版本覆盖现有的已发布版本。在本例中，我们还没有已发布版本，因为我们刚刚创建 Runbook。\n\n1. 单击“发布”以发布该 Runbook，然后在出现提示时单击“是”。 \n2. 如果你在自动化帐户的“Runbook”磁贴中查看该 Runbook，它的“创作状态”会显示为“已发布”。\n4. 单击“启动”以启动 Runbook，然后在出现提示时单击“是”。\n5. 单击“查看作业”以查看刚刚启动的作业的摘要。\n6. 作业状态显示在“作业摘要”中，几秒钟后，“输出”下面会显示前面执行测试后的相同输出。\n9. 返回到你的 Runbook。在“作业”磁贴下，你可以看到创建的作业列表将筛选上述 Runbook。\n10. 单击一个作业，你可以看到该作业的“摘要”和“历史记录”。 \n\n## 步骤 5 - 添加身份验证来管理 Azure 资源\n\n我们已经测试并发布 Runbook，但到目前为止它不执行任何有用的操作。我们想要让其管理 Azure 资源。然而，除非使用“先决条件”中引用的凭据对其进行身份验证，否则它将无法进行管理[](#prerequisites)。我们使用 **Add-AzureAccount** cmdlet 实现此目的。\n\n1.  通过单击“创作”磁贴 >“草稿”标记 >“编辑 Runbook”打开文本编辑器。\n2.  我们不再需要 **Write-Output** 行，因此请直接删除它。\n3.  将光标放在大括号之间的空白行上。\n3.  单击“插入”>“设置”>“获取 Windows PowerShell 凭据”，然后选择所需的凭据。\n4.  如果你没有凭据，可以通过单击“管理”>“添加凭据”来创建一个凭据。有关详细信息，请参阅 [Azure Active Directory 用户和自动化凭据资产](/documentation/articles/automation-configuring)。\n5.  在 **Get-AutomationPSCredential** 前面，输入 *$Credential =* 以将凭据分配给变量。 \n3.  在下一行中键入 *Add-AzureAccount -Credential $Credential –Environment AzureChinaCloud*。\n\n        workflow test\n        {\n            $Credential = Get-AutomationPSCredential -Name \"<your credential>\"\n            Add-AzureAccount –Credential $Credential –Environment AzureChinaCloud\n        }\n\n3. 单击“测试”，然后在出现提示时单击“是”。\n10.  完成后，你应会收到类似于下面的输出，这是向凭据中的用户返回的信息。其中确认凭据有效。<br> ![身份验证](./media/automation-first-runbook-textual/authentication-test.png) \n\n## 步骤 6 – 添加用于启动虚拟机的代码\n\n在 Runbook 对 Azure 订阅进行身份验证后，我们可以管理资源。我们将添加一个命令用于启动虚拟机。你可以在你的 Azure 订阅中选取任何虚拟机，现在我们会将该名称硬编码到 cmdlet 中。\n\n1. 在 *Add-AzureAccount* 后面，键入 *Start-AzureVM -Name 'VMName' -ServiceName 'VMServiceName'* 并提供要启动的虚拟机的名称和服务名称。 \n\n        workflow test\n        {\n            $Credential = Get-AutomationPSCredential -Name \"<your credential>\"\n            Add-AzureAccount –Credential $Credential –Environment AzureChinaCloud\n            Start-AzureVM -Name \"<your vm>\" -ServiceName \"<your vm service>\"\n        }\n\n9. 保存 Runbook，然后单击“测试”，以便我们可以测试 Runbook。\n\n\n## 步骤 7 - 将输入参数添加到 Runbook\n\n我们的 Runbook 目前会启动我们在 Runbook 中硬编码的虚拟机，但如果可以在启动 Runbook 时指定虚拟机，它会更有用。我们现在将输入参数添加到 Runbook，以提供该功能。\n\n1. 将 *VMName* 和 *VMServiceName* 的参数添加到 Runbook，并将这些变量与 **Start-AzureVM** cmdlet 配合使用，如下图所示。<br>\n\n        workflow test\n        {\n            Param (\n                [string]$VMName,\n                [String]$VMServiceName\n            )\n    \n            $Credential = Get-AutomationPSCredential -Name \"<your credential>\"\n            Add-AzureAccount –Credential $Credential –Environment AzureChinaCloud\n            Start-AzureVM -Name $VMName -ServiceName $VMServiceName\n        }\n\n9. 保存 Runbook 并打开“测试”窗格。请注意，现在可以为将在测试中使用的两个输入变量提供值。\n11.  关闭“测试”窗格。\n12.  单击“发布”以发布 Runbook 的新版本。\n13.  停止在上一步中启动的虚拟机。\n13.  单击“启动”以启动 Runbook。键入要启动的虚拟机的 **VMName** 和 **VMServiceName**。\n14.  一旦 Runbook 完成后，检查已启动的虚拟机。\n\n<!---HONumber=82-->"
}