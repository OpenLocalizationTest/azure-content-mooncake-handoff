{
  "nodes": [
    {
      "content": "Azure 自动化中的变量资产 | Azure",
      "pos": [
        27,
        50
      ]
    },
    {
      "content": "变量资产是可供 Azure 自动化中的所有 Runbook 使用的值。本文介绍了变量的详细信息，以及如何在文本创作中使用变量。",
      "pos": [
        68,
        131
      ]
    },
    {
      "content": "Azure 自动化中的变量资产",
      "pos": [
        338,
        353
      ]
    },
    {
      "content": "变量资产是可供自动化帐户中的所有 Runbook 使用的值。可以从 Azure 管理门户、Windows PowerShell 和 Runbook 中创建、修改和检索变量资产。自动化变量可用于以下方案：",
      "pos": [
        355,
        456
      ]
    },
    {
      "content": "在多个 Runbook 之间共享某个值。",
      "pos": [
        460,
        480
      ]
    },
    {
      "content": "在同一 Runbook 中的多个作业之间共享某个值。",
      "pos": [
        484,
        510
      ]
    },
    {
      "content": "从门户或通过 Runbook 使用的 Windows PowerShell 命令行管理某个值。",
      "pos": [
        514,
        561
      ]
    },
    {
      "content": "自动化变量将保留，以便在 Runbook 失败时它们仍然继续可用。这也允许一个 Runbook 设置的值随后由另一个 Runbook 使用，或由同一 Runbook 在下次运行时使用。",
      "pos": [
        563,
        655
      ]
    },
    {
      "pos": [
        657,
        885
      ],
      "content": "创建变量时，可以指定将其加密存储。当变量加密后，它将安全地存储在 Azure 自动化中并且不能从 Azure PowerShell 模块随附的 <bpt id=\"p1\">[</bpt>Get-AzureAutomationVariable<ept id=\"p1\">](http://msdn.microsoft.com/zh-cn/library/dn913772.aspx)</ept> cmdlet 检索变量值。可以检索加密值的唯一方法是从 Runbook 中的 <bpt id=\"p2\">**</bpt>Get-AutomationVariable<ept id=\"p2\">**</ept> 活动检索。"
    },
    {
      "pos": [
        888,
        1041
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>Azure 自动化中的安全资产包括凭据、证书、连接和加密的变量。这些资产已使用针对每个自动化帐户生成的唯一密钥加密并存储在 Azure 自动化中。此密钥由主证书加密，并存储在 Azure 自动化中。在存储安全资产之前，会先使用主证书来解密自动化帐户的密钥，然后使用该密钥来加密资产。"
    },
    {
      "pos": [
        1046,
        1078
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"variable-types\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph> 变量类型"
    },
    {
      "pos": [
        1080,
        1542
      ],
      "content": "当使用 Azure 管理门户创建变量时，你必须通过下拉列表指定一个数据类型，以便门户可以显示用于输入变量值的相应控件。该变量并不局限于此数据类型，但如果您想要指定不同类型的值，则必须使用 Windows PowerShell 设置该变量。如果指定为“未定义”，则该变量的值将设置为 <bpt id=\"p1\">**</bpt>$null<ept id=\"p1\">**</ept>，并且你必须使用 <bpt id=\"p2\">[</bpt>Set-AzureAutomationVariable<ept id=\"p2\">](http://msdn.microsoft.com/zh-cn/library/dn913767.aspx)</ept> cmdlet 或 <bpt id=\"p3\">**</bpt>Set-AutomationVariable<ept id=\"p3\">**</ept> 活动来设置该值。无法在该门户中创建或更改复杂变量类型的值，但您可以使用 Windows PowerShell 提供任何类型的值。复杂类型将作为 <bpt id=\"p4\">[</bpt>PSCustomObject<ept id=\"p4\">](http://msdn.microsoft.com/zh-cn/library/system.management.automation.pscustomobject.aspx)</ept> 返回。"
    },
    {
      "content": "您可以通过创建一个数组或哈希表并将其保存到变量，来将多个值存储到单一变量。",
      "pos": [
        1544,
        1581
      ]
    },
    {
      "content": "Cmdlet 和工作流活动",
      "pos": [
        1586,
        1599
      ]
    },
    {
      "pos": [
        1601,
        1756
      ],
      "content": "下表中的 cmdlet 用于通过 Windows PowerShell 创建和管理自动化变量。可在自动化 Runbook 中使用的 <bpt id=\"p1\">[</bpt>Azure PowerShell 模块<ept id=\"p1\">](/documentation/articles/powershell-install-configure)</ept>已随附了这些 cmdlet。"
    },
    {
      "content": "Cmdlet",
      "pos": [
        1759,
        1765
      ]
    },
    {
      "content": "说明",
      "pos": [
        1766,
        1768
      ]
    },
    {
      "content": "Get-AzureAutomationVariable",
      "pos": [
        1784,
        1811
      ]
    },
    {
      "content": "检索现有变量的值。",
      "pos": [
        1868,
        1877
      ]
    },
    {
      "content": "New-AzureAutomationVariable",
      "pos": [
        1881,
        1908
      ]
    },
    {
      "content": "创建新变量并设置变量值。",
      "pos": [
        1965,
        1977
      ]
    },
    {
      "content": "Remove-AzureAutomationVariable",
      "pos": [
        1981,
        2011
      ]
    },
    {
      "content": "删除现有变量。",
      "pos": [
        2068,
        2075
      ]
    },
    {
      "content": "Set-AzureAutomationVariable",
      "pos": [
        2079,
        2106
      ]
    },
    {
      "content": "设置现有变量的值。",
      "pos": [
        2163,
        2172
      ]
    },
    {
      "content": "下表中的工作流活动用于在 Runbook 中访问自动化变量。它们仅可在 Runbook 中使用，而不作为“Azure PowerShell 模块”的一部分提供。",
      "pos": [
        2175,
        2255
      ]
    },
    {
      "content": "工作流活动",
      "pos": [
        2258,
        2263
      ]
    },
    {
      "content": "说明",
      "pos": [
        2264,
        2266
      ]
    },
    {
      "content": "Get-AutomationVariable",
      "pos": [
        2281,
        2303
      ]
    },
    {
      "content": "检索现有变量的值。",
      "pos": [
        2304,
        2313
      ]
    },
    {
      "content": "Set-AutomationVariable",
      "pos": [
        2316,
        2338
      ]
    },
    {
      "content": "设置现有变量的值。",
      "pos": [
        2339,
        2348
      ]
    },
    {
      "pos": [
        2352,
        2452
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>应避免在 <bpt id=\"p1\">**</bpt>Get-AutomationVariable<ept id=\"p1\">**</ept> 的 –Name 参数中使用变量，因为这可能会使设计时发现 Runbook 与自动化变量之间的依赖关系变得复杂化。"
    },
    {
      "content": "创建新的自动化变量",
      "pos": [
        2457,
        2466
      ]
    },
    {
      "content": "使用 Azure 管理门户创建新变量",
      "pos": [
        2472,
        2490
      ]
    },
    {
      "content": "在你的自动化帐户中，单击窗口顶部的“资产”。",
      "pos": [
        2495,
        2517
      ]
    },
    {
      "content": "在窗口底部，单击“添加设置”。",
      "pos": [
        2521,
        2536
      ]
    },
    {
      "content": "单击“添加变量”。",
      "pos": [
        2540,
        2549
      ]
    },
    {
      "content": "完成向导并单击复选框以保存新变量。",
      "pos": [
        2553,
        2570
      ]
    },
    {
      "content": "使用 Windows PowerShell 创建新变量",
      "pos": [
        2578,
        2605
      ]
    },
    {
      "pos": [
        2607,
        2862
      ],
      "content": "<bpt id=\"p1\">[</bpt>New-AzureAutomationVariable<ept id=\"p1\">](http://msdn.microsoft.com/zh-cn/library/dn913771.aspx)</ept> cmdlet 创建一个新的变量并设置其初始值。你可以使用 <bpt id=\"p2\">[</bpt>Get-AzureAutomationVariable<ept id=\"p2\">](http://msdn.microsoft.com/zh-cn/library/dn913772.aspx)</ept> 检索该值。如果该值为简单类型，则返回相同的类型。如果其为复杂类型，则返回 <bpt id=\"p3\">**</bpt>PSCustomObject<ept id=\"p3\">**</ept>。"
    },
    {
      "content": "下面的示例命令演示如何创建字符串类型的变量，然后返回其值。",
      "pos": [
        2864,
        2893
      ]
    },
    {
      "pos": [
        3156,
        3221
      ],
      "content": "下面的示例命令演示如何创建复杂类型的变量，然后返回其属性。在这种情况下，会使用来自 <bpt id=\"p1\">**</bpt>Get-AzureVM<ept id=\"p1\">**</ept> 的虚拟机对象。"
    },
    {
      "content": "在 Runbook 中使用变量",
      "pos": [
        3611,
        3626
      ]
    },
    {
      "pos": [
        3628,
        3987
      ],
      "content": "使用 <bpt id=\"p1\">**</bpt>Set-AutomationVariable<ept id=\"p1\">**</ept> 活动设置 Runbook 中的自动化变量的值，并使用 <bpt id=\"p2\">**</bpt>Get-AutomationVariable<ept id=\"p2\">**</ept> 来检索该值。不应在 Runbook 中使用 <bpt id=\"p3\">**</bpt>Set-AzureAutomationVariable<ept id=\"p3\">**</ept> 或 <bpt id=\"p4\">**</bpt>Get-AzureAutomationVariable<ept id=\"p4\">**</ept> cmdlet，因为它们的效率低于工作流活动。你也无法使用 <bpt id=\"p5\">**</bpt>Get-AzureAutomationVariable<ept id=\"p5\">**</ept> 检索安全变量的值。从 Runbook 中创建新变量的唯一方法是使用 <bpt id=\"p6\">[</bpt>New-AzureAutomationVariable<ept id=\"p6\">](http://msdn.microsoft.com/zh-cn/library/dn913771.aspx)</ept> cmdlet。"
    },
    {
      "content": "文本 Runbook 示例",
      "pos": [
        3994,
        4007
      ]
    },
    {
      "content": "设置和检索变量中的一个简单值",
      "pos": [
        4014,
        4028
      ]
    },
    {
      "pos": [
        4030,
        4156
      ],
      "content": "下面的示例命令演示如何设置和检索文本 Runbook 中的变量。在此示例中，假定已经创建了名为 <bpt id=\"p1\">*</bpt>NumberOfIterations<ept id=\"p1\">*</ept> 和 <bpt id=\"p2\">*</bpt>NumberOfRunnings<ept id=\"p2\">*</ept> 的整数类型变量和名为 <bpt id=\"p3\">*</bpt>SampleMessage<ept id=\"p3\">*</ept> 的字符串类型变量。"
    },
    {
      "content": "设置和检索变量中的复杂对象",
      "pos": [
        4634,
        4647
      ]
    },
    {
      "pos": [
        4649,
        4790
      ],
      "content": "下面的示例代码演示如何更新文本 Runbook 中具有复杂值的变量。在此示例中，使用 <bpt id=\"p1\">**</bpt>Get-AzureVM<ept id=\"p1\">**</ept> 检索到一个 Azure 虚拟机并保存到一个现有的自动化变量。如<bpt id=\"p2\">[</bpt>变量类型<ept id=\"p2\">](#variable-types)</ept>中所述，该对象存储为一个 PSCustomObject。"
    },
    {
      "content": "在下面的代码中，从该变量检索值并将其用于启动虚拟机。",
      "pos": [
        4913,
        4939
      ]
    },
    {
      "content": "设置和检索变量中的集合",
      "pos": [
        5142,
        5153
      ]
    },
    {
      "pos": [
        5155,
        5297
      ],
      "content": "下面的示例代码演示如何使用文本 Runbook 中包含一组复杂值的变量。在此示例中，使用 <bpt id=\"p1\">**</bpt>Get-AzureVM<ept id=\"p1\">**</ept> 检索到多个 Azure 虚拟机并保存到一个现有的自动化变量。如<bpt id=\"p2\">[</bpt>变量类型<ept id=\"p2\">](#variable-types)</ept>中所述，变量存储为一组 PSCustomObject。"
    },
    {
      "content": "在下面的代码中，从该变量检索此集合并用于启动每个虚拟机。",
      "pos": [
        5437,
        5465
      ]
    }
  ],
  "content": "<properties \n   pageTitle=\"Azure 自动化中的变量资产 | Azure\"\n   description=\"变量资产是可供 Azure 自动化中的所有 Runbook 使用的值。本文介绍了变量的详细信息，以及如何在文本创作中使用变量。\"\n   services=\"automation\"\n   documentationCenter=\"\"\n   authors=\"bwren\"\n   manager=\"stevenka\"\n   editor=\"tysonn\" />\n<tags\n    ms.service=\"automation\"\n    ms.date=\"10/23/2015\"\n    wacn.date=\"12/17/2015\"/>\n\n# Azure 自动化中的变量资产\n\n变量资产是可供自动化帐户中的所有 Runbook 使用的值。可以从 Azure 管理门户、Windows PowerShell 和 Runbook 中创建、修改和检索变量资产。自动化变量可用于以下方案：\n\n- 在多个 Runbook 之间共享某个值。\n\n- 在同一 Runbook 中的多个作业之间共享某个值。\n\n- 从门户或通过 Runbook 使用的 Windows PowerShell 命令行管理某个值。\n\n自动化变量将保留，以便在 Runbook 失败时它们仍然继续可用。这也允许一个 Runbook 设置的值随后由另一个 Runbook 使用，或由同一 Runbook 在下次运行时使用。\n\n创建变量时，可以指定将其加密存储。当变量加密后，它将安全地存储在 Azure 自动化中并且不能从 Azure PowerShell 模块随附的 [Get-AzureAutomationVariable](http://msdn.microsoft.com/zh-cn/library/dn913772.aspx) cmdlet 检索变量值。可以检索加密值的唯一方法是从 Runbook 中的 **Get-AutomationVariable** 活动检索。\n\n>[AZURE.NOTE]Azure 自动化中的安全资产包括凭据、证书、连接和加密的变量。这些资产已使用针对每个自动化帐户生成的唯一密钥加密并存储在 Azure 自动化中。此密钥由主证书加密，并存储在 Azure 自动化中。在存储安全资产之前，会先使用主证书来解密自动化帐户的密钥，然后使用该密钥来加密资产。\n\n## <a id=\"variable-types\"></a> 变量类型\n\n当使用 Azure 管理门户创建变量时，你必须通过下拉列表指定一个数据类型，以便门户可以显示用于输入变量值的相应控件。该变量并不局限于此数据类型，但如果您想要指定不同类型的值，则必须使用 Windows PowerShell 设置该变量。如果指定为“未定义”，则该变量的值将设置为 **$null**，并且你必须使用 [Set-AzureAutomationVariable](http://msdn.microsoft.com/zh-cn/library/dn913767.aspx) cmdlet 或 **Set-AutomationVariable** 活动来设置该值。无法在该门户中创建或更改复杂变量类型的值，但您可以使用 Windows PowerShell 提供任何类型的值。复杂类型将作为 [PSCustomObject](http://msdn.microsoft.com/zh-cn/library/system.management.automation.pscustomobject.aspx) 返回。\n\n您可以通过创建一个数组或哈希表并将其保存到变量，来将多个值存储到单一变量。\n\n## Cmdlet 和工作流活动\n\n下表中的 cmdlet 用于通过 Windows PowerShell 创建和管理自动化变量。可在自动化 Runbook 中使用的 [Azure PowerShell 模块](/documentation/articles/powershell-install-configure)已随附了这些 cmdlet。\n\n|Cmdlet|说明|\n|:---|:---|\n|[Get-AzureAutomationVariable](http://msdn.microsoft.com/zh-cn/library/dn913772.aspx)|检索现有变量的值。|\n|[New-AzureAutomationVariable](http://msdn.microsoft.com/zh-cn/library/dn913771.aspx)|创建新变量并设置变量值。|\n|[Remove-AzureAutomationVariable](http://msdn.microsoft.com/zh-cn/library/dn913775.aspx)|删除现有变量。|\n|[Set-AzureAutomationVariable](http://msdn.microsoft.com/zh-cn/library/dn913767.aspx)|设置现有变量的值。|\n\n下表中的工作流活动用于在 Runbook 中访问自动化变量。它们仅可在 Runbook 中使用，而不作为“Azure PowerShell 模块”的一部分提供。\n\n|工作流活动|说明|\n|:---|:---|\n|Get-AutomationVariable|检索现有变量的值。|\n|Set-AutomationVariable|设置现有变量的值。|\n\n>[AZURE.NOTE]应避免在 **Get-AutomationVariable** 的 –Name 参数中使用变量，因为这可能会使设计时发现 Runbook 与自动化变量之间的依赖关系变得复杂化。\n\n## 创建新的自动化变量\n\n### 使用 Azure 管理门户创建新变量\n\n1. 在你的自动化帐户中，单击窗口顶部的“资产”。\n1. 在窗口底部，单击“添加设置”。\n1. 单击“添加变量”。\n1. 完成向导并单击复选框以保存新变量。\n\n\n\n### 使用 Windows PowerShell 创建新变量\n\n[New-AzureAutomationVariable](http://msdn.microsoft.com/zh-cn/library/dn913771.aspx) cmdlet 创建一个新的变量并设置其初始值。你可以使用 [Get-AzureAutomationVariable](http://msdn.microsoft.com/zh-cn/library/dn913772.aspx) 检索该值。如果该值为简单类型，则返回相同的类型。如果其为复杂类型，则返回 **PSCustomObject**。\n\n下面的示例命令演示如何创建字符串类型的变量，然后返回其值。\n\n\n    New-AzureAutomationVariable –AutomationAccountName \"MyAutomationAccount\" –Name 'MyStringVariable' –Encrypted $false –Value 'My String'\n    $string = (Get-AzureAutomationVariable –AutomationAccountName \"MyAutomationAccount\" –Name 'MyStringVariable').Value\n\n下面的示例命令演示如何创建复杂类型的变量，然后返回其属性。在这种情况下，会使用来自 **Get-AzureVM** 的虚拟机对象。\n\n    $vm = Get-AzureVM –ServiceName \"MyVM\" –Name \"MyVM\"\n    New-AzureAutomationVariable –AutomationAccountName \"MyAutomationAccount\" –Name \"MyComplexVariable\" –Encrypted $false –Value $vm\n    \n    $vmValue = (Get-AzureAutomationVariable –AutomationAccountName \"MyAutomationAccount\" –Name \"MyComplexVariable\").Value\n    $vmName = $ vmValue.Name\n    $vmIpAddress = $ vmValue.IpAddress\n\n\n\n## 在 Runbook 中使用变量\n\n使用 **Set-AutomationVariable** 活动设置 Runbook 中的自动化变量的值，并使用 **Get-AutomationVariable** 来检索该值。不应在 Runbook 中使用 **Set-AzureAutomationVariable** 或 **Get-AzureAutomationVariable** cmdlet，因为它们的效率低于工作流活动。你也无法使用 **Get-AzureAutomationVariable** 检索安全变量的值。从 Runbook 中创建新变量的唯一方法是使用 [New-AzureAutomationVariable](http://msdn.microsoft.com/zh-cn/library/dn913771.aspx) cmdlet。\n\n\n### 文本 Runbook 示例\n\n#### 设置和检索变量中的一个简单值\n\n下面的示例命令演示如何设置和检索文本 Runbook 中的变量。在此示例中，假定已经创建了名为 *NumberOfIterations* 和 *NumberOfRunnings* 的整数类型变量和名为 *SampleMessage* 的字符串类型变量。\n\n    $NumberOfIterations = Get-AutomationVariable -Name 'NumberOfIterations'\n    $NumberOfRunnings = Get-AutomationVariable -Name 'NumberOfRunnings'\n    $SampleMessage = Get-AutomationVariable -Name 'SampleMessage'\n    \n    Write-Output \"Runbook has been run $NumberOfRunnings times.\"\n    \n    for ($i = 1; $i -le $NumberOfIterations; $i++) {\n       Write-Output \"$i`: $SampleMessage\"\n    }\n    Set-AutomationVariable –Name NumberOfRunnings –Value (NumberOfRunngs += 1)\n\n\n#### 设置和检索变量中的复杂对象\n\n下面的示例代码演示如何更新文本 Runbook 中具有复杂值的变量。在此示例中，使用 **Get-AzureVM** 检索到一个 Azure 虚拟机并保存到一个现有的自动化变量。如[变量类型](#variable-types)中所述，该对象存储为一个 PSCustomObject。\n\n    $vm = Get-AzureVM -ServiceName \"MyVM\" -Name \"MyVM\"\n    Set-AutomationVariable -Name \"MyComplexVariable\" -Value $vm\n\n\n在下面的代码中，从该变量检索值并将其用于启动虚拟机。\n\n    $vmObject = Get-AutomationVariable -Name \"MyComplexVariable\"\n    if ($vmObject.PowerState -eq 'Stopped') {\n       Start-AzureVM -ServiceName $vmObject.ServiceName -Name $vmObject.Name\n    }\n\n\n#### 设置和检索变量中的集合\n\n下面的示例代码演示如何使用文本 Runbook 中包含一组复杂值的变量。在此示例中，使用 **Get-AzureVM** 检索到多个 Azure 虚拟机并保存到一个现有的自动化变量。如[变量类型](#variable-types)中所述，变量存储为一组 PSCustomObject。\n\n    $vms = Get-AzureVM | Where -FilterScript {$_.Name -match \"my\"}     \n    Set-AutomationVariable -Name 'MyComplexVariable' -Value $vms\n\n在下面的代码中，从该变量检索此集合并用于启动每个虚拟机。\n\n    $vmValues = Get-AutomationVariable -Name \"MyComplexVariable\"\n    ForEach ($vmValue in $vmValues)\n    {\n       if ($vmValue.PowerState -eq 'Stopped') {\n          Start-AzureVM -ServiceName $vmValue.ServiceName -Name $vmValue.Name\n       }\n    }\n\n \n\n<!---HONumber=Mooncake_1207_2015-->"
}