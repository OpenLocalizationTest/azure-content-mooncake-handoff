<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f616642230d2d0e715a59cbe8cb7a6088d9e6c41</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure AD Connect Sync：函数引用</source>
          <target state="new">Azure AD Connect Sync：函数引用</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>在 Azure AD Connect Sync 中引用声明性设置表达式。</source>
          <target state="new">在 Azure AD Connect Sync 中引用声明性设置表达式。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Azure AD Connect Sync：函数引用</source>
          <target state="new">Azure AD Connect Sync：函数引用</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>在 Azure Active Directory Sync 中，函数用于在同步期间操作属性值。</source>
          <target state="new">在 Azure Active Directory Sync 中，函数用于在同步期间操作属性值。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>函数的语法使用以下格式表示：</source>
          <target state="new">函数的语法使用以下格式表示：</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>如果函数被重载并接受多个语法，则会列出所有的有效语法。</source>
          <target state="new">如果函数被重载并接受多个语法，则会列出所有的有效语法。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>该函数为强类型函数，并会验证传递的类型是否匹配记录的类型。</source>
          <target state="new">该函数为强类型函数，并会验证传递的类型是否匹配记录的类型。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>如果类型不匹配，则会引发错误。</source>
          <target state="new">如果类型不匹配，则会引发错误。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>类型使用以下语法表示：</source>
          <target state="new">类型使用以下语法表示：</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>bin<ept id="p1">**</ept> – 二进制</source>
          <target state="new"><bpt id="p1">**</bpt>bin<ept id="p1">**</ept> – 二进制</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>bool<ept id="p1">**</ept> – 布尔值</source>
          <target state="new"><bpt id="p1">**</bpt>bool<ept id="p1">**</ept> – 布尔值</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dt<ept id="p1">**</ept> – UTC 日期/时间</source>
          <target state="new"><bpt id="p1">**</bpt>dt<ept id="p1">**</ept> – UTC 日期/时间</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>enum<ept id="p1">**</ept> – 已知常量的枚举</source>
          <target state="new"><bpt id="p1">**</bpt>enum<ept id="p1">**</ept> – 已知常量的枚举</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>exp<ept id="p1">**</ept> – 表达式，计算结果预计为布尔值</source>
          <target state="new"><bpt id="p1">**</bpt>exp<ept id="p1">**</ept> – 表达式，计算结果预计为布尔值</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>mvbin<ept id="p1">**</ept> – 多值二进制</source>
          <target state="new"><bpt id="p1">**</bpt>mvbin<ept id="p1">**</ept> – 多值二进制</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>mvstr<ept id="p1">**</ept> – 多值引用</source>
          <target state="new"><bpt id="p1">**</bpt>mvstr<ept id="p1">**</ept> – 多值引用</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>num<ept id="p1">**</ept> – 数值</source>
          <target state="new"><bpt id="p1">**</bpt>num<ept id="p1">**</ept> – 数值</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ref<ept id="p1">**</ept> – 单值引用</source>
          <target state="new"><bpt id="p1">**</bpt>ref<ept id="p1">**</ept> – 单值引用</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>str<ept id="p1">**</ept> – 单值字符串</source>
          <target state="new"><bpt id="p1">**</bpt>str<ept id="p1">**</ept> – 单值字符串</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>var<ept id="p1">**</ept> – （几乎）任何其他类型的变体</source>
          <target state="new"><bpt id="p1">**</bpt>var<ept id="p1">**</ept> – （几乎）任何其他类型的变体</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>void<ept id="p1">**</ept> – 不返回值</source>
          <target state="new"><bpt id="p1">**</bpt>void<ept id="p1">**</ept> – 不返回值</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>函数引用</source>
          <target state="new">函数引用</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>转换：</source>
          <target state="new">转换：</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CBool<ept id="p1">](#cbool)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p2">[</bpt>CDate<ept id="p2">](#cdate)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p3">[</bpt>CGuid<ept id="p3">](#cguid)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p4">[</bpt>ConvertFromBase64<ept id="p4">](#convertfrombase64)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p5">[</bpt>ConvertToBase64<ept id="p5">](#converttobase64)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p6">[</bpt>ConvertFromUTF8Hex<ept id="p6">](#convertfromutf8hex)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p7">[</bpt>ConvertToUTF8Hex<ept id="p7">](#converttoutf8hex)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p8">[</bpt>CNum<ept id="p8">](#cnum)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p9">[</bpt>CRef<ept id="p9">](#cref)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p10">[</bpt>CStr<ept id="p10">](#cstr)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p11">[</bpt>StringFromGuid<ept id="p11">](#StringFromGuid)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p12">[</bpt>StringFromSid<ept id="p12">](#stringfromsid)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>CBool<ept id="p1">](#cbool)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p2">[</bpt>CDate<ept id="p2">](#cdate)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p3">[</bpt>CGuid<ept id="p3">](#cguid)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p4">[</bpt>ConvertFromBase64<ept id="p4">](#convertfrombase64)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p5">[</bpt>ConvertToBase64<ept id="p5">](#converttobase64)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p6">[</bpt>ConvertFromUTF8Hex<ept id="p6">](#convertfromutf8hex)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p7">[</bpt>ConvertToUTF8Hex<ept id="p7">](#converttoutf8hex)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p8">[</bpt>CNum<ept id="p8">](#cnum)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p9">[</bpt>CRef<ept id="p9">](#cref)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p10">[</bpt>CStr<ept id="p10">](#cstr)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p11">[</bpt>StringFromGuid<ept id="p11">](#StringFromGuid)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p12">[</bpt>StringFromSid<ept id="p12">](#stringfromsid)</ept></target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>日期/时间：</source>
          <target state="new">日期/时间：</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DateAdd<ept id="p1">](#dateadd)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p2">[</bpt>DateFromNum<ept id="p2">](#datefromnum)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p3">[</bpt>FormatDateTime<ept id="p3">](#formatdatetime)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p4">[</bpt>Now<ept id="p4">](#now)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p5">[</bpt>NumFromDate<ept id="p5">](#numfromdate)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>DateAdd<ept id="p1">](#dateadd)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p2">[</bpt>DateFromNum<ept id="p2">](#datefromnum)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p3">[</bpt>FormatDateTime<ept id="p3">](#formatdatetime)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p4">[</bpt>Now<ept id="p4">](#now)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p5">[</bpt>NumFromDate<ept id="p5">](#numfromdate)</ept></target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Directory</source>
          <target state="new">Directory</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DNComponent<ept id="p1">](#dncomponent)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p2">[</bpt>DNComponentRev<ept id="p2">](#dncomponentrev)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p3">[</bpt>EscapeDNComponent<ept id="p3">](#escapedncomponent)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>DNComponent<ept id="p1">](#dncomponent)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p2">[</bpt>DNComponentRev<ept id="p2">](#dncomponentrev)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p3">[</bpt>EscapeDNComponent<ept id="p3">](#escapedncomponent)</ept></target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Insprection：</source>
          <target state="new">Insprection：</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IsBitSet<ept id="p1">](#isbitset)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p2">[</bpt>IsDate<ept id="p2">](#isdate)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p3">[</bpt>IsEmpty<ept id="p3">](#isempty)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p4">[</bpt>IsGuid<ept id="p4">](#isguid)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p5">[</bpt>IsNull<ept id="p5">](#isnull)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p6">[</bpt>IsNullOrEmpty<ept id="p6">](#isnullorempty)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p7">[</bpt>IsNumeric<ept id="p7">](#isnumeric)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p8">[</bpt>IsPresent<ept id="p8">](#ispresent)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p9">[</bpt>IsString<ept id="p9">](#isstring)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>IsBitSet<ept id="p1">](#isbitset)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p2">[</bpt>IsDate<ept id="p2">](#isdate)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p3">[</bpt>IsEmpty<ept id="p3">](#isempty)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p4">[</bpt>IsGuid<ept id="p4">](#isguid)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p5">[</bpt>IsNull<ept id="p5">](#isnull)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p6">[</bpt>IsNullOrEmpty<ept id="p6">](#isnullorempty)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p7">[</bpt>IsNumeric<ept id="p7">](#isnumeric)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p8">[</bpt>IsPresent<ept id="p8">](#ispresent)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p9">[</bpt>IsString<ept id="p9">](#isstring)</ept></target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>数学：</source>
          <target state="new">数学：</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>BitAnd<ept id="p1">](#bitand)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p2">[</bpt>BitOr<ept id="p2">](#bitor)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p3">[</bpt>RandomNum<ept id="p3">](#randomnum)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>BitAnd<ept id="p1">](#bitand)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p2">[</bpt>BitOr<ept id="p2">](#bitor)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p3">[</bpt>RandomNum<ept id="p3">](#randomnum)</ept></target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>多值</source>
          <target state="new">多值</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Contains<ept id="p1">](#contains)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p2">[</bpt>Count<ept id="p2">](#count)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p3">[</bpt>Item<ept id="p3">](#item)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p4">[</bpt>ItemOrNull<ept id="p4">](#itemornull)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p5">[</bpt>Join<ept id="p5">](#join)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p6">[</bpt>RemoveDuplicates<ept id="p6">](#removeduplicates)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p7">[</bpt>Split<ept id="p7">](#split)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>Contains<ept id="p1">](#contains)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p2">[</bpt>Count<ept id="p2">](#count)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p3">[</bpt>Item<ept id="p3">](#item)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p4">[</bpt>ItemOrNull<ept id="p4">](#itemornull)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p5">[</bpt>Join<ept id="p5">](#join)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p6">[</bpt>RemoveDuplicates<ept id="p6">](#removeduplicates)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p7">[</bpt>Split<ept id="p7">](#split)</ept></target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>程序流：</source>
          <target state="new">程序流：</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Error<ept id="p1">](#error)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p2">[</bpt>IIF<ept id="p2">](#iif)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p3">[</bpt>Switch<ept id="p3">](#switch)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>Error<ept id="p1">](#error)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p2">[</bpt>IIF<ept id="p2">](#iif)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p3">[</bpt>Switch<ept id="p3">](#switch)</ept></target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>文本</source>
          <target state="new">文本</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GUID<ept id="p1">](#guid)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p2">[</bpt>InStr<ept id="p2">](#instr)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p3">[</bpt>InStrRev<ept id="p3">](#instrrev)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p4">[</bpt>LCase<ept id="p4">](#lcase)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p5">[</bpt>Left<ept id="p5">](#left)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p6">[</bpt>Len<ept id="p6">](#len)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p7">[</bpt>LTrim<ept id="p7">](#ltrim)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p8">[</bpt>Mid<ept id="p8">](#mid)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p9">[</bpt>PadLeft<ept id="p9">](#padleft)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p10">[</bpt>PadRight<ept id="p10">](#padright)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p11">[</bpt>PCase<ept id="p11">](#pcase)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p12">[</bpt>Replace<ept id="p12">](#replace)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p13">[</bpt>ReplaceChars<ept id="p13">](#replacechars)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p14">[</bpt>Right<ept id="p14">](#right)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p15">[</bpt>RTrim<ept id="p15">](rtrim)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p16">[</bpt>Trim<ept id="p16">](#trim)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p17">[</bpt>UCase<ept id="p17">](#ucase)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p18">[</bpt>Word<ept id="p18">](#word)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>GUID<ept id="p1">](#guid)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p2">[</bpt>InStr<ept id="p2">](#instr)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p3">[</bpt>InStrRev<ept id="p3">](#instrrev)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p4">[</bpt>LCase<ept id="p4">](#lcase)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p5">[</bpt>Left<ept id="p5">](#left)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p6">[</bpt>Len<ept id="p6">](#len)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p7">[</bpt>LTrim<ept id="p7">](#ltrim)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p8">[</bpt>Mid<ept id="p8">](#mid)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p9">[</bpt>PadLeft<ept id="p9">](#padleft)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p10">[</bpt>PadRight<ept id="p10">](#padright)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p11">[</bpt>PCase<ept id="p11">](#pcase)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p12">[</bpt>Replace<ept id="p12">](#replace)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p13">[</bpt>ReplaceChars<ept id="p13">](#replacechars)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p14">[</bpt>Right<ept id="p14">](#right)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p15">[</bpt>RTrim<ept id="p15">](rtrim)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p16">[</bpt>Trim<ept id="p16">](#trim)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p17">[</bpt>UCase<ept id="p17">](#ucase)</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="p18">[</bpt>Word<ept id="p18">](#word)</ept></target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="bitand"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>BitAnd</source>
          <target state="new"><ph id="ph1">&lt;a name="bitand"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>BitAnd</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>BitAnd 函数设置值的指定位。</source>
          <target state="new">BitAnd 函数设置值的指定位。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>value1、value2：应该 AND 在一起的数字值</source>
          <target state="new">value1、value2：应该 AND 在一起的数字值</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>此函数将两个参数转换为二进制表示形式，并将位设置为：</source>
          <target state="new">此函数将两个参数转换为二进制表示形式，并将位设置为：</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>0 - 如果<bpt id="p1">*</bpt>掩码<ept id="p1">*</ept>和<bpt id="p2">*</bpt>标志<ept id="p2">*</ept>中相应位的其中一个或两个均为 0</source>
          <target state="new">0 - 如果<bpt id="p1">*</bpt>掩码<ept id="p1">*</ept>和<bpt id="p2">*</bpt>标志<ept id="p2">*</ept>中相应位的其中一个或两个均为 0</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>1 - 如果两个相应位均为 1。</source>
          <target state="new">1 - 如果两个相应位均为 1。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>换而言之，除了当两个参数的相应位均为 1 时之外，所有情况下均返回 0。</source>
          <target state="new">换而言之，除了当两个参数的相应位均为 1 时之外，所有情况下均返回 0。</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>返回 7，因为十六进制“F”AND“F7”的计算结果为此值。</source>
          <target state="new">返回 7，因为十六进制“F”AND“F7”的计算结果为此值。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="bitor"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>BitOr</source>
          <target state="new"><ph id="ph1">&lt;a name="bitor"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>BitOr</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>BitOr 函数设置值的指定位。</source>
          <target state="new">BitOr 函数设置值的指定位。</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>value1、value2：应该 OR 在一起的数字值</source>
          <target state="new">value1、value2：应该 OR 在一起的数字值</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>此函数将两个参数转换为二进制表示形式，并且当掩码和标志中相应位的其中一个或两个均为 1 时，将位设置为 1，当两个相应位均为 0 时，设置为 0。</source>
          <target state="new">此函数将两个参数转换为二进制表示形式，并且当掩码和标志中相应位的其中一个或两个均为 1 时，将位设置为 1，当两个相应位均为 0 时，设置为 0。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>换而言之，除了当两个参数的相应位均为 0 时之外，所有情况下均返回 1。</source>
          <target state="new">换而言之，除了当两个参数的相应位均为 0 时之外，所有情况下均返回 1。</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="cbool"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>CBool</source>
          <target state="new"><ph id="ph1">&lt;a name="cbool"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>CBool</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>CBool 函数基于求值的表达式返回布尔值</source>
          <target state="new">CBool 函数基于求值的表达式返回布尔值</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>如果表达式的计算结果为非零值，则 CBool 返回 True，否则则返回 False。</source>
          <target state="new">如果表达式的计算结果为非零值，则 CBool 返回 True，否则则返回 False。</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>如果两个属性具有相同的值，则返回 True。</source>
          <target state="new">如果两个属性具有相同的值，则返回 True。</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="cdate"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>CDate</source>
          <target state="new"><ph id="ph1">&lt;a name="cdate"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>CDate</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>CDate 函数通过字符串返回 UTC DateTime。DateTime 不是 Sync 中的原生属性类型，但被某些函数使用。</source>
          <target state="new">CDate 函数通过字符串返回 UTC DateTime。DateTime 不是 Sync 中的原生属性类型，但被某些函数使用。</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Value：具有日期、时间和可选时区的字符串</source>
          <target state="new">Value：具有日期、时间和可选时区的字符串</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>返回的字符串始终是 UTC 格式。</source>
          <target state="new">返回的字符串始终是 UTC 格式。</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>基于员工的开始时间返回 DateTime</source>
          <target state="new">基于员工的开始时间返回 DateTime</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>返回表示“2013-01-11 12:00 AM”的 DateTime</source>
          <target state="new">返回表示“2013-01-11 12:00 AM”的 DateTime</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="cguid"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>CGuid</source>
          <target state="new"><ph id="ph1">&lt;a name="cguid"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>CGuid</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>CGuid 函数将 GUID 的字符串表示转换为其二进制表示形式。</source>
          <target state="new">CGuid 函数将 GUID 的字符串表示转换为其二进制表示形式。</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>采用这种模式设置格式的字符串：xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx 或 {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}</source>
          <target state="new">采用这种模式设置格式的字符串：xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx 或 {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="contains"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Contains</source>
          <target state="new"><ph id="ph1">&lt;a name="contains"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Contains</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Contains 函数寻找多值属性内的字符串</source>
          <target state="new">Contains 函数寻找多值属性内的字符串</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`num Contains (mvstring attribute, str search)`</ph> - 区分大小写</source>
          <target state="new"><ph id="ph1">`num Contains (mvstring attribute, str search)`</ph> - 区分大小写</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`num Contains (mvref attribute, str search)`</ph> - 区分大小写</source>
          <target state="new"><ph id="ph1">`num Contains (mvref attribute, str search)`</ph> - 区分大小写</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>attribute：要搜索的多值属性。</source>
          <target state="new">attribute：要搜索的多值属性。</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>search：在属性中查找的字符串。</source>
          <target state="new">search：在属性中查找的字符串。</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Casetype：不区分大小写或区分大小写。</source>
          <target state="new">Casetype：不区分大小写或区分大小写。</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>返回找到字符串的多值属性中的索引。如果未找到字符串，则返回 0。</source>
          <target state="new">返回找到字符串的多值属性中的索引。如果未找到字符串，则返回 0。</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>对于多值字符串属性，搜索会在值中查找子字符串。</source>
          <target state="new">对于多值字符串属性，搜索会在值中查找子字符串。</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>对于引用属性，搜索的字符串必须与视为匹配的值完全匹配。</source>
          <target state="new">对于引用属性，搜索的字符串必须与视为匹配的值完全匹配。</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>如果 proxyAddress 属性具有主电子邮件地址（由大写“SMTP:”表示)，则返回 proxyAddress 属性，否则返回错误。</source>
          <target state="new">如果 proxyAddress 属性具有主电子邮件地址（由大写“SMTP:”表示)，则返回 proxyAddress 属性，否则返回错误。</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="convertfrombase64"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ConvertFromBase64</source>
          <target state="new"><ph id="ph1">&lt;a name="convertfrombase64"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ConvertFromBase64</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>ConvertFromBase64 函数将指定的 base64 编码值转换为规则的字符串。</source>
          <target state="new">ConvertFromBase64 函数将指定的 base64 编码值转换为规则的字符串。</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`str ConvertFromBase64(str source)`</ph> - 假定采用 Unicode 编码</source>
          <target state="new"><ph id="ph1">`str ConvertFromBase64(str source)`</ph> - 假定采用 Unicode 编码</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>source：Base64 编码的字符串</source>
          <target state="new">source：Base64 编码的字符串</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Encoding：Unicode、ASCII、UTF8</source>
          <target state="new">Encoding：Unicode、ASCII、UTF8</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>示例</source>
          <target state="new">示例</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>这两个示例均返回 "<bpt id="p1">*</bpt>Hello world!<ept id="p1">*</ept>"</source>
          <target state="new">这两个示例均返回 "<bpt id="p1">*</bpt>Hello world!<ept id="p1">*</ept>"</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="convertfromutf8hex"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ConvertFromUTF8Hex</source>
          <target state="new"><ph id="ph1">&lt;a name="convertfromutf8hex"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ConvertFromUTF8Hex</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>ConvertFromUTF8Hex 函数将指定的 UTF8 Hex 编码值转换为字符串。</source>
          <target state="new">ConvertFromUTF8Hex 函数将指定的 UTF8 Hex 编码值转换为字符串。</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>source：UTF8 2 字节编码的字符串</source>
          <target state="new">source：UTF8 2 字节编码的字符串</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>该结果中此函数和 ConvertFromBase64 (,UTF8) 之间的差异对 DN 属性是友好的。</source>
          <target state="new">该结果中此函数和 ConvertFromBase64 (,UTF8) 之间的差异对 DN 属性是友好的。</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>此格式被 Azure Active Directory 用作 DN。</source>
          <target state="new">此格式被 Azure Active Directory 用作 DN。</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>返回 "<bpt id="p1">*</bpt>Hello world!<ept id="p1">*</ept>"</source>
          <target state="new">返回 "<bpt id="p1">*</bpt>Hello world!<ept id="p1">*</ept>"</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="converttobase64"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ConvertToBase64</source>
          <target state="new"><ph id="ph1">&lt;a name="converttobase64"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ConvertToBase64</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>ConvertToBase64 函数将字符串转换为 Unicode base64 字符串。</source>
          <target state="new">ConvertToBase64 函数将字符串转换为 Unicode base64 字符串。</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>将整数数组的值转换为其等效字符串表示形式，该表示形式使用 base 64 数字编码。</source>
          <target state="new">将整数数组的值转换为其等效字符串表示形式，该表示形式使用 base 64 数字编码。</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>返回 "SABlAGwAbABvACAAdwBvAHIAbABkACEA"</source>
          <target state="new">返回 "SABlAGwAbABvACAAdwBvAHIAbABkACEA"</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="converttoutf8hex"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ConvertToUTF8Hex</source>
          <target state="new"><ph id="ph1">&lt;a name="converttoutf8hex"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ConvertToUTF8Hex</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>ConvertToUTF8Hex 函数将字符串转换为 UTF8 Hex 编码的值。</source>
          <target state="new">ConvertToUTF8Hex 函数将字符串转换为 UTF8 Hex 编码的值。</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>此函数的输出格式被 Azure Active Directory 用作 DN 属性。</source>
          <target state="new">此函数的输出格式被 Azure Active Directory 用作 DN 属性。</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>返回 48656C6C6F20776F726C6421</source>
          <target state="new">返回 48656C6C6F20776F726C6421</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="count"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>计数</source>
          <target state="new"><ph id="ph1">&lt;a name="count"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>计数</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Count 函数返回多值属性中的元素数量</source>
          <target state="new">Count 函数返回多值属性中的元素数量</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="cnum"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>CNum</source>
          <target state="new"><ph id="ph1">&lt;a name="cnum"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>CNum</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>CNum 函数使用字符串并返回数值数据类型。</source>
          <target state="new">CNum 函数使用字符串并返回数值数据类型。</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="cref"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>CRef</source>
          <target state="new"><ph id="ph1">&lt;a name="cref"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>CRef</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>将字符串转换为引用属性</source>
          <target state="new">将字符串转换为引用属性</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="cstr"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>CStr</source>
          <target state="new"><ph id="ph1">&lt;a name="cstr"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>CStr</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>CStr 函数转换为字符串数据类型。</source>
          <target state="new">CStr 函数转换为字符串数据类型。</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>value：可以是数字值、引用属性或布尔值。</source>
          <target state="new">value：可以是数字值、引用属性或布尔值。</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CStr([dn]) &lt;br&gt;`</ph>可能返回 “cn=Joe,dc=contoso,dc=com”</source>
          <target state="new"><ph id="ph1">`CStr([dn]) &lt;br&gt;`</ph>可能返回 “cn=Joe,dc=contoso,dc=com”</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="dateadd"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>DateAdd</source>
          <target state="new"><ph id="ph1">&lt;a name="dateadd"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>DateAdd</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>返回包含指定时间间隔已添加到其中的日期的日期。</source>
          <target state="new">返回包含指定时间间隔已添加到其中的日期的日期。</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>interval：字符串表达式，即你想要添加的时间间隔。字符串必须具有下列值之一：</source>
          <target state="new">interval：字符串表达式，即你想要添加的时间间隔。字符串必须具有下列值之一：</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>yyyy Year</source>
          <target state="new">yyyy Year</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>q Quarter</source>
          <target state="new">q Quarter</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>m Month</source>
          <target state="new">m Month</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>y Day of year</source>
          <target state="new">y Day of year</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>d Day</source>
          <target state="new">d Day</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>w Weekday</source>
          <target state="new">w Weekday</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>ww Week</source>
          <target state="new">ww Week</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>h Hour</source>
          <target state="new">h Hour</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>n Minute</source>
          <target state="new">n Minute</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>s Second</source>
          <target state="new">s Second</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>值：你想要添加的单元数。它可以是正值（以获取将来的日期）或负值（以获取过去的日期）。</source>
          <target state="new">值：你想要添加的单元数。它可以是正值（以获取将来的日期）或负值（以获取过去的日期）。</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>日期：表示间隔添加到其中的日期的 DateTime。</source>
          <target state="new">日期：表示间隔添加到其中的日期的 DateTime。</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>添加 3 个月，并返回表示“2001-04-01”的 DateTime</source>
          <target state="new">添加 3 个月，并返回表示“2001-04-01”的 DateTime</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="datefromnum"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>DateFromNum</source>
          <target state="new"><ph id="ph1">&lt;a name="datefromnum"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>DateFromNum</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>DateFromNum 函数将 AD 的日期格式的值转换为 DateTime 类型。</source>
          <target state="new">DateFromNum 函数将 AD 的日期格式的值转换为 DateTime 类型。</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>返回表示 2012-01-01 23:00:00 的 DateTime</source>
          <target state="new">返回表示 2012-01-01 23:00:00 的 DateTime</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="dncomponent"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>DNComponent</source>
          <target state="new"><ph id="ph1">&lt;a name="dncomponent"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>DNComponent</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>DNComponent 函数返回从左边起的指定 DN 组件的值。</source>
          <target state="new">DNComponent 函数返回从左边起的指定 DN 组件的值。</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>dn：要解释的引用属性</source>
          <target state="new">dn：要解释的引用属性</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>ComponentNumber：要返回的 DN 中的组件</source>
          <target state="new">ComponentNumber：要返回的 DN 中的组件</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>如果 dn 为“cn=Joe,ou=…”，则返回 Joe</source>
          <target state="new">如果 dn 为“cn=Joe,ou=…”，则返回 Joe</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="dncomponentrev"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>DNComponentRev</source>
          <target state="new"><ph id="ph1">&lt;a name="dncomponentrev"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>DNComponentRev</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>DNComponentRev 函数返回从右边起（末尾）的指定 DN 组件的值。</source>
          <target state="new">DNComponentRev 函数返回从右边起（末尾）的指定 DN 组件的值。</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>dn：要解释的引用属性</source>
          <target state="new">dn：要解释的引用属性</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>ComponentNumber - 要返回的 DN 中的组件</source>
          <target state="new">ComponentNumber - 要返回的 DN 中的组件</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Options：DC – 忽略具有“dc=”的所有组件</source>
          <target state="new">Options：DC – 忽略具有“dc=”的所有组件</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>两者都返回 US。</source>
          <target state="new">两者都返回 US。</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="error"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>错误</source>
          <target state="new"><ph id="ph1">&lt;a name="error"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>错误</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Error 函数用于返回自定义错误。</source>
          <target state="new">Error 函数用于返回自定义错误。</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>如果属性 accountName 不存在，则对象上引发错误。</source>
          <target state="new">如果属性 accountName 不存在，则对象上引发错误。</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="escapedncomponent"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>EscapeDNComponent</source>
          <target state="new"><ph id="ph1">&lt;a name="escapedncomponent"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>EscapeDNComponent</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>EscapeDNComponent 函数使用 DN 的一个组件，并对其进行转义，以便它可以在 LDAP 中表示。</source>
          <target state="new">EscapeDNComponent 函数使用 DN 的一个组件，并对其进行转义，以便它可以在 LDAP 中表示。</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>即使 displayName 属性具有必须在 LDAP 中转义的字符，请确保可以在 LDAP 目录中创建对象。</source>
          <target state="new">即使 displayName 属性具有必须在 LDAP 中转义的字符，请确保可以在 LDAP 目录中创建对象。</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="formatdatetime"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>FormatDateTime</source>
          <target state="new"><ph id="ph1">&lt;a name="formatdatetime"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>FormatDateTime</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>FormatDateTime 函数用于为具有指定格式的字符串设置 DateTime 格式</source>
          <target state="new">FormatDateTime 函数用于为具有指定格式的字符串设置 DateTime 格式</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>value：DateTime 格式的值</source>
          <target state="new">value：DateTime 格式的值</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>format：表示要转换为的格式的字符串。</source>
          <target state="new">format：表示要转换为的格式的字符串。</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>格式的可能值可以在此处找到：<bpt id="p1">[</bpt>用户定义的日期/时间格式（格式函数）<ept id="p1">](http://msdn2.microsoft.com/library/73ctwf33(VS.90).aspx)</ept></source>
          <target state="new">格式的可能值可以在此处找到：<bpt id="p1">[</bpt>用户定义的日期/时间格式（格式函数）<ept id="p1">](http://msdn2.microsoft.com/library/73ctwf33(VS.90).aspx)</ept></target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>结果是“2007-12-25”。</source>
          <target state="new">结果是“2007-12-25”。</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>结果可能是“20140905081453.0Z”</source>
          <target state="new">结果可能是“20140905081453.0Z”</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="guid"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>GUID</source>
          <target state="new"><ph id="ph1">&lt;a name="guid"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>GUID</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>函数 GUID 生成新的随机 GUID</source>
          <target state="new">函数 GUID 生成新的随机 GUID</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="iif"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IIF</source>
          <target state="new"><ph id="ph1">&lt;a name="iif"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IIF</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>IIF 函数基于指定的条件返回一组可能值中的其中一个值。</source>
          <target state="new">IIF 函数基于指定的条件返回一组可能值中的其中一个值。</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>condition：计算结果可能为 true 或 false 的任何值或表达式。</source>
          <target state="new">condition：计算结果可能为 true 或 false 的任何值或表达式。</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>valueIfTrue：如果条件计算结果为 true，则返回的值。</source>
          <target state="new">valueIfTrue：如果条件计算结果为 true，则返回的值。</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>valueIfFalse：如果条件计算结果为 false，则返回的值。</source>
          <target state="new">valueIfFalse：如果条件计算结果为 false，则返回的值。</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>如果用户是实习生，则返回用户的别名，同时将“t-”添加到其开头，否则按原样返回用户的别名。</source>
          <target state="new">如果用户是实习生，则返回用户的别名，同时将“t-”添加到其开头，否则按原样返回用户的别名。</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="instr"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>InStr</source>
          <target state="new"><ph id="ph1">&lt;a name="instr"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>InStr</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>InStr 函数查找字符串中第一次出现的子字符串</source>
          <target state="new">InStr 函数查找字符串中第一次出现的子字符串</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>stringcheck：要搜索的字符串</source>
          <target state="new">stringcheck：要搜索的字符串</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>stringmatch：要查找的字符串</source>
          <target state="new">stringmatch：要查找的字符串</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>start：查找子字符串的起始位置</source>
          <target state="new">start：查找子字符串的起始位置</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>compare：vbTextCompare 或 vbBinaryCompare</source>
          <target state="new">compare：vbTextCompare 或 vbBinaryCompare</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>返回其中已找到子字符串的位置，如果未找到，则返回 0。</source>
          <target state="new">返回其中已找到子字符串的位置，如果未找到，则返回 0。</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>计算结果为 5</source>
          <target state="new">计算结果为 5</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>计算结果为 7</source>
          <target state="new">计算结果为 7</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="instrrev"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>InStrRev</source>
          <target state="new"><ph id="ph1">&lt;a name="instrrev"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>InStrRev</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>InStrRev 函数查找字符串中最后一次出现的子字符串</source>
          <target state="new">InStrRev 函数查找字符串中最后一次出现的子字符串</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>stringcheck：要搜索的字符串</source>
          <target state="new">stringcheck：要搜索的字符串</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>stringmatch：要查找的字符串</source>
          <target state="new">stringmatch：要查找的字符串</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>start：查找子字符串的起始位置</source>
          <target state="new">start：查找子字符串的起始位置</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>compare：vbTextCompare 或 vbBinaryCompare</source>
          <target state="new">compare：vbTextCompare 或 vbBinaryCompare</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>返回其中已找到子字符串的位置，如果未找到，则返回 0。</source>
          <target state="new">返回其中已找到子字符串的位置，如果未找到，则返回 0。</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>返回 7</source>
          <target state="new">返回 7</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="isbitset"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IsBitSet</source>
          <target state="new"><ph id="ph1">&lt;a name="isbitset"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IsBitSet</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>函数 IsBitSet 测试是否设置了位</source>
          <target state="new">函数 IsBitSet 测试是否设置了位</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>value：计算的数字值。标志：表示具有要计算的位的数字值</source>
          <target state="new">value：计算的数字值。标志：表示具有要计算的位的数字值</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>返回 True，因为位“4”在十六进制值“F”中设置</source>
          <target state="new">返回 True，因为位“4”在十六进制值“F”中设置</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="isdate"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IsDate</source>
          <target state="new"><ph id="ph1">&lt;a name="isdate"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IsDate</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>如果表达式可以计算为 DateTime 类型，则 IsDate 函数计算结果为 True。</source>
          <target state="new">如果表达式可以计算为 DateTime 类型，则 IsDate 函数计算结果为 True。</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>用来确定 CDate() 是否会成功。</source>
          <target state="new">用来确定 CDate() 是否会成功。</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="isempty"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IsEmpty</source>
          <target state="new"><ph id="ph1">&lt;a name="isempty"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IsEmpty</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>如果属性是出现在 CS 或 MV 中，但计算结果为空字符串，则 IsEmpty 函数计算结果为 True。</source>
          <target state="new">如果属性是出现在 CS 或 MV 中，但计算结果为空字符串，则 IsEmpty 函数计算结果为 True。</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="isguid"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IsGuid</source>
          <target state="new"><ph id="ph1">&lt;a name="isguid"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IsGuid</target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>如果字符串可以转换为 GUID，则 IsGuid 函数计算结果为 true。</source>
          <target state="new">如果字符串可以转换为 GUID，则 IsGuid 函数计算结果为 true。</target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>GUID 定义为遵循以下其中一种模式的字符串：xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx 或 {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}</source>
          <target state="new">GUID 定义为遵循以下其中一种模式的字符串：xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx 或 {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}</target>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>用来确定 CGuid() 是否会成功。</source>
          <target state="new">用来确定 CGuid() 是否会成功。</target>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>如果 StrAttribute 具有 GUID 格式，则返回二进制表示形式，否则返回 Null。</source>
          <target state="new">如果 StrAttribute 具有 GUID 格式，则返回二进制表示形式，否则返回 Null。</target>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="isnull"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IsNull</source>
          <target state="new"><ph id="ph1">&lt;a name="isnull"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IsNull</target>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>如果表达式的计算结果为 Null，则 IsNull 函数返回 true。</source>
          <target state="new">如果表达式的计算结果为 Null，则 IsNull 函数返回 true。</target>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>对于属性，Null 表示缺少属性。</source>
          <target state="new">对于属性，Null 表示缺少属性。</target>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>如果属性没有在 CS 或 MV 中出现，则返回 True。</source>
          <target state="new">如果属性没有在 CS 或 MV 中出现，则返回 True。</target>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="bitand"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IsNullOrEmpty</source>
          <target state="new"><ph id="ph1">&lt;a name="bitand"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IsNullOrEmpty</target>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>如果表达式为 null 或空字符串，则 IsNullOrEmpty 函数返回 true。</source>
          <target state="new">如果表达式为 null 或空字符串，则 IsNullOrEmpty 函数返回 true。</target>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>对于属性，如果属性不存在，或存在但为空字符串，此语法计算结果则为 True。</source>
          <target state="new">对于属性，如果属性不存在，或存在但为空字符串，此语法计算结果则为 True。</target>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>此函数的逆函数被命名为 IsPresent。</source>
          <target state="new">此函数的逆函数被命名为 IsPresent。</target>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>如果属性在 CS 或 MV 中没有出现或为空字符串，则返回 True。</source>
          <target state="new">如果属性在 CS 或 MV 中没有出现或为空字符串，则返回 True。</target>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="isnullorempty"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IsNumeric</source>
          <target state="new"><ph id="ph1">&lt;a name="isnullorempty"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IsNumeric</target>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>IsNumeric 函数返回布尔值，该值指示表达式是否可以计算为数字类型。</source>
          <target state="new">IsNumeric 函数返回布尔值，该值指示表达式是否可以计算为数字类型。</target>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>用来确定 CNum() 是否会成功地分析表达式。</source>
          <target state="new">用来确定 CNum() 是否会成功地分析表达式。</target>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="isstring"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IsString</source>
          <target state="new"><ph id="ph1">&lt;a name="isstring"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IsString</target>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>如果表达式可以计算为字符串类型，则 IsString 函数计算结果为 True。</source>
          <target state="new">如果表达式可以计算为字符串类型，则 IsString 函数计算结果为 True。</target>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>用来确定 CStr() 是否会成功地分析表达式。</source>
          <target state="new">用来确定 CStr() 是否会成功地分析表达式。</target>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="ispresent"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IsPresent</source>
          <target state="new"><ph id="ph1">&lt;a name="ispresent"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>IsPresent</target>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>如果表达式的计算结果为字符串，该字符串不是 Null 且不为空，则 IsPresent 函数返回 true。</source>
          <target state="new">如果表达式的计算结果为字符串，该字符串不是 Null 且不为空，则 IsPresent 函数返回 true。</target>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>此函数的逆函数被命名为 IsNullOrEmpty。</source>
          <target state="new">此函数的逆函数被命名为 IsNullOrEmpty。</target>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="item"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>项目</source>
          <target state="new"><ph id="ph1">&lt;a name="item"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>项目</target>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Item 函数返回多值字符串/属性中的一个项。</source>
          <target state="new">Item 函数返回多值字符串/属性中的一个项。</target>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>attribute：多值属性</source>
          <target state="new">attribute：多值属性</target>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>index：对多值字符串中某个项的索引。</source>
          <target state="new">index：对多值字符串中某个项的索引。</target>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Item 函数与 Contains 函数一起使用很有用，因为后者函数会返回对多值属性中某个项的索引。</source>
          <target state="new">Item 函数与 Contains 函数一起使用很有用，因为后者函数会返回对多值属性中某个项的索引。</target>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>如果索引超出界限，则引发错误。</source>
          <target state="new">如果索引超出界限，则引发错误。</target>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>返回主电子邮件地址。</source>
          <target state="new">返回主电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="itemornull"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ItemOrNull</source>
          <target state="new"><ph id="ph1">&lt;a name="itemornull"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ItemOrNull</target>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>ItemOrNull 函数返回多值字符串/属性中的一个项。</source>
          <target state="new">ItemOrNull 函数返回多值字符串/属性中的一个项。</target>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>attribute：多值属性</source>
          <target state="new">attribute：多值属性</target>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>index：对多值字符串中某个项的索引。</source>
          <target state="new">index：对多值字符串中某个项的索引。</target>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>ItemOrNull 函数与 Contains 函数一起使用很有用，因为后者函数会返回对多值属性中某个项的索引。</source>
          <target state="new">ItemOrNull 函数与 Contains 函数一起使用很有用，因为后者函数会返回对多值属性中某个项的索引。</target>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>如果索引超出界限，则返回 Null 值。</source>
          <target state="new">如果索引超出界限，则返回 Null 值。</target>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="join"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Join</source>
          <target state="new"><ph id="ph1">&lt;a name="join"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Join</target>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Join 函数使用多值字符串，并返回每个项之间插入指定分隔符的单值字符串。</source>
          <target state="new">Join 函数使用多值字符串，并返回每个项之间插入指定分隔符的单值字符串。</target>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>attribute：包含要联接的字符串的多值属性。</source>
          <target state="new">attribute：包含要联接的字符串的多值属性。</target>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>delimiter：任意字符串，用于分隔返回的字符串中的子字符串。如果省略，则使用空格字符（“ ”）。如果分隔符为零长度字符串（“”）或零，则列表中的所有项都不使用分隔符连接。</source>
          <target state="new">delimiter：任意字符串，用于分隔返回的字符串中的子字符串。如果省略，则使用空格字符（“ ”）。如果分隔符为零长度字符串（“”）或零，则列表中的所有项都不使用分隔符连接。</target>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>备注</source>
          <target state="new">备注</target>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Join 和 Split 函数之间没有奇偶校验。Join 函数使用字符串数组，并使用分隔符字符串将它们联接起来，以返回单个字符串。Split 函数使用字符串并以分隔符分隔，以返回字符串数组。但是，主要区别是 Join 可以使用任何分隔符字符串将字符串连接起来，而 Split 仅可以使用单个字符分隔符分隔字符串。</source>
          <target state="new">Join 和 Split 函数之间没有奇偶校验。Join 函数使用字符串数组，并使用分隔符字符串将它们联接起来，以返回单个字符串。Split 函数使用字符串并以分隔符分隔，以返回字符串数组。但是，主要区别是 Join 可以使用任何分隔符字符串将字符串连接起来，而 Split 仅可以使用单个字符分隔符分隔字符串。</target>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>可能返回：“SMTP:john.doe@contoso.com,smtp:jd@contoso.com”</source>
          <target state="new">可能返回：“SMTP:john.doe@contoso.com,smtp:jd@contoso.com”</target>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="lcase"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>LCase</source>
          <target state="new"><ph id="ph1">&lt;a name="lcase"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>LCase</target>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>LCase 函数将字符串中的所有字符都转换为小写。</source>
          <target state="new">LCase 函数将字符串中的所有字符都转换为小写。</target>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>返回 “test”。</source>
          <target state="new">返回 “test”。</target>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="left"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Left</source>
          <target state="new"><ph id="ph1">&lt;a name="left"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Left</target>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Left 函数从字符串左侧起返回指定的字符数。</source>
          <target state="new">Left 函数从字符串左侧起返回指定的字符数。</target>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>string：从中返回字符的字符串</source>
          <target state="new">string：从中返回字符的字符串</target>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>NumChar：标识从字符串开头（左侧）起返回的字符数的数字</source>
          <target state="new">NumChar：标识从字符串开头（左侧）起返回的字符数的数字</target>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>包含字符串中第一个 numChar 字符的字符串：</source>
          <target state="new">包含字符串中第一个 numChar 字符的字符串：</target>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>如果 numChar = 0，则返回空字符串。</source>
          <target state="new">如果 numChar = 0，则返回空字符串。</target>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>如果 numChar &lt; 0，则返回输入字符串。</source>
          <target state="new">如果 numChar &lt; 0，则返回输入字符串。</target>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>如果字符串为 null，则返回空字符串。</source>
          <target state="new">如果字符串为 null，则返回空字符串。</target>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>如果字符串包含的字符数比 numChar 中指定的数量少，则返回与该字符串相同的字符串（即：包含参数 1 中的所有字符）。</source>
          <target state="new">如果字符串包含的字符数比 numChar 中指定的数量少，则返回与该字符串相同的字符串（即：包含参数 1 中的所有字符）。</target>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>返回 “Joh”。</source>
          <target state="new">返回 “Joh”。</target>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="len"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Len</source>
          <target state="new"><ph id="ph1">&lt;a name="len"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Len</target>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Len 函数返回字符串中的字符数。</source>
          <target state="new">Len 函数返回字符串中的字符数。</target>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>返回 8</source>
          <target state="new">返回 8</target>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="ltrim"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>LTrim</source>
          <target state="new"><ph id="ph1">&lt;a name="ltrim"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>LTrim</target>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>LTrim 函数从字符串中删除前导空格。</source>
          <target state="new">LTrim 函数从字符串中删除前导空格。</target>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>返回 “Test”</source>
          <target state="new">返回 “Test”</target>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="mid"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Mid</source>
          <target state="new"><ph id="ph1">&lt;a name="mid"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Mid</target>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Mid 函数从字符串指定位置起返回指定的字符数。</source>
          <target state="new">Mid 函数从字符串指定位置起返回指定的字符数。</target>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>string：从中返回字符的字符串</source>
          <target state="new">string：从中返回字符的字符串</target>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>start：标识从中返回字符的字符串中起始位置的数字</source>
          <target state="new">start：标识从中返回字符的字符串中起始位置的数字</target>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>NumChar：标识从字符串中的位置返回的字符数的数字</source>
          <target state="new">NumChar：标识从字符串中的位置返回的字符数的数字</target>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>从字符串中的开始位置开始返回 numChar 字符。</source>
          <target state="new">从字符串中的开始位置开始返回 numChar 字符。</target>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>包含字符串中开始位置的 numChar 字符的字符串：</source>
          <target state="new">包含字符串中开始位置的 numChar 字符的字符串：</target>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>如果 numChar = 0，则返回空字符串。</source>
          <target state="new">如果 numChar = 0，则返回空字符串。</target>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>如果 numChar &lt; 0，则返回输入字符串。</source>
          <target state="new">如果 numChar &lt; 0，则返回输入字符串。</target>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>如果 start &gt; 字符串的长度，则返回输入字符串。</source>
          <target state="new">如果 start &gt; 字符串的长度，则返回输入字符串。</target>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>如果 start &lt;= 0，则返回输入字符串。</source>
          <target state="new">如果 start &lt;= 0，则返回输入字符串。</target>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>如果字符串为 null，则返回空字符串。</source>
          <target state="new">如果字符串为 null，则返回空字符串。</target>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>如果字符串中开始位置没有保留的 numChar 字符，则会返回尽可能多可以返回的字符。</source>
          <target state="new">如果字符串中开始位置没有保留的 numChar 字符，则会返回尽可能多可以返回的字符。</target>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>返回 “hn Do”。</source>
          <target state="new">返回 “hn Do”。</target>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>返回 “Doe”。</source>
          <target state="new">返回 “Doe”。</target>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="now"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Now</source>
          <target state="new"><ph id="ph1">&lt;a name="now"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Now</target>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Now 函数根据计算机的系统日期和时间返回指定当前日期和时间的 DateTime。</source>
          <target state="new">Now 函数根据计算机的系统日期和时间返回指定当前日期和时间的 DateTime。</target>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="numfromdate"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>NumFromDate</source>
          <target state="new"><ph id="ph1">&lt;a name="numfromdate"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>NumFromDate</target>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>NumFromDate 函数返回 AD 的日期格式的日期。</source>
          <target state="new">NumFromDate 函数返回 AD 的日期格式的日期。</target>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>返回 129699324000000000</source>
          <target state="new">返回 129699324000000000</target>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="padleft"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>PadLeft</source>
          <target state="new"><ph id="ph1">&lt;a name="padleft"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>PadLeft</target>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>PadLeft 函数使用提供的填充字符将字符串从左侧填充到指定长度。</source>
          <target state="new">PadLeft 函数使用提供的填充字符将字符串从左侧填充到指定长度。</target>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>string：要填充的字符串。</source>
          <target state="new">string：要填充的字符串。</target>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>length：表示所需字符串长度的整数。</source>
          <target state="new">length：表示所需字符串长度的整数。</target>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>padCharacter：包含用作填充字符的单个字符的字符串</source>
          <target state="new">padCharacter：包含用作填充字符的单个字符的字符串</target>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>备注</source>
          <target state="new">备注</target>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>如果字符串的长度小于 length，则 padCharacter 会重复追加到字符串的开头（左侧），直到其长度等于 length。</source>
          <target state="new">如果字符串的长度小于 length，则 padCharacter 会重复追加到字符串的开头（左侧），直到其长度等于 length。</target>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>PadCharacter 可以是空格字符，但不能为 null 值。</source>
          <target state="new">PadCharacter 可以是空格字符，但不能为 null 值。</target>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>如果字符串的长度等于或大于 length，则返回不变的字符串。</source>
          <target state="new">如果字符串的长度等于或大于 length，则返回不变的字符串。</target>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>如果字符串的长度大于或等于 length，则返回与 string 相同的字符串。</source>
          <target state="new">如果字符串的长度大于或等于 length，则返回与 string 相同的字符串。</target>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>如果字符串的长度小于 length，则返回具有所需长度的新字符串，其中包含用 padCharacter 填充的字符串。</source>
          <target state="new">如果字符串的长度小于 length，则返回具有所需长度的新字符串，其中包含用 padCharacter 填充的字符串。</target>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>如果字符串为 null，该函数则返回空字符串。</source>
          <target state="new">如果字符串为 null，该函数则返回空字符串。</target>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>返回 “000000User”。</source>
          <target state="new">返回 “000000User”。</target>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="padright"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>PadRight</source>
          <target state="new"><ph id="ph1">&lt;a name="padright"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>PadRight</target>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>PadRight 函数使用提供的填充字符将字符串从右侧填充到指定长度。</source>
          <target state="new">PadRight 函数使用提供的填充字符将字符串从右侧填充到指定长度。</target>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>string：要填充的字符串。</source>
          <target state="new">string：要填充的字符串。</target>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>length：表示所需字符串长度的整数。</source>
          <target state="new">length：表示所需字符串长度的整数。</target>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>padCharacter：包含用作填充字符的单个字符的字符串</source>
          <target state="new">padCharacter：包含用作填充字符的单个字符的字符串</target>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>如果字符串的长度小于 length，则 padCharacter 会重复追加到字符串的末尾（右侧），直到其长度等于 length。</source>
          <target state="new">如果字符串的长度小于 length，则 padCharacter 会重复追加到字符串的末尾（右侧），直到其长度等于 length。</target>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>padCharacter 可以是空格字符，但不能为 null 值。</source>
          <target state="new">padCharacter 可以是空格字符，但不能为 null 值。</target>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>如果字符串的长度等于或大于 length，则返回不变的字符串。</source>
          <target state="new">如果字符串的长度等于或大于 length，则返回不变的字符串。</target>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>如果字符串的长度大于或等于 length，则返回与 string 相同的字符串。</source>
          <target state="new">如果字符串的长度大于或等于 length，则返回与 string 相同的字符串。</target>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>如果字符串的长度小于 length，则返回具有所需长度的新字符串，其中包含用 padCharacter 填充的字符串。</source>
          <target state="new">如果字符串的长度小于 length，则返回具有所需长度的新字符串，其中包含用 padCharacter 填充的字符串。</target>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>如果字符串为 null，该函数则返回空字符串。</source>
          <target state="new">如果字符串为 null，该函数则返回空字符串。</target>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>返回 “User000000”。</source>
          <target state="new">返回 “User000000”。</target>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="pcase"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>PCase</source>
          <target state="new"><ph id="ph1">&lt;a name="pcase"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>PCase</target>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>PCase 函数将字符串中每个空格分隔词的第一个字符转换为大写形式，并将所有其他字符都转换为小写形式。</source>
          <target state="new">PCase 函数将字符串中每个空格分隔词的第一个字符转换为大写形式，并将所有其他字符都转换为小写形式。</target>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>返回 “Test”。</source>
          <target state="new">返回 “Test”。</target>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="randomnum"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>RandomNum</source>
          <target state="new"><ph id="ph1">&lt;a name="randomnum"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>RandomNum</target>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>RandomNum 函数返回指定间隔之间的随机数字。</source>
          <target state="new">RandomNum 函数返回指定间隔之间的随机数字。</target>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>start：标识要生成的随机值的下限的数字</source>
          <target state="new">start：标识要生成的随机值的下限的数字</target>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>end：标识要生成的随机值的上限的数字</source>
          <target state="new">end：标识要生成的随机值的上限的数字</target>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>返回 734。</source>
          <target state="new">返回 734。</target>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="removeduplicates"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>RemoveDuplicates</source>
          <target state="new"><ph id="ph1">&lt;a name="removeduplicates"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>RemoveDuplicates</target>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>RemoveDuplicates 函数使用多值字符串，并确保每个值都是唯一值。</source>
          <target state="new">RemoveDuplicates 函数使用多值字符串，并确保每个值都是唯一值。</target>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>返回净化的 proxyAddress 属性，其中所有重复值已被删除。</source>
          <target state="new">返回净化的 proxyAddress 属性，其中所有重复值已被删除。</target>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="replace"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Replace</source>
          <target state="new"><ph id="ph1">&lt;a name="replace"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Replace</target>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Replace 函数将所有出现的某一字符串替换为另一个字符串。</source>
          <target state="new">Replace 函数将所有出现的某一字符串替换为另一个字符串。</target>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>string：替换其中的值的字符串。</source>
          <target state="new">string：替换其中的值的字符串。</target>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>OldValue：要搜索和替换的字符串。</source>
          <target state="new">OldValue：要搜索和替换的字符串。</target>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>NewValue：要替换的字符串。</source>
          <target state="new">NewValue：要替换的字符串。</target>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>该函数可以识别以下特殊 moniker:</source>
          <target state="new">该函数可以识别以下特殊 moniker:</target>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>\\n – 新行</source>
          <target state="new">\\n – 新行</target>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>\\r – 回车符</source>
          <target state="new">\\r – 回车符</target>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>\\t – 选项卡</source>
          <target state="new">\\t – 选项卡</target>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>将 CRLF 替换为逗号和空格，可能导致出现“One Microsoft Way, Redmond, WA, USA”</source>
          <target state="new">将 CRLF 替换为逗号和空格，可能导致出现“One Microsoft Way, Redmond, WA, USA”</target>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="replacechars"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ReplaceChars</source>
          <target state="new"><ph id="ph1">&lt;a name="replacechars"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ReplaceChars</target>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>ReplaceChars 函数替换 ReplacePattern 字符串中找到的所有出现的字符。</source>
          <target state="new">ReplaceChars 函数替换 ReplacePattern 字符串中找到的所有出现的字符。</target>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>string：替换其中值的字符串。</source>
          <target state="new">string：替换其中值的字符串。</target>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>ReplacePattern：包含具有要替换字符的字典的字符串。</source>
          <target state="new">ReplacePattern：包含具有要替换字符的字典的字符串。</target>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>格式为 {source1}:{target1},{source2}:{target2},{sourceN},{targetN}，其中源是要查找并确定要替换的目标字符串的字符。</source>
          <target state="new">格式为 {source1}:{target1},{source2}:{target2},{sourceN},{targetN}，其中源是要查找并确定要替换的目标字符串的字符。</target>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>该函数使用每次出现的定义的源，并使用目标替换它们。</source>
          <target state="new">该函数使用每次出现的定义的源，并使用目标替换它们。</target>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>源必须正好是一个 (unicode) 字符。</source>
          <target state="new">源必须正好是一个 (unicode) 字符。</target>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>源不能为空或长度超过一个字符（分析错误）。</source>
          <target state="new">源不能为空或长度超过一个字符（分析错误）。</target>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>目标可以具有多个字符，例如 ö:oe、β:ss。</source>
          <target state="new">目标可以具有多个字符，例如 ö:oe、β:ss。</target>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>目标可以为空，该值指示应删除字符。</source>
          <target state="new">目标可以为空，该值指示应删除字符。</target>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>源区分大小写，并且必须是完全匹配。</source>
          <target state="new">源区分大小写，并且必须是完全匹配。</target>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>逗号 (,) 和冒号 (:) 是保留的字符，不能使用此函数进行替换。</source>
          <target state="new">逗号 (,) 和冒号 (:) 是保留的字符，不能使用此函数进行替换。</target>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>空格和 ReplacePattern 字符串中的其他空白字符被忽略。</source>
          <target state="new">空格和 ReplacePattern 字符串中的其他空白字符被忽略。</target>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>'%ReplaceString% = ’:,Å:A,Ä:A,Ö:O,å:a,ä:a,ö,o'</source>
          <target state="new">'%ReplaceString% = ’:,Å:A,Ä:A,Ö:O,å:a,ä:a,ö,o'</target>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>返回 Raksmorgas</source>
          <target state="new">返回 Raksmorgas</target>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>返回 “ONeil”，定义要删除单次勾选。</source>
          <target state="new">返回 “ONeil”，定义要删除单次勾选。</target>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="right"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Right</source>
          <target state="new"><ph id="ph1">&lt;a name="right"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Right</target>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>Right 函数从字符串右侧（末尾）起返回指定的字符数。</source>
          <target state="new">Right 函数从字符串右侧（末尾）起返回指定的字符数。</target>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>string：从中返回字符的字符串</source>
          <target state="new">string：从中返回字符的字符串</target>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>NumChar：标识从字符串末尾（右侧）起返回的字符数的数字</source>
          <target state="new">NumChar：标识从字符串末尾（右侧）起返回的字符数的数字</target>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>NumChar 字符从字符串的最后位置返回。</source>
          <target state="new">NumChar 字符从字符串的最后位置返回。</target>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>包含字符串中最后的 numChar 字符的字符串：</source>
          <target state="new">包含字符串中最后的 numChar 字符的字符串：</target>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>如果 numChar = 0，则返回空字符串。</source>
          <target state="new">如果 numChar = 0，则返回空字符串。</target>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>如果 numChar &lt; 0，则返回输入字符串。</source>
          <target state="new">如果 numChar &lt; 0，则返回输入字符串。</target>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>如果字符串为 null，则返回空字符串。</source>
          <target state="new">如果字符串为 null，则返回空字符串。</target>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>如果字符串包含的字符数比 NumChar 中指定的数量少，则返回与该字符串相同的字符串。</source>
          <target state="new">如果字符串包含的字符数比 NumChar 中指定的数量少，则返回与该字符串相同的字符串。</target>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>返回 “Doe”。</source>
          <target state="new">返回 “Doe”。</target>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="rtrim"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>RTrim</source>
          <target state="new"><ph id="ph1">&lt;a name="rtrim"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>RTrim</target>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>RTrim 函数从字符串中删除尾随空格。</source>
          <target state="new">RTrim 函数从字符串中删除尾随空格。</target>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>返回 “Test”。</source>
          <target state="new">返回 “Test”。</target>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="split"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>拆分</source>
          <target state="new"><ph id="ph1">&lt;a name="split"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>拆分</target>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>Split 函数使用采用分隔符分隔的字符串，并使其成为多值字符串。</source>
          <target state="new">Split 函数使用采用分隔符分隔的字符串，并使其成为多值字符串。</target>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`mvstr Split(str value, str delimiter)`</ph> &lt;br?</source>
          <target state="new"><ph id="ph1">`mvstr Split(str value, str delimiter)`</ph> &lt;br?</target>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>value：用分隔符字符来分隔的字符串。</source>
          <target state="new">value：用分隔符字符来分隔的字符串。</target>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>delimiter：用作分隔符的单个字符。</source>
          <target state="new">delimiter：用作分隔符的单个字符。</target>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>limit：将返回的最大数目的值。</source>
          <target state="new">limit：将返回的最大数目的值。</target>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>返回多值字符串，其中两个元素对 proxyAddress 属性有用</source>
          <target state="new">返回多值字符串，其中两个元素对 proxyAddress 属性有用</target>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="StringFromGuid"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>StringFromGuid</source>
          <target state="new"><ph id="ph1">&lt;a name="StringFromGuid"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>StringFromGuid</target>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>StringFromGuid 函数使用二进制 GUID，并将其转换为字符串</source>
          <target state="new">StringFromGuid 函数使用二进制 GUID，并将其转换为字符串</target>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="stringfromsid"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>StringFromSid</source>
          <target state="new"><ph id="ph1">&lt;a name="stringfromsid"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>StringFromSid</target>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>StringFromSid 函数将字节数组或包含安全标识符的多值字节数组转换为字符串或多值字符串。</source>
          <target state="new">StringFromSid 函数将字节数组或包含安全标识符的多值字节数组转换为字符串或多值字符串。</target>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="switch"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Switch</source>
          <target state="new"><ph id="ph1">&lt;a name="switch"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Switch</target>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>Switch 函数用于基于计算的条件返回单个值。</source>
          <target state="new">Switch 函数用于基于计算的条件返回单个值。</target>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>expr：想要计算结果的变体表达式。</source>
          <target state="new">expr：想要计算结果的变体表达式。</target>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>value：当相应表达式为 True 时要返回的值。</source>
          <target state="new">value：当相应表达式为 True 时要返回的值。</target>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>Switch 函数参数列表包含表达式和值对。表达式从左到右计算结果，并返回与计算结果为 True 的第一个表达式相关联的值。如果没有正确配对部件，则会发生运行时错误。</source>
          <target state="new">Switch 函数参数列表包含表达式和值对。表达式从左到右计算结果，并返回与计算结果为 True 的第一个表达式相关联的值。如果没有正确配对部件，则会发生运行时错误。</target>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>例如，如果 expr1 为 True，则 Switch 返回 value1。如果 expr-1 为 False，但 expr-2 为 True，则 Switch 返回 value-2，依此类推。</source>
          <target state="new">例如，如果 expr1 为 True，则 Switch 返回 value1。如果 expr-1 为 False，但 expr-2 为 True，则 Switch 返回 value-2，依此类推。</target>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>如果表达式均不为 True，第一个 True 表达式中相应值为 Null，则 Switch 返回零。</source>
          <target state="new">如果表达式均不为 True，第一个 True 表达式中相应值为 Null，则 Switch 返回零。</target>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>Switch 会对所有表达式计算结果，即使它只返回其中一个结果。为此，你应监视非预期的负面影响。例如，如果任何表达式的计算结果导致除数为零的错误，则会出现错误。</source>
          <target state="new">Switch 会对所有表达式计算结果，即使它只返回其中一个结果。为此，你应监视非预期的负面影响。例如，如果任何表达式的计算结果导致除数为零的错误，则会出现错误。</target>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>值还可以是将返回自定义字符串的错误函数。</source>
          <target state="new">值还可以是将返回自定义字符串的错误函数。</target>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>返回某些主要城市所使用的语言，否则返回错误。</source>
          <target state="new">返回某些主要城市所使用的语言，否则返回错误。</target>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="trim"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Trim</source>
          <target state="new"><ph id="ph1">&lt;a name="trim"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Trim</target>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Trim 函数从字符串中删除前导空格和尾随空格。</source>
          <target state="new">Trim 函数从字符串中删除前导空格和尾随空格。</target>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>返回 “Test”。</source>
          <target state="new">返回 “Test”。</target>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>删除 proxyAddress 属性中每个值的前导空格和尾随空格。</source>
          <target state="new">删除 proxyAddress 属性中每个值的前导空格和尾随空格。</target>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="ucase"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>UCase</source>
          <target state="new"><ph id="ph1">&lt;a name="ucase"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>UCase</target>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>UCase 函数将字符串中的所有字符都转换为大写形式。</source>
          <target state="new">UCase 函数将字符串中的所有字符都转换为大写形式。</target>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>返回 “TEST”。</source>
          <target state="new">返回 “TEST”。</target>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="word"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Word</source>
          <target state="new"><ph id="ph1">&lt;a name="word"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Word</target>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>说明：</source>
          <target state="new">说明：</target>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>基于描述要使用的分隔符与要返回的单词数的参数，Word 函数返回字符串中包含的单词。</source>
          <target state="new">基于描述要使用的分隔符与要返回的单词数的参数，Word 函数返回字符串中包含的单词。</target>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>语法：</source>
          <target state="new">语法：</target>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>string：从中返回单词的字符串。</source>
          <target state="new">string：从中返回单词的字符串。</target>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>WordNumber：标识应返回单词数的数字。</source>
          <target state="new">WordNumber：标识应返回单词数的数字。</target>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>delimiter：表示应该用于标识单词的分隔符的字符串</source>
          <target state="new">delimiter：表示应该用于标识单词的分隔符的字符串</target>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>备注：</source>
          <target state="new">备注：</target>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>字符串中的字符由分隔符中其中一个字符分隔的每个字符串被标识为单词：</source>
          <target state="new">字符串中的字符由分隔符中其中一个字符分隔的每个字符串被标识为单词：</target>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>如果数字 &lt; 1，则返回空字符串。</source>
          <target state="new">如果数字 &lt; 1，则返回空字符串。</target>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>如果字符串为 null，则返回空字符串。</source>
          <target state="new">如果字符串为 null，则返回空字符串。</target>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>如果字符串包含的单词少于应返回数字或字符串不包含由分隔符标识的任何单词，则返回空字符串。</source>
          <target state="new">如果字符串包含的单词少于应返回数字或字符串不包含由分隔符标识的任何单词，则返回空字符串。</target>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>示例：</source>
          <target state="new">示例：</target>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>返回 “brown”。</source>
          <target state="new">返回 “brown”。</target>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>会返回 “has”</source>
          <target state="new">会返回 “has”</target>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>其他资源</source>
          <target state="new">其他资源</target>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>了解声明性设置表达式</source>
          <target state="new">了解声明性设置表达式</target>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>Azure AD Connect Sync：自定义同步选项</source>
          <target state="new">Azure AD Connect Sync：自定义同步选项</target>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>将本地标识与 Azure Active Directory 集成</source>
          <target state="new">将本地标识与 Azure Active Directory 集成</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>