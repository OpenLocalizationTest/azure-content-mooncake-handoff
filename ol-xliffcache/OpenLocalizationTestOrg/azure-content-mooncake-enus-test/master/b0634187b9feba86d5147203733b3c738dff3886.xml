{
  "nodes": [
    {
      "content": "如何通过 Ruby 使用队列存储 | Azure",
      "pos": [
        28,
        52
      ]
    },
    {
      "content": "了解如何使用 Azure 队列服务创建和删除队列，以及插入、获取和删除消息。用 Ruby 编写的相关示例。",
      "pos": [
        72,
        125
      ]
    },
    {
      "content": "如何通过 Ruby 使用队列存储",
      "pos": [
        341,
        357
      ]
    },
    {
      "content": "概述",
      "pos": [
        459,
        461
      ]
    },
    {
      "content": "本指南演示如何使用 Azure 队列存储服务执行常见方案。相关示例是使用 Ruby Azure API 编写的。介绍的方案包括“插入”、“扫视”、“获取”和“删除”队列消息以及“创建”和“删除”队列。",
      "pos": [
        463,
        563
      ]
    },
    {
      "content": "创建 Ruby 应用程序",
      "pos": [
        762,
        774
      ]
    },
    {
      "pos": [
        776,
        888
      ],
      "content": "创建 Ruby 应用程序。有关说明，请参阅<bpt id=\"p1\">[</bpt>在 Azure 上创建 Ruby 应用程序<ept id=\"p1\">](/documentation/articles/virtual-machines-ruby-rails-web-app-linux)</ept>。"
    },
    {
      "content": "配置应用程序以访问存储",
      "pos": [
        893,
        904
      ]
    },
    {
      "content": "要使用 Azure 存储空间，你需要下载和使用 Ruby azure 包，其中包括一组便于与存储 REST 服务进行通信的库。",
      "pos": [
        906,
        969
      ]
    },
    {
      "content": "使用 RubyGems 获取该程序包",
      "pos": [
        975,
        993
      ]
    },
    {
      "pos": [
        998,
        1071
      ],
      "content": "使用命令行接口，例如 <bpt id=\"p1\">**</bpt>PowerShell<ept id=\"p1\">**</ept> (Windows)、<bpt id=\"p2\">**</bpt>Terminal<ept id=\"p2\">**</ept> (Mac) 或 <bpt id=\"p3\">**</bpt>Bash<ept id=\"p3\">**</ept> (Unix)。"
    },
    {
      "content": "在命令窗口中键入“gem install azure”以安装 gem 和依赖项。",
      "pos": [
        1076,
        1116
      ]
    },
    {
      "content": "导入包",
      "pos": [
        1122,
        1125
      ]
    },
    {
      "content": "使用常用的文本编辑器将以下内容添加到你要在其中使用存储的 Ruby 文件的顶部：",
      "pos": [
        1127,
        1167
      ]
    },
    {
      "content": "设置 Azure 存储连接",
      "pos": [
        1193,
        1206
      ]
    },
    {
      "pos": [
        1208,
        1363
      ],
      "content": "Azure 模块将读取环境变量 <bpt id=\"p1\">**</bpt>AZURE_STORAGE_ACCOUNT<ept id=\"p1\">**</ept> 和 <bpt id=\"p2\">**</bpt>AZURE_STORAGE_ACCESS_KEY<ept id=\"p2\">**</ept>，以便获取连接到 Azure 存储帐户所需的信息。如果未设置这些环境变量，则在使用 <bpt id=\"p3\">**</bpt>Azure::QueueService<ept id=\"p3\">**</ept> 之前必须通过以下代码指定帐户信息："
    },
    {
      "content": "获取这些值：",
      "pos": [
        1509,
        1515
      ]
    },
    {
      "pos": [
        1520,
        1570
      ],
      "content": "登录到 <bpt id=\"p1\">[</bpt>Azure 管理门户<ept id=\"p1\">](https://manage.windowsazure.cn/)</ept>。"
    },
    {
      "content": "导航到要使用的存储帐户",
      "pos": [
        1574,
        1585
      ]
    },
    {
      "content": "单击导航窗格底部的“管理密钥”。",
      "pos": [
        1589,
        1605
      ]
    },
    {
      "content": "在弹出对话框中，将会看到存储帐户名称、主访问密钥和辅助访问密钥。对于访问密钥，你可以选择主访问密钥，也可以选择辅助访问密钥。",
      "pos": [
        1609,
        1671
      ]
    },
    {
      "content": "如何：创建队列",
      "pos": [
        1676,
        1683
      ]
    },
    {
      "pos": [
        1685,
        1736
      ],
      "content": "以下代码将创建一个 <bpt id=\"p1\">**</bpt>Azure::QueueService<ept id=\"p1\">**</ept> 对象，您可以通过该对象来操作队列。"
    },
    {
      "content": "使用 create_queue() 方法创建具有指定名称的队列。",
      "pos": [
        1789,
        1821
      ]
    },
    {
      "content": "如何：在队列中插入消息",
      "pos": [
        1923,
        1934
      ]
    },
    {
      "content": "若要在队列中插入消息，可使用 create_message() 方法创建一条新消息并将其添加到队列中。",
      "pos": [
        1936,
        1987
      ]
    },
    {
      "content": "如何：扫视下一条消息",
      "pos": [
        2062,
        2072
      ]
    },
    {
      "pos": [
        2074,
        2172
      ],
      "content": "通过调用 <bpt id=\"p1\">**</bpt>peek_messages()<ept id=\"p1\">**</ept> 方法，可以查看队列前面的消息，而不必从队列中将其删除。默认情况下，<bpt id=\"p2\">**</bpt>peek_messages()<ept id=\"p2\">**</ept> 扫视单条消息。也可以指定要扫视的消息数。"
    },
    {
      "content": "如何：取消对下一条消息的排队",
      "pos": [
        2274,
        2288
      ]
    },
    {
      "content": "可通过两个步骤从队列中删除消息。",
      "pos": [
        2290,
        2306
      ]
    },
    {
      "pos": [
        2311,
        2438
      ],
      "content": "在调用 <bpt id=\"p1\">**</bpt>list_messages()<ept id=\"p1\">**</ept> 时，默认情况下会获取队列中的下一条消息。也可以指定要获取的消息数。从 <bpt id=\"p2\">**</bpt>list_messages()<ept id=\"p2\">**</ept> 返回的消息变得对从此队列读取消息的任何其他代码不可见。你将传递以秒为单位的可见性超时值作为参数。"
    },
    {
      "pos": [
        2443,
        2484
      ],
      "content": "若要完成从队列中删除消息，您还必须调用 <bpt id=\"p1\">**</bpt>delete_message()<ept id=\"p1\">**</ept>。"
    },
    {
      "pos": [
        2486,
        2578
      ],
      "content": "此删除消息的两步过程可确保当您的代码因硬件或软件故障而无法处理消息时，您的其他代码实例可以获取同一消息并重试。你的代码在处理消息后会立即调用 <bpt id=\"p1\">**</bpt>delete_message()<ept id=\"p1\">**</ept>。"
    },
    {
      "content": "如何：更改已排队消息的内容",
      "pos": [
        2752,
        2765
      ]
    },
    {
      "pos": [
        2767,
        2878
      ],
      "content": "你可以更改队列中现有消息的内容。以下代码使用 <bpt id=\"p1\">**</bpt>update_message()<ept id=\"p1\">**</ept> 方法来更新消息。该方法将返回一个元组，其中包含队列消息的 pop 接收方，以及一个 UTC 日期时间值，表示消息将在队列中可见的时间。"
    },
    {
      "content": "如何：用于对消息取消排队的其他选项",
      "pos": [
        3111,
        3128
      ]
    },
    {
      "content": "你可以通过两种方式自定义队列中的消息检索。",
      "pos": [
        3130,
        3151
      ]
    },
    {
      "content": "你可以获取一批消息。",
      "pos": [
        3156,
        3166
      ]
    },
    {
      "content": "你可以设置更长或更短的不可见超时时间，从而允许你的代码使用更多或更少的时间来完全处理每个消息。",
      "pos": [
        3171,
        3218
      ]
    },
    {
      "pos": [
        3220,
        3305
      ],
      "content": "以下代码示例使用 <bpt id=\"p1\">**</bpt>list_messages()<ept id=\"p1\">**</ept> 方法通过一次调用获取 15 条消息。然后，它打印并删除每条消息。它还将每条消息的不可见超时时间设置为 5 分钟。"
    },
    {
      "content": "如何：获取队列长度",
      "pos": [
        3524,
        3533
      ]
    },
    {
      "pos": [
        3535,
        3601
      ],
      "content": "你可以获取队列中消息数的估计值。<bpt id=\"p1\">**</bpt>get_queue_metadata()<ept id=\"p1\">**</ept> 方法要求队列服务返回有关队列的大概消息数和元数据。"
    },
    {
      "content": "如何：删除队列",
      "pos": [
        3697,
        3704
      ]
    },
    {
      "pos": [
        3706,
        3753
      ],
      "content": "若要删除队列及其包含的所有消息，请对队列对象调用 <bpt id=\"p1\">**</bpt>delete_queue()<ept id=\"p1\">**</ept> 方法。"
    },
    {
      "content": "后续步骤",
      "pos": [
        3810,
        3814
      ]
    },
    {
      "content": "现在，您已了解有关队列存储的基础知识，可单击下面的链接来了解更复杂的存储任务。",
      "pos": [
        3816,
        3855
      ]
    },
    {
      "pos": [
        3859,
        3924
      ],
      "content": "访问 <bpt id=\"p1\">[</bpt>Azure 存储空间团队博客<ept id=\"p1\">](http://blogs.msdn.com/b/windowsazurestorage/)</ept>"
    },
    {
      "pos": [
        3927,
        4016
      ],
      "content": "访问 GitHub 上的 <bpt id=\"p1\">[</bpt>Azure SDK for Ruby<ept id=\"p1\">](https://github.com/WindowsAzure/azure-sdk-for-ruby)</ept> 存储库"
    },
    {
      "pos": [
        4018,
        4255
      ],
      "content": "有关本文中讨论的 Azure 队列服务与<bpt id=\"p1\">[</bpt>如何使用 Service Bus 队列<ept id=\"p1\">](/documentation/articles/service-bus-ruby-how-to-use-queues)</ept>一文中讨论的 Azure Service Bus 队列的比较，请参阅 <bpt id=\"p2\">[</bpt>Azure 队列和 Azure Service Bus 队列 - 比较与对照<ept id=\"p2\">](http://msdn.microsoft.com/zh-cn/library/azure/hh767287.aspx)</ept>"
    }
  ],
  "content": "<properties \n    pageTitle=\"如何通过 Ruby 使用队列存储 | Azure\" \n    description=\"了解如何使用 Azure 队列服务创建和删除队列，以及插入、获取和删除消息。用 Ruby 编写的相关示例。\" \n    services=\"storage\" \n    documentationCenter=\"ruby\" \n    authors=\"tfitzmac\" \n    manager=\"wpickett\" \n    editor=\"\"/>\n\n<tags \n    ms.service=\"storage\" \n    ms.date=\"12/16/2015\" \n    wacn.date=\"01/14/2016\"/>\n\n\n# 如何通过 Ruby 使用队列存储\n\n[AZURE.INCLUDE [storage-selector-queue-include](../includes/storage-selector-queue-include.md)]\n\n## 概述\n\n本指南演示如何使用 Azure 队列存储服务执行常见方案。相关示例是使用 Ruby Azure API 编写的。介绍的方案包括“插入”、“扫视”、“获取”和“删除”队列消息以及“创建”和“删除”队列。\n\n[AZURE.INCLUDE [storage-queue-concepts-include](../includes/storage-queue-concepts-include.md)]\n\n[AZURE.INCLUDE [storage-create-account-include](../includes/storage-create-account-include.md)]\n\n## 创建 Ruby 应用程序\n\n创建 Ruby 应用程序。有关说明，请参阅[在 Azure 上创建 Ruby 应用程序](/documentation/articles/virtual-machines-ruby-rails-web-app-linux)。\n\n## 配置应用程序以访问存储\n\n要使用 Azure 存储空间，你需要下载和使用 Ruby azure 包，其中包括一组便于与存储 REST 服务进行通信的库。\n\n### 使用 RubyGems 获取该程序包\n\n1. 使用命令行接口，例如 **PowerShell** (Windows)、**Terminal** (Mac) 或 **Bash** (Unix)。\n\n2. 在命令窗口中键入“gem install azure”以安装 gem 和依赖项。\n\n### 导入包\n\n使用常用的文本编辑器将以下内容添加到你要在其中使用存储的 Ruby 文件的顶部：\n\n    require \"azure\"\n\n## 设置 Azure 存储连接\n\nAzure 模块将读取环境变量 **AZURE_STORAGE_ACCOUNT** 和 **AZURE_STORAGE_ACCESS_KEY**，以便获取连接到 Azure 存储帐户所需的信息。如果未设置这些环境变量，则在使用 **Azure::QueueService** 之前必须通过以下代码指定帐户信息：\n\n    Azure.config.storage_account_name = \"<your azure storage account>\"\n    Azure.config.storage_access_key = \"<your Azure storage access key>\"\n\n获取这些值：\n\n1. 登录到 [Azure 管理门户](https://manage.windowsazure.cn/)。\n2. 导航到要使用的存储帐户\n3. 单击导航窗格底部的“管理密钥”。\n4. 在弹出对话框中，将会看到存储帐户名称、主访问密钥和辅助访问密钥。对于访问密钥，你可以选择主访问密钥，也可以选择辅助访问密钥。\n\n## 如何：创建队列\n\n以下代码将创建一个 **Azure::QueueService** 对象，您可以通过该对象来操作队列。\n\n    azure_queue_service = Azure::QueueService.new\n\n使用 create_queue() 方法创建具有指定名称的队列。\n\n    begin\n      azure_queue_service.create_queue(\"test-queue\")\n    rescue\n      puts $!\n    end\n\n## 如何：在队列中插入消息\n\n若要在队列中插入消息，可使用 create_message() 方法创建一条新消息并将其添加到队列中。\n\n    azure_queue_service.create_message(\"test-queue\", \"test message\")\n\n## 如何：扫视下一条消息\n\n通过调用 **peek_messages()** 方法，可以查看队列前面的消息，而不必从队列中将其删除。默认情况下，**peek_messages()** 扫视单条消息。也可以指定要扫视的消息数。\n\n    result = azure_queue_service.peek_messages(\"test-queue\",\n      {:number_of_messages => 10})\n\n## 如何：取消对下一条消息的排队\n\n可通过两个步骤从队列中删除消息。\n\n1. 在调用 **list_messages()** 时，默认情况下会获取队列中的下一条消息。也可以指定要获取的消息数。从 **list_messages()** 返回的消息变得对从此队列读取消息的任何其他代码不可见。你将传递以秒为单位的可见性超时值作为参数。\n\n2. 若要完成从队列中删除消息，您还必须调用 **delete_message()**。\n\n此删除消息的两步过程可确保当您的代码因硬件或软件故障而无法处理消息时，您的其他代码实例可以获取同一消息并重试。你的代码在处理消息后会立即调用 **delete_message()**。\n\n    messages = azure_queue_service.list_messages(\"test-queue\", 30)\n    azure_queue_service.delete_message(\"test-queue\", \n      messages[0].id, messages[0].pop_receipt)\n\n## 如何：更改已排队消息的内容\n\n你可以更改队列中现有消息的内容。以下代码使用 **update_message()** 方法来更新消息。该方法将返回一个元组，其中包含队列消息的 pop 接收方，以及一个 UTC 日期时间值，表示消息将在队列中可见的时间。\n\n    message = azure_queue_service.list_messages(\"test-queue\", 30)\n    pop_receipt, time_next_visible = azure_queue_service.update_message(\n      \"test-queue\", message.id, message.pop_receipt, \"updated test message\", \n      30)\n\n## 如何：用于对消息取消排队的其他选项\n\n你可以通过两种方式自定义队列中的消息检索。\n\n1. 你可以获取一批消息。\n\n2. 你可以设置更长或更短的不可见超时时间，从而允许你的代码使用更多或更少的时间来完全处理每个消息。\n\n以下代码示例使用 **list_messages()** 方法通过一次调用获取 15 条消息。然后，它打印并删除每条消息。它还将每条消息的不可见超时时间设置为 5 分钟。\n\n    azure_queue_service.list_messages(\"test-queue\", 300\n      {:number_of_messages => 15}).each do |m|\n      puts m.message_text\n      azure_queue_service.delete_message(\"test-queue\", m.id, m.pop_receipt)\n    end\n\n## 如何：获取队列长度\n\n你可以获取队列中消息数的估计值。**get_queue_metadata()** 方法要求队列服务返回有关队列的大概消息数和元数据。\n\n    message_count, metadata = azure_queue_service.get_queue_metadata(\n      \"test-queue\")\n\n## 如何：删除队列\n\n若要删除队列及其包含的所有消息，请对队列对象调用 **delete_queue()** 方法。\n\n    azure_queue_service.delete_queue(\"test-queue\")\n\n## 后续步骤\n\n现在，您已了解有关队列存储的基础知识，可单击下面的链接来了解更复杂的存储任务。\n\n- 访问 [Azure 存储空间团队博客](http://blogs.msdn.com/b/windowsazurestorage/)\n- 访问 GitHub 上的 [Azure SDK for Ruby](https://github.com/WindowsAzure/azure-sdk-for-ruby) 存储库\n\n有关本文中讨论的 Azure 队列服务与[如何使用 Service Bus 队列](/documentation/articles/service-bus-ruby-how-to-use-queues)一文中讨论的 Azure Service Bus 队列的比较，请参阅 [Azure 队列和 Azure Service Bus 队列 - 比较与对照](http://msdn.microsoft.com/zh-cn/library/azure/hh767287.aspx)\n \n\n<!---HONumber=Mooncake_0104_2016-->"
}