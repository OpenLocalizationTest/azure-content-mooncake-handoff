{"nodes":[{"content":"如何将 io.js 与 Azure Web 应用配合使用","pos":[28,56]},{"content":"了解如何将 Azure 中的 Web 应用与 io.js 配合使用。","pos":[76,110]},{"content":"如何将 io.js 与 Azure Web 应用配合使用","pos":[349,377]},{"pos":[379,481],"content":"与 Joyent 的 Node.js 项目相比，流行的 Node 分叉 <bpt id=\"p1\">[</bpt>io.js<ept id=\"p1\">]</ept> 具有许多不同的特性，包括更加开放的监管模型、更快的发行周期，和更快地采纳新的和试验性的 JavaScript 功能。","source":"与 Joyent 的 Node.js 项目相比，流行的 Node 分叉 [io.js] 具有许多不同的特性，包括更加开放的监管模型、更快的发行周期，和更快地采纳新的和试验性的 JavaScript 功能。"},{"content":"虽然 Azure Web 应用预装了许多 Node.js 版本，但它还允许用户提供的 Node.js 二进制文件。","pos":[483,540]},{"content":"本文将讨论在 Azure Web 应用上启用 io.js 的两种方法：使用扩展的部署脚本（自动将 Azure 配置为使用最新的可用 io.js 版本），以及手动上载 io.js 二进制文件。","pos":[540,635]},{"content":"使用部署脚本","pos":[670,676]},{"content":"在部署 Node.js 应用程序后，Azure Web 应用将运行大量的小命令来确保正确配置环境。","pos":[678,727]},{"content":"如果使用部署脚本，则可以将此过程自定义为包含 io.js 的下载和配置。","pos":[727,763]},{"content":"GitHub 上提供了 <bpt id=\"p1\">[</bpt>io.js 部署脚本<ept id=\"p1\">]</ept>。","pos":[765,790],"source":"GitHub 上提供了 [io.js 部署脚本]。"},{"content":"若要在 Web 应用上启用 io.js，只需将 <bpt id=\"p1\">**</bpt>.deployment<ept id=\"p1\">**</ept>、<bpt id=\"p2\">**</bpt>deploy.cmd<ept id=\"p2\">**</ept> 和 <bpt id=\"p3\">**</bpt>IISNode.yml<ept id=\"p3\">**</ept> 复制到应用程序文件夹的根目录，并将其部署到 Web 应用。","pos":[790,892],"source":"若要在 Web 应用上启用 io.js，只需将 **.deployment**、**deploy.cmd** 和 **IISNode.yml** 复制到应用程序文件夹的根目录，并将其部署到 Web 应用。"},{"content":"第一个文件 <bpt id=\"p1\">**</bpt>.deployment<ept id=\"p1\">**</ept> 指示 Web 应用在部署后要运行 <bpt id=\"p2\">**</bpt>deploy.cmd<ept id=\"p2\">**</ept>。","pos":[894,948],"source":"第一个文件 **.deployment** 指示 Web 应用在部署后要运行 **deploy.cmd**。"},{"content":"此脚本将针对 Node.js 应用程序运行所有常见步骤，但还会下载最新版本的 io.js。","pos":[948,993]},{"content":"最后，<bpt id=\"p1\">**</bpt>IISNode.yml<ept id=\"p1\">**</ept> 将 Web 应用配置为使用刚刚下载的 io.js 二进制文件，而不是预装的 Node.js 二进制文件。","pos":[993,1064],"source":"最后，**IISNode.yml** 将 Web 应用配置为使用刚刚下载的 io.js 二进制文件，而不是预装的 Node.js 二进制文件。"},{"pos":[1080,1142],"content":"若要更新使用的 io.js 二进制文件，只需重新部署你的应用程序 - 每次部署应用程序后，脚本将下载 io.js 的新版本。"},{"content":"使用手动安装","pos":[1179,1185]},{"content":"手动安装自定义 io.js 版本只包括两个步骤。","pos":[1187,1211]},{"content":"首先，直接从 <bpt id=\"p1\">[</bpt>io.js 分发包<ept id=\"p1\">]</ept>中下载 <bpt id=\"p2\">**</bpt>win-x64<ept id=\"p2\">**</ept> 二进制文件。","pos":[1211,1251],"source":"首先，直接从 [io.js 分发包]中下载 **win-x64** 二进制文件。"},{"content":"需要两个文件 - <bpt id=\"p1\">**</bpt>iojs.exe<ept id=\"p1\">**</ept> 和 <bpt id=\"p2\">**</bpt>iojs.lib<ept id=\"p2\">**</ept>。","pos":[1251,1288],"source":"需要两个文件 - **iojs.exe** 和 **iojs.lib**。"},{"content":"将两个文件保存到 Web 应用上的某个文件夹中，例如，保存在 <bpt id=\"p1\">**</bpt>bin/iojs<ept id=\"p1\">**</ept> 中。","pos":[1288,1334],"source":"将两个文件保存到 Web 应用上的某个文件夹中，例如，保存在 **bin/iojs** 中。"},{"pos":[1336,1422],"content":"若要将 Web 应用配置为使用 <bpt id=\"p1\">**</bpt>iojs.exe<ept id=\"p1\">**</ept> 而不是预装的 Node 版本，请在应用程序的根目录中创建一个 <bpt id=\"p2\">**</bpt>IISNode.yml<ept id=\"p2\">**</ept> 文件，并添加以下行。","source":"若要将 Web 应用配置为使用 **iojs.exe** 而不是预装的 Node 版本，请在应用程序的根目录中创建一个 **IISNode.yml** 文件，并添加以下行。"},{"content":"后续步骤","pos":[1520,1524]},{"content":"在本文中，你已学习如何使用提供的部署脚本以及手动安装方法，将 io.js 与 Azure Web 应用配合使用。","pos":[1526,1582]},{"content":"io.js 正在紧张的开发中，其更新频率超过了 Node.js。","pos":[1598,1630]},{"content":"许多 Node.js 模块可能并不适用于 io.js - 若要进行故障排除，请查阅 <bpt id=\"p1\">[</bpt>GitHub 上的 io.js<ept id=\"p1\">]</ept>。","pos":[1630,1690],"source":"许多 Node.js 模块可能并不适用于 io.js - 若要进行故障排除，请查阅 [GitHub 上的 io.js]。"},{"content":"io.js","pos":[1693,1698]},{"content":"io.js 分发包","pos":[1719,1728]},{"content":"GitHub 上的 io.js","pos":[1755,1770]},{"content":"io.js 部署脚本","pos":[1804,1814]}],"content":"<properties \n    pageTitle=\"如何将 io.js 与 Azure Web 应用配合使用\" \n    description=\"了解如何将 Azure 中的 Web 应用与 io.js 配合使用。\" \n    services=\"app-service\\web\" \n    documentationCenter=\"nodejs\" \n    authors=\"felixrieseberg\" \n    manager=\"wpickett\" \n    editor=\"mollybos\"/>\n\n<tags \n    ms.service=\"web-sites\" \n    ms.date=\"01/09/2016\"\n    wacn.date=\"03/03/2016\"/>\n\n#如何将 io.js 与 Azure Web 应用配合使用\n\n与 Joyent 的 Node.js 项目相比，流行的 Node 分叉 [io.js] 具有许多不同的特性，包括更加开放的监管模型、更快的发行周期，和更快地采纳新的和试验性的 JavaScript 功能。\n\n虽然 Azure Web 应用预装了许多 Node.js 版本，但它还允许用户提供的 Node.js 二进制文件。本文将讨论在 Azure Web 应用上启用 io.js 的两种方法：使用扩展的部署脚本（自动将 Azure 配置为使用最新的可用 io.js 版本），以及手动上载 io.js 二进制文件。\n\n<a id=\"deploymentscript\"></a>\n## 使用部署脚本\n\n在部署 Node.js 应用程序后，Azure Web 应用将运行大量的小命令来确保正确配置环境。如果使用部署脚本，则可以将此过程自定义为包含 io.js 的下载和配置。\n\nGitHub 上提供了 [io.js 部署脚本]。若要在 Web 应用上启用 io.js，只需将 **.deployment**、**deploy.cmd** 和 **IISNode.yml** 复制到应用程序文件夹的根目录，并将其部署到 Web 应用。\n\n第一个文件 **.deployment** 指示 Web 应用在部署后要运行 **deploy.cmd**。此脚本将针对 Node.js 应用程序运行所有常见步骤，但还会下载最新版本的 io.js。最后，**IISNode.yml** 将 Web 应用配置为使用刚刚下载的 io.js 二进制文件，而不是预装的 Node.js 二进制文件。\n\n> [AZURE.NOTE]若要更新使用的 io.js 二进制文件，只需重新部署你的应用程序 - 每次部署应用程序后，脚本将下载 io.js 的新版本。\n\n<a id=\"manualinstallation\"></a>\n## 使用手动安装\n\n手动安装自定义 io.js 版本只包括两个步骤。首先，直接从 [io.js 分发包]中下载 **win-x64** 二进制文件。需要两个文件 - **iojs.exe** 和 **iojs.lib**。将两个文件保存到 Web 应用上的某个文件夹中，例如，保存在 **bin/iojs** 中。\n\n若要将 Web 应用配置为使用 **iojs.exe** 而不是预装的 Node 版本，请在应用程序的根目录中创建一个 **IISNode.yml** 文件，并添加以下行。\n\n    nodeProcessCommandLine: \"D:\\home\\site\\wwwroot\\bin\\iojs\\iojs.exe\"\n\n<a id=\"nextsteps\"></a>\n## 后续步骤\n\n在本文中，你已学习如何使用提供的部署脚本以及手动安装方法，将 io.js 与 Azure Web 应用配合使用。\n\n> [AZURE.NOTE]io.js 正在紧张的开发中，其更新频率超过了 Node.js。许多 Node.js 模块可能并不适用于 io.js - 若要进行故障排除，请查阅 [GitHub 上的 io.js]。\n\n[io.js]: https://iojs.org\n[io.js 分发包]: https://iojs.org/dist/\n[GitHub 上的 io.js]: https://github.com/iojs/io.js\n[io.js 部署脚本]: https://github.com/felixrieseberg/iojs-azure\n\n<!---HONumber=71-->"}