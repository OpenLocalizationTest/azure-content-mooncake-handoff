{
  "nodes": [
    {
      "content": "用于连接字符串安全的示例配置文件",
      "pos": [
        146,
        162
      ]
    },
    {
      "content": "在 C# 代码中将连接字符串作为文本是不安全的。最好将连接字符串置于配置文件中。在这里，你可以随时编辑字符串，无需重新编译。",
      "pos": [
        165,
        227
      ]
    },
    {
      "pos": [
        229,
        309
      ],
      "content": "让我们假定你已编译的 C# 程序已命名为 <bpt id=\"p1\">**</bpt>ConsoleApplication1.exe<ept id=\"p1\">**</ept>，并且此 .exe 驻留在 <bpt id=\"p2\">**</bpt>bin\\\\debug<ept id=\"p2\">**</ept> 目录。"
    },
    {
      "pos": [
        311,
        403
      ],
      "content": "在此示例中，你的连接字符串的大部分存储在名为 <bpt id=\"p1\">**</bpt>ConsoleApplication1.exe.config<ept id=\"p1\">**</ept> 的配置文件中。此配置文件必须也驻留在 <bpt id=\"p2\">**</bpt>bin\\\\debug<ept id=\"p2\">**</ept>。"
    },
    {
      "pos": [
        405,
        487
      ],
      "content": "在下面配置文件的 XML 中你将看到一个名为 <bpt id=\"p1\">**</bpt>ConnectionString4NoUserIDNoPassword<ept id=\"p1\">**</ept> 的连接字符串。C# 代码查找此字符串。"
    },
    {
      "content": "你必须编辑占位符中的实际名称：",
      "pos": [
        489,
        504
      ]
    },
    {
      "content": "{your\\_serverName\\_here}",
      "pos": [
        508,
        532
      ]
    },
    {
      "content": "{your\\_databaseName\\_here}",
      "pos": [
        535,
        561
      ]
    },
    {
      "content": "在本演示中，我们选择省略两个参数：",
      "pos": [
        1312,
        1329
      ]
    },
    {
      "content": "User ID={your\\_userName\\_here};",
      "pos": [
        1333,
        1364
      ]
    },
    {
      "content": "Password={your\\_password\\_here};",
      "pos": [
        1367,
        1399
      ]
    },
    {
      "content": "你可以加入它们，但有时最好让你的程序通过用户的键盘输入获取这些值。视情况而定。",
      "pos": [
        1402,
        1441
      ]
    }
  ],
  "content": "\n<!--\nincludes/sql-database-include-connection-string-40-config.md\n\nLatest Freshness check:  2015-09-04 , GeneMi.\n\n## Connection string\n-->\n\n\n### 用于连接字符串安全的示例配置文件\n\n\n在 C# 代码中将连接字符串作为文本是不安全的。最好将连接字符串置于配置文件中。在这里，你可以随时编辑字符串，无需重新编译。\n\n让我们假定你已编译的 C# 程序已命名为 **ConsoleApplication1.exe**，并且此 .exe 驻留在 **bin\\\\debug** 目录。\n\n在此示例中，你的连接字符串的大部分存储在名为 **ConsoleApplication1.exe.config** 的配置文件中。此配置文件必须也驻留在 **bin\\\\debug**。\n\n在下面配置文件的 XML 中你将看到一个名为 **ConnectionString4NoUserIDNoPassword** 的连接字符串。C# 代码查找此字符串。\n\n你必须编辑占位符中的实际名称：\n\n- {your\\_serverName\\_here}\n- {your\\_databaseName\\_here}\n\n\n\n        <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n        <configuration>\n            <startup> \n                <supportedRuntime version=\"v4.0\" sku=\".NETFramework,Version=v4.5\" />\n            </startup>\n        \n            <connectionStrings>\n                <clear />\n                <add name=\"ConnectionString4NoUserIDNoPassword\"\n                providerName=\"System.Data.ProviderName\"\n        \n                connectionString=\n                \"Server=tcp:{your_serverName_here}.database.chinacloudapi.cn,1433;\n                Database={your_databaseName_here};\n                Connection Timeout=30;\n                Encrypt=True;\n                TrustServerCertificate=False;\" />\n            </connectionStrings>\n        </configuration>\n\n\n\n在本演示中，我们选择省略两个参数：\n\n- User ID={your\\_userName\\_here};\n- Password={your\\_password\\_here};\n\n\n你可以加入它们，但有时最好让你的程序通过用户的键盘输入获取这些值。视情况而定。\n\n\n\n<!--\nThese three includes/ files are a sequenced set, but you can pick and choose:\n\nincludes/sql-database-include-connection-string-20-portalshots.md\nincludes/sql-database-include-connection-string-30-compare.md\nincludes/sql-database-include-connection-string-40-config.md\n-->\n\n<!---HONumber=79-->"
}