{
  "nodes": [
    {
      "content": "使用 HDInsight 上的 Storm 和 HBase 按时间对事件进行关联",
      "pos": [
        24,
        64
      ]
    },
    {
      "content": "了解如何使用 HDInsight 上的 Storm 和 HBase 将不同时间到达的事件关联起来。",
      "pos": [
        80,
        129
      ]
    },
    {
      "content": "使用 HDInsight 上的 Storm 和 HBase 按时间对事件进行关联",
      "pos": [
        351,
        391
      ]
    },
    {
      "content": "通过使用 Apache Storm 的持久数据存储，你可以将不同时间到达的数据条目关联起来。例如，将用户会话的登录事件和注销事件关联起来即可计算该会话的持续时间。",
      "pos": [
        393,
        474
      ]
    },
    {
      "content": "在本文档中，你将学习如何创建基本的 C# Storm 拓扑来跟踪用户会话的登录事件和注销事件，从而计算出会话的持续时间。拓扑使用 HBase 作为永久性数据存储。HBase 还可用于对历史数据执行批查询，以便获得额外的信息，例如在特定的时段有多少用户会话启动或结束。",
      "pos": [
        476,
        609
      ]
    },
    {
      "content": "先决条件",
      "pos": [
        614,
        618
      ]
    },
    {
      "pos": [
        624,
        785
      ],
      "content": "HDInsight Tools for Visual Studio：有关安装方面的信息，请参阅 <bpt id=\"p1\">[</bpt>HDInsight Tools for Visual Studio 入门<ept id=\"p1\">](/documentation/articles/hdinsight-hadoop-visual-studio-tools-get-started)</ept>。"
    },
    {
      "content": "Apache Storm on HDInsight 群集",
      "pos": [
        791,
        819
      ]
    },
    {
      "content": "Apache HBase on HDInsight 群集",
      "pos": [
        825,
        853
      ]
    },
    {
      "content": "体系结构",
      "pos": [
        858,
        862
      ]
    },
    {
      "content": "拓扑中的数据流程图",
      "pos": [
        866,
        875
      ]
    },
    {
      "content": "对事件进行关联时，需要一个事件源的通用标识符。例如，用户 ID、会话 ID 或其他数据片段，其特点是：a) 唯一；b) 包括在发送到 Storm 的所有数据中。此示例使用 GUID 值来表示会话 ID。",
      "pos": [
        948,
        1049
      ]
    },
    {
      "content": "此示例包含两个 HDInsight 群集：",
      "pos": [
        1051,
        1072
      ]
    },
    {
      "content": "HBase：历史数据的永久数据存储",
      "pos": [
        1078,
        1095
      ]
    },
    {
      "content": "Storm：用于摄取传入数据",
      "pos": [
        1101,
        1115
      ]
    },
    {
      "content": "数据通过 Storm 拓扑随机生成，包含以下项：",
      "pos": [
        1117,
        1141
      ]
    },
    {
      "content": "会话 ID：一个 GUID，可唯一地标识每个会话",
      "pos": [
        1147,
        1171
      ]
    },
    {
      "content": "事件：开始或结束事件。就此示例来说，开始事件始终发生在结束事件之前",
      "pos": [
        1177,
        1210
      ]
    },
    {
      "content": "时间：事件的时间。",
      "pos": [
        1216,
        1225
      ]
    },
    {
      "content": "此数据在 HBase 中处理和存储。",
      "pos": [
        1227,
        1245
      ]
    },
    {
      "content": "Storm 拓扑",
      "pos": [
        1251,
        1259
      ]
    },
    {
      "pos": [
        1261,
        1377
      ],
      "content": "会话启动时，<bpt id=\"p1\">**</bpt>开始<ept id=\"p1\">**</ept>事件将通过拓扑接收，然后记录到 HBase。收到<bpt id=\"p2\">**</bpt>结束<ept id=\"p2\">**</ept>事件后，拓扑会检索<bpt id=\"p3\">**</bpt>开始<ept id=\"p3\">**</ept>事件并计算两个事件之间的时间。然后会将此<bpt id=\"p4\">**</bpt>持续时间<ept id=\"p4\">**</ept>值存储到 HBase 中，同时存储的还有<bpt id=\"p5\">**</bpt>结束<ept id=\"p5\">**</ept>事件信息。"
    },
    {
      "pos": [
        1381,
        1433
      ],
      "content": "<ph id=\"ph1\">[AZURE.IMPORTANT]</ph>虽然此拓扑演示了基本的模式，但生产型解决方案需要针对以下情况进行设计："
    },
    {
      "content": "事件在到达时混乱无序",
      "pos": [
        1440,
        1450
      ]
    },
    {
      "content": "重复的事件",
      "pos": [
        1455,
        1460
      ]
    },
    {
      "content": "删除的事件",
      "pos": [
        1465,
        1470
      ]
    },
    {
      "content": "示例拓扑由以下组件组成：",
      "pos": [
        1472,
        1484
      ]
    },
    {
      "content": "Session.cs: 通过创建随机会话 ID、开始时间以及会话持续时间来模拟用户会话",
      "pos": [
        1490,
        1533
      ]
    },
    {
      "content": "Spout.cs: 创建 100 个会话，发出一个开始事件，等待每个会话随机超时，然后发出一个结束事件。然后回收结束的会话，以便生成新的会话。",
      "pos": [
        1539,
        1610
      ]
    },
    {
      "content": "HBaseLookupBolt.cs：使用的会话 ID 来查找 HBase 中的会话信息。处理结束事件时，它会查找相应的开始事件，然后计算会话的持续时间。",
      "pos": [
        1616,
        1693
      ]
    },
    {
      "content": "HBaseBolt.cs：将信息存储到 HBase。",
      "pos": [
        1699,
        1725
      ]
    },
    {
      "content": "TypeHelper.cs：通过 HBase 执行读/写操作时，帮助进行类型转换。",
      "pos": [
        1731,
        1772
      ]
    },
    {
      "content": "HBase 架构",
      "pos": [
        1778,
        1786
      ]
    },
    {
      "content": "在 HBase 中，数据存储在具有以下架构/设置的表中：",
      "pos": [
        1788,
        1816
      ]
    },
    {
      "content": "行键：会话 ID 用作此表中行的键",
      "pos": [
        1822,
        1839
      ]
    },
    {
      "content": "列系列：系列名称为“cf”。存储在此系列中的列包括：",
      "pos": [
        1845,
        1871
      ]
    },
    {
      "content": "事件：开始或结束",
      "pos": [
        1881,
        1889
      ]
    },
    {
      "content": "时间：事件发生的时间（以毫秒为单位）",
      "pos": [
        1899,
        1917
      ]
    },
    {
      "content": "持续时间：开始事件和结束事件之间的时长",
      "pos": [
        1927,
        1946
      ]
    },
    {
      "content": "版本：“cf”系列设置为每行保留 5 个版本",
      "pos": [
        1952,
        1974
      ]
    },
    {
      "pos": [
        1982,
        2107
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>可以使用版本来记录以前为特定行键存储的值。默认情况下，HBase 只返回行的最新版本的值。在这种情况下，同一行将用于所有事件（开始、结束）。每个版本的行通过时间戳值来标识。这样即可通过历史视图来查看针对特定 ID 记录的事件。"
    },
    {
      "content": "下载项目",
      "pos": [
        2112,
        2116
      ]
    },
    {
      "pos": [
        2118,
        2280
      ],
      "content": "可以从 <bpt id=\"p1\">[</bpt>https://github.com/Azure-Samples/hdinsight-storm-dotnet-event-correlation<ept id=\"p1\">](https://github.com/Azure-Samples/hdinsight-storm-dotnet-event-correlation)</ept> 下载示例项目。"
    },
    {
      "content": "此下载包含以下 C# 项目：",
      "pos": [
        2282,
        2296
      ]
    },
    {
      "content": "CorrelationTopology：C# Storm 拓扑，可针对用户会话随机发出开始事件和结束事件。每个会话的持续时间为 1 到 5 分钟。",
      "pos": [
        2302,
        2375
      ]
    },
    {
      "content": "SessionInfo：C# 控制台应用程序，用于创建 HBase 表，以及提供可返回已存储会话数据相关信息的示例查询。",
      "pos": [
        2381,
        2441
      ]
    },
    {
      "content": "创建表",
      "pos": [
        2446,
        2449
      ]
    },
    {
      "pos": [
        2454,
        2493
      ],
      "content": "打开 Visual Studio 中的 <bpt id=\"p1\">**</bpt>SessionInfo<ept id=\"p1\">**</ept> 项目。"
    },
    {
      "content": "在“解决方案资源管理器”中，右键单击“SessionInfo”项目，然后选择“属性”。",
      "pos": [
        2498,
        2541
      ]
    },
    {
      "content": "属性已选定的菜单的屏幕快照",
      "pos": [
        2549,
        2562
      ]
    },
    {
      "pos": [
        2635,
        2654
      ],
      "content": "选择<bpt id=\"p1\">**</bpt>“设置”<ept id=\"p1\">**</ept>，然后设置以下值："
    },
    {
      "content": "HBaseClusterURL：到 HBase 群集的 URL。例如 https://myhbasecluster.azurehdinsight.cn",
      "pos": [
        2664,
        2739
      ]
    },
    {
      "content": "HBaseClusterUserName：群集的管理员/HTTP 用户帐户",
      "pos": [
        2749,
        2786
      ]
    },
    {
      "content": "HBaseClusterPassword：管理员/HTTP 用户帐户的密码",
      "pos": [
        2796,
        2833
      ]
    },
    {
      "content": "HBaseTableName：用于此示例的表的名称",
      "pos": [
        2843,
        2868
      ]
    },
    {
      "content": "HBaseTableColumnFamily：列系列名称",
      "pos": [
        2878,
        2906
      ]
    },
    {
      "content": "设置对话框的图像",
      "pos": [
        2914,
        2922
      ]
    },
    {
      "content": "运行解决方案。出现提示时，选择可在 HBase 群集上创建表的“c”键。",
      "pos": [
        2987,
        3023
      ]
    },
    {
      "content": "生成和部署 Storm 拓扑",
      "pos": [
        3028,
        3042
      ]
    },
    {
      "pos": [
        3048,
        3097
      ],
      "content": "在 Visual Studio 中打开 <bpt id=\"p1\">**</bpt>CorrelationTopology<ept id=\"p1\">**</ept> 解决方案。"
    },
    {
      "pos": [
        3103,
        3156
      ],
      "content": "在“解决方案资源管理器”中，右键单击 <bpt id=\"p1\">**</bpt>CorrelationTopology<ept id=\"p1\">**</ept> 项目，然后选择属性。"
    },
    {
      "pos": [
        3162,
        3222
      ],
      "content": "在属性窗口中，选择<bpt id=\"p1\">**</bpt>“设置”<ept id=\"p1\">**</ept>并提供以下信息。头 5 个应该是由 <bpt id=\"p2\">**</bpt>SessionInfo<ept id=\"p2\">**</ept> 项目使用的相同值："
    },
    {
      "content": "HBaseClusterURL：到 HBase 群集的 URL。例如 https://myhbasecluster.azurehdinsight.cn",
      "pos": [
        3232,
        3307
      ]
    },
    {
      "content": "HBaseClusterUserName：群集的管理员/HTTP 用户帐户",
      "pos": [
        3317,
        3354
      ]
    },
    {
      "content": "HBaseClusterPassword：管理员/HTTP 用户帐户的密码",
      "pos": [
        3364,
        3401
      ]
    },
    {
      "content": "HBaseTableName：用于此示例的表的名称。该名称包含的表名称应该与 SessionInfo 项目中使用的相同",
      "pos": [
        3411,
        3470
      ]
    },
    {
      "content": "HBaseTableColumnFamily：列系列名称。该名称包含的列系列名称应该与 SessionInfo 项目中使用的相同",
      "pos": [
        3480,
        3544
      ]
    },
    {
      "pos": [
        3552,
        3630
      ],
      "content": "<ph id=\"ph1\">[AZURE.IMPORTANT]</ph>请勿更改 HBaseTableColumnNames，因为其默认值是 <bpt id=\"p1\">**</bpt>SessionInfo<ept id=\"p1\">**</ept> 用来检索数据的名称。"
    },
    {
      "content": "保存属性，然后生成项目。",
      "pos": [
        3636,
        3648
      ]
    },
    {
      "content": "在“解决方案资源管理器”中，右键单击项目，然后选择“提交到 Storm on HDInsight”。如果出现提示，请输入你 Azure 订阅的凭据。",
      "pos": [
        3654,
        3728
      ]
    },
    {
      "content": "提交到 storm 菜单项的图像",
      "pos": [
        3736,
        3752
      ]
    },
    {
      "pos": [
        3823,
        3858
      ],
      "content": "在<bpt id=\"p1\">**</bpt>“提交拓扑”<ept id=\"p1\">**</ept>对话框中，选择将运行此拓扑的 Storm 群集。"
    },
    {
      "pos": [
        3866,
        3913
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>第一次提交拓扑时，可能需要几秒钟来检索 HDInsight 群集名称。"
    },
    {
      "pos": [
        3919,
        4013
      ],
      "content": "一旦上载拓扑并将其提交到该群集，<bpt id=\"p1\">**</bpt>“Storm 拓扑视图”<ept id=\"p1\">**</ept>将打开并显示正在运行的拓扑。选择 <bpt id=\"p2\">**</bpt>CorrelationTopology<ept id=\"p2\">**</ept>，然后使用页面右上角的刷新按钮刷新拓扑信息。"
    },
    {
      "content": "拓扑视图的图像",
      "pos": [
        4021,
        4028
      ]
    },
    {
      "pos": [
        4098,
        4126
      ],
      "content": "当拓扑开始生成数据时，<bpt id=\"p1\">**</bpt>“已发出”<ept id=\"p1\">**</ept>列中的值将递增。"
    },
    {
      "pos": [
        4134,
        4183
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>如果<bpt id=\"p1\">**</bpt>“Storm 拓扑视图”<ept id=\"p1\">**</ept>不会自动打开，可使用以下步骤将其打开："
    },
    {
      "content": "在“解决方案资源管理器”中，展开“Azure”，然后展开“HDInsight”。",
      "pos": [
        4199,
        4239
      ]
    },
    {
      "pos": [
        4255,
        4298
      ],
      "content": "右键单击在其上运行拓扑的 Storm 群集，然后选择<bpt id=\"p1\">**</bpt>“查看 Storm 拓扑”<ept id=\"p1\">**</ept>"
    },
    {
      "content": "查询数据",
      "pos": [
        4303,
        4307
      ]
    },
    {
      "content": "一旦已发出数据，则可使用以下步骤来查询数据。",
      "pos": [
        4309,
        4331
      ]
    },
    {
      "pos": [
        4336,
        4377
      ],
      "content": "返回到 <bpt id=\"p1\">**</bpt>SessionInfo<ept id=\"p1\">**</ept> 项目。如果该项目未运行，可启动一个新实例。"
    },
    {
      "pos": [
        4382,
        4452
      ],
      "content": "出现提示时，选择 <bpt id=\"p1\">**</bpt>s<ept id=\"p1\">**</ept> 即可搜索开始事件。系统会提示你输入开始时间和结束时间，以便定义一个时间范围 - 将只返回这两个时间之间的事件。"
    },
    {
      "content": "输入开始和结束时间时使用以下格式：HH:MM 以及“am”或“pm”。例如，11:20pm。",
      "pos": [
        4458,
        4504
      ]
    },
    {
      "content": "由于刚刚启动拓扑，可使用部署之前的某个时间作为开始时间，而使用现在的时间作为结束时间。这应该会捕获大多数在启动时生成的开始事件。当查询处于运行状态时，你会看到如下所示的条目列表：",
      "pos": [
        4510,
        4599
      ]
    },
    {
      "content": "搜索结束事件与搜索开始事件在原理上是相同的。不过，结束事件是在开始事件之后 1 到 5 分钟随机生成的。因此，你可能需要尝试数个时间范围才能找到结束事件。结束事件还会包含会话持续时间 - 开始事件时间与结束事件时间之差。下面是结束事件数据的一个示例：",
      "pos": [
        4713,
        4838
      ]
    },
    {
      "pos": [
        4943,
        4986
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>虽然你输入的时间值为本地时间，但从查询返回的时间将是 UTC。"
    },
    {
      "content": "停止拓扑",
      "pos": [
        4990,
        4994
      ]
    },
    {
      "pos": [
        4996,
        5101
      ],
      "content": "当你准备停止拓扑时，请返回到 Visual Studio 中的 <bpt id=\"p1\">**</bpt>CorrelationTopology<ept id=\"p1\">**</ept> 项目。在<bpt id=\"p2\">**</bpt>“Storm 拓扑视图”<ept id=\"p2\">**</ept>中，选择拓扑，然后使用拓扑视图顶部的<bpt id=\"p3\">**</bpt>“终止”<ept id=\"p3\">**</ept>按钮。"
    },
    {
      "content": "后续步骤",
      "pos": [
        5105,
        5109
      ]
    },
    {
      "pos": [
        5111,
        5212
      ],
      "content": "如需更多 Storm 示例，请参阅<bpt id=\"p1\">[</bpt>Storm on HDInsight 拓扑示例<ept id=\"p1\">](/documentation/articles/hdinsight-storm-example-topology)</ept>。"
    }
  ],
  "content": "<properties\n pageTitle=\"使用 HDInsight 上的 Storm 和 HBase 按时间对事件进行关联\"\n description=\"了解如何使用 HDInsight 上的 Storm 和 HBase 将不同时间到达的事件关联起来。\"\n services=\"hdinsight\"\n documentationCenter=\"\"\n authors=\"Blackmist\"\n manager=\"paulettm\"\n editor=\"cgronlun\"\n tags=\"azure-portal\"/>\n\n<tags\n    ms.service=\"hdinsight\"\n    ms.date=\"12/04/2015\"\n    wacn.date=\"02/17/2016\"/>\n\n# 使用 HDInsight 上的 Storm 和 HBase 按时间对事件进行关联\n\n通过使用 Apache Storm 的持久数据存储，你可以将不同时间到达的数据条目关联起来。例如，将用户会话的登录事件和注销事件关联起来即可计算该会话的持续时间。\n\n在本文档中，你将学习如何创建基本的 C# Storm 拓扑来跟踪用户会话的登录事件和注销事件，从而计算出会话的持续时间。拓扑使用 HBase 作为永久性数据存储。HBase 还可用于对历史数据执行批查询，以便获得额外的信息，例如在特定的时段有多少用户会话启动或结束。\n\n## 先决条件\n\n-   HDInsight Tools for Visual Studio：有关安装方面的信息，请参阅 [HDInsight Tools for Visual Studio 入门](/documentation/articles/hdinsight-hadoop-visual-studio-tools-get-started)。\n\n-   Apache Storm on HDInsight 群集\n\n-   Apache HBase on HDInsight 群集\n\n## 体系结构\n\n![拓扑中的数据流程图](./media/hdinsight-storm-correlation-topology/correlationtopology.png)\n\n对事件进行关联时，需要一个事件源的通用标识符。例如，用户 ID、会话 ID 或其他数据片段，其特点是：a) 唯一；b) 包括在发送到 Storm 的所有数据中。此示例使用 GUID 值来表示会话 ID。\n\n此示例包含两个 HDInsight 群集：\n\n-   HBase：历史数据的永久数据存储\n\n-   Storm：用于摄取传入数据\n\n数据通过 Storm 拓扑随机生成，包含以下项：\n\n-   会话 ID：一个 GUID，可唯一地标识每个会话\n\n-   事件：开始或结束事件。就此示例来说，开始事件始终发生在结束事件之前\n\n-   时间：事件的时间。\n\n此数据在 HBase 中处理和存储。\n\n### Storm 拓扑\n\n会话启动时，**开始**事件将通过拓扑接收，然后记录到 HBase。收到**结束**事件后，拓扑会检索**开始**事件并计算两个事件之间的时间。然后会将此**持续时间**值存储到 HBase 中，同时存储的还有**结束**事件信息。\n\n> [AZURE.IMPORTANT]虽然此拓扑演示了基本的模式，但生产型解决方案需要针对以下情况进行设计：\n>\n> - 事件在到达时混乱无序\n> - 重复的事件\n> - 删除的事件\n\n示例拓扑由以下组件组成：\n\n-   Session.cs: 通过创建随机会话 ID、开始时间以及会话持续时间来模拟用户会话\n\n-   Spout.cs: 创建 100 个会话，发出一个开始事件，等待每个会话随机超时，然后发出一个结束事件。然后回收结束的会话，以便生成新的会话。\n\n-   HBaseLookupBolt.cs：使用的会话 ID 来查找 HBase 中的会话信息。处理结束事件时，它会查找相应的开始事件，然后计算会话的持续时间。\n\n-   HBaseBolt.cs：将信息存储到 HBase。\n\n-   TypeHelper.cs：通过 HBase 执行读/写操作时，帮助进行类型转换。\n\n### HBase 架构\n\n在 HBase 中，数据存储在具有以下架构/设置的表中：\n\n-   行键：会话 ID 用作此表中行的键\n\n-   列系列：系列名称为“cf”。存储在此系列中的列包括：\n\n    -   事件：开始或结束\n\n    -   时间：事件发生的时间（以毫秒为单位）\n\n    -   持续时间：开始事件和结束事件之间的时长\n\n-   版本：“cf”系列设置为每行保留 5 个版本\n\n    > [AZURE.NOTE]可以使用版本来记录以前为特定行键存储的值。默认情况下，HBase 只返回行的最新版本的值。在这种情况下，同一行将用于所有事件（开始、结束）。每个版本的行通过时间戳值来标识。这样即可通过历史视图来查看针对特定 ID 记录的事件。\n\n## 下载项目\n\n可以从 [https://github.com/Azure-Samples/hdinsight-storm-dotnet-event-correlation](https://github.com/Azure-Samples/hdinsight-storm-dotnet-event-correlation) 下载示例项目。\n\n此下载包含以下 C# 项目：\n\n-   CorrelationTopology：C# Storm 拓扑，可针对用户会话随机发出开始事件和结束事件。每个会话的持续时间为 1 到 5 分钟。\n\n-   SessionInfo：C# 控制台应用程序，用于创建 HBase 表，以及提供可返回已存储会话数据相关信息的示例查询。\n\n## 创建表\n\n1. 打开 Visual Studio 中的 **SessionInfo** 项目。\n\n2. 在“解决方案资源管理器”中，右键单击“SessionInfo”项目，然后选择“属性”。\n\n    ![属性已选定的菜单的屏幕快照](./media/hdinsight-storm-correlation-topology/selectproperties.png)\n\n3. 选择**“设置”**，然后设置以下值：\n\n    -   HBaseClusterURL：到 HBase 群集的 URL。例如 https://myhbasecluster.azurehdinsight.cn\n\n    -   HBaseClusterUserName：群集的管理员/HTTP 用户帐户\n\n    -   HBaseClusterPassword：管理员/HTTP 用户帐户的密码\n\n    -   HBaseTableName：用于此示例的表的名称\n\n    -   HBaseTableColumnFamily：列系列名称\n\n    ![设置对话框的图像](./media/hdinsight-storm-correlation-topology/settings.png)\n\n5. 运行解决方案。出现提示时，选择可在 HBase 群集上创建表的“c”键。\n\n## 生成和部署 Storm 拓扑\n\n1.  在 Visual Studio 中打开 **CorrelationTopology** 解决方案。\n\n2.  在“解决方案资源管理器”中，右键单击 **CorrelationTopology** 项目，然后选择属性。\n\n3.  在属性窗口中，选择**“设置”**并提供以下信息。头 5 个应该是由 **SessionInfo** 项目使用的相同值：\n\n    -   HBaseClusterURL：到 HBase 群集的 URL。例如 https://myhbasecluster.azurehdinsight.cn\n\n    -   HBaseClusterUserName：群集的管理员/HTTP 用户帐户\n\n    -   HBaseClusterPassword：管理员/HTTP 用户帐户的密码\n\n    -   HBaseTableName：用于此示例的表的名称。该名称包含的表名称应该与 SessionInfo 项目中使用的相同\n\n    -   HBaseTableColumnFamily：列系列名称。该名称包含的列系列名称应该与 SessionInfo 项目中使用的相同\n\n    > [AZURE.IMPORTANT]请勿更改 HBaseTableColumnNames，因为其默认值是 **SessionInfo** 用来检索数据的名称。\n\n4.  保存属性，然后生成项目。\n\n5.  在“解决方案资源管理器”中，右键单击项目，然后选择“提交到 Storm on HDInsight”。如果出现提示，请输入你 Azure 订阅的凭据。\n\n    ![提交到 storm 菜单项的图像](./media/hdinsight-storm-correlation-topology/submittostorm.png)\n\n6.  在**“提交拓扑”**对话框中，选择将运行此拓扑的 Storm 群集。\n\n    > [AZURE.NOTE]第一次提交拓扑时，可能需要几秒钟来检索 HDInsight 群集名称。\n\n7.  一旦上载拓扑并将其提交到该群集，**“Storm 拓扑视图”**将打开并显示正在运行的拓扑。选择 **CorrelationTopology**，然后使用页面右上角的刷新按钮刷新拓扑信息。\n\n    ![拓扑视图的图像](./media/hdinsight-storm-correlation-topology/topologyview.png)\n\n    当拓扑开始生成数据时，**“已发出”**列中的值将递增。\n\n    > [AZURE.NOTE]如果**“Storm 拓扑视图”**不会自动打开，可使用以下步骤将其打开：\n    >\n    > 1. 在“解决方案资源管理器”中，展开“Azure”，然后展开“HDInsight”。\n    >\n    > 2. 右键单击在其上运行拓扑的 Storm 群集，然后选择**“查看 Storm 拓扑”**\n\n## 查询数据\n\n一旦已发出数据，则可使用以下步骤来查询数据。\n\n1. 返回到 **SessionInfo** 项目。如果该项目未运行，可启动一个新实例。\n\n2. 出现提示时，选择 **s** 即可搜索开始事件。系统会提示你输入开始时间和结束时间，以便定义一个时间范围 - 将只返回这两个时间之间的事件。\n\n    输入开始和结束时间时使用以下格式：HH:MM 以及“am”或“pm”。例如，11:20pm。\n\n    由于刚刚启动拓扑，可使用部署之前的某个时间作为开始时间，而使用现在的时间作为结束时间。这应该会捕获大多数在启动时生成的开始事件。当查询处于运行状态时，你会看到如下所示的条目列表：\n\n        Session e6992b3e-79be-4991-afcf-5cb47dd1c81c started at 6/5/2015 6:10:15 PM. Timestamp = 1433527820737\n\n搜索结束事件与搜索开始事件在原理上是相同的。不过，结束事件是在开始事件之后 1 到 5 分钟随机生成的。因此，你可能需要尝试数个时间范围才能找到结束事件。结束事件还会包含会话持续时间 - 开始事件时间与结束事件时间之差。下面是结束事件数据的一个示例：\n\n    Session fc9fa8e6-6892-4073-93b3-a587040d892e lasted 2 minutes, and ended at 6/5/2015 6:12:15 PM\n\n> [AZURE.NOTE]虽然你输入的时间值为本地时间，但从查询返回的时间将是 UTC。\n\n##停止拓扑\n\n当你准备停止拓扑时，请返回到 Visual Studio 中的 **CorrelationTopology** 项目。在**“Storm 拓扑视图”**中，选择拓扑，然后使用拓扑视图顶部的**“终止”**按钮。\n\n##后续步骤\n\n如需更多 Storm 示例，请参阅[Storm on HDInsight 拓扑示例](/documentation/articles/hdinsight-storm-example-topology)。\n \n\n<!---HONumber=Mooncake_1207_2015-->"
}