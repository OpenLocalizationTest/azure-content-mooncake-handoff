{"nodes":[{"content":"在 Azure 中创建使用 AD FS 身份验证的 .NET MVC Web 应用","pos":[28,69]},{"content":"了解如何在 Azure 中创建使用本地 STS 进行身份验证的 ASP.NET MVC 业务线应用程序。","pos":[89,141]},{"content":"本教程将 AD FS 定位为本地 STS。","pos":[141,162]},{"content":"在 Azure 中创建使用 AD FS 身份验证的 .NET MVC Web 应用","pos":[385,426]},{"content":"在本文中，你将了解如何在使用本地 <bpt id=\"p1\">[</bpt>Active Directory 联合身份验证服务<ept id=\"p1\">](http://technet.microsoft.com/zh-cn/library/hh831502.aspx)</ept>作为标识提供者的 <bpt id=\"p2\">[</bpt>Azure Web 应用<ept id=\"p2\">](/documentation/services/web-sites/)</ept>中创建 ASP.NET MVC 业务线应用程序。","pos":[428,613],"source":"在本文中，你将了解如何在使用本地 [Active Directory 联合身份验证服务](http://technet.microsoft.com/zh-cn/library/hh831502.aspx)作为标识提供者的 [Azure Web 应用](/documentation/services/web-sites/)中创建 ASP.NET MVC 业务线应用程序。"},{"content":"当你想要在 Azure 中创建业务线应用程序，而你的组织要求在现场存储所有数据时，可以应用此方案。","pos":[613,662]},{"pos":[677,817],"content":"有关 Azure Web 应用支持的不同企业身份验证和授权选项的概述，请参阅<bpt id=\"p1\">[</bpt>使用 Active Directory 在 Azure 中进行身份验证<ept id=\"p1\">](/documentation/articles/web-sites-authentication-authorization)</ept>。","source":"有关 Azure Web 应用支持的不同企业身份验证和授权选项的概述，请参阅[使用 Active Directory 在 Azure 中进行身份验证](/documentation/articles/web-sites-authentication-authorization)。"},{"content":"要生成的项目","pos":[848,854]},{"content":"你将在 Azure 中生成具有以下功能的基本 ASP.NET 应用程序：","pos":[859,895]},{"content":"根据 AD FS 对用户进行身份验证","pos":[899,917]},{"pos":[920,947],"content":"使用 <ph id=\"ph1\">`[Authorize]`</ph> 授权用户执行不同操作","source":"使用 `[Authorize]` 授权用户执行不同操作"},{"content":"用于在 Visual Studio 中进行调试和发布到 Azure Web 应用的静态配置（配置一次，随时调试和发布）","pos":[950,1009]},{"content":"所需的项目","pos":[1041,1046]},{"content":"若要完成本教程，你需要以下项目：","pos":[1051,1067]},{"pos":[1071,1149],"content":"本地 AD FS 部署（有关所使用的测试实验室的端到端演练，请参阅<bpt id=\"p1\">[</bpt>测试实验室：Azure VM 中使用 AD FS 的独立 STS（仅用于测试）<ept id=\"p1\">](#)</ept>）","source":"本地 AD FS 部署（有关所使用的测试实验室的端到端演练，请参阅[测试实验室：Azure VM 中使用 AD FS 的独立 STS（仅用于测试）](#)）"},{"content":"用于在 AD FS 管理中创建信赖方信任的权限","pos":[1152,1175]},{"content":"Visual Studio 2013","pos":[1178,1196]},{"pos":[1199,1314],"content":"<bpt id=\"p1\">[</bpt>Azure SDK 2.5.1<ept id=\"p1\">](https://www.microsoft.com/web/handlers/webpi.ashx/getinstaller/VWDOrVs2013AzurePack.appids)</ept> 或更高版本","source":"[Azure SDK 2.5.1](https://www.microsoft.com/web/handlers/webpi.ashx/getinstaller/VWDOrVs2013AzurePack.appids) 或更高版本"},{"content":"将示例应用程序用作业务线模板","pos":[1346,1360]},{"content":"本教程中的示例应用程序 <bpt id=\"p1\">[</bpt>WebApp-WSFederation-DotNet)<ept id=\"p1\">](https://github.com/AzureADSamples/WebApp-WSFederation-DotNet)</ept> 是由 Azure Active Directory 团队创建。","pos":[1365,1500],"source":"本教程中的示例应用程序 [WebApp-WSFederation-DotNet)](https://github.com/AzureADSamples/WebApp-WSFederation-DotNet) 是由 Azure Active Directory 团队创建。"},{"content":"由于 AD FS 支持 WS 联合身份验证，因此您可以将它用作模板来轻松新建业务线应用程序。","pos":[1500,1546]},{"content":"该示例应用程序具有以下功能：","pos":[1546,1560]},{"pos":[1564,1650],"content":"使用 <bpt id=\"p1\">[</bpt>WS 联合身份验证<ept id=\"p1\">](http://msdn.microsoft.com/zh-cn/library/bb498017.aspx)</ept>进行本地 AD FS 部署身份验证","source":"使用 [WS 联合身份验证](http://msdn.microsoft.com/zh-cn/library/bb498017.aspx)进行本地 AD FS 部署身份验证"},{"content":"登录和注销功能","pos":[1653,1660]},{"pos":[1663,1850],"content":"使用 <bpt id=\"p1\">[</bpt>Microsoft.Owin<ept id=\"p1\">](http://www.asp.net/aspnet/overview/owin-and-katana/an-overview-of-project-katana)</ept>（而不是 Windows Identity Foundation (WIF)），它代表了 ASP.NET 的未来发展方向，与 WIF 相比，它的身份验证和授权设置要简单得多","source":"使用 [Microsoft.Owin](http://www.asp.net/aspnet/overview/owin-and-katana/an-overview-of-project-katana)（而不是 Windows Identity Foundation (WIF)），它代表了 ASP.NET 的未来发展方向，与 WIF 相比，它的身份验证和授权设置要简单得多"},{"content":"设置示例应用程序","pos":[1881,1889]},{"pos":[1898,2012],"content":"将 <bpt id=\"p1\">[</bpt>WebApp-WSFederation-DotNet<ept id=\"p1\">](https://github.com/AzureADSamples/WebApp-WSFederation-DotNet)</ept> 的示例解决方案克隆或下载到您的本地目录中。","source":"将 [WebApp-WSFederation-DotNet](https://github.com/AzureADSamples/WebApp-WSFederation-DotNet) 的示例解决方案克隆或下载到您的本地目录中。"},{"pos":[2032,2210],"content":"<bpt id=\"p1\">[</bpt>README.md<ept id=\"p1\">](https://github.com/AzureADSamples/WebApp-WSFederation-DotNet/blob/master/README.md)</ept> 中的说明展示了如何使用 Azure Active Directory 设置应用程序，而在本教程中，您将使用 AD FS 设置应用程序，因此请改为按照本文的步骤操作。","source":"[README.md](https://github.com/AzureADSamples/WebApp-WSFederation-DotNet/blob/master/README.md) 中的说明展示了如何使用 Azure Active Directory 设置应用程序，而在本教程中，您将使用 AD FS 设置应用程序，因此请改为按照本文的步骤操作。"},{"content":"打开解决方案，然后在“解决方案资源管理器”中打开 Controllers<ph id=\"ph1\">\\\\</ph>AccountController.cs。","pos":[2216,2275],"source":"打开解决方案，然后在“解决方案资源管理器”中打开 Controllers\\\\AccountController.cs。"},{"content":"你将看到，代码只是发出身份验证质询以使用 WS-Federation 对用户进行身份验证。","pos":[2281,2326]},{"content":"所有身份验证都在 App<ph id=\"ph1\">\\_</ph>Start.Auth.cs 中配置。","pos":[2326,2358],"source":"所有身份验证都在 App\\_Start.Auth.cs 中配置。"},{"content":"打开 App<ph id=\"ph1\">\\_</ph>Start.Auth.cs。","pos":[2364,2386],"source":"打开 App\\_Start.Auth.cs。"},{"content":"在 <ph id=\"ph1\">`ConfigureAuth`</ph> 方法中，记录下面的代码行：","pos":[2386,2417],"source":"在 `ConfigureAuth` 方法中，记录下面的代码行："},{"content":"在 OWIN 领域中，这实际上配置 WS-Federation 所需的最低要求。","pos":[2661,2701]},{"content":"这肯定比 WIF 要精简得多，因为 Web.config 中的各个位置都注入了 XML。","pos":[2701,2745]},{"content":"所需的唯一信息就是信赖方 (RP) 标识符和 AD FS 服务元数据文件的 URL。","pos":[2745,2787]},{"content":"下面是一个示例：","pos":[2787,2795]},{"pos":[2805,2812],"content":"RP 标识符："},{"pos":[2851,2857],"content":"元数据地址："},{"pos":[2938,3886],"content":"在 App\\_Start.Auth.cs 中，根据以下突出显示部分所示更改静态字符串定义：\n<pre class=\"prettyprint\">\nprivate static string realm = ConfigurationManager.AppSettings[\"ida:<mark>RPIdentifier</mark>\"];<span>&#13;</span>\n<mark><del>private static string aadInstance = ConfigurationManager.AppSettings[\"ida:AADInstance\"];</del></mark><span>&#13;</span>\n<mark><del>private static string tenant = ConfigurationManager.AppSettings[\"ida:Tenant\"];</del></mark><span>&#13;</span>\n<mark><del>private static string metadata = string.Format(\"{0}/{1}/federationmetadata/2007-06/federationmetadata.xml\", aadInstance, tenant);</del></mark><span>&#13;</span>\n<mark>private static string metadata = string.Format(\"https://{0}/federationmetadata/2007-06/federationmetadata.xml\", ConfigurationManager.AppSettings[\"ida:ADFS\"]);</mark><span>&#13;</span>\n<mark><del>string authority = String.Format(CultureInfo.InvariantCulture, aadInstance, tenant);</del></mark>\n</pre>","leadings":["","    ","    ","    ","    ","    ","    ","    ","    "],"nodes":[{"content":"在 App<ph id=\"ph1\">\\_</ph>Start.Auth.cs 中，根据以下突出显示部分所示更改静态字符串定义：","pos":[0,45],"source":"在 App\\_Start.Auth.cs 中，根据以下突出显示部分所示更改静态字符串定义：\n"},{"content":"private static string realm = ConfigurationManager.AppSettings[\"ida:<ph id=\"ph1\">&lt;mark&gt;</ph>RPIdentifier<ph id=\"ph2\">&lt;/mark&gt;</ph>\"];<ph id=\"ph3\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph4\">&lt;/span&gt;\n&lt;mark&gt;&lt;del&gt;</ph>private static string aadInstance = ConfigurationManager.AppSettings[\"ida:AADInstance\"];<ph id=\"ph5\">&lt;/del&gt;&lt;/mark&gt;&lt;span&gt;</ph>&amp;#13;<ph id=\"ph6\">&lt;/span&gt;\n&lt;mark&gt;&lt;del&gt;</ph>private static string tenant = ConfigurationManager.AppSettings[\"ida:Tenant\"];<ph id=\"ph7\">&lt;/del&gt;&lt;/mark&gt;&lt;span&gt;</ph>&amp;#13;<ph id=\"ph8\">&lt;/span&gt;\n&lt;mark&gt;&lt;del&gt;</ph>private static string metadata = string.Format(\"{0}/{1}/federationmetadata/2007-06/federationmetadata.xml\", aadInstance, tenant);<ph id=\"ph9\">&lt;/del&gt;&lt;/mark&gt;&lt;span&gt;</ph>&amp;#13;<ph id=\"ph10\">&lt;/span&gt;\n&lt;mark&gt;</ph>private static string metadata = string.Format(\"https://{0}/federationmetadata/2007-06/federationmetadata.xml\", ConfigurationManager.AppSettings[\"ida:ADFS\"]);<ph id=\"ph11\">&lt;/mark&gt;&lt;span&gt;</ph>&amp;#13;<ph id=\"ph12\">&lt;/span&gt;\n&lt;mark&gt;&lt;del&gt;</ph>string authority = String.Format(CultureInfo.InvariantCulture, aadInstance, tenant);","pos":[72,896],"source":"\nprivate static string realm = ConfigurationManager.AppSettings[\"ida:<mark>RPIdentifier</mark>\"];<span>&#13;</span>\n<mark><del>private static string aadInstance = ConfigurationManager.AppSettings[\"ida:AADInstance\"];</del></mark><span>&#13;</span>\n<mark><del>private static string tenant = ConfigurationManager.AppSettings[\"ida:Tenant\"];</del></mark><span>&#13;</span>\n<mark><del>private static string metadata = string.Format(\"{0}/{1}/federationmetadata/2007-06/federationmetadata.xml\", aadInstance, tenant);</del></mark><span>&#13;</span>\n<mark>private static string metadata = string.Format(\"https://{0}/federationmetadata/2007-06/federationmetadata.xml\", ConfigurationManager.AppSettings[\"ida:ADFS\"]);</mark><span>&#13;</span>\n<mark><del>string authority = String.Format(CultureInfo.InvariantCulture, aadInstance, tenant);"}]},{"content":"现在，你将在 Web.config 中进行相应更改。","pos":[3892,3918]},{"content":"打开 Web.config 并根据以下突出显示部分所示修改应用程序设置：","pos":[3918,3954]},{"pos":[3960,5141],"content":"<pre class=\"prettyprint\">\n&lt;appSettings><span>&#13;</span>\n    &lt;add key=\"webpages:Version\" value=\"3.0.0.0\" /><span>&#13;</span>\n    &lt;add key=\"webpages:Enabled\" value=\"false\" /><span>&#13;</span>\n    &lt;add key=\"ClientValidationEnabled\" value=\"true\" /><span>&#13;</span>\n    &lt;add key=\"UnobtrusiveJavaScriptEnabled\" value=\"true\" /><span>&#13;</span>\n    <mark><del>&lt;add key=\"ida:Wtrealm\" value=\"[Enter the App ID URI of WebApp-WSFederation-DotNet https://contoso.partner.onmschina.cn/WebApp-WSFederation-DotNet]\" /></del></mark><span>&#13;</span>\n    <mark><del>&lt;add key=\"ida:AADInstance\" value=\"https://login.chinacloudapi.cn\" /></del></mark><span>&#13;</span>\n    <mark><del>&lt;add key=\"ida:Tenant\" value=\"[Enter tenant name, e.g. contoso.partner.onmschina.cn]\" /></del></mark><span>&#13;</span>\n    <mark>&lt;add key=\"ida:RPIdentifier\" value=\"[Enter the relying party identifier as configured in AD FS, e.g. https://localhost:44320/]\" /></mark><span>&#13;</span>\n    <mark>&lt;add key=\"ida:ADFS\" value=\"[Enter the FQDN of AD FS service, e.g. adfs.contoso.com]\" /></mark><span>&#13;</span>\n&lt;/appSettings>\n</pre>","leadings":["","    ","    ","    ","    ","    ","    ","    ","    ","    ","    ","    ","    "],"nodes":[{"content":"appSettings&gt;<ph id=\"ph1\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph2\">&lt;/span&gt;\n</ph>    <ph id=\"ph3\">&amp;lt;</ph>add key=\"webpages:Version\" value=\"3.0.0.0\" /&gt;<ph id=\"ph4\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph5\">&lt;/span&gt;\n</ph>    <ph id=\"ph6\">&amp;lt;</ph>add key=\"webpages:Enabled\" value=\"false\" /&gt;<ph id=\"ph7\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph8\">&lt;/span&gt;\n</ph>    <ph id=\"ph9\">&amp;lt;</ph>add key=\"ClientValidationEnabled\" value=\"true\" /&gt;<ph id=\"ph10\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph11\">&lt;/span&gt;\n</ph>    <ph id=\"ph12\">&amp;lt;</ph>add key=\"UnobtrusiveJavaScriptEnabled\" value=\"true\" /&gt;<ph id=\"ph13\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph14\">&lt;/span&gt;\n    &lt;mark&gt;&lt;del&gt;&amp;lt;</ph>add key=\"ida:Wtrealm\" value=\"[Enter the App ID URI of WebApp-WSFederation-DotNet https://contoso.partner.onmschina.cn/WebApp-WSFederation-DotNet]\" /&gt;<ph id=\"ph15\">&lt;/del&gt;&lt;/mark&gt;&lt;span&gt;</ph>&amp;#13;<ph id=\"ph16\">&lt;/span&gt;\n    &lt;mark&gt;&lt;del&gt;&amp;lt;</ph>add key=\"ida:AADInstance\" value=\"https://login.chinacloudapi.cn\" /&gt;<ph id=\"ph17\">&lt;/del&gt;&lt;/mark&gt;&lt;span&gt;</ph>&amp;#13;<ph id=\"ph18\">&lt;/span&gt;\n    &lt;mark&gt;&lt;del&gt;&amp;lt;</ph>add key=\"ida:Tenant\" value=\"[Enter tenant name, e.g. contoso.partner.onmschina.cn]\" /&gt;<ph id=\"ph19\">&lt;/del&gt;&lt;/mark&gt;&lt;span&gt;</ph>&amp;#13;<ph id=\"ph20\">&lt;/span&gt;\n    &lt;mark&gt;&amp;lt;</ph>add key=\"ida:RPIdentifier\" value=\"[Enter the relying party identifier as configured in AD FS, e.g. https://localhost:44320/]\" /&gt;<ph id=\"ph21\">&lt;/mark&gt;&lt;span&gt;</ph>&amp;#13;<ph id=\"ph22\">&lt;/span&gt;\n    &lt;mark&gt;&amp;lt;</ph>add key=\"ida:ADFS\" value=\"[Enter the FQDN of AD FS service, e.g. adfs.contoso.com]\" /&gt;<ph id=\"ph23\">&lt;/mark&gt;&lt;span&gt;</ph>&amp;#13;<ph id=\"ph24\">&lt;/span&gt;\n&amp;lt;</ph>/appSettings&gt;","pos":[30,1126],"source":"appSettings><span>&#13;</span>\n    &lt;add key=\"webpages:Version\" value=\"3.0.0.0\" /><span>&#13;</span>\n    &lt;add key=\"webpages:Enabled\" value=\"false\" /><span>&#13;</span>\n    &lt;add key=\"ClientValidationEnabled\" value=\"true\" /><span>&#13;</span>\n    &lt;add key=\"UnobtrusiveJavaScriptEnabled\" value=\"true\" /><span>&#13;</span>\n    <mark><del>&lt;add key=\"ida:Wtrealm\" value=\"[Enter the App ID URI of WebApp-WSFederation-DotNet https://contoso.partner.onmschina.cn/WebApp-WSFederation-DotNet]\" /></del></mark><span>&#13;</span>\n    <mark><del>&lt;add key=\"ida:AADInstance\" value=\"https://login.chinacloudapi.cn\" /></del></mark><span>&#13;</span>\n    <mark><del>&lt;add key=\"ida:Tenant\" value=\"[Enter tenant name, e.g. contoso.partner.onmschina.cn]\" /></del></mark><span>&#13;</span>\n    <mark>&lt;add key=\"ida:RPIdentifier\" value=\"[Enter the relying party identifier as configured in AD FS, e.g. https://localhost:44320/]\" /></mark><span>&#13;</span>\n    <mark>&lt;add key=\"ida:ADFS\" value=\"[Enter the FQDN of AD FS service, e.g. adfs.contoso.com]\" /></mark><span>&#13;</span>\n&lt;/appSettings>\n"}]},{"content":"根据相应的环境填写键值。","pos":[5147,5159]},{"content":"生成应用程序，以确保没有任何错误。","pos":[5165,5182]},{"content":"就这么简单。","pos":[5184,5190]},{"content":"现在，便可以配合 AD FS 运行该示例应用程序。","pos":[5190,5215]},{"content":"稍后，你仍需要在 AD FS 中配置 RP 与此应用程序间的信任关系。","pos":[5215,5250]},{"content":"将示例应用程序部署到 Azure Web 应用","pos":[5282,5305]},{"content":"现在，你需要将应用程序发布到 Azure Web 应用中，同时保留调试环境。","pos":[5307,5345]},{"content":"请注意，你将要在建立 RP 与 AD FS 之间的信任关系之前发布应用程序，因此身份验证还不起作用。","pos":[5345,5395]},{"content":"不过，如果现在就执行此操作，则可以获得 Web 应用URL，稍后您还可以使用此 URL 来配置 RP 信任。","pos":[5395,5449]},{"content":"右键单击您的项目，然后选择“发布”。","pos":[5454,5472]},{"content":"选择“导入”。","pos":[5556,5563]},{"content":"如果您尚未下载“发布配置文件”，请到 Azure 管理门户下载。","pos":[5567,5599]},{"content":"如果你尚未创建 Web 应用，也请在 Azure 管理门户创建，并下载其“发布配置文件”","pos":[5599,5643]},{"content":"选择你下载好的“发布配置文件”，并确认。","pos":[5647,5667]},{"content":"在“目标 URL”中，将 <bpt id=\"p1\">**</bpt>http<ept id=\"p1\">**</ept> 更改为 <bpt id=\"p2\">**</bpt>https<ept id=\"p2\">**</ept>。","pos":[5671,5707],"source":"在“目标 URL”中，将 **http** 更改为 **https**。"},{"content":"将整个 URL 复制到文本编辑器。","pos":[5707,5724]},{"content":"稍后将要用到它。","pos":[5724,5732]},{"content":"然后，单击“发布”。","pos":[5732,5742]},{"pos":[5827,6212],"content":"在 Visual Studio 中，在项目中打开 **Web.Release.config**。在 `<configuration>` 标记中插入以下 XML，然后将键值替换为发布 Web 应用的 URL。\n<pre class=\"prettyprint\">\n&lt;appSettings><span>&#13;</span>\n    &lt;add key=\"ida:RPIdentifier\" value=\"<mark>[e.g. https://mylobapp.chinacloudsites.cn/]</mark>\" xdt:Transform=\"SetAttributes\" xdt:Locator=\"Match(key)\" /><span>&#13;</span>\n&lt;/appSettings>\n</pre>","leadings":["","    ","    ","    ","    ","    "],"nodes":[{"content":"在 Visual Studio 中，在项目中打开 **Web.Release.config**。在 `<configuration>` 标记中插入以下 XML，然后将键值替换为发布 Web 应用的 URL。\n","pos":[0,104],"nodes":[{"content":"在 Visual Studio 中，在项目中打开 <bpt id=\"p1\">**</bpt>Web.Release.config<ept id=\"p1\">**</ept>。","pos":[0,48],"source":"在 Visual Studio 中，在项目中打开 **Web.Release.config**。"},{"content":"在 <ph id=\"ph1\">`&lt;configuration&gt;`</ph> 标记中插入以下 XML，然后将键值替换为发布 Web 应用的 URL。","pos":[48,103],"source":"在 `<configuration>` 标记中插入以下 XML，然后将键值替换为发布 Web 应用的 URL。"}]},{"content":"appSettings&gt;<ph id=\"ph1\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph2\">&lt;/span&gt;\n</ph>    <ph id=\"ph3\">&amp;lt;</ph>add key=\"ida:RPIdentifier\" value=\"<ph id=\"ph4\">&lt;mark&gt;</ph>[e.g. https://mylobapp.chinacloudsites.cn/]<ph id=\"ph5\">&lt;/mark&gt;</ph>\" xdt:Transform=\"SetAttributes\" xdt:Locator=\"Match(key)\" /&gt;<ph id=\"ph6\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph7\">&lt;/span&gt;\n&amp;lt;</ph>/appSettings&gt;","pos":[134,358],"source":"appSettings><span>&#13;</span>\n    &lt;add key=\"ida:RPIdentifier\" value=\"<mark>[e.g. https://mylobapp.chinacloudsites.cn/]</mark>\" xdt:Transform=\"SetAttributes\" xdt:Locator=\"Match(key)\" /><span>&#13;</span>\n&lt;/appSettings>\n"}]},{"content":"完成后，您的项目中将配置有两个 RP 标识符，一个用于 Visual Studio 中的调试环境，另一个用于 Azure 中发布的 Web 应用。","pos":[6214,6287]},{"content":"你将为 AD FS 中两个环境的每一个设置 RP 信任。","pos":[6287,6315]},{"content":"在调试期间，Web.config 中的应用设置用于让<bpt id=\"p1\">**</bpt>调试<ept id=\"p1\">**</ept>配置适用于 AD FS；在发布后（默认情况下，发布的是<bpt id=\"p2\">**</bpt>版本<ept id=\"p2\">**</ept>配置），上载的是转换后的 Web.config，其中包含 Web.Release.config 中的应用设置更改。","pos":[6315,6437],"source":"在调试期间，Web.config 中的应用设置用于让**调试**配置适用于 AD FS；在发布后（默认情况下，发布的是**版本**配置），上载的是转换后的 Web.config，其中包含 Web.Release.config 中的应用设置更改。"},{"content":"如果您想将 Azure 中已发布的 Web 应用附加到调试器（即必须上载已发布的 Web 应用中的代码调试符号），则可以克隆一个调试配置进行 Azure 调试，但自身需要使用 Web.Release.config 中的应用设置进行自定义 Web.config 转换（例如 Web.AzureDebug.config）。","pos":[6439,6598]},{"content":"这样，你可以跨不同的环境中维护静态配置。","pos":[6598,6618]},{"content":"在 AD FS 管理中配置信赖方信任","pos":[6652,6670]},{"content":"现在，需要先在 AD FS 管理中配置 RP 信任，然后示例应用程序才能真正使用 AD FS 进行身份验证。","pos":[6675,6729]},{"content":"您需要单独设置两个 RP 信任，一个用于调试环境，另一个用于已发布的 Web 应用。","pos":[6729,6771]},{"pos":[6787,6801],"content":"确保对环境重复以下两个步骤。"},{"content":"在 AD FS 服务器上，使用对 AD FS 具有管理权限的凭据登录。","pos":[6807,6842]},{"content":"打开“AD FS 管理”。","pos":[6847,6860]},{"content":"右键单击“AD FS<ph id=\"ph1\">\\\\</ph>信任关系<ph id=\"ph2\">\\\\</ph>信赖方信任”，然后选择“添加信赖方信任”。","pos":[6860,6899],"source":"右键单击“AD FS\\\\信任关系\\\\信赖方信任”，然后选择“添加信赖方信任”。"},{"content":"在“选择数据源”页面上，选择“手动输入信赖方数据”。","pos":[6979,7005]},{"content":"在“指定显示名称”页面上，键入应用程序的显示名称，然后单击“下一步”。","pos":[7091,7126]},{"content":"在“选择协议”页面上，单击“下一步”。","pos":[7131,7150]},{"content":"在“配置证书”页面上，单击“下一步”。","pos":[7155,7174]},{"content":"由于你已在使用 HTTPS，因此加密令牌是可选的。","pos":[7194,7219]},{"content":"如果你确实想要在此页上加密来自 AD FS 的令牌，则还必须在代码中添加令牌解密逻辑。","pos":[7219,7262]},{"content":"有关详细信息，请参阅<bpt id=\"p1\">[</bpt>手动配置 OWIN WS 联合身份验证中间件和接受加密令牌<ept id=\"p1\">](http://chris.59north.com/post/2014/08/21/Manually-configuring-OWIN-WS-Federation-middleware-and-accepting-encrypted-tokens.aspx)</ept>。","pos":[7262,7433],"source":"有关详细信息，请参阅[手动配置 OWIN WS 联合身份验证中间件和接受加密令牌](http://chris.59north.com/post/2014/08/21/Manually-configuring-OWIN-WS-Federation-middleware-and-accepting-encrypted-tokens.aspx)。"},{"content":"在转到下一步之前，需要获得 Visual Studio 项目中的一个信息片段。","pos":[7441,7480]},{"content":"在项目属性中，记录应用程序的 <bpt id=\"p1\">**</bpt>SSL URL<ept id=\"p1\">**</ept>。","pos":[7480,7507],"source":"在项目属性中，记录应用程序的 **SSL URL**。"},{"content":"返回“AD FS 管理”，在“添加信赖方信任向导”的“配置 URL”页面中，选择“启用支持 WS 联合身份验证被动协议”，然后键入您在上一步中记录的 Visual Studio 项目 SSL URL。","pos":[7583,7683]},{"content":"然后，单击“下一步”。","pos":[7683,7694]},{"content":"URL 指定身份验证成功后要将客户端发送到的位置。","pos":[7790,7815]},{"content":"对于调试环境，它应为 <ph id=\"ph1\">&lt;code&gt;https://localhost:&amp;lt;port&amp;gt;/&lt;/code&gt;</ph>。","pos":[7815,7871],"source":"对于调试环境，它应为 <code>https://localhost:&lt;port&gt;/</code>。"},{"content":"对于发布的 Web 应用，它应该是 Web 应用URL。","pos":[7871,7899]},{"content":"在“配置标识符”页面上，确认您的项目 SSL URL 是否已列出，然后单击“下一步”。","pos":[7905,7948]},{"content":"保持默认选择不变，同时单击“下一步”，一直到向导结束。","pos":[7948,7975]},{"content":"在 Visual Studio 项目的 App<ph id=\"ph1\">\\_</ph>Start<ph id=\"ph2\">\\\\</ph>Startup.Auth.cs 中，此标识符与联合身份验证期间 <ph id=\"ph3\">&lt;code&gt;WsFederationAuthenticationOptions.Wtrealm&lt;/code&gt;</ph> 的值相匹配。","pos":[7995,8120],"source":"在 Visual Studio 项目的 App\\_Start\\\\Startup.Auth.cs 中，此标识符与联合身份验证期间 <code>WsFederationAuthenticationOptions.Wtrealm</code> 的值相匹配。"},{"content":"默认情况下，将添加上一步中的应用程序 URL 作为 RP 标识符。","pos":[8120,8153]},{"content":"现在，你已在 AD FS 中为项目完成了 RP 应用程序的配置。","pos":[8159,8191]},{"content":"接下来，你要将此应用程序配置为发送应用程序所需的声明。","pos":[8191,8218]},{"content":"在向导结束时，系统会默认打开“编辑声明规则”对话框，方便您立即启动。","pos":[8218,8252]},{"content":"至少配置以下声明（括号中为架构）：","pos":[8252,8269]},{"pos":[8279,8379],"content":"名称 (http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name) - ASP.NET 用来解冻 <ph id=\"ph1\">`User.Identity.Name`</ph>。","source":"名称 (http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name) - ASP.NET 用来解冻 `User.Identity.Name`。"},{"content":"用户主体名称 (http://schemas.xmlsoap.org/ws/2005/05/identity/claims/upn) - 用于唯一标识组织中的用户。","pos":[8388,8470]},{"content":"将成员资格分组为角色 (http://schemas.microsoft.com/ws/2008/06/identity/claims/role) - 可与 <ph id=\"ph1\">`[Authorize(Roles=\"role1, role2,...\")]`</ph> 修饰符配合使用来授权控制器/操作。","pos":[8479,8615],"source":"将成员资格分组为角色 (http://schemas.microsoft.com/ws/2008/06/identity/claims/role) - 可与 `[Authorize(Roles=\"role1, role2,...\")]` 修饰符配合使用来授权控制器/操作。"},{"content":"实际上，这可能不是大多数的高性能方法进行角色授权，尤其是在你的 AD 用户定期属于数百个安全组转换为数以百计的 SAML 令牌中的角色声明。","pos":[8615,8685]},{"content":"另一种方法是在某个特定组发送单个角色声明有条件地根据用户的成员身份。","pos":[8685,8719]},{"content":"但是，本教程将简化其结构。","pos":[8719,8732]},{"content":"名称 ID (http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier) - 可用于防伪验证。","pos":[8741,8828]},{"content":"若要详细了解如何使其适用于防伪验证，请参阅<bpt id=\"p1\">[</bpt>在 Azure 中创建使用 Azure Active Directory 身份验证的 .NET MVC Web 应用<ept id=\"p1\">](/documentation/articles/web-sites-dotnet-lob-application-azure-ad#bkmk_crud)</ept>中的<bpt id=\"p2\">**</bpt>将业务线功能添加到示例应用程序<ept id=\"p2\">**</ept>部分。","pos":[8828,9010],"source":"若要详细了解如何使其适用于防伪验证，请参阅[在 Azure 中创建使用 Azure Active Directory 身份验证的 .NET MVC Web 应用](/documentation/articles/web-sites-dotnet-lob-application-azure-ad#bkmk_crud)中的**将业务线功能添加到示例应用程序**部分。"},{"content":"需要为应用程序配置的声明类型取决于应用程序的需求。","pos":[9030,9055]},{"content":"有关 Azure Active Directory 应用程序支持的声明列表（即 RP 信任），请参阅<bpt id=\"p1\">[</bpt>支持的令牌和声明类型<ept id=\"p1\">](/documentation/articles/active-directory-token-and-claims/)</ept>。","pos":[9055,9178],"source":"有关 Azure Active Directory 应用程序支持的声明列表（即 RP 信任），请参阅[支持的令牌和声明类型](/documentation/articles/active-directory-token-and-claims/)。"},{"content":"在“编辑声明规则”对话框中，单击“添加规则”。","pos":[9184,9207]},{"content":"配置名称、UPN 和角色声明（如下所示），然后单击“完成”。","pos":[9212,9242]},{"pos":[9322,9461],"content":"接下来，您将按照 <bpt id=\"p1\">[</bpt>SAML 声明中的名称标识符<ept id=\"p1\">](http://blogs.msdn.com/b/card/archive/2010/02/17/name-identifiers-in-saml-assertions.aspx)</ept>中演示的步骤操作，创建一个临时名称 ID 声明。","source":"接下来，您将按照 [SAML 声明中的名称标识符](http://blogs.msdn.com/b/card/archive/2010/02/17/name-identifiers-in-saml-assertions.aspx)中演示的步骤操作，创建一个临时名称 ID 声明。"},{"content":"再次单击“添加规则”。","pos":[9467,9478]},{"content":"选择“使用自定义规则发送声明”，然后单击“下一步”。","pos":[9483,9509]},{"pos":[9514,10333],"content":"将以下规则语言粘贴到“自定义规则”框中，**根据会话标识符**命名规则，然后单击“完成”。  \n<pre class=\"prettyprint\">\nc1:[Type == \"http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsaccountname\"] &amp;&amp;<span>&#13;</span>\nc2:[Type == \"http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationinstant\"]<span>&#13;</span>\n    => add(<span>&#13;</span>\n        store = \"_OpaqueIdStore\",<span>&#13;</span>\n        types = (\"<mark>http://contoso.com/internal/sessionid</mark>\"),<span>&#13;</span>\n        query = \"{0};{1};{2};{3};{4}\",<span>&#13;</span>\n        param = \"useEntropy\",<span>&#13;</span>\n        param = c1.Value,<span>&#13;</span>\n        param = c1.OriginalIssuer,<span>&#13;</span>\n        param = \"\",<span>&#13;</span>\n        param = c2.Value);<span>&#13;</span>\n</pre>","leadings":["","    ","    ","    ","    ","    ","    ","    ","    ","    ","    ","    ","    ","    "],"nodes":[{"content":"将以下规则语言粘贴到“自定义规则”框中，<bpt id=\"p1\">**</bpt>根据会话标识符<ept id=\"p1\">**</ept>命名规则，然后单击“完成”。","pos":[0,45],"source":"将以下规则语言粘贴到“自定义规则”框中，**根据会话标识符**命名规则，然后单击“完成”。"},{"content":"c1:[Type == \"http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsaccountname\"] <ph id=\"ph1\">&amp;amp;&amp;amp;&lt;span&gt;</ph>&amp;#13;<ph id=\"ph2\">&lt;/span&gt;</ph> c2:[Type == \"http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationinstant\"]<ph id=\"ph3\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph4\">&lt;/span&gt;\n</ph>    =&gt; add(<ph id=\"ph5\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph6\">&lt;/span&gt;\n</ph>        store = \"_OpaqueIdStore\",<ph id=\"ph7\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph8\">&lt;/span&gt;\n</ph>        types = (\"<ph id=\"ph9\">&lt;mark&gt;</ph>http://contoso.com/internal/sessionid<ph id=\"ph10\">&lt;/mark&gt;</ph>\"),<ph id=\"ph11\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph12\">&lt;/span&gt;\n</ph>        query = \"{0};{1};{2};{3};{4}\",<ph id=\"ph13\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph14\">&lt;/span&gt;\n</ph>        param = \"useEntropy\",<ph id=\"ph15\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph16\">&lt;/span&gt;\n</ph>        param = c1.Value,<ph id=\"ph17\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph18\">&lt;/span&gt;\n</ph>        param = c1.OriginalIssuer,<ph id=\"ph19\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph20\">&lt;/span&gt;\n</ph>        param = \"\",<ph id=\"ph21\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph22\">&lt;/span&gt;\n</ph>        param = c2.Value);<ph id=\"ph23\">&lt;span&gt;</ph>&amp;#13;","pos":[74,753],"source":"\nc1:[Type == \"http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsaccountname\"] &amp;&amp;<span>&#13;</span>\nc2:[Type == \"http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationinstant\"]<span>&#13;</span>\n    => add(<span>&#13;</span>\n        store = \"_OpaqueIdStore\",<span>&#13;</span>\n        types = (\"<mark>http://contoso.com/internal/sessionid</mark>\"),<span>&#13;</span>\n        query = \"{0};{1};{2};{3};{4}\",<span>&#13;</span>\n        param = \"useEntropy\",<span>&#13;</span>\n        param = c1.Value,<span>&#13;</span>\n        param = c1.OriginalIssuer,<span>&#13;</span>\n        param = \"\",<span>&#13;</span>\n        param = c2.Value);<span>&#13;"}]},{"content":"你的自定义规则应如下所示：","pos":[10339,10352]},{"content":"再次单击“添加规则”。","pos":[10443,10454]},{"content":"选择“转换传入声明”，然后单击“下一步”。","pos":[10459,10480]},{"content":"如下所示配置规则（使用在自定义规则中创建的声明类型），然后单击“完成”。","pos":[10485,10521]},{"pos":[10607,10741],"content":"若要详细了解如何创建上述临时名称 ID 声明，请参阅 <bpt id=\"p1\">[</bpt>SAML 声明中的名称标识符<ept id=\"p1\">](http://blogs.msdn.com/b/card/archive/2010/02/17/name-identifiers-in-saml-assertions.aspx)</ept>。","source":"若要详细了解如何创建上述临时名称 ID 声明，请参阅 [SAML 声明中的名称标识符](http://blogs.msdn.com/b/card/archive/2010/02/17/name-identifiers-in-saml-assertions.aspx)。"},{"content":"单击“编辑声明规则”对话框中的“应用”。","pos":[10747,10767]},{"content":"现在，它应该类似于以下屏幕截图：","pos":[10767,10783]},{"pos":[10881,10910],"content":"同样，请确保对调试环境和发布的 Web 应用重复这些步骤。"},{"content":"测试应用程序的联合身份验证","pos":[10940,10953]},{"content":"现在，你可以针对 AD FS 测试应用程序的身份验证逻辑。","pos":[10955,10984]},{"content":"在 AD FS 实验室环境中，我有一个属于 Active Directory (AD) 中测试组的测试用户。","pos":[10984,11038]},{"content":"若要在调试器中测试身份验证，只需按 <ph id=\"ph1\">`F5`</ph> 即可。","pos":[11119,11145],"source":"若要在调试器中测试身份验证，只需按 `F5` 即可。"},{"content":"若要在已发布的 Web 应用中测试身份验证，请转到 URL 对应的页面。","pos":[11145,11181]},{"content":"加载 Web 应用后，单击“登录”。","pos":[11183,11201]},{"content":"现在，应该会显示 AD FS 提供的登录对话框或登录页（具体取决于 AD FS 选择的身份验证方法）。","pos":[11201,11252]},{"content":"下面是 Internet Explorer 11 中显示的元素。","pos":[11252,11284]},{"content":"使用 AD FS 部署的 AD 域中的用户登录后，您现在应该会在一角再次看到显示“您好<ph id=\"ph1\">&lt;User Name&gt;</ph>！","pos":[11359,11414],"source":"使用 AD FS 部署的 AD 域中的用户登录后，您现在应该会在一角再次看到显示“您好<User Name>！"},{"content":"”的主页。","pos":[11414,11419]},{"content":"以下我看到的元素。","pos":[11419,11428]},{"content":"现在，你已在以下方面取得了成功：","pos":[11512,11528]},{"content":"你的应用程序已成功访问 AD FS，并且在 AD FS 数据库中找到了匹配的 RP 标识符","pos":[11532,11577]},{"content":"AD FS 已成功对 AD 用户进行身份验证，并将你重定向回到应用程序的主页","pos":[11580,11618]},{"content":"AD FS 已成功向应用程序发送名称声明 (http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name)，这可以通过网页一角显示的用户名来判断。","pos":[11621,11722]},{"content":"如果缺少名称声明，您看到的是“您好！","pos":[11725,11743]},{"content":"”。","pos":[11743,11745]},{"content":"如果您查看 Views<ph id=\"ph1\">\\\\</ph>Shared<ph id=\"ph2\">\\\\</ph>_LoginPartial.cshtml，则会发现它使用 <ph id=\"ph3\">`User.Identity.Name`</ph> 显示用户名。","pos":[11745,11822],"source":"如果您查看 Views\\\\Shared\\\\_LoginPartial.cshtml，则会发现它使用 `User.Identity.Name` 显示用户名。"},{"content":"如前所述，ASP.NET 将使用经过身份验证的用户的名称声明（如果已在 SAML 令牌中提供）来解冻此属性。","pos":[11822,11876]},{"content":"若要查看 AD FS 发送的所有声明，请在索引操作方法的 Controllers<ph id=\"ph1\">\\\\</ph>HomeController.cs 中放置一个断点。","pos":[11876,11944],"source":"若要查看 AD FS 发送的所有声明，请在索引操作方法的 Controllers\\\\HomeController.cs 中放置一个断点。"},{"content":"对用户进行身份验证后，检查 <ph id=\"ph1\">`System.Security.Claims.Current.Claims`</ph> 集合。","pos":[11944,12001],"source":"对用户进行身份验证后，检查 `System.Security.Claims.Current.Claims` 集合。"},{"content":"为特定控制器或操作的用户授权","pos":[12121,12135]},{"content":"由于您已在 RP 信任配置中添加组成员资格作为角色声明，因此，现在可以在控制器和操作的 <ph id=\"ph1\">`[Authorize(Roles=\"...\")]`</ph> 修饰中直接使用这些声明。","pos":[12137,12220],"source":"由于您已在 RP 信任配置中添加组成员资格作为角色声明，因此，现在可以在控制器和操作的 `[Authorize(Roles=\"...\")]` 修饰中直接使用这些声明。"},{"content":"在采用创建-读取-更新-删除 (CRUD) 模式的业务线应用程序中，你可以授权特定的角色访问每个操作。","pos":[12220,12271]},{"content":"目前，你只能对现有的主控制器试用此功能。","pos":[12271,12291]},{"content":"打开 Controllers<ph id=\"ph1\">\\\\</ph>HomeController.cs。","pos":[12296,12330],"source":"打开 Controllers\\\\HomeController.cs。"},{"pos":[12334,12646],"content":"使用已经过身份验证的用户具有的安全组成员资格，修饰 `About` 和 `Contact` 操作方法（如下所示）。  \n <pre class=\"prettyprint\">\n <mark>[Authorize(Roles=\"Test Group\")]</mark><span>&#13;</span>\n public ActionResult About()<span>&#13;</span>\n {<span>&#13;</span>\n     ViewBag.Message = \"Your application description page.\";<span>&#13;</span>","leadings":["","   ","   ","   ","   ","   "],"nodes":[{"content":"使用已经过身份验证的用户具有的安全组成员资格，修饰 <ph id=\"ph1\">`About`</ph> 和 <ph id=\"ph2\">`Contact`</ph> 操作方法（如下所示）。","pos":[0,57],"source":"使用已经过身份验证的用户具有的安全组成员资格，修饰 `About` 和 `Contact` 操作方法（如下所示）。"},{"content":"[Authorize(Roles=\"Test Group\")]<ph id=\"ph1\">&lt;/mark&gt;&lt;span&gt;</ph>&amp;#13;<ph id=\"ph2\">&lt;/span&gt;\n</ph> public ActionResult About()<ph id=\"ph3\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph4\">&lt;/span&gt;\n</ph> {<ph id=\"ph5\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph6\">&lt;/span&gt;\n</ph>     ViewBag.Message = \"Your application description page.\";<ph id=\"ph7\">&lt;span&gt;</ph>&amp;#13;","pos":[94,290],"source":"[Authorize(Roles=\"Test Group\")]</mark><span>&#13;</span>\n public ActionResult About()<span>&#13;</span>\n {<span>&#13;</span>\n     ViewBag.Message = \"Your application description page.\";<span>&#13;"}]},{"pos":[12693,12705],"content":"}<ph id=\"ph1\">&lt;span&gt;</ph>&amp;#13;","source":"}<span>&#13;"},{"pos":[12718,12925],"content":"<ph id=\"ph1\">&lt;mark&gt;</ph>[Authorize(Roles=\"Domain Admins\")]<ph id=\"ph2\">&lt;/mark&gt;&lt;span&gt;</ph>&amp;#13;<ph id=\"ph3\">&lt;/span&gt;\n</ph> public ActionResult Contact()<ph id=\"ph4\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph5\">&lt;/span&gt;\n</ph> {<ph id=\"ph6\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph7\">&lt;/span&gt;\n</ph>     ViewBag.Message = \"Your contact page.\";<ph id=\"ph8\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph9\">&lt;/span&gt;</ph>","leadings":["","   ","   ","   "],"source":"<mark>[Authorize(Roles=\"Domain Admins\")]</mark><span>&#13;</span>\n public ActionResult Contact()<span>&#13;</span>\n {<span>&#13;</span>\n     ViewBag.Message = \"Your contact page.\";<span>&#13;</span>"},{"pos":[12972,13002],"content":"}<span>&#13;</span>\n </pre>","leadings":["","   "],"nodes":[{"content":"}<ph id=\"ph1\">&lt;span&gt;</ph>&amp;#13;","pos":[0,12],"source":"}<span>&#13;"}]},{"content":"由于我已在 AD FS 实验室环境中向“测试组”添加了<bpt id=\"p1\">**</bpt>测试用户<ept id=\"p1\">**</ept>，因此我将使用“测试组”在 <ph id=\"ph1\">`About`</ph> 上测试授权。","pos":[13008,13071],"source":"由于我已在 AD FS 实验室环境中向“测试组”添加了**测试用户**，因此我将使用“测试组”在 `About` 上测试授权。"},{"content":"对于 <ph id=\"ph1\">`Contact`</ph>，我将测试<bpt id=\"p1\">**</bpt>测试用户<ept id=\"p1\">**</ept>不属于的<bpt id=\"p2\">**</bpt>域管理员<ept id=\"p2\">**</ept>的反面情况。","pos":[13071,13114],"source":"对于 `Contact`，我将测试**测试用户**不属于的**域管理员**的反面情况。"},{"content":"键入 <ph id=\"ph1\">`F5`</ph> 启动调试器并登录，然后单击“关于”。","pos":[13119,13145],"source":"键入 `F5` 启动调试器并登录，然后单击“关于”。"},{"content":"如果经过身份验证的用户已获得该操作的授权，那么您现在应该可以成功查看 <ph id=\"ph1\">`~/About/Index`</ph> 页面。","pos":[13145,13199],"source":"如果经过身份验证的用户已获得该操作的授权，那么您现在应该可以成功查看 `~/About/Index` 页面。"},{"content":"现在，单击“联系人”，在此示例中不得授权<bpt id=\"p1\">**</bpt>测试用户<ept id=\"p1\">**</ept>执行该操作。","pos":[13203,13237],"source":"现在，单击“联系人”，在此示例中不得授权**测试用户**执行该操作。"},{"content":"但是，浏览器将重定向到 AD FS，并最终显示此消息：","pos":[13237,13264]},{"content":"如果在 AD FS 服务器的事件查看器中调查此错误，您会看到以下异常消息：","pos":[13354,13391]},{"pos":[13397,14278],"content":"<pre class=\"prettyprint\">\n Microsoft.IdentityServer.Web.InvalidRequestException: MSIS7042: <mark>The same client browser session has made '6' requests in the last '11' seconds.</mark> Contact your administrator for details.<span>&#13;</span>\n    at Microsoft.IdentityServer.Web.Protocols.PassiveProtocolHandler.UpdateLoopDetectionCookie(WrappedHttpListenerContext context)<span>&#13;</span>\n    at Microsoft.IdentityServer.Web.Protocols.WSFederation.WSFederationProtocolHandler.SendSignInResponse(WSFederationContext context, MSISSignInResponse response)<span>&#13;</span>\n    at Microsoft.IdentityServer.Web.PassiveProtocolListener.ProcessProtocolRequest(ProtocolContext protocolContext, PassiveProtocolHandler protocolHandler)<span>&#13;</span>\n    at Microsoft.IdentityServer.Web.PassiveProtocolListener.OnGetContext(WrappedHttpListenerContext context)\n </pre>","leadings":["","   ","   ","   ","   ","   ","   "],"nodes":[{"content":"Microsoft.IdentityServer.Web.InvalidRequestException: MSIS7042: <ph id=\"ph1\">&lt;mark&gt;</ph>The same client browser session has made '6' requests in the last '11' seconds.<ph id=\"ph2\">&lt;/mark&gt;</ph> Contact your administrator for details.<ph id=\"ph3\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph4\">&lt;/span&gt;\n</ph>    at Microsoft.IdentityServer.Web.Protocols.PassiveProtocolHandler.UpdateLoopDetectionCookie(WrappedHttpListenerContext context)<ph id=\"ph5\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph6\">&lt;/span&gt;\n</ph>    at Microsoft.IdentityServer.Web.Protocols.WSFederation.WSFederationProtocolHandler.SendSignInResponse(WSFederationContext context, MSISSignInResponse response)<ph id=\"ph7\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph8\">&lt;/span&gt;\n</ph>    at Microsoft.IdentityServer.Web.PassiveProtocolListener.ProcessProtocolRequest(ProtocolContext protocolContext, PassiveProtocolHandler protocolHandler)<ph id=\"ph9\">&lt;span&gt;</ph>&amp;#13;<ph id=\"ph10\">&lt;/span&gt;\n</ph>    at Microsoft.IdentityServer.Web.PassiveProtocolListener.OnGetContext(WrappedHttpListenerContext context)","pos":[27,855],"source":" Microsoft.IdentityServer.Web.InvalidRequestException: MSIS7042: <mark>The same client browser session has made '6' requests in the last '11' seconds.</mark> Contact your administrator for details.<span>&#13;</span>\n    at Microsoft.IdentityServer.Web.Protocols.PassiveProtocolHandler.UpdateLoopDetectionCookie(WrappedHttpListenerContext context)<span>&#13;</span>\n    at Microsoft.IdentityServer.Web.Protocols.WSFederation.WSFederationProtocolHandler.SendSignInResponse(WSFederationContext context, MSISSignInResponse response)<span>&#13;</span>\n    at Microsoft.IdentityServer.Web.PassiveProtocolListener.ProcessProtocolRequest(ProtocolContext protocolContext, PassiveProtocolHandler protocolHandler)<span>&#13;</span>\n    at Microsoft.IdentityServer.Web.PassiveProtocolListener.OnGetContext(WrappedHttpListenerContext context)\n"}]},{"content":"发生这种情况的原因是默认情况下当用户的角色未授权时 MVC 将返回 401“未授权”。","pos":[14284,14327]},{"content":"这会触发对标识提供程序 (AD FS) 的重新进行身份验证请求。","pos":[14327,14359]},{"content":"由于用户已经过身份验证，AD FS 将返回同一页，然后再次发出 401，并创建重定向循环。","pos":[14359,14404]},{"content":"您将使用简单的逻辑替代 AuthorizeAttribute 的 <ph id=\"ph1\">`HandleUnauthorizedRequest`</ph> 方法，以显示一些有意义的内容，而不是继续重定向循环。","pos":[14404,14491],"source":"您将使用简单的逻辑替代 AuthorizeAttribute 的 `HandleUnauthorizedRequest` 方法，以显示一些有意义的内容，而不是继续重定向循环。"},{"content":"在项目中创建名为 AuthorizeAttribute.cs 的文件，并将以下代码粘贴到其中。","pos":[14496,14543]},{"content":"在 authenticated-but-unauthorized 的情况下，重写代码将发送 HTTP 403（禁止）而不是 HTTP 401（未授权）。","pos":[15464,15540]},{"content":"再次使用 <ph id=\"ph1\">`F5`</ph> 运行调试器。","pos":[15545,15561],"source":"再次使用 `F5` 运行调试器。"},{"content":"现在，单击“联系人”会显示信息更丰富（但毫无吸引力）的错误消息：","pos":[15561,15593]},{"content":"再次将应用程序发布到 Azure Web 应用，并测试实时应用程序的行为。","pos":[15684,15721]},{"content":"连接到本地数据","pos":[15751,15758]},{"content":"使用 AD FS 而不是 Azure Active Directory 实施业务线应用程序的一个原因是，既能符合法规要求，同时可将组织数据保留在外部。","pos":[15760,15835]},{"content":"这可能还意味着，您在 Azure 中的 Web 应用必须访问本地数据库，因为您不得使用 <bpt id=\"p1\">[</bpt>SQL 数据库<ept id=\"p1\">](/home/features/sql-database/)</ept>作为 Web 应用的数据层。","pos":[15835,15932],"source":"这可能还意味着，您在 Azure 中的 Web 应用必须访问本地数据库，因为您不得使用 [SQL 数据库](/home/features/sql-database/)作为 Web 应用的数据层。"},{"content":"其他资源","pos":[15968,15972]},{"content":"通过 SSL 和 Authorize 属性保护应用程序","pos":[15977,16004]},{"content":"使用 Active Directory 在 Azure 中进行身份验证","pos":[16164,16199]},{"content":"在 Azure 中创建使用 Azure Active Directory 身份验证的 .NET MVC Web 应用","pos":[16268,16326]},{"content":"在 Visual Studio 2013 中将本地组织的身份验证选项 (ADFS) 与 ASP.NET 结合使用","pos":[16398,16454]},{"content":"Vittorio Bertocci 的博客","pos":[16603,16624]},{"content":"将 VS2013 Web 项目从 WIF 迁移到 Katana","pos":[16665,16696]},{"content":"Active Directory 联合身份验证服务概述","pos":[16796,16823]},{"content":"WS-Federation 1.1 规范","pos":[16886,16906]}],"content":"<properties \n    pageTitle=\"在 Azure 中创建使用 AD FS 身份验证的 .NET MVC Web 应用\" \n    description=\"了解如何在 Azure 中创建使用本地 STS 进行身份验证的 ASP.NET MVC 业务线应用程序。本教程将 AD FS 定位为本地 STS。\" \n    services=\"app-service\\web\" \n    documentationCenter=\".net\" \n    authors=\"cephalin\" \n    manager=\"wpickett\" \n    editor=\"\"/>\n\n<tags\n    ms.service=\"web-sites\"\n    ms.date=\"12/15/2015\" \n    wacn.date=\"02/17/2016\"/>\n\n# 在 Azure 中创建使用 AD FS 身份验证的 .NET MVC Web 应用\n\n在本文中，你将了解如何在使用本地 [Active Directory 联合身份验证服务](http://technet.microsoft.com/zh-cn/library/hh831502.aspx)作为标识提供者的 [Azure Web 应用](/documentation/services/web-sites/)中创建 ASP.NET MVC 业务线应用程序。当你想要在 Azure 中创建业务线应用程序，而你的组织要求在现场存储所有数据时，可以应用此方案。\n\n>[AZURE.NOTE]有关 Azure Web 应用支持的不同企业身份验证和授权选项的概述，请参阅[使用 Active Directory 在 Azure 中进行身份验证](/documentation/articles/web-sites-authentication-authorization)。\n\n<a name=\"bkmk_build\"></a>\n## 要生成的项目 ##\n\n你将在 Azure 中生成具有以下功能的基本 ASP.NET 应用程序：\n\n- 根据 AD FS 对用户进行身份验证\n- 使用 `[Authorize]` 授权用户执行不同操作\n- 用于在 Visual Studio 中进行调试和发布到 Azure Web 应用的静态配置（配置一次，随时调试和发布）  \n\n<a name=\"bkmk_need\"></a>\n## 所需的项目 ##\n\n若要完成本教程，你需要以下项目：\n\n- 本地 AD FS 部署（有关所使用的测试实验室的端到端演练，请参阅[测试实验室：Azure VM 中使用 AD FS 的独立 STS（仅用于测试）](#)）\n- 用于在 AD FS 管理中创建信赖方信任的权限\n- Visual Studio 2013\n- [Azure SDK 2.5.1](https://www.microsoft.com/web/handlers/webpi.ashx/getinstaller/VWDOrVs2013AzurePack.appids) 或更高版本\n\n<a name=\"bkmk_sample\"></a>\n## 将示例应用程序用作业务线模板 ##\n\n本教程中的示例应用程序 [WebApp-WSFederation-DotNet)](https://github.com/AzureADSamples/WebApp-WSFederation-DotNet) 是由 Azure Active Directory 团队创建。由于 AD FS 支持 WS 联合身份验证，因此您可以将它用作模板来轻松新建业务线应用程序。该示例应用程序具有以下功能：\n\n- 使用 [WS 联合身份验证](http://msdn.microsoft.com/zh-cn/library/bb498017.aspx)进行本地 AD FS 部署身份验证\n- 登录和注销功能\n- 使用 [Microsoft.Owin](http://www.asp.net/aspnet/overview/owin-and-katana/an-overview-of-project-katana)（而不是 Windows Identity Foundation (WIF)），它代表了 ASP.NET 的未来发展方向，与 WIF 相比，它的身份验证和授权设置要简单得多\n\n<a name=\"bkmk_setup\"></a>\n## 设置示例应用程序 ##\n\n2.  将 [WebApp-WSFederation-DotNet](https://github.com/AzureADSamples/WebApp-WSFederation-DotNet) 的示例解决方案克隆或下载到您的本地目录中。\n\n    > [AZURE.NOTE][README.md](https://github.com/AzureADSamples/WebApp-WSFederation-DotNet/blob/master/README.md) 中的说明展示了如何使用 Azure Active Directory 设置应用程序，而在本教程中，您将使用 AD FS 设置应用程序，因此请改为按照本文的步骤操作。\n\n3.  打开解决方案，然后在“解决方案资源管理器”中打开 Controllers\\\\AccountController.cs。\n\n    你将看到，代码只是发出身份验证质询以使用 WS-Federation 对用户进行身份验证。所有身份验证都在 App\\_Start.Auth.cs 中配置。\n\n4.  打开 App\\_Start.Auth.cs。在 `ConfigureAuth` 方法中，记录下面的代码行：\n\n        app.UseWsFederationAuthentication(\n            new WsFederationAuthenticationOptions\n            {\n                Wtrealm = realm,\n                MetadataAddress = metadata                                      \n            });\n\n    在 OWIN 领域中，这实际上配置 WS-Federation 所需的最低要求。这肯定比 WIF 要精简得多，因为 Web.config 中的各个位置都注入了 XML。所需的唯一信息就是信赖方 (RP) 标识符和 AD FS 服务元数据文件的 URL。下面是一个示例：\n\n    -   RP 标识符：`https://contoso.com/MyLOBApp`\n    -   元数据地址：`http://adfs.contoso.com/FederationMetadata/2007-06/FederationMetadata.xml`\n\n5.  在 App\\_Start.Auth.cs 中，根据以下突出显示部分所示更改静态字符串定义：\n    <pre class=\"prettyprint\">\n    private static string realm = ConfigurationManager.AppSettings[\"ida:<mark>RPIdentifier</mark>\"];<span>&#13;</span>\n    <mark><del>private static string aadInstance = ConfigurationManager.AppSettings[\"ida:AADInstance\"];</del></mark><span>&#13;</span>\n    <mark><del>private static string tenant = ConfigurationManager.AppSettings[\"ida:Tenant\"];</del></mark><span>&#13;</span>\n    <mark><del>private static string metadata = string.Format(\"{0}/{1}/federationmetadata/2007-06/federationmetadata.xml\", aadInstance, tenant);</del></mark><span>&#13;</span>\n    <mark>private static string metadata = string.Format(\"https://{0}/federationmetadata/2007-06/federationmetadata.xml\", ConfigurationManager.AppSettings[\"ida:ADFS\"]);</mark><span>&#13;</span>\n    <mark><del>string authority = String.Format(CultureInfo.InvariantCulture, aadInstance, tenant);</del></mark>\n    </pre>\n\n6.  现在，你将在 Web.config 中进行相应更改。打开 Web.config 并根据以下突出显示部分所示修改应用程序设置：\n\n    <pre class=\"prettyprint\">\n    &lt;appSettings><span>&#13;</span>\n        &lt;add key=\"webpages:Version\" value=\"3.0.0.0\" /><span>&#13;</span>\n        &lt;add key=\"webpages:Enabled\" value=\"false\" /><span>&#13;</span>\n        &lt;add key=\"ClientValidationEnabled\" value=\"true\" /><span>&#13;</span>\n        &lt;add key=\"UnobtrusiveJavaScriptEnabled\" value=\"true\" /><span>&#13;</span>\n        <mark><del>&lt;add key=\"ida:Wtrealm\" value=\"[Enter the App ID URI of WebApp-WSFederation-DotNet https://contoso.partner.onmschina.cn/WebApp-WSFederation-DotNet]\" /></del></mark><span>&#13;</span>\n        <mark><del>&lt;add key=\"ida:AADInstance\" value=\"https://login.chinacloudapi.cn\" /></del></mark><span>&#13;</span>\n        <mark><del>&lt;add key=\"ida:Tenant\" value=\"[Enter tenant name, e.g. contoso.partner.onmschina.cn]\" /></del></mark><span>&#13;</span>\n        <mark>&lt;add key=\"ida:RPIdentifier\" value=\"[Enter the relying party identifier as configured in AD FS, e.g. https://localhost:44320/]\" /></mark><span>&#13;</span>\n        <mark>&lt;add key=\"ida:ADFS\" value=\"[Enter the FQDN of AD FS service, e.g. adfs.contoso.com]\" /></mark><span>&#13;</span>\n    &lt;/appSettings>\n    </pre>\n\n    根据相应的环境填写键值。\n\n7.  生成应用程序，以确保没有任何错误。\n\n就这么简单。现在，便可以配合 AD FS 运行该示例应用程序。稍后，你仍需要在 AD FS 中配置 RP 与此应用程序间的信任关系。\n\n<a name=\"bkmk_deploy\"></a>\n## 将示例应用程序部署到 Azure Web 应用\n\n现在，你需要将应用程序发布到 Azure Web 应用中，同时保留调试环境。请注意，你将要在建立 RP 与 AD FS 之间的信任关系之前发布应用程序，因此身份验证还不起作用。不过，如果现在就执行此操作，则可以获得 Web 应用URL，稍后您还可以使用此 URL 来配置 RP 信任。\n\n1. 右键单击您的项目，然后选择“发布”。\n\n    ![](./media/web-sites-dotnet-lob-application-adfs/01-publish-website.png)\n\n2. 选择“导入”。\n3. 如果您尚未下载“发布配置文件”，请到 Azure 管理门户下载。如果你尚未创建 Web 应用，也请在 Azure 管理门户创建，并下载其“发布配置文件”\n4. 选择你下载好的“发布配置文件”，并确认。\n7. 在“目标 URL”中，将 **http** 更改为 **https**。将整个 URL 复制到文本编辑器。稍后将要用到它。然后，单击“发布”。\n\n    ![](./media/web-sites-dotnet-lob-application-adfs/03-destination-url.png)\n\n11. 在 Visual Studio 中，在项目中打开 **Web.Release.config**。在 `<configuration>` 标记中插入以下 XML，然后将键值替换为发布 Web 应用的 URL。\n    <pre class=\"prettyprint\">\n    &lt;appSettings><span>&#13;</span>\n        &lt;add key=\"ida:RPIdentifier\" value=\"<mark>[e.g. https://mylobapp.chinacloudsites.cn/]</mark>\" xdt:Transform=\"SetAttributes\" xdt:Locator=\"Match(key)\" /><span>&#13;</span>\n    &lt;/appSettings>\n    </pre>\n\n完成后，您的项目中将配置有两个 RP 标识符，一个用于 Visual Studio 中的调试环境，另一个用于 Azure 中发布的 Web 应用。你将为 AD FS 中两个环境的每一个设置 RP 信任。在调试期间，Web.config 中的应用设置用于让**调试**配置适用于 AD FS；在发布后（默认情况下，发布的是**版本**配置），上载的是转换后的 Web.config，其中包含 Web.Release.config 中的应用设置更改。\n\n如果您想将 Azure 中已发布的 Web 应用附加到调试器（即必须上载已发布的 Web 应用中的代码调试符号），则可以克隆一个调试配置进行 Azure 调试，但自身需要使用 Web.Release.config 中的应用设置进行自定义 Web.config 转换（例如 Web.AzureDebug.config）。这样，你可以跨不同的环境中维护静态配置。\n\n<a name=\"bkmk_rptrusts\"></a>\n## 在 AD FS 管理中配置信赖方信任 ##\n\n现在，需要先在 AD FS 管理中配置 RP 信任，然后示例应用程序才能真正使用 AD FS 进行身份验证。您需要单独设置两个 RP 信任，一个用于调试环境，另一个用于已发布的 Web 应用。\n\n> [AZURE.NOTE]确保对环境重复以下两个步骤。\n\n4.  在 AD FS 服务器上，使用对 AD FS 具有管理权限的凭据登录。\n5.  打开“AD FS 管理”。右键单击“AD FS\\\\信任关系\\\\信赖方信任”，然后选择“添加信赖方信任”。\n\n    ![](./media/web-sites-dotnet-lob-application-adfs/1-add-rptrust.png)\n\n5.  在“选择数据源”页面上，选择“手动输入信赖方数据”。\n\n    ![](./media/web-sites-dotnet-lob-application-adfs/2-enter-rp-manually.png)\n\n6.  在“指定显示名称”页面上，键入应用程序的显示名称，然后单击“下一步”。\n7.  在“选择协议”页面上，单击“下一步”。\n8.  在“配置证书”页面上，单击“下一步”。\n\n    > [AZURE.NOTE]由于你已在使用 HTTPS，因此加密令牌是可选的。如果你确实想要在此页上加密来自 AD FS 的令牌，则还必须在代码中添加令牌解密逻辑。有关详细信息，请参阅[手动配置 OWIN WS 联合身份验证中间件和接受加密令牌](http://chris.59north.com/post/2014/08/21/Manually-configuring-OWIN-WS-Federation-middleware-and-accepting-encrypted-tokens.aspx)。\n  \n5.  在转到下一步之前，需要获得 Visual Studio 项目中的一个信息片段。在项目属性中，记录应用程序的 **SSL URL**。\n\n    ![](./media/web-sites-dotnet-lob-application-adfs/3-ssl-url.png)\n\n6.  返回“AD FS 管理”，在“添加信赖方信任向导”的“配置 URL”页面中，选择“启用支持 WS 联合身份验证被动协议”，然后键入您在上一步中记录的 Visual Studio 项目 SSL URL。然后，单击“下一步”。\n\n    ![](./media/web-sites-dotnet-lob-application-adfs/4-configure-url.png)\n\n    > [AZURE.NOTE]URL 指定身份验证成功后要将客户端发送到的位置。对于调试环境，它应为 <code>https://localhost:&lt;port&gt;/</code>。对于发布的 Web 应用，它应该是 Web 应用URL。\n\n7.  在“配置标识符”页面上，确认您的项目 SSL URL 是否已列出，然后单击“下一步”。保持默认选择不变，同时单击“下一步”，一直到向导结束。\n\n    > [AZURE.NOTE]在 Visual Studio 项目的 App\\_Start\\\\Startup.Auth.cs 中，此标识符与联合身份验证期间 <code>WsFederationAuthenticationOptions.Wtrealm</code> 的值相匹配。默认情况下，将添加上一步中的应用程序 URL 作为 RP 标识符。\n\n8.  现在，你已在 AD FS 中为项目完成了 RP 应用程序的配置。接下来，你要将此应用程序配置为发送应用程序所需的声明。在向导结束时，系统会默认打开“编辑声明规则”对话框，方便您立即启动。至少配置以下声明（括号中为架构）：\n\n    -   名称 (http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name) - ASP.NET 用来解冻 `User.Identity.Name`。\n    -   用户主体名称 (http://schemas.xmlsoap.org/ws/2005/05/identity/claims/upn) - 用于唯一标识组织中的用户。\n    -   将成员资格分组为角色 (http://schemas.microsoft.com/ws/2008/06/identity/claims/role) - 可与 `[Authorize(Roles=\"role1, role2,...\")]` 修饰符配合使用来授权控制器/操作。实际上，这可能不是大多数的高性能方法进行角色授权，尤其是在你的 AD 用户定期属于数百个安全组转换为数以百计的 SAML 令牌中的角色声明。另一种方法是在某个特定组发送单个角色声明有条件地根据用户的成员身份。但是，本教程将简化其结构。\n    -   名称 ID (http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier) - 可用于防伪验证。若要详细了解如何使其适用于防伪验证，请参阅[在 Azure 中创建使用 Azure Active Directory 身份验证的 .NET MVC Web 应用](/documentation/articles/web-sites-dotnet-lob-application-azure-ad#bkmk_crud)中的**将业务线功能添加到示例应用程序**部分。\n\n    > [AZURE.NOTE]需要为应用程序配置的声明类型取决于应用程序的需求。有关 Azure Active Directory 应用程序支持的声明列表（即 RP 信任），请参阅[支持的令牌和声明类型](/documentation/articles/active-directory-token-and-claims/)。\n\n8.  在“编辑声明规则”对话框中，单击“添加规则”。\n9.  配置名称、UPN 和角色声明（如下所示），然后单击“完成”。\n\n    ![](./media/web-sites-dotnet-lob-application-adfs/5-ldap-claims.png)\n\n    接下来，您将按照 [SAML 声明中的名称标识符](http://blogs.msdn.com/b/card/archive/2010/02/17/name-identifiers-in-saml-assertions.aspx)中演示的步骤操作，创建一个临时名称 ID 声明。\n\n9.  再次单击“添加规则”。\n10. 选择“使用自定义规则发送声明”，然后单击“下一步”。\n11. 将以下规则语言粘贴到“自定义规则”框中，**根据会话标识符**命名规则，然后单击“完成”。  \n    <pre class=\"prettyprint\">\n    c1:[Type == \"http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsaccountname\"] &amp;&amp;<span>&#13;</span>\n    c2:[Type == \"http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationinstant\"]<span>&#13;</span>\n        => add(<span>&#13;</span>\n            store = \"_OpaqueIdStore\",<span>&#13;</span>\n            types = (\"<mark>http://contoso.com/internal/sessionid</mark>\"),<span>&#13;</span>\n            query = \"{0};{1};{2};{3};{4}\",<span>&#13;</span>\n            param = \"useEntropy\",<span>&#13;</span>\n            param = c1.Value,<span>&#13;</span>\n            param = c1.OriginalIssuer,<span>&#13;</span>\n            param = \"\",<span>&#13;</span>\n            param = c2.Value);<span>&#13;</span>\n    </pre>\n\n    你的自定义规则应如下所示：\n\n    ![](./media/web-sites-dotnet-lob-application-adfs/6-per-session-identifier.png)\n\n9.  再次单击“添加规则”。\n10. 选择“转换传入声明”，然后单击“下一步”。\n11. 如下所示配置规则（使用在自定义规则中创建的声明类型），然后单击“完成”。\n\n    ![](./media/web-sites-dotnet-lob-application-adfs/7-transient-name-id.png)\n\n    若要详细了解如何创建上述临时名称 ID 声明，请参阅 [SAML 声明中的名称标识符](http://blogs.msdn.com/b/card/archive/2010/02/17/name-identifiers-in-saml-assertions.aspx)。\n\n12. 单击“编辑声明规则”对话框中的“应用”。现在，它应该类似于以下屏幕截图：\n\n    ![](./media/web-sites-dotnet-lob-application-adfs/8-all-claim-rules.png)\n\n    > [AZURE.NOTE]同样，请确保对调试环境和发布的 Web 应用重复这些步骤。\n\n<a name=\"bkmk_test\"></a>\n## 测试应用程序的联合身份验证\n\n现在，你可以针对 AD FS 测试应用程序的身份验证逻辑。在 AD FS 实验室环境中，我有一个属于 Active Directory (AD) 中测试组的测试用户。\n\n![](./media/web-sites-dotnet-lob-application-adfs/10-test-user-and-group.png)\n\n若要在调试器中测试身份验证，只需按 `F5` 即可。若要在已发布的 Web 应用中测试身份验证，请转到 URL 对应的页面。\n\n加载 Web 应用后，单击“登录”。现在，应该会显示 AD FS 提供的登录对话框或登录页（具体取决于 AD FS 选择的身份验证方法）。下面是 Internet Explorer 11 中显示的元素。\n\n![](./media/web-sites-dotnet-lob-application-adfs/9-test-debugging.png)\n\n使用 AD FS 部署的 AD 域中的用户登录后，您现在应该会在一角再次看到显示“您好<User Name>！”的主页。以下我看到的元素。\n\n![](./media/web-sites-dotnet-lob-application-adfs/11-test-debugging-success.png)\n\n现在，你已在以下方面取得了成功：\n\n- 你的应用程序已成功访问 AD FS，并且在 AD FS 数据库中找到了匹配的 RP 标识符\n- AD FS 已成功对 AD 用户进行身份验证，并将你重定向回到应用程序的主页\n- AD FS 已成功向应用程序发送名称声明 (http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name)，这可以通过网页一角显示的用户名来判断。 \n\n如果缺少名称声明，您看到的是“您好！”。如果您查看 Views\\\\Shared\\\\_LoginPartial.cshtml，则会发现它使用 `User.Identity.Name` 显示用户名。如前所述，ASP.NET 将使用经过身份验证的用户的名称声明（如果已在 SAML 令牌中提供）来解冻此属性。若要查看 AD FS 发送的所有声明，请在索引操作方法的 Controllers\\\\HomeController.cs 中放置一个断点。对用户进行身份验证后，检查 `System.Security.Claims.Current.Claims` 集合。\n\n![](./media/web-sites-dotnet-lob-application-adfs/12-test-debugging-all-claims.png)\n\n<a name=\"bkmk_authorize\"></a>\n## 为特定控制器或操作的用户授权\n\n由于您已在 RP 信任配置中添加组成员资格作为角色声明，因此，现在可以在控制器和操作的 `[Authorize(Roles=\"...\")]` 修饰中直接使用这些声明。在采用创建-读取-更新-删除 (CRUD) 模式的业务线应用程序中，你可以授权特定的角色访问每个操作。目前，你只能对现有的主控制器试用此功能。\n\n1. 打开 Controllers\\\\HomeController.cs。\n2. 使用已经过身份验证的用户具有的安全组成员资格，修饰 `About` 和 `Contact` 操作方法（如下所示）。  \n    <pre class=\"prettyprint\">\n    <mark>[Authorize(Roles=\"Test Group\")]</mark><span>&#13;</span>\n    public ActionResult About()<span>&#13;</span>\n    {<span>&#13;</span>\n        ViewBag.Message = \"Your application description page.\";<span>&#13;</span>\n\n        return View();<span>&#13;</span>\n    }<span>&#13;</span>\n\n    <mark>[Authorize(Roles=\"Domain Admins\")]</mark><span>&#13;</span>\n    public ActionResult Contact()<span>&#13;</span>\n    {<span>&#13;</span>\n        ViewBag.Message = \"Your contact page.\";<span>&#13;</span>\n\n        return View();<span>&#13;</span>\n    }<span>&#13;</span>\n    </pre>\n\n    由于我已在 AD FS 实验室环境中向“测试组”添加了**测试用户**，因此我将使用“测试组”在 `About` 上测试授权。对于 `Contact`，我将测试**测试用户**不属于的**域管理员**的反面情况。\n\n3. 键入 `F5` 启动调试器并登录，然后单击“关于”。如果经过身份验证的用户已获得该操作的授权，那么您现在应该可以成功查看 `~/About/Index` 页面。\n4. 现在，单击“联系人”，在此示例中不得授权**测试用户**执行该操作。但是，浏览器将重定向到 AD FS，并最终显示此消息：\n\n    ![](./media/web-sites-dotnet-lob-application-adfs/13-authorize-adfs-error.png)\n\n    如果在 AD FS 服务器的事件查看器中调查此错误，您会看到以下异常消息：\n\n    <pre class=\"prettyprint\">\n    Microsoft.IdentityServer.Web.InvalidRequestException: MSIS7042: <mark>The same client browser session has made '6' requests in the last '11' seconds.</mark> Contact your administrator for details.<span>&#13;</span>\n       at Microsoft.IdentityServer.Web.Protocols.PassiveProtocolHandler.UpdateLoopDetectionCookie(WrappedHttpListenerContext context)<span>&#13;</span>\n       at Microsoft.IdentityServer.Web.Protocols.WSFederation.WSFederationProtocolHandler.SendSignInResponse(WSFederationContext context, MSISSignInResponse response)<span>&#13;</span>\n       at Microsoft.IdentityServer.Web.PassiveProtocolListener.ProcessProtocolRequest(ProtocolContext protocolContext, PassiveProtocolHandler protocolHandler)<span>&#13;</span>\n       at Microsoft.IdentityServer.Web.PassiveProtocolListener.OnGetContext(WrappedHttpListenerContext context)\n    </pre>\n\n    发生这种情况的原因是默认情况下当用户的角色未授权时 MVC 将返回 401“未授权”。这会触发对标识提供程序 (AD FS) 的重新进行身份验证请求。由于用户已经过身份验证，AD FS 将返回同一页，然后再次发出 401，并创建重定向循环。您将使用简单的逻辑替代 AuthorizeAttribute 的 `HandleUnauthorizedRequest` 方法，以显示一些有意义的内容，而不是继续重定向循环。\n\n5. 在项目中创建名为 AuthorizeAttribute.cs 的文件，并将以下代码粘贴到其中。\n\n        using System;\n        using System.Web.Mvc;\n        using System.Web.Routing;\n        \n        namespace WebApp_WSFederation_DotNet\n        {\n            [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, Inherited = true, AllowMultiple = true)]\n            public class AuthorizeAttribute : System.Web.Mvc.AuthorizeAttribute\n            {\n                protected override void HandleUnauthorizedRequest(AuthorizationContext filterContext)\n                {\n                    if (filterContext.HttpContext.Request.IsAuthenticated)\n                    {\n                        filterContext.Result = new System.Web.Mvc.HttpStatusCodeResult((int)System.Net.HttpStatusCode.Forbidden);\n                    }\n                    else\n                    {\n                        base.HandleUnauthorizedRequest(filterContext);\n                    }\n                }\n            }\n        }\n\n    在 authenticated-but-unauthorized 的情况下，重写代码将发送 HTTP 403（禁止）而不是 HTTP 401（未授权）。\n\n6. 再次使用 `F5` 运行调试器。现在，单击“联系人”会显示信息更丰富（但毫无吸引力）的错误消息：\n\n    ![](./media/web-sites-dotnet-lob-application-adfs/14-unauthorized-forbidden.png)\n\n7. 再次将应用程序发布到 Azure Web 应用，并测试实时应用程序的行为。\n\n<a name=\"bkmk_data\"></a>\n## 连接到本地数据\n\n使用 AD FS 而不是 Azure Active Directory 实施业务线应用程序的一个原因是，既能符合法规要求，同时可将组织数据保留在外部。这可能还意味着，您在 Azure 中的 Web 应用必须访问本地数据库，因为您不得使用 [SQL 数据库](/home/features/sql-database/)作为 Web 应用的数据层。\n\n\n<a name=\"bkmk_resources\"></a>\n## 其他资源\n\n- [通过 SSL 和 Authorize 属性保护应用程序](/documentation/articles/web-sites-dotnet-deploy-aspnet-mvc-app-membership-oauth-sql-database#protect-the-application-with-ssl-and-the-authorize-attribute)\n- [使用 Active Directory 在 Azure 中进行身份验证](/documentation/articles/web-sites-authentication-authorization)\n- [在 Azure 中创建使用 Azure Active Directory 身份验证的 .NET MVC Web 应用](/documentation/articles/web-sites-dotnet-lob-application-azure-ad)\n- [在 Visual Studio 2013 中将本地组织的身份验证选项 (ADFS) 与 ASP.NET 结合使用](http://www.cloudidentity.com/blog/2014/02/12/use-the-on-premises-organizational-authentication-option-adfs-with-asp-net-in-visual-studio-2013/)\n- [Vittorio Bertocci 的博客](http://blogs.msdn.com/b/vbertocci/)\n- [将 VS2013 Web 项目从 WIF 迁移到 Katana](http://www.cloudidentity.com/blog/2014/09/15/MIGRATE-A-VS2013-WEB-PROJECT-FROM-WIF-TO-KATANA/)\n- [Active Directory 联合身份验证服务概述](http://technet.microsoft.com/zh-cn/library/hh831502.aspx)\n- [WS-Federation 1.1 规范](http://download.boulder.ibm.com/ibmdl/pub/software/dw/specs/ws-fed/WS-Federation-V1-1B.pdf?S_TACT=105AGX04&S_CMP=LP)\n\n[AZURE.INCLUDE [app-service-web-whats-changed](../includes/app-service-web-whats-changed.md)]\n \n \n\n<!---HONumber=79-->"}