<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4065d42ae4f55fa1acdd632b78770da67063185a</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>以编程方式访问 Hadoop YARN 应用程序日志 | Azure</source>
          <target state="new">以编程方式访问 Hadoop YARN 应用程序日志 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>以编程方式访问 HDInsight 中 Hadoop 群集上的应用程序日志。</source>
          <target state="new">以编程方式访问 HDInsight 中 Hadoop 群集上的应用程序日志。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>在基于 Windows 的 HDInsight 上访问 YARN 应用程序日志</source>
          <target state="new">在基于 Windows 的 HDInsight 上访问 YARN 应用程序日志</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>本主题说明如何访问 Azure HDInsight 中的 Hadoop 群集上已完成的 YARN (Yet Another Resource Negotiator) 应用程序的日志</source>
          <target state="new">本主题说明如何访问 Azure HDInsight 中的 Hadoop 群集上已完成的 YARN (Yet Another Resource Negotiator) 应用程序的日志</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>先决条件</source>
          <target state="new">先决条件</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>基于 Windows 的 HDInsight 群集。请参阅<bpt id="p1">[</bpt>在 HDInsight 中创建基于 Windows 的 Hadoop 群集<ept id="p1">](/documentation/articles/hdinsight-provision-clusters-v1)</ept>。</source>
          <target state="new">基于 Windows 的 HDInsight 群集。请参阅<bpt id="p1">[</bpt>在 HDInsight 中创建基于 Windows 的 Hadoop 群集<ept id="p1">](/documentation/articles/hdinsight-provision-clusters-v1)</ept>。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>YARN Timeline Server</source>
          <target state="new">YARN Timeline Server</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a href="http://hadoop.apache.org/docs/r2.4.0/hadoop-yarn/hadoop-yarn-site/TimelineServer.html" target="_blank"&gt;</ph>YARN Timeline Server<ph id="ph2">&lt;/a&gt;</ph> 通过两个不同的接口提供已完成之应用程序的相关泛型信息，以及架构特定应用程序信息。具体而言：</source>
          <target state="new"><ph id="ph1">&lt;a href="http://hadoop.apache.org/docs/r2.4.0/hadoop-yarn/hadoop-yarn-site/TimelineServer.html" target="_blank"&gt;</ph>YARN Timeline Server<ph id="ph2">&lt;/a&gt;</ph> 通过两个不同的接口提供已完成之应用程序的相关泛型信息，以及架构特定应用程序信息。具体而言：</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>存储及检索 HDInsight 群集上泛型应用程序信息的功能已在版本 3.1.1.374 或更新版本上启用。</source>
          <target state="new">存储及检索 HDInsight 群集上泛型应用程序信息的功能已在版本 3.1.1.374 或更新版本上启用。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Timeline Server 的架构特定应用程序信息组件当前在 HDInsight 群集上并未提供。</source>
          <target state="new">Timeline Server 的架构特定应用程序信息组件当前在 HDInsight 群集上并未提供。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>应用程序的相关泛型信息包含以下类型的数据：</source>
          <target state="new">应用程序的相关泛型信息包含以下类型的数据：</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>应用程序 ID（应用程序的唯一标识符）</source>
          <target state="new">应用程序 ID（应用程序的唯一标识符）</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>启动应用程序的用户</source>
          <target state="new">启动应用程序的用户</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>为完成应用程序而进行的尝试的相关信息</source>
          <target state="new">为完成应用程序而进行的尝试的相关信息</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>任何给定应用程序尝试所用的容器</source>
          <target state="new">任何给定应用程序尝试所用的容器</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>在 HDInsight 群集上，由 Azure 资源管理员将这项信息存储到默认存储帐户的默认容器中的历史记录存储中。可以通过 REST API 检索有关已完成的应用程序的此类泛型数据：</source>
          <target state="new">在 HDInsight 群集上，由 Azure 资源管理员将这项信息存储到默认存储帐户的默认容器中的历史记录存储中。可以通过 REST API 检索有关已完成的应用程序的此类泛型数据：</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="YARNAppsAndLogs"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> YARN 应用程序和日志</source>
          <target state="new"><ph id="ph1">&lt;a name="YARNAppsAndLogs"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> YARN 应用程序和日志</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>YARN 通过将资源管理与应用程序计划/监视相分离，来支持多种编程模型（MapReduce 就是其中之一）。这是通过全局 <bpt id="p1">*</bpt>ResourceManager<ept id="p1">*</ept> (RM)、按辅助节点 <bpt id="p2">*</bpt>NodeManagers<ept id="p2">*</ept> (NM) 和按应用程序 <bpt id="p3">*</bpt>ApplicationMasters<ept id="p3">*</ept> (AM) 来实现的。按应用程序 AM 与 RM 协商用于运行应用程序的资源（CPU、内存、磁盘、网络）。RM 与 NM 合作来授予这些资源（以 <bpt id="p4">*</bpt>容器<ept id="p4">*</ept> 的形式授予）。AM 负责跟踪 RM 分配给它的容器的进度。根据应用程序的性质，一个应用程序可能需要多个容器。</source>
          <target state="new">YARN 通过将资源管理与应用程序计划/监视相分离，来支持多种编程模型（MapReduce 就是其中之一）。这是通过全局 <bpt id="p1">*</bpt>ResourceManager<ept id="p1">*</ept> (RM)、按辅助节点 <bpt id="p2">*</bpt>NodeManagers<ept id="p2">*</ept> (NM) 和按应用程序 <bpt id="p3">*</bpt>ApplicationMasters<ept id="p3">*</ept> (AM) 来实现的。按应用程序 AM 与 RM 协商用于运行应用程序的资源（CPU、内存、磁盘、网络）。RM 与 NM 合作来授予这些资源（以 <bpt id="p4">*</bpt>容器<ept id="p4">*</ept> 的形式授予）。AM 负责跟踪 RM 分配给它的容器的进度。根据应用程序的性质，一个应用程序可能需要多个容器。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>此外，每个应用程序可能包含多个 <bpt id="p1">*</bpt>应用程序尝试<ept id="p1">*</ept> ，为了在应用程序崩溃时，或因 AM 与 RM 之间通信中断时，完成应用程序。因此，容器是授予应用程序的特定尝试。在某种意义上，容器提供 YARN 应用程序所运行的基本工作单位的内容，而在容器的上下文中完成的所有工作都在分配给该容器的单个辅助节点上运行。请参阅 <bpt id="p2">[</bpt>YARN 的概念<ept id="p2">][YARN-concepts]</ept>，以获取更多参考信息。</source>
          <target state="new">此外，每个应用程序可能包含多个 <bpt id="p1">*</bpt>应用程序尝试<ept id="p1">*</ept> ，为了在应用程序崩溃时，或因 AM 与 RM 之间通信中断时，完成应用程序。因此，容器是授予应用程序的特定尝试。在某种意义上，容器提供 YARN 应用程序所运行的基本工作单位的内容，而在容器的上下文中完成的所有工作都在分配给该容器的单个辅助节点上运行。请参阅 <bpt id="p2">[</bpt>YARN 的概念<ept id="p2">][YARN-concepts]</ept>，以获取更多参考信息。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>应用程序日志（和关联的容器日志）在对有问题的 Hadoop 应用程序进行调试上相当重要。YARN 以<bpt id="p1">[</bpt>日志聚合<ept id="p1">][log-aggregation]</ept>功能提供一个良好的框架，以收集、聚合及存储应用程序日志。日志聚合功能让访问应用程序日志更具确定性，因为它会聚合辅助节点上所有容器的日志，并在应用程序完成之后，将它们按每个辅助节点一个聚合日志的方式存储在默认文件系统上。应用程序可能使用数百或数千个容器，但在单个辅助节点上运行的所有容器的日志将一律聚合成单个文件，也就是为应用程序所用的每个辅助节点生成一个日志。默认情况下，日志聚合已在 HDInsight 群集（3.0 和更高版本）上启用，在群集的默认容器中，可以找到聚合的日志，位置如下：</source>
          <target state="new">应用程序日志（和关联的容器日志）在对有问题的 Hadoop 应用程序进行调试上相当重要。YARN 以<bpt id="p1">[</bpt>日志聚合<ept id="p1">][log-aggregation]</ept>功能提供一个良好的框架，以收集、聚合及存储应用程序日志。日志聚合功能让访问应用程序日志更具确定性，因为它会聚合辅助节点上所有容器的日志，并在应用程序完成之后，将它们按每个辅助节点一个聚合日志的方式存储在默认文件系统上。应用程序可能使用数百或数千个容器，但在单个辅助节点上运行的所有容器的日志将一律聚合成单个文件，也就是为应用程序所用的每个辅助节点生成一个日志。默认情况下，日志聚合已在 HDInsight 群集（3.0 和更高版本）上启用，在群集的默认容器中，可以找到聚合的日志，位置如下：</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>在该位置中， <bpt id="p1">*</bpt>user<ept id="p1">*</ept> 是启动应用程序的用户名， <bpt id="p2">*</bpt>applicationId<ept id="p2">*</ept> 是 YARN RM 分配的应用程序唯一标识符。</source>
          <target state="new">在该位置中， <bpt id="p1">*</bpt>user<ept id="p1">*</ept> 是启动应用程序的用户名， <bpt id="p2">*</bpt>applicationId<ept id="p2">*</ept> 是 YARN RM 分配的应用程序唯一标识符。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>你无法直接阅读聚合的日志，因为它们是以 <bpt id="p1">[</bpt>TFile<ept id="p1">][T-file]</ept>（由容器编制索引的<bpt id="p2">[</bpt>二进制格式<ept id="p2">][binary-format]</ept>）编写的。YARN 提供 CLI 工具，可针对你感兴趣的应用程序或容器，将这些日志转储成纯文本。你可以直接在群集节点上（通过 RDP 连接到节点之后）运行以下 YARN 命令之一，以纯文本格式查看这些日志：</source>
          <target state="new">你无法直接阅读聚合的日志，因为它们是以 <bpt id="p1">[</bpt>TFile<ept id="p1">][T-file]</ept>（由容器编制索引的<bpt id="p2">[</bpt>二进制格式<ept id="p2">][binary-format]</ept>）编写的。YARN 提供 CLI 工具，可针对你感兴趣的应用程序或容器，将这些日志转储成纯文本。你可以直接在群集节点上（通过 RDP 连接到节点之后）运行以下 YARN 命令之一，以纯文本格式查看这些日志：</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>下一部分说明如何以编程方式访问应用程序或容器特定的日志，而无需通过 RDP 连接到你的 HDInsight 群集。</source>
          <target state="new">下一部分说明如何以编程方式访问应用程序或容器特定的日志，而无需通过 RDP 连接到你的 HDInsight 群集。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="enumerate-and-download"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>以编程方式枚举应用程序和下载日志</source>
          <target state="new"><ph id="ph1">&lt;a name="enumerate-and-download"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>以编程方式枚举应用程序和下载日志</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>若要使用以下代码示例，你必须下载最新版本的 HDInsight .NET SDK，以满足上述先决条件。请参阅相应位置提供的说明。</source>
          <target state="new">若要使用以下代码示例，你必须下载最新版本的 HDInsight .NET SDK，以满足上述先决条件。请参阅相应位置提供的说明。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>以下代码演示了如何使用新 API 来枚举应用程序，以及下载已完成应用程序的日志。</source>
          <target state="new">以下代码演示了如何使用新 API 来枚举应用程序，以及下载已完成应用程序的日志。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> 以下 API 只能针对版本为 3.1.1.374 或更高的“运行中”Hadoop 群集执行。添加以下指令：</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> 以下 API 只能针对版本为 3.1.1.374 或更高的“运行中”Hadoop 群集执行。添加以下指令：</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>这些指令引用以下代码中新定义的 API。以下代码段将在订阅上的“运行中”群集上创建一个应用程序历史记录客户端。</source>
          <target state="new">这些指令引用以下代码中新定义的 API。以下代码段将在订阅上的“运行中”群集上创建一个应用程序历史记录客户端。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>现在，你可以使用应用程序历史记录客户端来列出已完成的应用程序，根据条件筛选应用程序，以及下载相关的应用程序日志。以下代码段演示了如何以编程方式执行此操作。</source>
          <target state="new">现在，你可以使用应用程序历史记录客户端来列出已完成的应用程序，根据条件筛选应用程序，以及下载相关的应用程序日志。以下代码段演示了如何以编程方式执行此操作。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>上述代码使用应用程序历史记录客户端来列出/查找所需的应用程序，然后将这些应用程序的日志下载到本地文件夹。</source>
          <target state="new">上述代码使用应用程序历史记录客户端来列出/查找所需的应用程序，然后将这些应用程序的日志下载到本地文件夹。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>或者，也可以使用以下代码段针对已知其应用程序 ID 的应用程序来下载日志。应用程序 ID 是 RM 分配给应用程序的全局唯一标识符。其构建方式是使用 RM 的开始时间，加上提交给它的应用程序的单调递增计数器。应用程序 ID 格式为“application\_&amp;lt;RM-start-time&amp;gt;\_&amp;lt;Counter&amp;gt;”。请注意，应用程序 ID 与作业 ID 完全不同。作业 ID 是特定于 MapReduce 框架的概念，而应用程序 ID 是不区分框架的 YARN 概念。在 YARN 中，作业 ID 标识特定的 MapReduce 作业，此作业由提交给 RM 的 MapReduce 应用程序的 AM 处理。</source>
          <target state="new">或者，也可以使用以下代码段针对已知其应用程序 ID 的应用程序来下载日志。应用程序 ID 是 RM 分配给应用程序的全局唯一标识符。其构建方式是使用 RM 的开始时间，加上提交给它的应用程序的单调递增计数器。应用程序 ID 格式为“application\_&amp;lt;RM-start-time&amp;gt;\_&amp;lt;Counter&amp;gt;”。请注意，应用程序 ID 与作业 ID 完全不同。作业 ID 是特定于 MapReduce 框架的概念，而应用程序 ID 是不区分框架的 YARN 概念。在 YARN 中，作业 ID 标识特定的 MapReduce 作业，此作业由提交给 RM 的 MapReduce 应用程序的 AM 处理。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>如果需要，你也可以下载应用程序使用的每个容器（或任何特定容器）的日志，如下所示。</source>
          <target state="new">如果需要，你也可以下载应用程序使用的每个容器（或任何特定容器）的日志，如下所示。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>