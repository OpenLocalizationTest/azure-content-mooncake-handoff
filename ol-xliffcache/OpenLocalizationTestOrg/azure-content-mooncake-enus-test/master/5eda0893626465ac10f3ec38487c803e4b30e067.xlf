<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5eda0893626465ac10f3ec38487c803e4b30e067</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure Redis Cache 示例</source>
          <target state="new">Azure Redis Cache 示例</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何使用 Azure Redis Cache</source>
          <target state="new">了解如何使用 Azure Redis Cache</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Azure Redis Cache 示例</source>
          <target state="new">Azure Redis Cache 示例</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>本主题提供了 Azure Redis Cache 示例的列表，涵盖了诸如连接到缓存、从缓存中读取数据以及向其中写入数据、以及使用 ASP.NET Redis Cache 提供程序之类的方案。有些示例是可下载的项目，有些示例提供了分步指南并包含代码片段但没有链接到可下载的项目。</source>
          <target state="new">本主题提供了 Azure Redis Cache 示例的列表，涵盖了诸如连接到缓存、从缓存中读取数据以及向其中写入数据、以及使用 ASP.NET Redis Cache 提供程序之类的方案。有些示例是可下载的项目，有些示例提供了分步指南并包含代码片段但没有链接到可下载的项目。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Hello world 示例</source>
          <target state="new">Hello world 示例</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>本部分中的示例显示了使用各种语言和 Redis 客户端连接到 Azure Redis Cache 实例、从缓存中读取数据以及向其中写入数据方面的基础知识。</source>
          <target state="new">本部分中的示例显示了使用各种语言和 Redis 客户端连接到 Azure Redis Cache 实例、从缓存中读取数据以及向其中写入数据方面的基础知识。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hello world<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/HelloWorld)</ept> 示例展示了如何使用 <bpt id="p2">[</bpt>StackExchange.Redis<ept id="p2">](https://github.com/StackExchange/StackExchange.Redis)</ept> .NET 客户端执行不同的缓存操作。</source>
          <target state="new"><bpt id="p1">[</bpt>Hello world<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/HelloWorld)</ept> 示例展示了如何使用 <bpt id="p2">[</bpt>StackExchange.Redis<ept id="p2">](https://github.com/StackExchange/StackExchange.Redis)</ept> .NET 客户端执行不同的缓存操作。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>此示例演示如何：</source>
          <target state="new">此示例演示如何：</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>使用不同的连接选项</source>
          <target state="new">使用不同的连接选项</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>使用同步和异步操作与缓存相互读取和写入对象</source>
          <target state="new">使用同步和异步操作与缓存相互读取和写入对象</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>使用 Redis MGET/MSET 命令返回指定键的值</source>
          <target state="new">使用 Redis MGET/MSET 命令返回指定键的值</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>执行 Redis 事务操作</source>
          <target state="new">执行 Redis 事务操作</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>处理 Redis 列表和排序集</source>
          <target state="new">处理 Redis 列表和排序集</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>使用 JsonConvert 序列化程序存储.NET 对象</source>
          <target state="new">使用 JsonConvert 序列化程序存储.NET 对象</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>使用 Redis 集实现标记</source>
          <target state="new">使用 Redis 集实现标记</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>有关详细信息，请参阅 github 上的 <bpt id="p1">[</bpt>StackExchange.Redis<ept id="p1">](https://github.com/StackExchange/StackExchange.Redis)</ept>；有关更多的使用方案，请参阅 <bpt id="p2">[</bpt>StackExchange.Redis.Tests<ept id="p2">](https://github.com/StackExchange/StackExchange.Redis/tree/master/StackExchange.Redis.Tests)</ept> 单位测试。</source>
          <target state="new">有关详细信息，请参阅 github 上的 <bpt id="p1">[</bpt>StackExchange.Redis<ept id="p1">](https://github.com/StackExchange/StackExchange.Redis)</ept>；有关更多的使用方案，请参阅 <bpt id="p2">[</bpt>StackExchange.Redis.Tests<ept id="p2">](https://github.com/StackExchange/StackExchange.Redis/tree/master/StackExchange.Redis.Tests)</ept> 单位测试。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>如何将 Azure Redis 缓存与 Python 配合使用<ept id="p1">](/documentation/articles/cache-python-get-started)</ept>展示了如何使用 Python 和 <bpt id="p2">[</bpt>redis-py<ept id="p2">](https://github.com/andymccurdy/redis-py)</ept> 客户端开始使用 Azure Redis 缓存。</source>
          <target state="new"><bpt id="p1">[</bpt>如何将 Azure Redis 缓存与 Python 配合使用<ept id="p1">](/documentation/articles/cache-python-get-started)</ept>展示了如何使用 Python 和 <bpt id="p2">[</bpt>redis-py<ept id="p2">](https://github.com/andymccurdy/redis-py)</ept> 客户端开始使用 Azure Redis 缓存。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>在缓存中处理 .NET 对象<ept id="p1">](/documentation/articles/cache-dotnet-how-to-use-azure-redis-cache#working-with-caches)</ept>演示了如何对 .NET 对象进行序列化以便可以将其写入到 Azure Redis 缓存实例以及从中进行读取。</source>
          <target state="new"><bpt id="p1">[</bpt>在缓存中处理 .NET 对象<ept id="p1">](/documentation/articles/cache-dotnet-how-to-use-azure-redis-cache#working-with-caches)</ept>演示了如何对 .NET 对象进行序列化以便可以将其写入到 Azure Redis 缓存实例以及从中进行读取。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>将 Redis Cache 用作 ASP.NET SignalR 的扩展基架</source>
          <target state="new">将 Redis Cache 用作 ASP.NET SignalR 的扩展基架</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>将 Redis 缓存用作 ASP.NET SignalR 的扩展基架<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/RedisAsSignalRBackplane)</ept>示例演示了如何将 Azure Redis 缓存用作 SignalR 基架。有关基架的更多信息，请参阅<bpt id="p2">[</bpt>采用 Redis 的 SignalR 扩展<ept id="p2">](http://www.asp.net/signalr/overview/performance/scaleout-with-redis)</ept>。</source>
          <target state="new"><bpt id="p1">[</bpt>将 Redis 缓存用作 ASP.NET SignalR 的扩展基架<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/RedisAsSignalRBackplane)</ept>示例演示了如何将 Azure Redis 缓存用作 SignalR 基架。有关基架的更多信息，请参阅<bpt id="p2">[</bpt>采用 Redis 的 SignalR 扩展<ept id="p2">](http://www.asp.net/signalr/overview/performance/scaleout-with-redis)</ept>。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Redis Cache 客户查询示例</source>
          <target state="new">Redis Cache 客户查询示例</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>此示例对从缓存访问数据与从持久存储访问数据时的性能进行了比较。此示例有两个项目。</source>
          <target state="new">此示例对从缓存访问数据与从持久存储访问数据时的性能进行了比较。此示例有两个项目。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>展示 Redis Cache 如何通过对数据进行缓存提高性能</source>
          <target state="new">展示 Redis Cache 如何通过对数据进行缓存提高性能</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>为进行展示创立数据库和缓存</source>
          <target state="new">为进行展示创立数据库和缓存</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>ASP.NET 会话状态和输出缓存</source>
          <target state="new">ASP.NET 会话状态和输出缓存</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>使用 Azure Redis 缓存存储 ASP.NET SessionState 和 OutputCache<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/SessionState_OutputCaching)</ept> 示例演示了如何使用 Azure Redis 缓存通过为 Redis 使用 SessionState 和 OutputCache 提供程序来存储 ASP.NET 会话和输出缓存。</source>
          <target state="new"><bpt id="p1">[</bpt>使用 Azure Redis 缓存存储 ASP.NET SessionState 和 OutputCache<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/SessionState_OutputCaching)</ept> 示例演示了如何使用 Azure Redis 缓存通过为 Redis 使用 SessionState 和 OutputCache 提供程序来存储 ASP.NET 会话和输出缓存。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>使用 MAML 管理 Azure Redis Cache</source>
          <target state="new">使用 MAML 管理 Azure Redis Cache</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>使用 Azure Management Libraries 管理 Azure Redis 缓存<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/ManageCacheUsingMAML)</ept>示例展示了如何使用 Azure Management Libraries 来管理（创建/更新/删除）你的缓存。</source>
          <target state="new"><bpt id="p1">[</bpt>使用 Azure Management Libraries 管理 Azure Redis 缓存<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/ManageCacheUsingMAML)</ept>示例展示了如何使用 Azure Management Libraries 来管理（创建/更新/删除）你的缓存。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>自定义监视示例</source>
          <target state="new">自定义监视示例</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>访问 Redis 缓存监视数据<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/CustomMonitoring)</ept>示例演示了如何访问你的 Azure Redis 缓存的监视数据。</source>
          <target state="new"><bpt id="p1">[</bpt>访问 Redis 缓存监视数据<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/CustomMonitoring)</ept>示例演示了如何访问你的 Azure Redis 缓存的监视数据。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>使用 PHP 和 Redis 编写的 Twitter 式克隆</source>
          <target state="new">使用 PHP 和 Redis 编写的 Twitter 式克隆</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Retwis<ept id="p1">](https://github.com/SyntaxC4-MSFT/retwis)</ept> 示例是 Redis Hello World。它是最小的 Twitter 样式的社交网络克隆使用 Redis 和 PHP 编写使用 <bpt id="p2">[</bpt>Predis<ept id="p2">](https://github.com/nrk/predis)</ept> 客户端。源代码旨在是非常简单，并且在同一时间以显示其他 Redis 数据结构。</source>
          <target state="new"><bpt id="p1">[</bpt>Retwis<ept id="p1">](https://github.com/SyntaxC4-MSFT/retwis)</ept> 示例是 Redis Hello World。它是最小的 Twitter 样式的社交网络克隆使用 Redis 和 PHP 编写使用 <bpt id="p2">[</bpt>Predis<ept id="p2">](https://github.com/nrk/predis)</ept> 客户端。源代码旨在是非常简单，并且在同一时间以显示其他 Redis 数据结构。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>带宽监视器</source>
          <target state="new">带宽监视器</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>带宽监视器<ept id="p1">](https://github.com/JonCole/SampleCode/tree/master/BandWidthMonitor)</ept>示例允许你监视客户端上使用的带宽。若要测量带宽、请在缓存客户端计算机上运行该示例，对缓存执行调用，然后观察带宽监视器示例报告的带宽。</source>
          <target state="new"><bpt id="p1">[</bpt>带宽监视器<ept id="p1">](https://github.com/JonCole/SampleCode/tree/master/BandWidthMonitor)</ept>示例允许你监视客户端上使用的带宽。若要测量带宽、请在缓存客户端计算机上运行该示例，对缓存执行调用，然后观察带宽监视器示例报告的带宽。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>