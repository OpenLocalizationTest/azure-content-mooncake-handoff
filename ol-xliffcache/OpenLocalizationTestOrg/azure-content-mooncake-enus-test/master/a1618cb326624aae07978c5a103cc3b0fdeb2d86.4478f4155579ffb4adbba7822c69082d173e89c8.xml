{"nodes":[{"content":"什么是 Azure WebJobs SDK","pos":[28,49]},{"content":"Azure WebJobs SDK 简介。","pos":[69,90]},{"content":"介绍 SDK 的定义，它适用的典型方案，以及代码示例。","pos":[90,117]},{"content":"什么是 Azure WebJobs SDK","pos":[359,380]},{"pos":[406,408],"content":"概述"},{"content":"本文说明 WebJobs SDK 是什么、了解部分适用的典型方案，以及提供在代码中的使用方式概述。","pos":[410,459]},{"content":"<bpt id=\"p1\">[</bpt>WebJobs<ept id=\"p1\">](/documentation/articles/websites-webjobs-resources)</ept> 是一项 Azure Web 应用功能，可让你在与 Web、API 应用相同的上下文中运行程序或脚本。<bpt id=\"p2\">[</bpt>WebJobs SDK<ept id=\"p2\">](/documentation/articles/websites-webjobs-resources)</ept> 的用途是简化针对 Web 作业可以执行的常见任务（例如，图像处理、队列处理、RSS 聚合、文件维护和发送电子邮件）编写的代码。","pos":[461,702],"source":"[WebJobs](/documentation/articles/websites-webjobs-resources) 是一项 Azure Web 应用功能，可让你在与 Web、API 应用相同的上下文中运行程序或脚本。[WebJobs SDK](/documentation/articles/websites-webjobs-resources) 的用途是简化针对 Web 作业可以执行的常见任务（例如，图像处理、队列处理、RSS 聚合、文件维护和发送电子邮件）编写的代码。"},{"content":"WebJobs SDK 中的内置功能使用 Azure 存储空间和 Service Bus，用于计划任务和处理错误，以及用于许多其他常见方案。","pos":[702,772]},{"content":"此外，它还设计为可扩展并且有<bpt id=\"p1\">[</bpt>用于扩展的开源存储库<ept id=\"p1\">](https://github.com/Azure/azure-webjobs-sdk-extensions/wiki/Binding-Extensions-Overview)</ept>。","pos":[772,887],"source":"此外，它还设计为可扩展并且有[用于扩展的开源存储库](https://github.com/Azure/azure-webjobs-sdk-extensions/wiki/Binding-Extensions-Overview)。"},{"content":"WebJobs SDK 包括以下组件：","pos":[889,908]},{"content":"<bpt id=\"p1\">**</bpt>NuGet 程序包<ept id=\"p1\">**</ept>。","pos":[912,926],"source":"**NuGet 程序包**。"},{"content":"添加到 Visual Studio 控制台应用程序项目的 NuGet 包提供一个框架，你的代码可通过使用 WebJobs SDK 属性修饰方法来使用此框架。","pos":[926,1004]},{"content":"<bpt id=\"p1\">**</bpt>仪表板<ept id=\"p1\">**</ept>。","pos":[1010,1018],"source":"**仪表板**。"},{"content":"Azure Web 应用中包含 WebJobs SDK 部分，它可针对使用 NuGet 程序包的程序提供丰富的监视和诊断功能。","pos":[1018,1081]},{"content":"你无需编写代码就可以使用这些监视和诊断功能。","pos":[1081,1103]},{"pos":[1130,1132],"content":"方案"},{"content":"下面是 Azure WebJobs SDK 可帮助你轻松处理的部分典型方案：","pos":[1134,1172]},{"content":"图像处理或其他需要大量 CPU 的工作。","pos":[1176,1196]},{"content":"Web 应用的一项常见功能是上载图像或视频。","pos":[1197,1219]},{"content":"在许多时候，你想要在内容上载后处理该内容，但又不想在你执行此任务时让用户等候。","pos":[1219,1258]},{"content":"队列处理。","pos":[1262,1267]},{"content":"Web 前端与后端服务的一个常见通信方式是使用队列。","pos":[1267,1293]},{"content":"当 Web 应用需要完成工作时，它会将消息推送到队列。","pos":[1293,1320]},{"content":"后端服务会从队列提取消息，并完成工作。","pos":[1320,1339]},{"content":"你可以在图像处理中使用队列：例如，在用户上载多个文件之后，文件名会被放置在队列消息中，由后端选取队列消息进行处理。","pos":[1339,1396]},{"content":"或者，你可以使用队列来改进 Web 应用响应能力。","pos":[1396,1421]},{"content":"例如，无需将目录直接写入 SQL 数据库，而可以写入队列并告知用户已完成，然后由后端服务处理高延迟的关系型数据库工作。","pos":[1421,1480]},{"content":"有关使用图像处理的队列处理示例，请参阅 <bpt id=\"p1\">[</bpt>WebJobs SDK 入门教程<ept id=\"p1\">](/documentation/articles/websites-dotnet-webjobs-sdk-get-started)</ept>。","pos":[1480,1584],"source":"有关使用图像处理的队列处理示例，请参阅 [WebJobs SDK 入门教程](/documentation/articles/websites-dotnet-webjobs-sdk-get-started)。"},{"content":"RSS 聚合。","pos":[1588,1595]},{"content":"如果你有维护 RSS 源列表的 Web 应用，你可以在后台进程中提取源中的所有文章。","pos":[1595,1637]},{"content":"文件维护，例如聚合或清理日志文件。","pos":[1641,1658]},{"content":"你可能拥有由数个 Web 应用在不同的时间所创建的日志文件，你想要结合这些文件以便执行分析工作。","pos":[1658,1706]},{"content":"或者你想要计划每周运行的任务，来清理旧的日志文件。","pos":[1706,1731]},{"content":"输入 Azure 表。","pos":[1735,1746]},{"content":"你可能会有想要分析的存储文件和 Blob，并想要将数据存储在表中。","pos":[1746,1779]},{"content":"入口函数可能会写入许多行（在某些情况下可能有上百万行），而 WebJobs SDK 让你可以轻松地实现此功能。","pos":[1779,1834]},{"content":"SDK 还提供进度指示器的实时监视，例如表中的写入行数。","pos":[1834,1862]},{"pos":[1866,1986],"content":"您想要在后台线程中执行的其他长时间运行任务，例如<bpt id=\"p1\">[</bpt>发送电子邮件<ept id=\"p1\">](https://github.com/victorhurdugaci/AzureWebJobsSamples/tree/master/SendEmailOnFailure)</ept>。","source":"您想要在后台线程中执行的其他长时间运行任务，例如[发送电子邮件](https://github.com/victorhurdugaci/AzureWebJobsSamples/tree/master/SendEmailOnFailure)。"},{"content":"要按计划运行的任何任务，如每晚执行备份操作。","pos":[1990,2012]},{"content":"在许多情况下，你可能想要扩展 Web 应用以便它在多个 VM 上运行，这就需要同时运行多个 Web 作业。","pos":[2014,2067]},{"content":"在某些情况下，这可能导致相同的数据被处理多次，但如果使用 WebJobs SDK 的内置队列、Blob 和服务总线触发器，则不会造成问题。","pos":[2067,2136]},{"content":"SDK 可确保只会针对每个消息或 Blob 处理函数一次。","pos":[2136,2165]},{"content":"使用 WebJobs SDK 还可轻松处理常见的错误处理方案。","pos":[2167,2198]},{"content":"你可以设置警报以在函数失败时发送通知，还可以设置超时，以便在函数未在指定的时间限制内完成时自动取消函数。","pos":[2198,2250]},{"pos":[2272,2276],"content":"代码示例"},{"content":"使用 Azure 存储空间处理典型任务的代码十分简单。","pos":[2278,2305]},{"content":"在控制台应用程序的 <ph id=\"ph1\">`Main`</ph> 方法中创建一个 <ph id=\"ph2\">`JobHost`</ph> 对象，以协调对你编写的方法的调用。","pos":[2305,2357],"source":"在控制台应用程序的 `Main` 方法中创建一个 `JobHost` 对象，以协调对你编写的方法的调用。"},{"content":"WebJobs SDK 框架会根据方法中所用的 WebJobs SDK 属性，知道何时调用方法以及要使用什么参数值。","pos":[2357,2415]},{"content":"该 SDK 提供了 <bpt id=\"p1\">*</bpt>触发器<ept id=\"p1\">*</ept> ，用于指定哪些条件导致调用函数，并提供了 <bpt id=\"p2\">*</bpt>绑定器<ept id=\"p2\">*</ept> ，用于指定如何获取传入和传出方法参数的信息。","pos":[2415,2480],"source":"该 SDK 提供了 *触发器* ，用于指定哪些条件导致调用函数，并提供了 *绑定器* ，用于指定如何获取传入和传出方法参数的信息。"},{"content":"例如，<bpt id=\"p1\">[</bpt>QueueTrigger<ept id=\"p1\">](/documentation/articles/websites-dotnet-webjobs-sdk-storage-queues-how-to)</ept> 属性导致在队列中收到消息时调用函数，如果消息格式为字节数组或自定义类型的 JSON，该消息将自动反序列化。","pos":[2482,2628],"source":"例如，[QueueTrigger](/documentation/articles/websites-dotnet-webjobs-sdk-storage-queues-how-to) 属性导致在队列中收到消息时调用函数，如果消息格式为字节数组或自定义类型的 JSON，该消息将自动反序列化。"},{"content":"每次在 Azure 存储帐户中新建一个 blob 时，<bpt id=\"p1\">[</bpt>BlobTrigger<ept id=\"p1\">](/documentation/articles/websites-dotnet-webjobs-sdk-storage-blobs-how-to)</ept> 属性都会触发一个流程。","pos":[2628,2754],"source":"每次在 Azure 存储帐户中新建一个 blob 时，[BlobTrigger](/documentation/articles/websites-dotnet-webjobs-sdk-storage-blobs-how-to) 属性都会触发一个流程。"},{"content":"下面是个一个简单程序，它可用来轮询队列并为收到的每个队列消息创建 Blob：","pos":[2756,2794]},{"content":"对象是一组后台函数的容器。","pos":[3157,3170]},{"content":"对象可监视函数、观察触发函数的事件，并在发生触发事件时执行函数。","pos":[3180,3212]},{"content":"您可以调用 <ph id=\"ph1\">`JobHost`</ph> 方法，以指示您要在当前线程或后台线程上执行容器进程。","pos":[3212,3254],"source":"您可以调用 `JobHost` 方法，以指示您要在当前线程或后台线程上执行容器进程。"},{"content":"在此示例中，<ph id=\"ph1\">`RunAndBlock`</ph> 方法将在当前线程上持续运行该进程。","pos":[3254,3291],"source":"在此示例中，`RunAndBlock` 方法将在当前线程上持续运行该进程。"},{"content":"由于此示例中的 <ph id=\"ph1\">`ProcessQueueMessage`</ph> 方法具有 <ph id=\"ph2\">`QueueTrigger`</ph> 属性，接收新队列消息时便会触发该函数。","pos":[3293,3362],"source":"由于此示例中的 `ProcessQueueMessage` 方法具有 `QueueTrigger` 属性，接收新队列消息时便会触发该函数。"},{"content":"对象监视指定队列（在此示例中为“webjobsqueue”）上的新队列消息，查找到新队列消息时，此对象将调用 <ph id=\"ph1\">`ProcessQueueMessage`</ph>。","pos":[3372,3449],"source":" 对象监视指定队列（在此示例中为“webjobsqueue”）上的新队列消息，查找到新队列消息时，此对象将调用 `ProcessQueueMessage`。"},{"content":"属性将 <ph id=\"ph1\">`inputText`</ph> 参数绑定到队列消息的值。","pos":[3466,3494],"source":" 属性将 `inputText` 参数绑定到队列消息的值。"},{"content":"将 <ph id=\"ph1\">`TextWriter`</ph> 对象绑定到“containername”容器中名为“blobname”的 Blob。","pos":[3501,3558],"source":" 将 `TextWriter` 对象绑定到“containername”容器中名为“blobname”的 Blob。"},{"content":"然后，该函数使用这些参数将队列消息的值写入 Blob：","pos":[3722,3749]},{"content":"WebJobs SDK 的触发器和绑定器功能可大幅简化所需编写的代码。","pos":[3789,3824]},{"content":"处理队列、blob 或文件，或者启动计划的任务所需的低级代码由 WebJobs SDK 框架为你完成。","pos":[3824,3875]},{"content":"例如，该框架会创建尚不存在的队列、打开队列、读取队列消息并在处理完成后删除队列消息、创建尚不存在的 Blob 容器、写入 Blob，等等。","pos":[3875,3944]},{"pos":[3946,4036],"content":"下面的代码示例在一个 Web 作业中显示了各种触发器：<ph id=\"ph1\">`QueueTrigger`</ph>、<ph id=\"ph2\">`FileTrigger`</ph>、<ph id=\"ph3\">`WebHookTrigger`</ph> 和 <ph id=\"ph4\">`ErrorTrigger`</ph>。","source":"下面的代码示例在一个 Web 作业中显示了各种触发器：`QueueTrigger`、`FileTrigger`、`WebHookTrigger` 和 `ErrorTrigger`。"},{"pos":[5645,5647],"content":"计划"},{"content":"使用 <ph id=\"ph1\">`TimerTrigger`</ph> 属性可以触发要按计划运行的函数。","pos":[5649,5683],"source":"使用 `TimerTrigger` 属性可以触发要按计划运行的函数。"},{"content":"你可以通过 Azure 从整体上计划 Web 作业，也可以使用 WebJobs SDK <ph id=\"ph1\">`TimerTrigger`</ph> 计划 Web 作业的各个函数。","pos":[5683,5757],"source":"你可以通过 Azure 从整体上计划 Web 作业，也可以使用 WebJobs SDK `TimerTrigger` 计划 Web 作业的各个函数。"},{"content":"下面是代码示例。","pos":[5757,5765]},{"pos":[6035,6226],"content":"有关更多示例代码，请参阅 GitHub.com 上 azure-webjobs-sdk-extensions 存储库中的 <bpt id=\"p1\">[</bpt>TimerSamples.cs<ept id=\"p1\">](https://github.com/Azure/azure-webjobs-sdk-extensions/blob/master/src/ExtensionsSample/Samples/TimerSamples.cs)</ept>。","source":"有关更多示例代码，请参阅 GitHub.com 上 azure-webjobs-sdk-extensions 存储库中的 [TimerSamples.cs](https://github.com/Azure/azure-webjobs-sdk-extensions/blob/master/src/ExtensionsSample/Samples/TimerSamples.cs)。"},{"content":"可扩展性","pos":[6231,6235]},{"content":"你可以不局限于内置功能 - WebJobs SDK 允许你编写自定义触发器和绑定器。","pos":[6237,6279]},{"content":"例如，你可以为缓存事件和定期计划编写触发器。<bpt id=\"p1\">[</bpt>开源存储库<ept id=\"p1\">](https://github.com/Azure/azure-webjobs-sdk-extensions)</ept>包含<bpt id=\"p2\">[</bpt>有关 WebJobs SDK 可扩展性的详细指南<ept id=\"p2\">](https://github.com/Azure/azure-webjobs-sdk-extensions/wiki/Binding-Extensions-Overview)</ept>和示例代码，可帮助你开始编写你自己的触发器和绑定器。","pos":[6279,6505],"source":"例如，你可以为缓存事件和定期计划编写触发器。[开源存储库](https://github.com/Azure/azure-webjobs-sdk-extensions)包含[有关 WebJobs SDK 可扩展性的详细指南](https://github.com/Azure/azure-webjobs-sdk-extensions/wiki/Binding-Extensions-Overview)和示例代码，可帮助你开始编写你自己的触发器和绑定器。"},{"pos":[6533,6559],"content":"在 WebJobs 外部使用 WebJobs SDK"},{"content":"使用 WebJobs SDK 的程序是指可在任意位置运行的标准控制台应用程序 - 它不一定要以 Web 作业的形式运行。","pos":[6561,6621]},{"content":"你可以在开发计算机上本地测试程序，而在生产环境中，可以在云服务辅助角色或 Windows 服务中运行程序（如果你偏好其中一个环境）。","pos":[6621,6687]},{"pos":[6714,6719],"content":"仪表板功能"},{"content":"即使你不使用 WebJobs SDK 触发器或绑定器，WebJobs SDK 也提供了几个优点：","pos":[6721,6769]},{"content":"可以从仪表板调用函数。","pos":[6773,6784]},{"content":"可以从仪表板重放函数。","pos":[6787,6798]},{"pos":[6801,6931],"content":"您可以在仪表板中查看日志，链接到特定的 WebJob（使用 Console.Out、Console.Error、Trace 等编写的应用程序日志）或链接到生成它们的特定函数调用（使用此 SDK 传递给函数作为参数的 <ph id=\"ph1\">`TextWriter`</ph> 对象编写的日志）。","source":"您可以在仪表板中查看日志，链接到特定的 WebJob（使用 Console.Out、Console.Error、Trace 等编写的应用程序日志）或链接到生成它们的特定函数调用（使用此 SDK 传递给函数作为参数的 `TextWriter` 对象编写的日志）。"},{"pos":[6934,7125],"content":"有关详细信息，请参阅<bpt id=\"p1\">[</bpt>如何手动调用函数<ept id=\"p1\">](/documentation/articles/websites-dotnet-webjobs-sdk-storage-queues-how-to#manual)</ept>和<bpt id=\"p2\">[</bpt>如何编写日志<ept id=\"p2\">](/documentation/articles/websites-dotnet-webjobs-sdk-storage-queues-how-to#logs)</ept>","source":"有关详细信息，请参阅[如何手动调用函数](/documentation/articles/websites-dotnet-webjobs-sdk-storage-queues-how-to#manual)和[如何编写日志](/documentation/articles/websites-dotnet-webjobs-sdk-storage-queues-how-to#logs)"},{"pos":[7152,7156],"content":"后续步骤"},{"pos":[7158,7256],"content":"有关 WebJobs SDK 的详细信息，请参阅<bpt id=\"p1\">[</bpt>Azure WebJobs 推荐资源<ept id=\"p1\">](/documentation/articles/websites-webjobs-resources/)</ept>。","source":"有关 WebJobs SDK 的详细信息，请参阅[Azure WebJobs 推荐资源](/documentation/articles/websites-webjobs-resources/)。"},{"pos":[7258,7357],"content":"有关 WebJobs SDK 的最新增强功能的信息，请参阅<bpt id=\"p1\">[</bpt>发行说明<ept id=\"p1\">](https://github.com/Azure/azure-webjobs-sdk/wiki/Release-Notes)</ept>。","source":"有关 WebJobs SDK 的最新增强功能的信息，请参阅[发行说明](https://github.com/Azure/azure-webjobs-sdk/wiki/Release-Notes)。"}],"content":"<properties \n    pageTitle=\"什么是 Azure WebJobs SDK\" \n    description=\"Azure WebJobs SDK 简介。介绍 SDK 的定义，它适用的典型方案，以及代码示例。\" \n    services=\"app-service\\web, storage\" \n    documentationCenter=\".net\" \n    authors=\"tdykstra\" \n    manager=\"wpickett\" \n    editor=\"jimbe\"/>\n\n<tags\n    ms.service=\"app-service-web\"\n    ms.date=\"12/14/2015\"\n    wacn.date=\"02/17/2016\"/>\n\n# 什么是 Azure WebJobs SDK\n\n## <a id=\"overview\"></a>概述\n\n本文说明 WebJobs SDK 是什么、了解部分适用的典型方案，以及提供在代码中的使用方式概述。\n\n[WebJobs](/documentation/articles/websites-webjobs-resources) 是一项 Azure Web 应用功能，可让你在与 Web、API 应用相同的上下文中运行程序或脚本。[WebJobs SDK](/documentation/articles/websites-webjobs-resources) 的用途是简化针对 Web 作业可以执行的常见任务（例如，图像处理、队列处理、RSS 聚合、文件维护和发送电子邮件）编写的代码。WebJobs SDK 中的内置功能使用 Azure 存储空间和 Service Bus，用于计划任务和处理错误，以及用于许多其他常见方案。此外，它还设计为可扩展并且有[用于扩展的开源存储库](https://github.com/Azure/azure-webjobs-sdk-extensions/wiki/Binding-Extensions-Overview)。\n\nWebJobs SDK 包括以下组件：\n\n* **NuGet 程序包**。添加到 Visual Studio 控制台应用程序项目的 NuGet 包提供一个框架，你的代码可通过使用 WebJobs SDK 属性修饰方法来使用此框架。\n  \n* **仪表板**。Azure Web 应用中包含 WebJobs SDK 部分，它可针对使用 NuGet 程序包的程序提供丰富的监视和诊断功能。你无需编写代码就可以使用这些监视和诊断功能。\n\n## <a id=\"scenarios\"></a>方案\n\n下面是 Azure WebJobs SDK 可帮助你轻松处理的部分典型方案：\n\n* 图像处理或其他需要大量 CPU 的工作。 Web 应用的一项常见功能是上载图像或视频。在许多时候，你想要在内容上载后处理该内容，但又不想在你执行此任务时让用户等候。\n\n* 队列处理。Web 前端与后端服务的一个常见通信方式是使用队列。当 Web 应用需要完成工作时，它会将消息推送到队列。后端服务会从队列提取消息，并完成工作。你可以在图像处理中使用队列：例如，在用户上载多个文件之后，文件名会被放置在队列消息中，由后端选取队列消息进行处理。或者，你可以使用队列来改进 Web 应用响应能力。例如，无需将目录直接写入 SQL 数据库，而可以写入队列并告知用户已完成，然后由后端服务处理高延迟的关系型数据库工作。有关使用图像处理的队列处理示例，请参阅 [WebJobs SDK 入门教程](/documentation/articles/websites-dotnet-webjobs-sdk-get-started)。\n\n* RSS 聚合。如果你有维护 RSS 源列表的 Web 应用，你可以在后台进程中提取源中的所有文章。\n\n* 文件维护，例如聚合或清理日志文件。你可能拥有由数个 Web 应用在不同的时间所创建的日志文件，你想要结合这些文件以便执行分析工作。或者你想要计划每周运行的任务，来清理旧的日志文件。\n\n* 输入 Azure 表。你可能会有想要分析的存储文件和 Blob，并想要将数据存储在表中。入口函数可能会写入许多行（在某些情况下可能有上百万行），而 WebJobs SDK 让你可以轻松地实现此功能。SDK 还提供进度指示器的实时监视，例如表中的写入行数。\n\n* 您想要在后台线程中执行的其他长时间运行任务，例如[发送电子邮件](https://github.com/victorhurdugaci/AzureWebJobsSamples/tree/master/SendEmailOnFailure)。\n\n* 要按计划运行的任何任务，如每晚执行备份操作。\n\n在许多情况下，你可能想要扩展 Web 应用以便它在多个 VM 上运行，这就需要同时运行多个 Web 作业。在某些情况下，这可能导致相同的数据被处理多次，但如果使用 WebJobs SDK 的内置队列、Blob 和服务总线触发器，则不会造成问题。SDK 可确保只会针对每个消息或 Blob 处理函数一次。\n\n使用 WebJobs SDK 还可轻松处理常见的错误处理方案。你可以设置警报以在函数失败时发送通知，还可以设置超时，以便在函数未在指定的时间限制内完成时自动取消函数。\n\n## <a id=\"code\"></a>代码示例\n\n使用 Azure 存储空间处理典型任务的代码十分简单。在控制台应用程序的 `Main` 方法中创建一个 `JobHost` 对象，以协调对你编写的方法的调用。WebJobs SDK 框架会根据方法中所用的 WebJobs SDK 属性，知道何时调用方法以及要使用什么参数值。该 SDK 提供了 *触发器* ，用于指定哪些条件导致调用函数，并提供了 *绑定器* ，用于指定如何获取传入和传出方法参数的信息。\n\n例如，[QueueTrigger](/documentation/articles/websites-dotnet-webjobs-sdk-storage-queues-how-to) 属性导致在队列中收到消息时调用函数，如果消息格式为字节数组或自定义类型的 JSON，该消息将自动反序列化。每次在 Azure 存储帐户中新建一个 blob 时，[BlobTrigger](/documentation/articles/websites-dotnet-webjobs-sdk-storage-blobs-how-to) 属性都会触发一个流程。\n\n下面是个一个简单程序，它可用来轮询队列并为收到的每个队列消息创建 Blob：\n\n        public static void Main()\n        {\n            JobHost host = new JobHost();\n            host.RunAndBlock();\n        }\n\n        public static void ProcessQueueMessage([QueueTrigger(\"webjobsqueue\")] string inputText, \n            [Blob(\"containername/blobname\")]TextWriter writer)\n        {\n            writer.WriteLine(inputText);\n        }\n\n`JobHost` 对象是一组后台函数的容器。`JobHost` 对象可监视函数、观察触发函数的事件，并在发生触发事件时执行函数。您可以调用 `JobHost` 方法，以指示您要在当前线程或后台线程上执行容器进程。在此示例中，`RunAndBlock` 方法将在当前线程上持续运行该进程。\n\n由于此示例中的 `ProcessQueueMessage` 方法具有 `QueueTrigger` 属性，接收新队列消息时便会触发该函数。`JobHost` 对象监视指定队列（在此示例中为“webjobsqueue”）上的新队列消息，查找到新队列消息时，此对象将调用 `ProcessQueueMessage`。\n\n`QueueTrigger` 属性将 `inputText` 参数绑定到队列消息的值。`Blob` 将 `TextWriter` 对象绑定到“containername”容器中名为“blobname”的 Blob。\n\n        public static void ProcessQueueMessage([QueueTrigger(\"webjobsqueue\")]] string inputText, \n            [Blob(\"containername/blobname\")]TextWriter writer)\n\n然后，该函数使用这些参数将队列消息的值写入 Blob：\n\n        writer.WriteLine(inputText);\n\nWebJobs SDK 的触发器和绑定器功能可大幅简化所需编写的代码。处理队列、blob 或文件，或者启动计划的任务所需的低级代码由 WebJobs SDK 框架为你完成。例如，该框架会创建尚不存在的队列、打开队列、读取队列消息并在处理完成后删除队列消息、创建尚不存在的 Blob 容器、写入 Blob，等等。\n\n下面的代码示例在一个 Web 作业中显示了各种触发器：`QueueTrigger`、`FileTrigger`、`WebHookTrigger` 和 `ErrorTrigger`。\n\n    public class Functions\n    {\n        public static void ProcessQueueMessage([QueueTrigger(\"queue\")] string message,\n        TextWriter log)\n        {\n            log.WriteLine(message);\n        }\n\n        public static void ProcessFileAndUploadToBlob(\n            [FileTrigger(@\"import\\{name}\", \"*.*\", autoDelete: true)] Stream file,\n            [Blob(@\"processed/{name}\", FileAccess.Write)] Stream output,\n            string name,\n            TextWriter log)\n        {\n            output = file;\n            file.Close();\n            log.WriteLine(string.Format(\"Processed input file '{0}'!\", name));\n        }\n\n        [Singleton]\n        public static void ProcessWebHookA([WebHookTrigger] string body, TextWriter log)\n        {\n            log.WriteLine(string.Format(\"WebHookA invoked! Body: {0}\", body));\n        }\n\n        public static void ProcessGitHubWebHook([WebHookTrigger] string body, TextWriter log)\n        {\n            dynamic issueEvent = JObject.Parse(body);\n            log.WriteLine(string.Format(\"GitHub WebHook invoked! ('{0}', '{1}')\",\n                issueEvent.issue.title, issueEvent.action));\n        }\n\n        public static void ErrorMonitor(\n        [ErrorTrigger(\"00:01:00\", 1)] TraceFilter filter, TextWriter log,\n        [SendGrid(\n            To = \"admin@emailaddress.com\",\n            Subject = \"Error!\")]\n         SendGridMessage message)\n        {\n            // log last 5 detailed errors to the Dashboard\n            log.WriteLine(filter.GetDetailedMessage(5));\n            message.Text = filter.GetDetailedMessage(1);\n        }\n    }\n\n## <a id=\"schedule\"></a> 计划\n\n使用 `TimerTrigger` 属性可以触发要按计划运行的函数。你可以通过 Azure 从整体上计划 Web 作业，也可以使用 WebJobs SDK `TimerTrigger` 计划 Web 作业的各个函数。下面是代码示例。\n\n    public class Functions\n    {\n        public static void ProcessTimer([TimerTrigger(\"*/15 * * * * *\", RunOnStartup = true)]\n        TimerInfo info, [Queue(\"queue\")] out string message)\n        {\n            message = info.FormatNextOccurrences(1);\n        }\n    }\n\n有关更多示例代码，请参阅 GitHub.com 上 azure-webjobs-sdk-extensions 存储库中的 [TimerSamples.cs](https://github.com/Azure/azure-webjobs-sdk-extensions/blob/master/src/ExtensionsSample/Samples/TimerSamples.cs)。\n\n## 可扩展性\n\n你可以不局限于内置功能 - WebJobs SDK 允许你编写自定义触发器和绑定器。例如，你可以为缓存事件和定期计划编写触发器。[开源存储库](https://github.com/Azure/azure-webjobs-sdk-extensions)包含[有关 WebJobs SDK 可扩展性的详细指南](https://github.com/Azure/azure-webjobs-sdk-extensions/wiki/Binding-Extensions-Overview)和示例代码，可帮助你开始编写你自己的触发器和绑定器。\n\n## <a id=\"workerrole\"></a>在 WebJobs 外部使用 WebJobs SDK\n\n使用 WebJobs SDK 的程序是指可在任意位置运行的标准控制台应用程序 - 它不一定要以 Web 作业的形式运行。你可以在开发计算机上本地测试程序，而在生产环境中，可以在云服务辅助角色或 Windows 服务中运行程序（如果你偏好其中一个环境）。\n\n## <a id=\"nostorage\"></a>仪表板功能\n\n即使你不使用 WebJobs SDK 触发器或绑定器，WebJobs SDK 也提供了几个优点：\n\n* 可以从仪表板调用函数。\n* 可以从仪表板重放函数。\n* 您可以在仪表板中查看日志，链接到特定的 WebJob（使用 Console.Out、Console.Error、Trace 等编写的应用程序日志）或链接到生成它们的特定函数调用（使用此 SDK 传递给函数作为参数的 `TextWriter` 对象编写的日志）。 \n\n有关详细信息，请参阅[如何手动调用函数](/documentation/articles/websites-dotnet-webjobs-sdk-storage-queues-how-to#manual)和[如何编写日志](/documentation/articles/websites-dotnet-webjobs-sdk-storage-queues-how-to#logs)\n\n## <a id=\"nextsteps\"></a>后续步骤\n\n有关 WebJobs SDK 的详细信息，请参阅[Azure WebJobs 推荐资源](/documentation/articles/websites-webjobs-resources/)。\n\n有关 WebJobs SDK 的最新增强功能的信息，请参阅[发行说明](https://github.com/Azure/azure-webjobs-sdk/wiki/Release-Notes)。\n \n\n<!---HONumber=Mooncake_0118_2016-->"}