{
  "nodes": [
    {
      "content": "如何在多个客户端上使用单个移动服务后端 | Azure 移动服务",
      "pos": [
        27,
        59
      ]
    },
    {
      "content": "了解如何在面向不同移动平台的多个客户端应用上使用单个移动服务后端。",
      "pos": [
        78,
        111
      ]
    },
    {
      "content": "通过单个移动服务支持多个设备平台",
      "pos": [
        340,
        356
      ]
    },
    {
      "content": "&amp;nbsp;",
      "pos": [
        459,
        465
      ]
    },
    {
      "content": "在移动应用开发中使用 Azure 移动服务的主要优势之一在于，能够使用单个后端服务来支持多个客户端平台上的应用。移动服务为所有主要设备平台提供了本机客户端库，让你更轻松地使用单个后端服务，通过跨平台开发人员工具开发应用程序。本主题讨论在使用单个移动服务后端时让应用程序运行在多个客户端平台上的注意事项。",
      "pos": [
        466,
        617
      ]
    },
    {
      "pos": [
        622,
        646
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"push\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>跨平台推送通知"
    },
    {
      "content": "移动服务使用 Azure 通知中心将推送通知发送到你在所有主要设备平台上的客户端应用程序。通知中心提供了一致且统一的基础结构让你创建和管理设备注册，以及发送跨平台的推送通知。通知中心通过使用以下特定于平台的通知服务支持发送推送通知：",
      "pos": [
        648,
        764
      ]
    },
    {
      "content": "适用于 iOS 应用程序的 Apple 推送通知服务 (APNS)",
      "pos": [
        768,
        801
      ]
    },
    {
      "content": "适用于 Android 应用程序的 Google 云消息 (GCM) 服务",
      "pos": [
        804,
        841
      ]
    },
    {
      "content": "适用于 Windows 应用商店、Windows Phone 8.1 应用商店和通用 Windows 应用程序的 Windows 通知服务 (WNS)",
      "pos": [
        844,
        919
      ]
    },
    {
      "content": "适用于 Windows Phone Silverlight 应用程序的 Microsoft 推送通知服务 (MPNS)",
      "pos": [
        923,
        982
      ]
    },
    {
      "pos": [
        984,
        1008
      ],
      "content": "有关详细信息，请参阅 <bpt id=\"p1\">[</bpt><ept id=\"p1\">Azure 通知中心]</ept>。"
    },
    {
      "content": "可使用特定于平台的移动服务客户端库中的注册函数或使用移动服务 REST API 创建客户端注册。通知中心支持两种类型的设备注册：",
      "pos": [
        1010,
        1074
      ]
    },
    {
      "content": "本机注册",
      "pos": [
        1080,
        1084
      ]
    },
    {
      "content": "本机注册专门针对特定于平台的推送通知服务。将通知发送到使用本机注册注册的设备时，你必须在移动服务中调用特定于平台的 API。若要将通知发送到多个平台上的设备，需要多个特定于平台的调用。",
      "pos": [
        1091,
        1183
      ]
    },
    {
      "content": "模板注册",
      "pos": [
        1194,
        1198
      ]
    },
    {
      "content": "通知中心还支持特定于平台的模板注册。通过使用模板注册，你可以使用单个 API 调用将通知发送到任何已注册的平台上运行的应用程序。有关详细信息，请参阅<bpt id=\"p1\">[</bpt><ept id=\"p1\">向用户发送跨平台通知]</ept>。",
      "pos": [
        1205,
        1292
      ]
    },
    {
      "content": "链接到特定于客户端的教程的以下各节中的表显示了如何实现从 .NET 和 JavaScript 后端移动服务推送通知。",
      "pos": [
        1294,
        1352
      ]
    },
    {
      "content": ".NET 后端",
      "pos": [
        1358,
        1365
      ]
    },
    {
      "pos": [
        1367,
        1854
      ],
      "content": "在 .NET 后端移动服务中，通过调用从 <bpt id=\"p1\">[</bpt>ApiServices.Push<ept id=\"p1\">](http://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.mobile.service.apiservices.push.aspx)</ept> 属性获取的 <bpt id=\"p2\">[</bpt>PushClient<ept id=\"p2\">](http://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.mobile.service.notifications.pushclient.aspx)</ept> 对象的 <bpt id=\"p3\">[</bpt><ept id=\"p3\">SendAsync]</ept> 方法发送通知。发送的推送通知（本机或模板）取决于传递给 <bpt id=\"p4\">[</bpt><ept id=\"p4\">SendAsync]</ept> 方法的特定 <bpt id=\"p5\">[</bpt>IPushMessage<ept id=\"p5\">](http://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.mobile.service.notifications.ipushmessage.aspx)</ept> 派生的对象，如下表所示："
    },
    {
      "content": "平台",
      "pos": [
        1857,
        1859
      ]
    },
    {
      "content": "APNS",
      "pos": [
        1862,
        1866
      ]
    },
    {
      "content": "GCM",
      "pos": [
        1946,
        1949
      ]
    },
    {
      "content": "WNS",
      "pos": [
        2034,
        2037
      ]
    },
    {
      "content": "MPNS",
      "pos": [
        2135,
        2139
      ]
    },
    {
      "content": "本机",
      "pos": [
        2171,
        2173
      ]
    },
    {
      "content": "ApplePushMessage",
      "pos": [
        2175,
        2191
      ]
    },
    {
      "content": "GooglePushMessage",
      "pos": [
        2302,
        2319
      ]
    },
    {
      "content": "WindowsPushMessage",
      "pos": [
        2431,
        2449
      ]
    },
    {
      "content": "MpnsPushMessage",
      "pos": [
        2563,
        2578
      ]
    },
    {
      "content": "下面的代码从 .NET 后端服务将推送通知发送到所有 iOS 和 Windows 应用商店设备注册：",
      "pos": [
        2689,
        2739
      ]
    },
    {
      "content": "有关如何将推送通知发送到其他本机客户端平台的示例，请单击上表标题中的平台链接。",
      "pos": [
        3452,
        3491
      ]
    },
    {
      "pos": [
        3493,
        3579
      ],
      "content": "如果你使用模板客户端注册（而不是本机客户端注册），则只需提供 <bpt id=\"p1\">[</bpt><ept id=\"p1\">TemplatePushMessage]</ept> 对象调用 <bpt id=\"p2\">[</bpt><ept id=\"p2\">SendAsync]</ept> 一次即可发送同一通知，如下所示："
    },
    {
      "content": "JavaScript 后端",
      "pos": [
        3878,
        3891
      ]
    },
    {
      "pos": [
        3893,
        3966
      ],
      "content": "在 JavaScript 后端移动服务中，通过调用从全局 <bpt id=\"p1\">[</bpt><ept id=\"p1\">push 对象]</ept>获取的特定于平台的对象的 <bpt id=\"p2\">**</bpt>send<ept id=\"p2\">**</ept> 方法发送通知，如下表所示："
    },
    {
      "content": "平台",
      "pos": [
        3969,
        3971
      ]
    },
    {
      "content": "APNS",
      "pos": [
        3974,
        3978
      ]
    },
    {
      "content": "GCM",
      "pos": [
        4062,
        4065
      ]
    },
    {
      "content": "WNS",
      "pos": [
        4154,
        4157
      ]
    },
    {
      "content": "MPNS",
      "pos": [
        4259,
        4263
      ]
    },
    {
      "content": "本机",
      "pos": [
        4388,
        4390
      ]
    },
    {
      "content": "apns 对象",
      "pos": [
        4392,
        4399
      ]
    },
    {
      "content": "gcm 对象",
      "pos": [
        4464,
        4470
      ]
    },
    {
      "content": "wns 对象",
      "pos": [
        4535,
        4541
      ]
    },
    {
      "content": "mpns 对象",
      "pos": [
        4607,
        4614
      ]
    },
    {
      "content": "下面的代码将向所有 Android 和 Windows Phone 注册发送推送通知：",
      "pos": [
        4680,
        4723
      ]
    },
    {
      "content": "有关如何将推送通知发送到其他本机客户端平台的示例，请单击上表标题中的平台链接。",
      "pos": [
        5794,
        5833
      ]
    },
    {
      "pos": [
        5835,
        5914
      ],
      "content": "如果你使用模板客户端注册（而不是本机客户端注册），则只需提供模板消息负载调用全局 <bpt id=\"p1\">[</bpt><ept id=\"p1\">push 对象]</ept>的 <bpt id=\"p2\">**</bpt>send<ept id=\"p2\">**</ept> 函数一次即可发送同一通知，如下所示："
    },
    {
      "pos": [
        6386,
        6421
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"xplat-app-dev\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>跨平台应用程序开发"
    },
    {
      "content": "开发所有主要移动设备平台的本机移动设备应用程序要求你（或你的组织）至少具备 Objective-C、Java 和 C# 或 JavaScript 编程语言的专业知识。由于在这些不同平台中开发费用昂贵，一些开发人员为其应用程序选择完全基于 Web 浏览器的体验。但是，此类基于 Web 的体验不能访问大多数本机资源，这些资源提供了用户希望在其移动设备上实现的丰富体验。",
      "pos": [
        6422,
        6605
      ]
    },
    {
      "content": "可使用跨平台工具，这些工具在仍共享单一代码库（通常是 JavaScript）的同时，在移动设备上提供了更丰富的本机体验。移动服务通过提供以下开发平台的快速入门教程，可让你轻松创建和管理跨平台应用程序开发平台的后端服务：",
      "pos": [
        6607,
        6716
      ]
    },
    {
      "content": "Appcelerator",
      "pos": [
        6723,
        6735
      ]
    },
    {
      "content": "Appcelerator 允许你使用 JavaScript 开发编译后可在所有移动设备平台上作为本机应用程序运行的单个应用程序。它在 UI 中提供了丰富的用户体验、对所有本机设备资源的访问权限以及本机应用程序性能。",
      "pos": [
        6792,
        6899
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>PhoneGap<ept id=\"p2\">**</ept><ept id=\"p1\">](https://go.microsoft.com/fwLink/p/?LinkID=390707)</ept><bpt id=\"p3\">**</bpt>/<ept id=\"p3\">**</ept><bpt id=\"p4\">[</bpt><bpt id=\"p5\">**</bpt>Cordova<ept id=\"p5\">**</ept><ept id=\"p4\">](http://cordova.apache.org/)</ept>",
      "pos": [
        6904,
        7014
      ]
    },
    {
      "content": "PhoneGap（Apache Cordova 项目的分发产品）是一个免费的开源框架，它允许你使用标准 Web API、HTML 和 JavaScript 开发可在 Android、iOS 和 Windows 设备上运行的单个应用程序。PhoneGap 提供了基于 Web 视图的 UI，但通过允许访问设备上的本机资源增强了用户体验，这些资源包括推送通知、加速计、相机、存储、地理位置和应用程序内浏览器。有关详细信息，请参阅 <bpt id=\"p1\">[</bpt>PhoneGap 快速入门教程<ept id=\"p1\">][PhoneGap]</ept>。",
      "pos": [
        7019,
        7260
      ]
    },
    {
      "pos": [
        7270,
        7452
      ],
      "content": "现在 Visual Studio 还允许你使用用于 Visual Studio 的多设备混合应用程序扩展（它是预发行软件）构建跨平台的 Cordova 应用程序。有关详细信息，请参阅<bpt id=\"p1\">[</bpt>使用 HTML 和 JavaScript 的多设备混合应用程序入门<ept id=\"p1\">](http://msdn.microsoft.com/zh-cn/library/dn771545.aspx)</ept>。"
    },
    {
      "content": "Sencha Touch",
      "pos": [
        7459,
        7471
      ]
    },
    {
      "content": "Sencha Touch 提供了一组针对触摸屏优化的控件，这些控件使用单个 HTML 和 JavaScript 代码库在各种移动设备上提供类似本机的体验。Sencha Touch 可与 PhoneGap 或 Cordova 库一起使用，为用户提供对本机设备资源的访问权限。有关详细信息，请参阅 <bpt id=\"p1\">[</bpt>Sencha Touch 快速入门教程<ept id=\"p1\">][Sencha]</ept>。",
      "pos": [
        7528,
        7705
      ]
    },
    {
      "content": "Xamarin",
      "pos": [
        7712,
        7719
      ]
    },
    {
      "content": "使用 Xamarin 可以为 iOS 和 Android 设备创建完全本机应用程序，这些应用程序具有完全本机 UI 并可访问所有设备资源。Xamarin 应用程序使用 C#（而不是 Objective-C 和 Java）编码。这使 .NET 开发人员能够将应用程序发布到 iOS 和 Android 并共享 Windows 项目中的代码。Xamarin 通过 C# 代码在 iOS 和 Android 设备上提供完全本机用户体验。这使你能够在 iOS 和 Android 设备上重用 Windows 应用程序中的某些移动服务代码。有关详细信息，请参阅下面的 <bpt id=\"p1\">[</bpt>Xamarin 开发<ept id=\"p1\">](#xamarin)</ept>。",
      "pos": [
        7777,
        8079
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"如何在多个客户端上使用单个移动服务后端 | Azure 移动服务\"\n    description=\"了解如何在面向不同移动平台的多个客户端应用上使用单个移动服务后端。\"\n    services=\"mobile-services\"\n    documentationCenter=\"\"\n    authors=\"ggailey777\"\n    manager=\"dwrede\"\n    editor=\"mollybos\"/>\n<tags \n    ms.service=\"mobile-services\" \n    ms.date=\"12/07/2015\"\n    wacn.date=\"01/29/2016\"/>\n\n#  通过单个移动服务支持多个设备平台\n \n[AZURE.INCLUDE [mobile-service-note-mobile-apps](../includes/mobile-services-note-mobile-apps.md)]\n\n&nbsp;\n在移动应用开发中使用 Azure 移动服务的主要优势之一在于，能够使用单个后端服务来支持多个客户端平台上的应用。移动服务为所有主要设备平台提供了本机客户端库，让你更轻松地使用单个后端服务，通过跨平台开发人员工具开发应用程序。本主题讨论在使用单个移动服务后端时让应用程序运行在多个客户端平台上的注意事项。\n\n## <a id=\"push\"></a>跨平台推送通知\n\n移动服务使用 Azure 通知中心将推送通知发送到你在所有主要设备平台上的客户端应用程序。通知中心提供了一致且统一的基础结构让你创建和管理设备注册，以及发送跨平台的推送通知。通知中心通过使用以下特定于平台的通知服务支持发送推送通知：\n\n+ 适用于 iOS 应用程序的 Apple 推送通知服务 (APNS)\n+ 适用于 Android 应用程序的 Google 云消息 (GCM) 服务\n+ 适用于 Windows 应用商店、Windows Phone 8.1 应用商店和通用 Windows 应用程序的 Windows 通知服务 (WNS) \n+ 适用于 Windows Phone Silverlight 应用程序的 Microsoft 推送通知服务 (MPNS)\n\n有关详细信息，请参阅 [Azure 通知中心]。\n\n可使用特定于平台的移动服务客户端库中的注册函数或使用移动服务 REST API 创建客户端注册。通知中心支持两种类型的设备注册：\n\n+ **本机注册**<br/>本机注册专门针对特定于平台的推送通知服务。将通知发送到使用本机注册注册的设备时，你必须在移动服务中调用特定于平台的 API。若要将通知发送到多个平台上的设备，需要多个特定于平台的调用。   \n  \n+ **模板注册**<br/>通知中心还支持特定于平台的模板注册。通过使用模板注册，你可以使用单个 API 调用将通知发送到任何已注册的平台上运行的应用程序。有关详细信息，请参阅[向用户发送跨平台通知]。\n\n链接到特定于客户端的教程的以下各节中的表显示了如何实现从 .NET 和 JavaScript 后端移动服务推送通知。\n\n### .NET 后端\n\n在 .NET 后端移动服务中，通过调用从 [ApiServices.Push](http://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.mobile.service.apiservices.push.aspx) 属性获取的 [PushClient](http://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.mobile.service.notifications.pushclient.aspx) 对象的 [SendAsync] 方法发送通知。发送的推送通知（本机或模板）取决于传递给 [SendAsync] 方法的特定 [IPushMessage](http://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.mobile.service.notifications.ipushmessage.aspx) 派生的对象，如下表所示：\n\n|平台 |[APNS](/documentation/articles/mobile-services-dotnet-backend-ios-get-started-push)|[GCM](/documentation/articles/mobile-services-dotnet-backend-android-get-started-push) |[WNS](/documentation/articles/mobile-services-dotnet-backend-windows-store-dotnet-get-started-push) | MPNS\n|-----|-----|----|----|-----|\n|本机|[ApplePushMessage](http://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.mobile.service.applepushmessage.aspx) |[GooglePushMessage](http://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.mobile.service.googlepushmessage.aspx) |[WindowsPushMessage](http://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.mobile.service.windowspushmessage.aspx) | [MpnsPushMessage](http://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.mobile.service.mpnspushmessage.aspx) |\n\n下面的代码从 .NET 后端服务将推送通知发送到所有 iOS 和 Windows 应用商店设备注册：\n\n    // Define a push notification for APNS.\n    ApplePushMessage apnsMessage = new ApplePushMessage(item.Text, TimeSpan.FromHours(1));    \n\n    // Define a push notification for WNS.\n    WindowsPushMessage wnsMessage = new WindowsPushMessage();\n    wnsMessage.XmlPayload = @\"<?xml version=\"\"1.0\"\" encoding=\"\"utf-8\"\"?>\" +\n                         @\"<toast><visual><binding template=\"\"ToastText01\"\">\" +\n                         @\"<text id=\"\"1\"\">\" + item.Text + @\"</text>\" +\n                         @\"</binding></visual></toast>\";\n    \n    // Send push notifications to all registered iOS and Windows Store devices. \n    await Services.Push.SendAsync(apnsMessage);\n    await Services.Push.SendAsync(wnsMessage);\n\n有关如何将推送通知发送到其他本机客户端平台的示例，请单击上表标题中的平台链接。\n\n如果你使用模板客户端注册（而不是本机客户端注册），则只需提供 [TemplatePushMessage] 对象调用 [SendAsync] 一次即可发送同一通知，如下所示：\n\n    // Create a new template message and add the 'message' parameter.    \n    var templatePayload = new TemplatePushMessage();\n    templatePayload.Add(\"message\", item.Text);\n\n    // Send a push notification to all template registrations.\n    await Services.Push.SendAsync(templatePayload); \n \n### JavaScript 后端\n\n在 JavaScript 后端移动服务中，通过调用从全局 [push 对象]获取的特定于平台的对象的 **send** 方法发送通知，如下表所示：\n\n|平台 |[APNS](/documentation/articles/mobile-services-javascript-backend-ios-get-started-push)|[GCM](/documentation/articles/mobile-services-javascript-backend-android-get-started-push) |[WNS](/documentation/articles/mobile-services-javascript-backend-windows-store-dotnet-get-started-push) |[MPNS](/documentation/articles/mobile-services-javascript-backend-windows-phone-get-started-push)|\n|-----|-----|----|----|-----|\n|本机|[apns 对象](http://msdn.microsoft.com/zh-cn/library/azure/jj839711.aspx) |[gcm 对象](http://msdn.microsoft.com/zh-cn/library/azure/dn126137.aspx) |[wns 对象](http://msdn.microsoft.com/zh-cn/library/azure/jj860484.aspx) | [mpns 对象](http://msdn.microsoft.com/zh-cn/library/azure/jj871025.aspx) |\n\n下面的代码将向所有 Android 和 Windows Phone 注册发送推送通知：\n\n    // Define a push notification for GCM.\n    var gcmPayload = \n    '{\"data\":{\"message\" : item.text }}';\n\n    // Define the payload for a Windows Phone toast notification.\n    var mpnsPayload = '<?xml version=\"1.0\" encoding=\"utf-8\"?>' +\n    '<wp:Notification xmlns:wp=\"WPNotification\"><wp:Toast>' +\n    '<wp:Text1>New Item</wp:Text1><wp:Text2>' + item.text + \n    '</wp:Text2></wp:Toast></wp:Notification>';\n\n    // Send push notifications to all registered Android and Windows Phone 8.0 devices. \n    push.mpns.send(null, mpnsPayload, 'toast', 22, {\n            success: function(pushResponse) {\n                // Push succeeds.\n                },              \n                error: function (pushResponse) {\n                    // Push fails.\n                    }\n                });\n    push.gcm.send(null, gcmPayload, {\n            success: function(pushResponse) {\n                // Push succeeds.\n                },              \n                error: function (pushResponse) {\n                    // Push fails.\n                    }\n                });\n\n有关如何将推送通知发送到其他本机客户端平台的示例，请单击上表标题中的平台链接。\n\n如果你使用模板客户端注册（而不是本机客户端注册），则只需提供模板消息负载调用全局 [push 对象]的 **send** 函数一次即可发送同一通知，如下所示：\n\n    // Create a new template message with the 'message' parameter.    \n    var templatePayload = { \"message\": item.text };\n\n    // Send a push notification to all template registrations.\n    push.send(null, templatePayload, {\n            success: function(pushResponse) {\n                // Push succeeds.\n                },              \n                error: function (pushResponse) {\n                    // Push fails.\n                    }\n                }); \n\n## <a id=\"xplat-app-dev\"></a>跨平台应用程序开发\n开发所有主要移动设备平台的本机移动设备应用程序要求你（或你的组织）至少具备 Objective-C、Java 和 C# 或 JavaScript 编程语言的专业知识。由于在这些不同平台中开发费用昂贵，一些开发人员为其应用程序选择完全基于 Web 浏览器的体验。但是，此类基于 Web 的体验不能访问大多数本机资源，这些资源提供了用户希望在其移动设备上实现的丰富体验。\n\n可使用跨平台工具，这些工具在仍共享单一代码库（通常是 JavaScript）的同时，在移动设备上提供了更丰富的本机体验。移动服务通过提供以下开发平台的快速入门教程，可让你轻松创建和管理跨平台应用程序开发平台的后端服务：\n\n+ [**Appcelerator**](http://go.microsoft.com/fwlink/p/?LinkId=509987)<br/>Appcelerator 允许你使用 JavaScript 开发编译后可在所有移动设备平台上作为本机应用程序运行的单个应用程序。它在 UI 中提供了丰富的用户体验、对所有本机设备资源的访问权限以及本机应用程序性能。\n \n+ [**PhoneGap**](https://go.microsoft.com/fwLink/p/?LinkID=390707)**/**[**Cordova**](http://cordova.apache.org/)<br/>PhoneGap（Apache Cordova 项目的分发产品）是一个免费的开源框架，它允许你使用标准 Web API、HTML 和 JavaScript 开发可在 Android、iOS 和 Windows 设备上运行的单个应用程序。PhoneGap 提供了基于 Web 视图的 UI，但通过允许访问设备上的本机资源增强了用户体验，这些资源包括推送通知、加速计、相机、存储、地理位置和应用程序内浏览器。有关详细信息，请参阅 [PhoneGap 快速入门教程][PhoneGap]。\n    \n    现在 Visual Studio 还允许你使用用于 Visual Studio 的多设备混合应用程序扩展（它是预发行软件）构建跨平台的 Cordova 应用程序。有关详细信息，请参阅[使用 HTML 和 JavaScript 的多设备混合应用程序入门](http://msdn.microsoft.com/zh-cn/library/dn771545.aspx)。\n\n+ [**Sencha Touch**](http://go.microsoft.com/fwlink/p/?LinkId=509988)<br/>Sencha Touch 提供了一组针对触摸屏优化的控件，这些控件使用单个 HTML 和 JavaScript 代码库在各种移动设备上提供类似本机的体验。Sencha Touch 可与 PhoneGap 或 Cordova 库一起使用，为用户提供对本机设备资源的访问权限。有关详细信息，请参阅 [Sencha Touch 快速入门教程][Sencha]。\n\n+ [**Xamarin**](https://go.microsoft.com/fwLink/p/?LinkID=330242)<br/>使用 Xamarin 可以为 iOS 和 Android 设备创建完全本机应用程序，这些应用程序具有完全本机 UI 并可访问所有设备资源。Xamarin 应用程序使用 C#（而不是 Objective-C 和 Java）编码。这使 .NET 开发人员能够将应用程序发布到 iOS 和 Android 并共享 Windows 项目中的代码。Xamarin 通过 C# 代码在 iOS 和 Android 设备上提供完全本机用户体验。这使你能够在 iOS 和 Android 设备上重用 Windows 应用程序中的某些移动服务代码。有关详细信息，请参阅下面的 [Xamarin 开发](#xamarin)。\n\n\n<!-- URLs -->\n[Azure Management portal]: https://manage.windowsazure.cn\n[Azure 通知中心]: /zh-cn/documentation/articles/notification-hubs-overview/\n[SSO Windows Store]: /zh-cn/documentation/articles/mobile-services-windows-store-dotnet-single-sign-on/\n[SSO Windows Phone]: /zh-cn/documentation/articles/mobile-services-windows-phone-single-sign-on/\n[Tutorials and resources]: /zh-cn/documentation/services/mobile-services/\n[Get started with Notification Hubs]: /zh-cn/documentation/articles/notification-hubs-windows-store-dotnet-get-started\n[向用户发送跨平台通知]: /zh-cn/documentation/articles/mobile-services-dotnet-backend-windows-store-dotnet-push-notifications-app-users-xplat-mobile-services/\n[Get started with push Windows dotnet]: /zh-cn/documentation/articles/mobile-services-javascript-backend-windows-store-dotnet-get-started-push-vs2012/\n[Get started with push Windows js]: /zh-cn/documentation/articles/mobile-services-javascript-backend-windows-store-dotnet-get-started-with-push-js-vs2012/\n[Get started with push Windows Phone]: /zh-cn/documentation/articles/mobile-services-javascript-backend-windows-store-dotnet-get-started-with-push-wp8/\n[Get started with push iOS]: /zh-cn/documentation/articles/mobile-services-javascript-backend-windows-store-dotnet-get-started-with-push-ios/\n[Get started with push Android]: /zh-cn/documentation/articles/mobile-services-javascript-backend-windows-store-dotnet-get-started-with-push-android/\n[Dynamic schema]: http://msdn.microsoft.com/zh-cn/library/windowsazure/jj193175.aspx\n[How to use a .NET client with Mobile Services]: /zh-cn/documentation/articles/mobile-services-windows-dotnet-how-to-use-client-library/\n[push 对象]: http://msdn.microsoft.com/zh-cn/library/windowsazure/jj554217.aspx\n[TemplatePushMessage]: http://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.mobile.service.templatepushmessage.aspx\n[PhoneGap]: /documentation/articles/mobile-services-javascript-backend-phonegap-get-started\n[Sencha]: /documentation/articles/partner-sencha-mobile-services-get-started\n[Appcelerator]: /documentation/articles/partner-appcelerator-mobile-services-javascript-backend-appcelerator-get-started\n[SendAsync]: http://msdn.microsoft.com/zh-cn/library/microsoft.windowsazure.mobile.service.notifications.pushclient.sendasync.aspx\n[What's next for Windows Phone 8 developers]: http://msdn.microsoft.com/zh-cn/library/windows/apps/dn655121(v=vs.105).aspx\n[Building universal Windows apps for all Windows devices]: http://go.microsoft.com/fwlink/p/?LinkId=509905\n[Universal Windows app project for Azure Mobile Services using MVVM]: http://code.msdn.microsoft.com/Universal-Windows-app-for-db3564de\n\n<!---HONumber=Mooncake_0118_2016-->"
}