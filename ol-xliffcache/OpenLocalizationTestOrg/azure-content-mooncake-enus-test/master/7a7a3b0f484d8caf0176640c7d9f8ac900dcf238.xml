{
  "nodes": [
    {
      "content": "外围网络示例 – 使用 NSG 构建简单的外围网络 | Azure",
      "pos": [
        26,
        59
      ]
    },
    {
      "content": "使用网络安全组 (NSG) 构建外围网络",
      "pos": [
        77,
        97
      ]
    },
    {
      "content": "示例 1 – 使用 NSG 构建简单的外围网络",
      "pos": [
        312,
        335
      ]
    },
    {
      "content": "本示例将创建一个简单的外围网络，其中包含四个 Windows 服务器和网络安全组。本示例还将演练每个相关命令，让你更加深入地了解每个步骤。另外还提供了“流量方案”部分，让你逐步深入了解流量如何流经外围网络的各个防御层。最后的“参考”部分提供了完整的代码，并说明如何构建此环境来测试和试验各种方案。",
      "pos": [
        368,
        516
      ]
    },
    {
      "content": "使用 NSG 的入站外围网络",
      "pos": [
        520,
        534
      ]
    },
    {
      "content": "环境描述",
      "pos": [
        543,
        547
      ]
    },
    {
      "content": "此示例中，有一个订阅包含以下项：",
      "pos": [
        548,
        564
      ]
    },
    {
      "content": "两个云服务：“FrontEnd001”和“BackEnd001”",
      "pos": [
        568,
        600
      ]
    },
    {
      "content": "一个虚拟网络“CorpNetwork”，其中包含两个子网：“FrontEnd”和“BackEnd”",
      "pos": [
        603,
        652
      ]
    },
    {
      "content": "应用到这两个子网的网络安全组",
      "pos": [
        655,
        669
      ]
    },
    {
      "content": "一个代表应用程序 Web 服务器的 Windows Server（“IIS01”）",
      "pos": [
        672,
        713
      ]
    },
    {
      "content": "两个代表应用程序后端服务器的 Windows Server（“AppVM01”、“AppVM02”）",
      "pos": [
        716,
        766
      ]
    },
    {
      "content": "一个代表 DNS 服务器的 Windows Server（“DNS01”）",
      "pos": [
        769,
        806
      ]
    },
    {
      "content": "下面的“参考”部分提供了可用于构建上述大多数环境的 PowerShell 脚本。尽管 VM 和虚拟网络的构建也可以由本示例脚本来完成，但本文未予详细的描述。",
      "pos": [
        808,
        886
      ]
    },
    {
      "content": "构建环境：",
      "pos": [
        888,
        893
      ]
    },
    {
      "content": "保存“参考”部分中包含的网络配置 xml 文件（更新名称、位置和 IP 地址以符合给定的方案）",
      "pos": [
        903,
        950
      ]
    },
    {
      "content": "更新脚本中的用户变量，以符合用于运行脚本的环境（订阅、服务名称等）",
      "pos": [
        959,
        992
      ]
    },
    {
      "content": "在 PowerShell 中执行脚本",
      "pos": [
        1001,
        1019
      ]
    },
    {
      "pos": [
        1021,
        1071
      ],
      "content": "<bpt id=\"p1\">**</bpt>注意<ept id=\"p1\">**</ept>：PowerShell 脚本中提到的区域必须与网络配置 xml 文件中提到的区域相匹配。"
    },
    {
      "content": "成功运行脚本后，可以执行其他可选步骤。“参考”部分中提供了两个脚本，用于设置 Web 服务器和包含简单 Web 应用的应用服务器，以便能使用此外围网络配置进行测试。",
      "pos": [
        1073,
        1155
      ]
    },
    {
      "content": "以下部分通过演练 PowerShell 脚本的关键代码行，详细说明本示例的网络安全组及其运行方式。",
      "pos": [
        1157,
        1206
      ]
    },
    {
      "content": "网络安全组 (NSG)",
      "pos": [
        1211,
        1222
      ]
    },
    {
      "content": "本示例将构建一个 NSG 组，然后加载六个规则。",
      "pos": [
        1223,
        1247
      ]
    },
    {
      "pos": [
        1250,
        1369
      ],
      "content": "<ph id=\"ph1\">[AZURE.TIP]</ph>一般而言，应该先创建特定的“允许”规则，最后再创建一般的“拒绝”规则。分配的优先级确定了要先评估哪些规则。发现要向流量应用哪个特定规则后，不需要评估后续规则。可以朝入站或出站方向（从子网的角度看）应用 NSG 规则。"
    },
    {
      "content": "以声明性的方式为入站流量构建以下规则：",
      "pos": [
        1371,
        1390
      ]
    },
    {
      "content": "允许内部 DNS 流量（端口 53）",
      "pos": [
        1396,
        1414
      ]
    },
    {
      "content": "允许从 Internet 到任何 VM 的 RDP 流量（端口 3389）",
      "pos": [
        1419,
        1456
      ]
    },
    {
      "content": "允许从 Internet 到 Web 服务器 (IIS01) 的 HTTP 流量（端口 80）",
      "pos": [
        1461,
        1508
      ]
    },
    {
      "content": "允许从 IIS01 到 AppVM1 的任何流量（所有端口）",
      "pos": [
        1513,
        1543
      ]
    },
    {
      "content": "拒绝从 Internet 到整个 VNet（两个子网）的任何流量（所有端口）",
      "pos": [
        1548,
        1586
      ]
    },
    {
      "content": "拒绝从前端子网到后端子网的任何流量（所有端口）",
      "pos": [
        1591,
        1614
      ]
    },
    {
      "content": "将这些规则绑定到每个子网后，如果有从 Internet 到 Web 服务器的入站 HTTP 请求，将应用规则 3（允许）和规则 5（拒绝），但由于规则 3 具有较高的优先级，因此只应用规则 3 并忽略规则 5。这样就会允许 HTTP 请求传往 Web 服务器。如果相同的流量尝试传往 DNS01 服务器，则会先应用规则 5（拒绝），因此不允许该流量传递到服务器。规则 6（拒绝）阻止前端子网与后端子网对话（规则 1 和 4 允许的流量除外），这可在攻击者入侵前端上的 Web 应用时保护后端网络，攻击者只能对后端的“受保护”网络进行有限度的访问（只能访问 AppVM01 服务器上公开的资源）。",
      "pos": [
        1616,
        1913
      ]
    },
    {
      "content": "有一个默认出站规则可允许流量外流到 Internet。在此示例中，我们允许出站流量，且未修改任何出站规则。如果两个方向的流量都要锁定，则需要用户定义的路由，下面的“示例 3”将对此进行介绍。",
      "pos": [
        1915,
        2010
      ]
    },
    {
      "content": "下面更详细讨论了每个规则（注意：以下列表中以货币符号开头的任何项（例如 $NSGName）均为本文“参考”部分的脚本中的用户定义变量）：",
      "pos": [
        2012,
        2080
      ]
    },
    {
      "content": "首先需要构建一个网络安全组来保存规则：",
      "pos": [
        2085,
        2104
      ]
    },
    {
      "content": "本示例中的第一个规则允许所有内部网络之间的 DNS 流量发往后端子网上的 DNS 服务器。该规则有一些重要参数：",
      "pos": [
        2292,
        2348
      ]
    },
    {
      "content": "“Type”表示此规则的流量作用方向；此方向是从子网或虚拟机的角度判断的（取决于此 NSG 绑定到了哪个位置）。因此，如果 Type 是“Inbound”并且流量进入子网，此规则将适用，而离开子网的流量则不受此规则影响。",
      "pos": [
        2353,
        2463
      ]
    },
    {
      "content": "“Priority”设置流量的评估顺序。编号越低，优先级就越高。只要将某个规则应用于特定的流量，就不再处理其他规则。因此，如果优先级为 1 的规则允许流量，优先级为 2 的规则拒绝流量，并将这两个规则同时应用于流量，则允许流量流动（规则 1 的优先级更高，因此将发生作用，并且不再应用其他规则）。",
      "pos": [
        2468,
        2616
      ]
    },
    {
      "content": "“Action”表示是要阻止还是允许受此规则影响的流量。",
      "pos": [
        2621,
        2649
      ]
    },
    {
      "content": "此规则允许 RDP 流量从 Internet 发往 VNET 中任一子网上任何服务器的 RDP 端口。此规则使用两种特殊地址前缀：“VIRTUAL\\_NETWORK”和“INTERNET”。这样就可以轻松处理较大类别的地址前缀。",
      "pos": [
        3054,
        3168
      ]
    },
    {
      "content": "此规则允许入站 Internet 流量抵达 Web 服务器。这不会更改路由行为；只允许目标为 IIS01 的流量通过。因此，如果来自 Internet 的流量将 Web 服务器作为其目标，此规则将允许流量，并停止处理其他规则。（在优先级为 140 的规则中，其他所有入站 Internet 流量均被阻止）。如果你只要处理 HTTP 流量，可将此规则进一步限制为只允许目标端口 80。",
      "pos": [
        3556,
        3747
      ]
    },
    {
      "content": "此规则允许流量从 IIS01 服务器传递到 AppVM01 服务器，后面的规则将阻止其他所有从前端到后端的流量。如果要添加的端口是已知的，则可以改善此规则。例如，如果 IIS 服务器只抵达 AppVM01 上的 SQL Server，并且 Web 应用曾遭到入侵，则目标端口范围应该从“*”（任何）更改为 1433（SQL 端口），以缩小 AppVM01 上的入站攻击面。",
      "pos": [
        4126,
        4312
      ]
    },
    {
      "content": "此规则将拒绝从 Internet 到网络上任何服务器的流量。结合优先级为 110 和 120 的规则，只允许入站 Internet 流量发往防火墙以及通过 RDP 端口发往其他服务器，除此之外的其他流量将被阻止。",
      "pos": [
        4678,
        4784
      ]
    },
    {
      "content": "最后一个规则拒绝从前端子网到后端子网的流量。这是仅限入站的规则，因此允许反向流量（从后端到前端）。",
      "pos": [
        5199,
        5248
      ]
    },
    {
      "content": "流量方案",
      "pos": [
        5667,
        5671
      ]
    },
    {
      "pos": [
        5677,
        5699
      ],
      "content": "（<bpt id=\"p1\">*</bpt>允许<ept id=\"p1\">*</ept>）从 Web 访问 Web 服务器"
    },
    {
      "content": "Internet 用户从 FrontEnd001.CloudApp.Net（面向 Internet 的云服务）请求 HTTP 页面",
      "pos": [
        5704,
        5769
      ]
    },
    {
      "content": "云服务通过端口 80 上的开放终结点将流量传递到 IIS01（Web 服务器）",
      "pos": [
        5774,
        5813
      ]
    },
    {
      "content": "前端子网开始处理入站规则：",
      "pos": [
        5818,
        5831
      ]
    },
    {
      "content": "NSG 规则 1 (DNS) 不适用，将转到下一规则",
      "pos": [
        5840,
        5866
      ]
    },
    {
      "content": "NSG 规则 2 (RDP) 不适用，将转到下一规则",
      "pos": [
        5875,
        5901
      ]
    },
    {
      "content": "NSG 规则 3（Internet 到 IIS01）适用，允许流量，停止处理规则",
      "pos": [
        5910,
        5950
      ]
    },
    {
      "content": "流量抵达 Web 服务器 IIS01 的内部 IP 地址（10.0.1.5）",
      "pos": [
        5955,
        5993
      ]
    },
    {
      "content": "IIS01 正在侦听 Web 流量，将接收此请求并开始处理请求",
      "pos": [
        5998,
        6029
      ]
    },
    {
      "content": "IIS01 请求 AppVM01 上的 SQL Server 提供信息",
      "pos": [
        6034,
        6069
      ]
    },
    {
      "content": "前端子网上没有出站规则，允许流量",
      "pos": [
        6074,
        6090
      ]
    },
    {
      "content": "后端子网开始处理入站规则：",
      "pos": [
        6095,
        6108
      ]
    },
    {
      "content": "NSG 规则 1 (DNS) 不适用，将转到下一规则",
      "pos": [
        6117,
        6143
      ]
    },
    {
      "content": "NSG 规则 2 (RDP) 不适用，将转到下一规则",
      "pos": [
        6152,
        6178
      ]
    },
    {
      "content": "NSG 规则 3（Internet 到防火墙）不适用，将转到下一规则",
      "pos": [
        6187,
        6221
      ]
    },
    {
      "content": "NSG 规则 4（IIS01 到 AppVM01）适用，允许流量，停止处理规则",
      "pos": [
        6230,
        6269
      ]
    },
    {
      "content": "AppVM01 接收 SQL 查询并做出响应",
      "pos": [
        6274,
        6296
      ]
    },
    {
      "content": "后端子网上没有出站规则，因此允许响应",
      "pos": [
        6301,
        6319
      ]
    },
    {
      "content": "前端子网开始处理入站规则：",
      "pos": [
        6324,
        6337
      ]
    },
    {
      "content": "后端子网到前端子网的入站流量没有适用的 NSG 规则，因此不会应用任何 NSG 规则",
      "pos": [
        6346,
        6388
      ]
    },
    {
      "content": "允许子网间流量的默认系统规则允许此流量，因此允许流量。",
      "pos": [
        6397,
        6424
      ]
    },
    {
      "content": "IIS 服务器接收 SQL 响应，完成 HTTP 响应并发送给请求方",
      "pos": [
        6429,
        6463
      ]
    },
    {
      "content": "前端子网上没有出站规则，因此允许响应，Internet 用户将收到请求的网页。",
      "pos": [
        6468,
        6507
      ]
    },
    {
      "pos": [
        6514,
        6531
      ],
      "content": "（<bpt id=\"p1\">*</bpt>允许<ept id=\"p1\">*</ept>）通过 RDP 访问后端"
    },
    {
      "content": "Internet 上的服务器管理员在 BackEnd001.CloudApp.Net:xxxxx 上请求 AppVM01 的 RDP 会话，其中 xxxxx 是通过 RDP 访问 AppVM01 所用的随机分配端口号（在 Azure 管理门户上或通过 PowerShell 可以找到分配的端口）",
      "pos": [
        6536,
        6683
      ]
    },
    {
      "content": "后端子网开始处理入站规则：",
      "pos": [
        6688,
        6701
      ]
    },
    {
      "content": "NSG 规则 1 (DNS) 不适用，将转到下一规则",
      "pos": [
        6710,
        6736
      ]
    },
    {
      "content": "NSG 规则 2 (RDP) 适用，允许流量，停止处理规则",
      "pos": [
        6745,
        6774
      ]
    },
    {
      "content": "由于没有出站规则，将应用默认规则并允许返回流量",
      "pos": [
        6779,
        6802
      ]
    },
    {
      "content": "已启用 RDP 会话",
      "pos": [
        6807,
        6817
      ]
    },
    {
      "content": "AppVM01 提示输入用户名和密码",
      "pos": [
        6822,
        6840
      ]
    },
    {
      "pos": [
        6847,
        6880
      ],
      "content": "（<bpt id=\"p1\">*</bpt>允许<ept id=\"p1\">*</ept>）在 DNS 服务器上执行 Web 服务器 DNS 查找"
    },
    {
      "content": "Web 服务器 IIS01 需要 www.data.gov 上的数据源，但需要解析地址。",
      "pos": [
        6885,
        6929
      ]
    },
    {
      "content": "VNet 的网络配置将 DNS01（后端子网上的 10.0.2.4）列为主 DNS 服务器，IIS01 将 DNS 请求发送到 DNS01",
      "pos": [
        6934,
        7003
      ]
    },
    {
      "content": "前端子网上没有出站规则，允许流量",
      "pos": [
        7008,
        7024
      ]
    },
    {
      "content": "后端子网开始处理入站规则：",
      "pos": [
        7029,
        7042
      ]
    },
    {
      "content": "NSG 规则 1 (DNS) 适用，允许流量，停止处理规则",
      "pos": [
        7052,
        7081
      ]
    },
    {
      "content": "DNS 服务器接收请求",
      "pos": [
        7086,
        7097
      ]
    },
    {
      "content": "DNS 服务器没有缓存的地址，请求 Internet 上的根 DNS 服务器",
      "pos": [
        7102,
        7140
      ]
    },
    {
      "content": "后端子网上没有出站规则，允许流量",
      "pos": [
        7145,
        7161
      ]
    },
    {
      "content": "Internet DNS 服务器做出响应，由于此会话是从内部发起的，因此允许响应",
      "pos": [
        7166,
        7206
      ]
    },
    {
      "content": "DNS 服务器缓存响应，然后将初始请求响应给 IIS01",
      "pos": [
        7211,
        7239
      ]
    },
    {
      "content": "后端子网上没有出站规则，允许流量",
      "pos": [
        7244,
        7260
      ]
    },
    {
      "content": "前端子网开始处理入站规则：",
      "pos": [
        7265,
        7278
      ]
    },
    {
      "content": "后端子网到前端子网的入站流量没有适用的 NSG 规则，因此不会应用任何 NSG 规则",
      "pos": [
        7287,
        7329
      ]
    },
    {
      "content": "允许子网间流量的默认系统规则允许此流量，因此允许流量",
      "pos": [
        7338,
        7364
      ]
    },
    {
      "content": "IIS01 从 DNS01 接收响应",
      "pos": [
        7369,
        7387
      ]
    },
    {
      "pos": [
        7394,
        7422
      ],
      "content": "（<bpt id=\"p1\">*</bpt>允许<ept id=\"p1\">*</ept>）Web 服务器访问 AppVM01 上的文件"
    },
    {
      "content": "IIS01 请求 AppVM01 上的文件",
      "pos": [
        7427,
        7448
      ]
    },
    {
      "content": "前端子网上没有出站规则，允许流量",
      "pos": [
        7453,
        7469
      ]
    },
    {
      "content": "后端子网开始处理入站规则：",
      "pos": [
        7474,
        7487
      ]
    },
    {
      "content": "NSG 规则 1 (DNS) 不适用，将转到下一规则",
      "pos": [
        7496,
        7522
      ]
    },
    {
      "content": "NSG 规则 2 (RDP) 不适用，将转到下一规则",
      "pos": [
        7531,
        7557
      ]
    },
    {
      "content": "NSG 规则 3（Internet 到 IIS01）不适用，将转到下一规则",
      "pos": [
        7566,
        7603
      ]
    },
    {
      "content": "NSG 规则 4（IIS01 到 AppVM01）适用，允许流量，停止处理规则",
      "pos": [
        7612,
        7651
      ]
    },
    {
      "content": "AppVM01 接收请求并以文件做出响应（假设已获得访问授权）",
      "pos": [
        7656,
        7687
      ]
    },
    {
      "content": "后端子网上没有出站规则，因此允许响应",
      "pos": [
        7692,
        7710
      ]
    },
    {
      "content": "前端子网开始处理入站规则：",
      "pos": [
        7715,
        7728
      ]
    },
    {
      "content": "后端子网到前端子网的入站流量没有适用的 NSG 规则，因此不会应用任何 NSG 规则",
      "pos": [
        7737,
        7779
      ]
    },
    {
      "content": "允许子网间流量的默认系统规则允许此流量，因此允许流量。",
      "pos": [
        7788,
        7815
      ]
    },
    {
      "content": "IIS 服务器接收文件",
      "pos": [
        7820,
        7831
      ]
    },
    {
      "pos": [
        7838,
        7858
      ],
      "content": "（<bpt id=\"p1\">*</bpt>拒绝<ept id=\"p1\">*</ept>）通过 Web 访问后端服务器"
    },
    {
      "content": "Internet 用户尝试通过 BackEnd001.CloudApp.Net 服务访问 AppVM01 上的文件",
      "pos": [
        7863,
        7920
      ]
    },
    {
      "content": "由于没有为文件共享开放终结点，此流量不会通过云服务抵达服务器",
      "pos": [
        7925,
        7955
      ]
    },
    {
      "content": "如果出于某种原因而开放了终结点，NSG 规则 5（Internet 到 VNet）将阻止此流量",
      "pos": [
        7960,
        8007
      ]
    },
    {
      "pos": [
        8014,
        8043
      ],
      "content": "（<bpt id=\"p1\">*</bpt>拒绝<ept id=\"p1\">*</ept>）在 DNS 服务器上执行 Web DNS 查找"
    },
    {
      "content": "Internet 用户尝试通过 BackEnd001.CloudApp.Net 服务查找 DNS01 上的内部 DNS 记录",
      "pos": [
        8048,
        8110
      ]
    },
    {
      "content": "由于没有为 DNS 开放终结点，此流量不会通过云服务抵达服务器",
      "pos": [
        8115,
        8146
      ]
    },
    {
      "content": "如果出于某种原因而开放了终结点，NSG 规则 5（Internet 到 VNet）将阻止此流量（注意：有两个原因导致规则 1 (DNS) 不适用：首先，源地址是 Internet，此规则只适用于以本地 VNet 作为源；其次，这是允许规则，因此永远不会拒绝流量）",
      "pos": [
        8151,
        8282
      ]
    },
    {
      "pos": [
        8289,
        8312
      ],
      "content": "（<bpt id=\"p1\">*</bpt>拒绝<ept id=\"p1\">*</ept>）从 Web 通过防火墙访问 SQL"
    },
    {
      "content": "Internet 用户从 FrontEnd001.CloudApp.Net（面向 Internet 的云服务）请求 SQL 数据",
      "pos": [
        8317,
        8381
      ]
    },
    {
      "content": "由于没有为 SQL 开放终结点，此流量不会通过云服务抵达防火墙",
      "pos": [
        8386,
        8417
      ]
    },
    {
      "content": "如果出于某种原因而开放了终结点，前端子网将开始处理入站规则：",
      "pos": [
        8422,
        8452
      ]
    },
    {
      "content": "NSG 规则 1 (DNS) 不适用，将转到下一规则",
      "pos": [
        8461,
        8487
      ]
    },
    {
      "content": "NSG 规则 2 (RDP) 不适用，将转到下一规则",
      "pos": [
        8496,
        8522
      ]
    },
    {
      "content": "NSG 规则 3（Internet 到 IIS01）适用，允许流量，停止处理规则",
      "pos": [
        8531,
        8571
      ]
    },
    {
      "content": "流量抵达 IIS01 的内部 IP 地址 (10.0.1.5)",
      "pos": [
        8576,
        8607
      ]
    },
    {
      "content": "IIS01 未侦听端口 1433，因此不会对请求做出响应",
      "pos": [
        8612,
        8640
      ]
    },
    {
      "content": "结束语",
      "pos": [
        8645,
        8648
      ]
    },
    {
      "content": "这种隔离后端子网与输入流量的方式相当直截了当。",
      "pos": [
        8649,
        8672
      ]
    },
    {
      "content": "参考",
      "pos": [
        8717,
        8719
      ]
    },
    {
      "content": "主脚本和网络配置",
      "pos": [
        8724,
        8732
      ]
    },
    {
      "content": "将完整脚本保存在 PowerShell 脚本文件中。将网络配置保存到名为“NetworkConf1.xml”的文件中。根据需要修改用户定义的变量。运行脚本，然后根据上面“示例 1”部分中所述的防火墙规则设置说明操作。",
      "pos": [
        8733,
        8841
      ]
    },
    {
      "content": "完整脚本",
      "pos": [
        8848,
        8852
      ]
    },
    {
      "content": "此脚本基于用户定义的变量执行以下操作：",
      "pos": [
        8853,
        8872
      ]
    },
    {
      "content": "连接到 Azure 订阅",
      "pos": [
        8878,
        8890
      ]
    },
    {
      "content": "新建存储帐户",
      "pos": [
        8895,
        8901
      ]
    },
    {
      "content": "根据网络配置文件中的定义创建新的 VNet 和两个子网",
      "pos": [
        8906,
        8933
      ]
    },
    {
      "content": "构建 4 个 Windows Server VM",
      "pos": [
        8938,
        8962
      ]
    },
    {
      "content": "配置 NSG，包括：",
      "pos": [
        8967,
        8977
      ]
    },
    {
      "content": "创建 NSG",
      "pos": [
        8982,
        8988
      ]
    },
    {
      "content": "填入规则",
      "pos": [
        8993,
        8997
      ]
    },
    {
      "content": "将 NSG 绑定到相应的子网",
      "pos": [
        9002,
        9016
      ]
    },
    {
      "content": "此 PowerShell 脚本应该在连接到 Internet 的电脑或服务器上本地运行。",
      "pos": [
        9018,
        9062
      ]
    },
    {
      "pos": [
        9065,
        9140
      ],
      "content": "<ph id=\"ph1\">[AZURE.IMPORTANT]</ph>此此脚本运行时，PowerShell 中可能会弹出警告或其他参考性消息。只有以红色字体显示的错误消息才需要引以关注。"
    },
    {
      "content": "网络配置文件",
      "pos": [
        21787,
        21793
      ]
    },
    {
      "content": "使用更新的位置保存此 xml 文件，并将此文件的链接添加到上述脚本中的 $NetworkConfigFile 变量。",
      "pos": [
        21794,
        21852
      ]
    },
    {
      "content": "示例应用程序脚本",
      "pos": [
        23084,
        23092
      ]
    },
    {
      "pos": [
        23093,
        23153
      ],
      "content": "如果你想要为本示例和其他外围网络示例安装示例应用程序，以下链接便已提供了一个：<bpt id=\"p1\">[</bpt>示例应用程序脚本<ept id=\"p1\">][SampleApp]</ept>"
    }
  ],
  "content": "<properties\n   pageTitle=\"外围网络示例 – 使用 NSG 构建简单的外围网络 | Azure\"\n   description=\"使用网络安全组 (NSG) 构建外围网络\"\n   services=\"virtual-network\"\n   documentationCenter=\"na\"\n   authors=\"tracsman\"\n   manager=\"rossort\"\n   editor=\"\"/>\n\n<tags\n    ms.service=\"virtual-network\"\n    ms.date=\"09/16/2015\"\n    wacn.date=\"01/21/2016\"/>\n\n# 示例 1 – 使用 NSG 构建简单的外围网络\n\n<!-- [返回安全边界最佳实践页面][HOME] -->\n\n本示例将创建一个简单的外围网络，其中包含四个 Windows 服务器和网络安全组。本示例还将演练每个相关命令，让你更加深入地了解每个步骤。另外还提供了“流量方案”部分，让你逐步深入了解流量如何流经外围网络的各个防御层。最后的“参考”部分提供了完整的代码，并说明如何构建此环境来测试和试验各种方案。\n\n![使用 NSG 的入站外围网络][1]\n\n## 环境描述\n此示例中，有一个订阅包含以下项：\n\n- 两个云服务：“FrontEnd001”和“BackEnd001”\n- 一个虚拟网络“CorpNetwork”，其中包含两个子网：“FrontEnd”和“BackEnd”\n- 应用到这两个子网的网络安全组\n- 一个代表应用程序 Web 服务器的 Windows Server（“IIS01”）\n- 两个代表应用程序后端服务器的 Windows Server（“AppVM01”、“AppVM02”）\n- 一个代表 DNS 服务器的 Windows Server（“DNS01”）\n\n下面的“参考”部分提供了可用于构建上述大多数环境的 PowerShell 脚本。尽管 VM 和虚拟网络的构建也可以由本示例脚本来完成，但本文未予详细的描述。\n\n构建环境：\n\n  1.    保存“参考”部分中包含的网络配置 xml 文件（更新名称、位置和 IP 地址以符合给定的方案）\n  2.    更新脚本中的用户变量，以符合用于运行脚本的环境（订阅、服务名称等）\n  3.    在 PowerShell 中执行脚本\n\n**注意**：PowerShell 脚本中提到的区域必须与网络配置 xml 文件中提到的区域相匹配。\n\n成功运行脚本后，可以执行其他可选步骤。“参考”部分中提供了两个脚本，用于设置 Web 服务器和包含简单 Web 应用的应用服务器，以便能使用此外围网络配置进行测试。\n\n以下部分通过演练 PowerShell 脚本的关键代码行，详细说明本示例的网络安全组及其运行方式。\n\n## 网络安全组 (NSG)\n本示例将构建一个 NSG 组，然后加载六个规则。\n\n>[AZURE.TIP]一般而言，应该先创建特定的“允许”规则，最后再创建一般的“拒绝”规则。分配的优先级确定了要先评估哪些规则。发现要向流量应用哪个特定规则后，不需要评估后续规则。可以朝入站或出站方向（从子网的角度看）应用 NSG 规则。\n\n以声明性的方式为入站流量构建以下规则：\n\n1.  允许内部 DNS 流量（端口 53）\n2.  允许从 Internet 到任何 VM 的 RDP 流量（端口 3389）\n3.  允许从 Internet 到 Web 服务器 (IIS01) 的 HTTP 流量（端口 80）\n4.  允许从 IIS01 到 AppVM1 的任何流量（所有端口）\n5.  拒绝从 Internet 到整个 VNet（两个子网）的任何流量（所有端口）\n6.  拒绝从前端子网到后端子网的任何流量（所有端口）\n\n将这些规则绑定到每个子网后，如果有从 Internet 到 Web 服务器的入站 HTTP 请求，将应用规则 3（允许）和规则 5（拒绝），但由于规则 3 具有较高的优先级，因此只应用规则 3 并忽略规则 5。这样就会允许 HTTP 请求传往 Web 服务器。如果相同的流量尝试传往 DNS01 服务器，则会先应用规则 5（拒绝），因此不允许该流量传递到服务器。规则 6（拒绝）阻止前端子网与后端子网对话（规则 1 和 4 允许的流量除外），这可在攻击者入侵前端上的 Web 应用时保护后端网络，攻击者只能对后端的“受保护”网络进行有限度的访问（只能访问 AppVM01 服务器上公开的资源）。\n\n有一个默认出站规则可允许流量外流到 Internet。在此示例中，我们允许出站流量，且未修改任何出站规则。如果两个方向的流量都要锁定，则需要用户定义的路由，下面的“示例 3”将对此进行介绍。\n\n下面更详细讨论了每个规则（注意：以下列表中以货币符号开头的任何项（例如 $NSGName）均为本文“参考”部分的脚本中的用户定义变量）：\n\n1. 首先需要构建一个网络安全组来保存规则：\n\n        New-AzureNetworkSecurityGroup -Name $NSGName `\n            -Location $DeploymentLocation `\n            -Label \"Security group for $VNetName subnets in $DeploymentLocation\"\n \n2.  本示例中的第一个规则允许所有内部网络之间的 DNS 流量发往后端子网上的 DNS 服务器。该规则有一些重要参数：\n  - “Type”表示此规则的流量作用方向；此方向是从子网或虚拟机的角度判断的（取决于此 NSG 绑定到了哪个位置）。因此，如果 Type 是“Inbound”并且流量进入子网，此规则将适用，而离开子网的流量则不受此规则影响。\n  - “Priority”设置流量的评估顺序。编号越低，优先级就越高。只要将某个规则应用于特定的流量，就不再处理其他规则。因此，如果优先级为 1 的规则允许流量，优先级为 2 的规则拒绝流量，并将这两个规则同时应用于流量，则允许流量流动（规则 1 的优先级更高，因此将发生作用，并且不再应用其他规则）。\n  - “Action”表示是要阻止还是允许受此规则影响的流量。\n\n            Get-AzureNetworkSecurityGroup -Name $NSGName | `\n                Set-AzureNetworkSecurityRule -Name \"Enable Internal DNS\" `\n                -Type Inbound -Priority 100 -Action Allow `\n                -SourceAddressPrefix VIRTUAL_NETWORK -SourcePortRange '*' `\n                -DestinationAddressPrefix $VMIP[4] `\n                -DestinationPortRange '53' `\n                -Protocol *\n\n3.  此规则允许 RDP 流量从 Internet 发往 VNET 中任一子网上任何服务器的 RDP 端口。此规则使用两种特殊地址前缀：“VIRTUAL\\_NETWORK”和“INTERNET”。这样就可以轻松处理较大类别的地址前缀。\n\n        Get-AzureNetworkSecurityGroup -Name $NSGName | `\n            Set-AzureNetworkSecurityRule -Name \"Enable RDP to $VNetName VNet\" `\n            -Type Inbound -Priority 110 -Action Allow `\n            -SourceAddressPrefix INTERNET -SourcePortRange '*' `\n            -DestinationAddressPrefix VIRTUAL_NETWORK `\n            -DestinationPortRange '3389' `\n            -Protocol *\n\n4.  此规则允许入站 Internet 流量抵达 Web 服务器。这不会更改路由行为；只允许目标为 IIS01 的流量通过。因此，如果来自 Internet 的流量将 Web 服务器作为其目标，此规则将允许流量，并停止处理其他规则。（在优先级为 140 的规则中，其他所有入站 Internet 流量均被阻止）。如果你只要处理 HTTP 流量，可将此规则进一步限制为只允许目标端口 80。\n\n        Get-AzureNetworkSecurityGroup -Name $NSGName | `\n            Set-AzureNetworkSecurityRule -Name \"Enable Internet to $VMName[0]\" `\n            -Type Inbound -Priority 120 -Action Allow `\n            -SourceAddressPrefix Internet -SourcePortRange '*' `\n            -DestinationAddressPrefix $VMIP[0] `\n            -DestinationPortRange '*' `\n            -Protocol *\n\n5.  此规则允许流量从 IIS01 服务器传递到 AppVM01 服务器，后面的规则将阻止其他所有从前端到后端的流量。如果要添加的端口是已知的，则可以改善此规则。例如，如果 IIS 服务器只抵达 AppVM01 上的 SQL Server，并且 Web 应用曾遭到入侵，则目标端口范围应该从“*”（任何）更改为 1433（SQL 端口），以缩小 AppVM01 上的入站攻击面。\n\n        Get-AzureNetworkSecurityGroup -Name $NSGName | `\n            Set-AzureNetworkSecurityRule -Name \"Enable $VMName[1] to $VMName[2]\" `\n            -Type Inbound -Priority 130 -Action Allow `\n        -SourceAddressPrefix $VMIP[1] -SourcePortRange '*' `\n        -DestinationAddressPrefix $VMIP[2] `\n        -DestinationPortRange '*' `\n        -Protocol *\n \n6.  此规则将拒绝从 Internet 到网络上任何服务器的流量。结合优先级为 110 和 120 的规则，只允许入站 Internet 流量发往防火墙以及通过 RDP 端口发往其他服务器，除此之外的其他流量将被阻止。\n\n        Get-AzureNetworkSecurityGroup -Name $NSGName | `\n            Set-AzureNetworkSecurityRule `\n            -Name \"Isolate the $VNetName VNet from the Internet\" `\n            -Type Inbound -Priority 140 -Action Deny `\n            -SourceAddressPrefix INTERNET -SourcePortRange '*' `\n            -DestinationAddressPrefix VIRTUAL_NETWORK `\n            -DestinationPortRange '*' `\n            -Protocol *\n \n7.  最后一个规则拒绝从前端子网到后端子网的流量。这是仅限入站的规则，因此允许反向流量（从后端到前端）。\n\n        Get-AzureNetworkSecurityGroup -Name $NSGName | `\n            Set-AzureNetworkSecurityRule `\n            -Name \"Isolate the $FESubnet subnet from the $BESubnet subnet\" `\n            -Type Inbound -Priority 150 -Action Deny `\n            -SourceAddressPrefix $FEPrefix -SourcePortRange '*' `\n            -DestinationAddressPrefix $BEPrefix `\n            -DestinationPortRange '*' `\n            -Protocol * \n\n## 流量方案\n#### （*允许*）从 Web 访问 Web 服务器\n1.  Internet 用户从 FrontEnd001.CloudApp.Net（面向 Internet 的云服务）请求 HTTP 页面\n2.  云服务通过端口 80 上的开放终结点将流量传递到 IIS01（Web 服务器）\n3.  前端子网开始处理入站规则：\n  1.    NSG 规则 1 (DNS) 不适用，将转到下一规则\n  2.    NSG 规则 2 (RDP) 不适用，将转到下一规则\n  3.    NSG 规则 3（Internet 到 IIS01）适用，允许流量，停止处理规则\n4.  流量抵达 Web 服务器 IIS01 的内部 IP 地址（10.0.1.5）\n5.  IIS01 正在侦听 Web 流量，将接收此请求并开始处理请求\n6.  IIS01 请求 AppVM01 上的 SQL Server 提供信息\n7.  前端子网上没有出站规则，允许流量\n8.  后端子网开始处理入站规则：\n  1.    NSG 规则 1 (DNS) 不适用，将转到下一规则\n  2.    NSG 规则 2 (RDP) 不适用，将转到下一规则\n  3.    NSG 规则 3（Internet 到防火墙）不适用，将转到下一规则\n  4.    NSG 规则 4（IIS01 到 AppVM01）适用，允许流量，停止处理规则\n9.  AppVM01 接收 SQL 查询并做出响应\n10. 后端子网上没有出站规则，因此允许响应\n11. 前端子网开始处理入站规则：\n  1.    后端子网到前端子网的入站流量没有适用的 NSG 规则，因此不会应用任何 NSG 规则\n  2.    允许子网间流量的默认系统规则允许此流量，因此允许流量。\n12. IIS 服务器接收 SQL 响应，完成 HTTP 响应并发送给请求方\n13. 前端子网上没有出站规则，因此允许响应，Internet 用户将收到请求的网页。\n\n#### （*允许*）通过 RDP 访问后端\n1.  Internet 上的服务器管理员在 BackEnd001.CloudApp.Net:xxxxx 上请求 AppVM01 的 RDP 会话，其中 xxxxx 是通过 RDP 访问 AppVM01 所用的随机分配端口号（在 Azure 管理门户上或通过 PowerShell 可以找到分配的端口）\n2.  后端子网开始处理入站规则：\n  1.    NSG 规则 1 (DNS) 不适用，将转到下一规则\n  2.    NSG 规则 2 (RDP) 适用，允许流量，停止处理规则\n3.  由于没有出站规则，将应用默认规则并允许返回流量\n4.  已启用 RDP 会话\n5.  AppVM01 提示输入用户名和密码\n\n#### （*允许*）在 DNS 服务器上执行 Web 服务器 DNS 查找\n1.  Web 服务器 IIS01 需要 www.data.gov 上的数据源，但需要解析地址。\n2.  VNet 的网络配置将 DNS01（后端子网上的 10.0.2.4）列为主 DNS 服务器，IIS01 将 DNS 请求发送到 DNS01\n3.  前端子网上没有出站规则，允许流量\n4.  后端子网开始处理入站规则：\n  1.     NSG 规则 1 (DNS) 适用，允许流量，停止处理规则\n5.  DNS 服务器接收请求\n6.  DNS 服务器没有缓存的地址，请求 Internet 上的根 DNS 服务器\n7.  后端子网上没有出站规则，允许流量\n8.  Internet DNS 服务器做出响应，由于此会话是从内部发起的，因此允许响应\n9.  DNS 服务器缓存响应，然后将初始请求响应给 IIS01\n10. 后端子网上没有出站规则，允许流量\n11. 前端子网开始处理入站规则：\n  1.    后端子网到前端子网的入站流量没有适用的 NSG 规则，因此不会应用任何 NSG 规则\n  2.    允许子网间流量的默认系统规则允许此流量，因此允许流量\n12. IIS01 从 DNS01 接收响应\n\n#### （*允许*）Web 服务器访问 AppVM01 上的文件\n1.  IIS01 请求 AppVM01 上的文件\n2.  前端子网上没有出站规则，允许流量\n3.  后端子网开始处理入站规则：\n  1.    NSG 规则 1 (DNS) 不适用，将转到下一规则\n  2.    NSG 规则 2 (RDP) 不适用，将转到下一规则\n  3.    NSG 规则 3（Internet 到 IIS01）不适用，将转到下一规则\n  4.    NSG 规则 4（IIS01 到 AppVM01）适用，允许流量，停止处理规则\n4.  AppVM01 接收请求并以文件做出响应（假设已获得访问授权）\n5.  后端子网上没有出站规则，因此允许响应\n6.  前端子网开始处理入站规则：\n  1.    后端子网到前端子网的入站流量没有适用的 NSG 规则，因此不会应用任何 NSG 规则\n  2.    允许子网间流量的默认系统规则允许此流量，因此允许流量。\n7.  IIS 服务器接收文件\n\n#### （*拒绝*）通过 Web 访问后端服务器\n1.  Internet 用户尝试通过 BackEnd001.CloudApp.Net 服务访问 AppVM01 上的文件\n2.  由于没有为文件共享开放终结点，此流量不会通过云服务抵达服务器\n3.  如果出于某种原因而开放了终结点，NSG 规则 5（Internet 到 VNet）将阻止此流量\n\n#### （*拒绝*）在 DNS 服务器上执行 Web DNS 查找\n1.  Internet 用户尝试通过 BackEnd001.CloudApp.Net 服务查找 DNS01 上的内部 DNS 记录\n2.  由于没有为 DNS 开放终结点，此流量不会通过云服务抵达服务器\n3.  如果出于某种原因而开放了终结点，NSG 规则 5（Internet 到 VNet）将阻止此流量（注意：有两个原因导致规则 1 (DNS) 不适用：首先，源地址是 Internet，此规则只适用于以本地 VNet 作为源；其次，这是允许规则，因此永远不会拒绝流量）\n\n#### （*拒绝*）从 Web 通过防火墙访问 SQL\n1.  Internet 用户从 FrontEnd001.CloudApp.Net（面向 Internet 的云服务）请求 SQL 数据\n2.  由于没有为 SQL 开放终结点，此流量不会通过云服务抵达防火墙\n3.  如果出于某种原因而开放了终结点，前端子网将开始处理入站规则：\n  1.    NSG 规则 1 (DNS) 不适用，将转到下一规则\n  2.    NSG 规则 2 (RDP) 不适用，将转到下一规则\n  3.    NSG 规则 3（Internet 到 IIS01）适用，允许流量，停止处理规则\n4.  流量抵达 IIS01 的内部 IP 地址 (10.0.1.5)\n5.  IIS01 未侦听端口 1433，因此不会对请求做出响应\n\n## 结束语\n这种隔离后端子网与输入流量的方式相当直截了当。\n\n<!-- 可以在[此处][HOME]找到更多示例和网络安全边界的概述。-->\n\n## 参考\n### 主脚本和网络配置\n将完整脚本保存在 PowerShell 脚本文件中。将网络配置保存到名为“NetworkConf1.xml”的文件中。根据需要修改用户定义的变量。运行脚本，然后根据上面“示例 1”部分中所述的防火墙规则设置说明操作。\n\n#### 完整脚本\n此脚本基于用户定义的变量执行以下操作：\n\n1.  连接到 Azure 订阅\n2.  新建存储帐户\n3.  根据网络配置文件中的定义创建新的 VNet 和两个子网\n4.  构建 4 个 Windows Server VM\n5.  配置 NSG，包括：\n  - 创建 NSG\n  - 填入规则\n  - 将 NSG 绑定到相应的子网\n\n此 PowerShell 脚本应该在连接到 Internet 的电脑或服务器上本地运行。\n\n>[AZURE.IMPORTANT]此此脚本运行时，PowerShell 中可能会弹出警告或其他参考性消息。只有以红色字体显示的错误消息才需要引以关注。\n\n\n    <# \n     .SYNOPSIS\n      Example of Network Security Groups in an isolated network (Azure only, no hybrid connections)\n    \n     .DESCRIPTION\n      This script will build out a sample DMZ setup containing:\n       - A default storage account for VM disks\n       - Two new cloud services\n       - Two Subnets (FrontEnd and BackEnd subnets)\n       - One server on the FrontEnd Subnet\n       - Three Servers on the BackEnd Subnet\n       - Network Security Groups to allow/deny traffic patterns as declared\n      \n      Before running script, ensure the network configuration file is created in\n      the directory referenced by $NetworkConfigFile variable (or update the\n      variable to reflect the path and file name of the config file being used).\n    \n     .Notes\n      Security requirements are different for each use case and can be addressed in a\n      myriad of ways. Please be sure that any sensitive data or applications are behind\n      the appropriate layer(s) of protection. This script serves as an example of some\n      of the techniques that can be used, but should not be used for all scenarios. You\n      are responsible to assess your security needs and the appropriate protections\n      needed, and then effectively implement those protections.\n    \n      FrontEnd Service (FrontEnd subnet 10.0.1.0/24)\n       IIS01      - 10.0.1.5\n     \n      BackEnd Service (BackEnd subnet 10.0.2.0/24)\n       DNS01      - 10.0.2.4\n       AppVM01    - 10.0.2.5\n       AppVM02    - 10.0.2.6\n    \n    #>\n    \n    # Fixed Variables\n        $LocalAdminPwd = Read-Host -Prompt \"Enter Local Admin Password to be used for all VMs\"\n        $VMName = @()\n        $ServiceName = @()\n        $VMFamily = @()\n        $img = @()\n        $size = @()\n        $SubnetName = @()\n        $VMIP = @()\n    \n    # User Defined Global Variables\n      # These should be changes to reflect your subscription and services\n      # Invalid options will fail in the validation section\n    \n      # Subscription Access Details\n        $subID = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    \n      # VM Account, Location, and Storage Details\n        $LocalAdmin = \"theAdmin\"\n        $DeploymentLocation = \"China North\"\n        $StorageAccountName = \"vmstore02\"\n    \n      # Service Details\n        $FrontEndService = \"FrontEnd001\"\n        $BackEndService = \"BackEnd001\"\n    \n      # Network Details\n        $VNetName = \"CorpNetwork\"\n        $FESubnet = \"FrontEnd\"\n        $FEPrefix = \"10.0.1.0/24\"\n        $BESubnet = \"BackEnd\"\n        $BEPrefix = \"10.0.2.0/24\"\n        $NetworkConfigFile = \"C:\\Scripts\\NetworkConf1.xml\"\n    \n      # VM Base Disk Image Details\n        $SrvImg = Get-AzureVMImage | Where {$_.ImageFamily -match 'Windows Server 2012 R2 Datacenter'} | sort PublishedDate -Descending | Select ImageName -First 1 | ForEach {$_.ImageName}\n      \n      # NSG Details\n        $NSGName = \"MyVNetSG\"\n    \n    # User Defined VM Specific Config\n        # Note: To ensure proper NSG Rule creation later in this script:\n        #       - The Web Server must be VM 0\n        #       - The AppVM1 Server must be VM 1\n        #       - The DNS server must be VM 3\n        #\n        #       Otherwise the NSG rules in the last section of this\n        #       script will need to be changed to match the modified\n        #       VM array numbers ($i) so the NSG Rule IP addresses\n        #       are aligned to the associated VM IP addresses.\n    \n        # VM 0 - The Web Server\n          $VMName += \"IIS01\"\n          $ServiceName += $FrontEndService\n          $VMFamily += \"Windows\"\n          $img += $SrvImg\n          $size += \"Standard_D3\"\n          $SubnetName += $FESubnet\n          $VMIP += \"10.0.1.5\"\n    \n        # VM 1 - The First Application Server\n          $VMName += \"AppVM01\"\n          $ServiceName += $BackEndService\n          $VMFamily += \"Windows\"\n          $img += $SrvImg\n          $size += \"Standard_D3\"\n          $SubnetName += $BESubnet\n          $VMIP += \"10.0.2.5\"\n    \n        # VM 2 - The Second Application Server\n          $VMName += \"AppVM02\"\n          $ServiceName += $BackEndService\n          $VMFamily += \"Windows\"\n          $img += $SrvImg\n          $size += \"Standard_D3\"\n          $SubnetName += $BESubnet\n          $VMIP += \"10.0.2.6\"\n    \n        # VM 3 - The DNS Server\n          $VMName += \"DNS01\"\n          $ServiceName += $BackEndService\n          $VMFamily += \"Windows\"\n          $img += $SrvImg\n          $size += \"Standard_D3\"\n          $SubnetName += $BESubnet\n          $VMIP += \"10.0.2.4\"\n\n    # ----------------------------- #\n    # No User Defined Varibles or   #\n    # Configuration past this point #\n    # ----------------------------- #   \n\n      # Get your Azure accounts\n        Add-AzureAccount\n        Set-AzureSubscription –SubscriptionId $subID -ErrorAction Stop\n        Select-AzureSubscription -SubscriptionId $subID -Current -ErrorAction Stop\n    \n      # Create Storage Account\n        If (Test-AzureName -Storage -Name $StorageAccountName) { \n            Write-Host \"Fatal Error: This storage account name is already in use, please pick a diffrent name.\" -ForegroundColor Red\n            Return}\n        Else {Write-Host \"Creating Storage Account\" -ForegroundColor Cyan \n              New-AzureStorageAccount -Location $DeploymentLocation -StorageAccountName $StorageAccountName}\n    \n      # Update Subscription Pointer to New Storage Account\n        Write-Host \"Updating Subscription Pointer to New Storage Account\" -ForegroundColor Cyan \n        Set-AzureSubscription –SubscriptionId $subID -CurrentStorageAccountName $StorageAccountName -ErrorAction Stop\n    \n    # Validation\n    $FatalError = $false\n    \n    If (-Not (Get-AzureLocation | Where {$_.DisplayName -eq $DeploymentLocation})) {\n         Write-Host \"This Azure Location was not found or available for use\" -ForegroundColor Yellow\n         $FatalError = $true}\n    \n    If (Test-AzureName -Service -Name $FrontEndService) { \n        Write-Host \"The FrontEndService service name is already in use, please pick a different service name.\" -ForegroundColor Yellow\n        $FatalError = $true}\n    Else { Write-Host \"The FrontEndService service name is valid for use.\" -ForegroundColor Green}\n    \n    If (Test-AzureName -Service -Name $BackEndService) { \n        Write-Host \"The BackEndService service name is already in use, please pick a different service name.\" -ForegroundColor Yellow\n        $FatalError = $true}\n    Else { Write-Host \"The BackEndService service name is valid for use.\" -ForegroundColor Green}\n    \n    If (-Not (Test-Path $NetworkConfigFile)) { \n        Write-Host 'The network config file was not found, please update the $NetworkConfigFile variable to point to the network config xml file.' -ForegroundColor Yellow\n        $FatalError = $true}\n    Else { Write-Host \"The network config file was found\" -ForegroundColor Green\n            If (-Not (Select-String -Pattern $DeploymentLocation -Path $NetworkConfigFile)) {\n                Write-Host 'The deployment location was not found in the network config file, please check the network config file to ensure the $DeploymentLocation varible is correct and the netowrk config file matches.' -ForegroundColor Yellow\n                $FatalError = $true}\n            Else { Write-Host \"The deployment location was found in the network config file.\" -ForegroundColor Green}}\n    \n    If ($FatalError) {\n        Write-Host \"A fatal error has occured, please see the above messages for more information.\" -ForegroundColor Red\n        Return}\n    Else { Write-Host \"Validation passed, now building the environment.\" -ForegroundColor Green}\n    \n    # Create VNET\n        Write-Host \"Creating VNET\" -ForegroundColor Cyan \n        Set-AzureVNetConfig -ConfigurationPath $NetworkConfigFile -ErrorAction Stop\n    \n    # Create Services\n        Write-Host \"Creating Services\" -ForegroundColor Cyan\n        New-AzureService -Location $DeploymentLocation -ServiceName $FrontEndService -ErrorAction Stop\n        New-AzureService -Location $DeploymentLocation -ServiceName $BackEndService -ErrorAction Stop\n    \n    # Build VMs\n        $i=0\n        $VMName | Foreach {\n            Write-Host \"Building $($VMName[$i])\" -ForegroundColor Cyan\n            New-AzureVMConfig -Name $VMName[$i] -ImageName $img[$i] –InstanceSize $size[$i] | `\n                Add-AzureProvisioningConfig -Windows -AdminUsername $LocalAdmin -Password $LocalAdminPwd  | `\n                Set-AzureSubnet  –SubnetNames $SubnetName[$i] | `\n                Set-AzureStaticVNetIP -IPAddress $VMIP[$i] | `\n                Set-AzureVMMicrosoftAntimalwareExtension -AntimalwareConfiguration '{\"AntimalwareEnabled\" : true}' | `\n                Remove-AzureEndpoint -Name \"PowerShell\" | `\n                New-AzureVM –ServiceName $ServiceName[$i] -VNetName $VNetName -Location $DeploymentLocation\n                # Note: A Remote Desktop endpoint is automatically created when each VM is created.\n            $i++\n        }\n        # Add HTTP Endpoint for IIS01\n        Get-AzureVM -ServiceName $ServiceName[0] -Name $VMName[0] | Add-AzureEndpoint -Name HTTP -Protocol tcp -LocalPort 80 -PublicPort 80 | Update-AzureVM\n    \n    # Configure NSG\n        Write-Host \"Configuring the Network Security Group (NSG)\" -ForegroundColor Cyan\n        \n      # Build the NSG\n        Write-Host \"Building the NSG\" -ForegroundColor Cyan\n        New-AzureNetworkSecurityGroup -Name $NSGName -Location $DeploymentLocation -Label \"Security group for $VNetName subnets in $DeploymentLocation\"\n    \n      # Add NSG Rules\n        Write-Host \"Writing rules into the NSG\" -ForegroundColor Cyan\n        Get-AzureNetworkSecurityGroup -Name $NSGName | Set-AzureNetworkSecurityRule -Name \"Enable Internal DNS\" -Type Inbound -Priority 100 -Action Allow `\n            -SourceAddressPrefix VIRTUAL_NETWORK -SourcePortRange '*' `\n            -DestinationAddressPrefix $VMIP[3] -DestinationPortRange '53' `\n            -Protocol *\n    \n        Get-AzureNetworkSecurityGroup -Name $NSGName | Set-AzureNetworkSecurityRule -Name \"Enable RDP to $VNetName VNet\" -Type Inbound -Priority 110 -Action Allow `\n            -SourceAddressPrefix INTERNET -SourcePortRange '*' `\n            -DestinationAddressPrefix VIRTUAL_NETWORK -DestinationPortRange '3389' `\n            -Protocol *\n    \n        Get-AzureNetworkSecurityGroup -Name $NSGName | Set-AzureNetworkSecurityRule -Name \"Enable Internet to $($VMName[0])\" -Type Inbound -Priority 120 -Action Allow `\n            -SourceAddressPrefix Internet -SourcePortRange '*' `\n            -DestinationAddressPrefix $VMIP[0] -DestinationPortRange '*' `\n            -Protocol *\n    \n        Get-AzureNetworkSecurityGroup -Name $NSGName | Set-AzureNetworkSecurityRule -Name \"Enable $($VMName[0]) to $($VMName[1])\" -Type Inbound -Priority 130 -Action Allow `\n            -SourceAddressPrefix $VMIP[0] -SourcePortRange '*' `\n            -DestinationAddressPrefix $VMIP[1] -DestinationPortRange '*' `\n            -Protocol *\n        \n        Get-AzureNetworkSecurityGroup -Name $NSGName | Set-AzureNetworkSecurityRule -Name \"Isolate the $VNetName VNet from the Internet\" -Type Inbound -Priority 140 -Action Deny `\n            -SourceAddressPrefix INTERNET -SourcePortRange '*' `\n            -DestinationAddressPrefix VIRTUAL_NETWORK -DestinationPortRange '*' `\n            -Protocol *\n    \n        Get-AzureNetworkSecurityGroup -Name $NSGName | Set-AzureNetworkSecurityRule -Name \"Isolate the $FESubnet subnet from the $BESubnet subnet\" -Type Inbound -Priority 150 -Action Deny `\n            -SourceAddressPrefix $FEPrefix -SourcePortRange '*' `\n            -DestinationAddressPrefix $BEPrefix -DestinationPortRange '*' `\n            -Protocol *\n    \n        # Assign the NSG to the Subnets\n            Write-Host \"Binding the NSG to both subnets\" -ForegroundColor Cyan\n            Set-AzureNetworkSecurityGroupToSubnet -Name $NSGName -SubnetName $FESubnet -VirtualNetworkName $VNetName\n            Set-AzureNetworkSecurityGroupToSubnet -Name $NSGName -SubnetName $BESubnet -VirtualNetworkName $VNetName\n    \n    # Optional Post-script Manual Configuration\n      # Install Test Web 应用(Run Post-Build Script on the IIS Server)\n      # Install Backend resource (Run Post-Build Script on the AppVM01)\n      Write-Host\n      Write-Host \"Build Complete!\" -ForegroundColor Green\n      Write-Host\n      Write-Host \"Optional Post-script Manual Configuration Steps\" -ForegroundColor Gray\n      Write-Host \" - Install Test Web 应用(Run Post-Build Script on the IIS Server)\" -ForegroundColor Gray\n      Write-Host \" - Install Backend resource (Run Post-Build Script on the AppVM01)\" -ForegroundColor Gray\n      Write-Host\n      \n\n#### 网络配置文件\n使用更新的位置保存此 xml 文件，并将此文件的链接添加到上述脚本中的 $NetworkConfigFile 变量。\n    \n    <NetworkConfiguration xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2011/07/NetworkConfiguration\">\n      <VirtualNetworkConfiguration>\n        <Dns>\n          <DnsServers>\n            <DnsServer name=\"DNS01\" IPAddress=\"10.0.2.4\" />\n            <DnsServer name=\"Level3\" IPAddress=\"209.244.0.3\" />\n          </DnsServers>\n        </Dns>\n        <VirtualNetworkSites>\n          <VirtualNetworkSite name=\"CorpNetwork\" Location=\"China North\">\n            <AddressSpace>\n              <AddressPrefix>10.0.0.0/16</AddressPrefix>\n            </AddressSpace>\n            <Subnets>\n              <Subnet name=\"FrontEnd\">\n                <AddressPrefix>10.0.1.0/24</AddressPrefix>\n              </Subnet>\n              <Subnet name=\"BackEnd\">\n                <AddressPrefix>10.0.2.0/24</AddressPrefix>\n              </Subnet>\n            </Subnets>\n            <DnsServersRef>\n              <DnsServerRef name=\"DNS01\" />\n              <DnsServerRef name=\"Level3\" />\n            </DnsServersRef>\n          </VirtualNetworkSite>\n        </VirtualNetworkSites>\n      </VirtualNetworkConfiguration>\n    </NetworkConfiguration>\n\n#### 示例应用程序脚本\n如果你想要为本示例和其他外围网络示例安装示例应用程序，以下链接便已提供了一个：[示例应用程序脚本][SampleApp]\n\n<!--Image References-->\n[1]: ./media/virtual-networks-dmz-nsg-asm/example1design.png \"使用 NSG 的入站外围网络\"\n\n<!--Link References-->\n[HOME]: /documentation/articles/best-practices-network-security\n[SampleApp]: /documentation/articles/virtual-networks-sample-app\n\n<!---HONumber=82-->"
}