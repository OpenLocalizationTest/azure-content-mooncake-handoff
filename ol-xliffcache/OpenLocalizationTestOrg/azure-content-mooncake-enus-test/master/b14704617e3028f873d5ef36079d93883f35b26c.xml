{
  "nodes": [
    {
      "content": "与安全边界环境配合使用的示例应用程序 | Azure",
      "pos": [
        26,
        52
      ]
    },
    {
      "content": "创建外围网络以测试流量传送方案后，请部署这个简单的 Web 应用",
      "pos": [
        70,
        102
      ]
    },
    {
      "content": "与安全边界环境配合使用的示例应用程序",
      "pos": [
        317,
        335
      ]
    },
    {
      "content": "这些 PowerShell 脚本可以在 IIS01 和 AppVM01 服务器本地上运行，以安装和设置一个极简单的 Web 应用，显示来自前端 IIS01 服务器的 html 网页和来自后端 AppVM01 服务器的内容。",
      "pos": [
        368,
        479
      ]
    },
    {
      "content": "此应用程序提供简单的测试环境，可测试许多外围网络示例，以及终结点、NSG、UDR 及防火墙规则的更改如何影响流量。",
      "pos": [
        481,
        538
      ]
    },
    {
      "content": "允许 ICMP 的防火墙规则",
      "pos": [
        543,
        557
      ]
    },
    {
      "content": "这个简单的 PowerShell 语句可以在任何 Windows VM 上运行，以允许 ICMP (Ping) 流量。由于这可允许 ping 协议通过 Windows 防火墙，因此让测试和疑难解答变得更轻松（ICMP 在多数的 Linux 分发版上默认为打开）。",
      "pos": [
        558,
        689
      ]
    },
    {
      "pos": [
        852,
        886
      ],
      "content": "<bpt id=\"p1\">**</bpt>注意：<ept id=\"p1\">**</ept>如果你使用以下脚本，添加的这个防火墙规则是第一个语句。"
    },
    {
      "content": "IIS01 - Web 应用安装脚本",
      "pos": [
        891,
        909
      ]
    },
    {
      "content": "此脚本将：",
      "pos": [
        910,
        915
      ]
    },
    {
      "content": "在本地服务器 Windows 防火墙打开 IMCPv4 (Ping) 以方便测试",
      "pos": [
        921,
        961
      ]
    },
    {
      "content": "安装 IIS 和 .Net Framework v4.5",
      "pos": [
        966,
        994
      ]
    },
    {
      "content": "创建 ASP.NET 网页和 Web.config 文件",
      "pos": [
        999,
        1027
      ]
    },
    {
      "content": "更改默认应用程序池以方便访问文件",
      "pos": [
        1032,
        1048
      ]
    },
    {
      "content": "将匿名用户设置为你的管理员帐户和密码",
      "pos": [
        1053,
        1071
      ]
    },
    {
      "content": "在通过 RDP 访问 IIS01 时，此 PowerShell 脚本应在本地运行。",
      "pos": [
        1073,
        1114
      ]
    },
    {
      "content": "AppVM01 - 文件服务器安装脚本",
      "pos": [
        6452,
        6471
      ]
    },
    {
      "content": "此脚本设置此简单应用程序的后端。此脚本将：",
      "pos": [
        6472,
        6493
      ]
    },
    {
      "content": "在防火墙打开 IMCPv4 (Ping) 以方便测试",
      "pos": [
        6499,
        6525
      ]
    },
    {
      "content": "创建新目录",
      "pos": [
        6530,
        6535
      ]
    },
    {
      "content": "创建上述网页要远程访问的文本文件",
      "pos": [
        6540,
        6556
      ]
    },
    {
      "content": "将目录和文件的权限设为匿名以允许访问",
      "pos": [
        6561,
        6579
      ]
    },
    {
      "content": "关闭 IE 增强的安全性以方便从此服务器浏览",
      "pos": [
        6584,
        6606
      ]
    },
    {
      "pos": [
        6610,
        6714
      ],
      "content": "<ph id=\"ph1\">[AZURE.IMPORTANT]</ph><bpt id=\"p1\">**</bpt>最佳实践<ept id=\"p1\">**</ept>：切勿在生产服务器上关闭“IE 增强的安全性”，而且从生产服务器浏览网页通常不是个好主意。此外，最好不要打开文件共享来进行匿名访问，此处这样做是为了简单起见。"
    },
    {
      "content": "在通过 RDP 访问 AppVM01 时，此 PowerShell 脚本应在本地运行。必须以管理员身份运行 PowerShell 才能确保成功执行。",
      "pos": [
        6716,
        6790
      ]
    },
    {
      "content": "DNS01 - DNS 服务器安装脚本",
      "pos": [
        8123,
        8142
      ]
    },
    {
      "content": "本示例应用程序中未包含设置 DNS 服务器的脚本。如果测试防火墙规则、NSG 或 UDR 时需要包含 DNS 流量，必须手动安装 DNS01 服务器。这两个示例的网络配置 XML 文件都包含 DNS01 作为主要 DNS 服务器，而由第 3 级托管的公共 DNS 服务器则作为备份 DNS 服务器。第 3 级 DNS 服务器是非本地流量使用的实际 DNS 服务器，若未安装 DNS01，就不会有本地 DNS。",
      "pos": [
        8143,
        8347
      ]
    }
  ],
  "content": "<properties\n   pageTitle=\"与安全边界环境配合使用的示例应用程序 | Azure\"\n   description=\"创建外围网络以测试流量传送方案后，请部署这个简单的 Web 应用\"\n   services=\"virtual-network\"\n   documentationCenter=\"na\"\n   authors=\"tracsman\"\n   manager=\"rossort\"\n   editor=\"\"/>\n\n<tags\n    ms.service=\"virtual-network\"\n    ms.date=\"09/16/2015\"\n    wacn.date=\"01/21/2016\"/>\n\n# 与安全边界环境配合使用的示例应用程序\n\n<!-- [返回安全边界最佳实践页面][HOME] -->\n\n这些 PowerShell 脚本可以在 IIS01 和 AppVM01 服务器本地上运行，以安装和设置一个极简单的 Web 应用，显示来自前端 IIS01 服务器的 html 网页和来自后端 AppVM01 服务器的内容。\n\n此应用程序提供简单的测试环境，可测试许多外围网络示例，以及终结点、NSG、UDR 及防火墙规则的更改如何影响流量。\n\n## 允许 ICMP 的防火墙规则\n这个简单的 PowerShell 语句可以在任何 Windows VM 上运行，以允许 ICMP (Ping) 流量。由于这可允许 ping 协议通过 Windows 防火墙，因此让测试和疑难解答变得更轻松（ICMP 在多数的 Linux 分发版上默认为打开）。\n\n    # Turn On ICMPv4\n    New-NetFirewallRule -Name Allow_ICMPv4 -DisplayName \"Allow ICMPv4\" `\n        -Protocol ICMPv4 -Enabled True -Profile Any -Action Allow\n\n**注意：**如果你使用以下脚本，添加的这个防火墙规则是第一个语句。\n\n## IIS01 - Web 应用安装脚本\n此脚本将：\n\n1.  在本地服务器 Windows 防火墙打开 IMCPv4 (Ping) 以方便测试\n2.  安装 IIS 和 .Net Framework v4.5\n3.  创建 ASP.NET 网页和 Web.config 文件\n4.  更改默认应用程序池以方便访问文件\n5.  将匿名用户设置为你的管理员帐户和密码\n\n在通过 RDP 访问 IIS01 时，此 PowerShell 脚本应在本地运行。\n\n    # IIS Server Post Build Config Script\n    # Get Admin Account and Password\n        Write-Host \"Please enter the admin account information used to create this VM:\" -ForegroundColor Cyan\n        $theAdmin = Read-Host -Prompt \"The Admin Account Name (no domain or machine name)\"\n        $thePassword = Read-Host -Prompt \"The Admin Password\"\n        \n    # Turn On ICMPv4\n        Write-Host \"Creating ICMP Rule in Windows Firewall\" -ForegroundColor Cyan\n        New-NetFirewallRule -Name Allow_ICMPv4 -DisplayName \"Allow ICMPv4\" -Protocol ICMPv4 -Enabled True -Profile Any -Action Allow\n        \n    # Install IIS\n        Write-Host \"Installing IIS and .Net 4.5, this can take some time, like 15+ minutes...\" -ForegroundColor Cyan\n        add-windowsfeature Web-Server, Web-WebServer, Web-Common-Http, Web-Default-Doc, Web-Dir-Browsing, Web-Http-Errors, Web-Static-Content, Web-Health, Web-Http-Logging, Web-Performance, Web-Stat-Compression, Web-Security, Web-Filtering, Web-App-Dev, Web-ISAPI-Ext, Web-ISAPI-Filter, Web-Net-Ext, Web-Net-Ext45, Web-Asp-Net45, Web-Mgmt-Tools, Web-Mgmt-Console\n        \n    # Create Web App Pages\n        Write-Host \"Creating Web page and Web.Config file\" -ForegroundColor Cyan\n        $MainPage = '<%@ Page Language=\"vb\" AutoEventWireup=\"false\" %>\n        <%@ Import Namespace=\"System.IO\" %>\n        <script language=\"vb\" runat=\"server\">\n            Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load\n                Dim FILENAME As String = \"\\\\10.0.2.5\\WebShare\\Rand.txt\"\n                Dim objStreamReader As StreamReader\n                objStreamReader = File.OpenText(FILENAME)\n                Dim contents As String = objStreamReader.ReadToEnd()\n                lblOutput.Text = contents\n                objStreamReader.Close()\n                lblTime.Text = Now()\n            End Sub\n        </script>\n            \n        <!DOCTYPE html>\n        <html xmlns=\"http://www.w3.org/1999/xhtml\">\n        <head runat=\"server\">\n            <title>DMZ Example App</title>\n        </head>\n        <body style=\"font-family: Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif;\">\n          <form id=\"frmMain\" runat=\"server\">\n            <div>\n              <h1>Looks like you made it!</h1>\n              This is a page from the inside (a web server on a private network),<br />\n              and it is making its way to the outside! (If you are viewing this from the internet)<br />\n              <br />\n              The following sections show:\n              <ul style=\"margin-top: 0px;\">\n                <li> Local Server Time - Shows if this page is or isnt cached anywhere</li>\n                <li> File Output - Shows that the web server is reaching AppVM01 on the backend subnet and successfully returning content</li>\n                <li> Image from the Internet - Doesnt really show anything, but it made me happy to see this when the app worked</li>\n              </ul>\n              <div style=\"border: 2px solid #8AC007; border-radius: 25px; padding: 20px; margin: 10px; width: 650px;\">\n                <b>Local Web Server Time</b>: <asp:Label runat=\"server\" ID=\"lblTime\" /></div>\n              <div style=\"border: 2px solid #8AC007; border-radius: 25px; padding: 20px; margin: 10px; width: 650px;\">\n                <b>File Output from AppVM01</b>: <asp:Label runat=\"server\" ID=\"lblOutput\" /></div>\n              <div style=\"border: 2px solid #8AC007; border-radius: 25px; padding: 20px; margin: 10px; width: 650px;\">\n                <b>Image File Linked from the Internet</b>:<br />\n                <br />\n                <img src=\"http://sd.keepcalm-o-matic.co.uk/i/keep-calm-you-made-it-7.png\" alt=\"You made it!\" width=\"150\" length=\"175\"/></div>\n            </div>\n          </form>\n        </body>\n        </html>'\n        \n        $WebConfig ='<?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <configuration>\n          <system.web>\n            <compilation debug=\"true\" strict=\"false\" explicit=\"true\" targetFramework=\"4.5\" />\n            <httpRuntime targetFramework=\"4.5\" />\n            <identity impersonate=\"true\" />\n            <customErrors mode=\"Off\"/>\n          </system.web>\n          <system.webServer>\n            <defaultDocument>\n              <files>\n                <add value=\"Home.aspx\" />\n              </files>\n            </defaultDocument>\n          </system.webServer>\n        </configuration>'\n            \n        $MainPage | Out-File -FilePath \"C:\\inetpub\\wwwroot\\Home.aspx\" -Encoding ascii\n        $WebConfig | Out-File -FilePath \"C:\\inetpub\\wwwroot\\Web.config\" -Encoding ascii\n    \n    # Set App Pool to Clasic Pipeline to remote file access will work easier\n        Write-Host \"Updaing IIS Settings\" -ForegroundColor Cyan\n        c:\\windows\\system32\\inetsrv\\appcmd.exe set app \"Default Web Site/\" /applicationPool:\".NET v4.5 Classic\"\n        c:\\windows\\system32\\inetsrv\\appcmd.exe set config \"Default Web Site/\" /section:system.webServer/security/authentication/anonymousAuthentication /userName:$theAdmin /password:$thePassword /commit:apphost\n        \n    # Make sure the IIS settings take\n        Write-Host \"Restarting the W3SVC\" -ForegroundColor Cyan\n        Restart-Service -Name W3SVC\n        \n        Write-Host\n        Write-Host \" Web App Creation Successfull!\" -ForegroundColor Green\n        Write-Host\n\n\n## AppVM01 - 文件服务器安装脚本\n此脚本设置此简单应用程序的后端。此脚本将：\n\n1.  在防火墙打开 IMCPv4 (Ping) 以方便测试\n2.  创建新目录\n3.  创建上述网页要远程访问的文本文件\n4.  将目录和文件的权限设为匿名以允许访问\n5.  关闭 IE 增强的安全性以方便从此服务器浏览 \n\n>[AZURE.IMPORTANT]**最佳实践**：切勿在生产服务器上关闭“IE 增强的安全性”，而且从生产服务器浏览网页通常不是个好主意。此外，最好不要打开文件共享来进行匿名访问，此处这样做是为了简单起见。\n\n在通过 RDP 访问 AppVM01 时，此 PowerShell 脚本应在本地运行。必须以管理员身份运行 PowerShell 才能确保成功执行。\n    \n    # AppVM01 Server Post Build Config Script\n    # PowerShell must be run as Administrator for Net Share commands to work\n    \n    # Turn On ICMPv4\n        New-NetFirewallRule -Name Allow_ICMPv4 -DisplayName \"Allow ICMPv4\" -Protocol ICMPv4 -Enabled True -Profile Any -Action Allow\n    \n    # Create Directory\n        New-Item \"C:\\WebShare\" -ItemType Directory\n    \n    # Write out Rand.txt\n        $FileContent = \"Hello, I'm the contents of a remote file on AppVM01.\"\n        $FileContent | Out-File -FilePath \"C:\\WebShare\\Rand.txt\" -Encoding ascii\n    \n    # Set Permissions on share\n        $Acl = Get-Acl \"C:\\WebShare\"\n        $AccessRule = New-Object system.security.accesscontrol.filesystemaccessrule(\"Everyone\",\"ReadAndExecute, Synchronize\",\"ContainerInherit, ObjectInherit\",\"InheritOnly\",\"Allow\")\n        $Acl.SetAccessRule($AccessRule)\n        Set-Acl \"C:\\WebShare\" $Acl\n    \n    # Create network share\n        Net Share WebShare=C:\\WebShare \"/grant:Everyone,READ\"\n    \n    # Turn Off IE Enhanced Security Configuration for Admins\n        Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{A509B1A7-37EF-4b3f-8CFC-4F3A74704073}\" -Name \"IsInstalled\" -Value 0\n    \n        Write-Host\n        Write-Host \"File Server Setup Successfull!\" -ForegroundColor Green\n        Write-Host\n    \n\n## DNS01 - DNS 服务器安装脚本\n本示例应用程序中未包含设置 DNS 服务器的脚本。如果测试防火墙规则、NSG 或 UDR 时需要包含 DNS 流量，必须手动安装 DNS01 服务器。这两个示例的网络配置 XML 文件都包含 DNS01 作为主要 DNS 服务器，而由第 3 级托管的公共 DNS 服务器则作为备份 DNS 服务器。第 3 级 DNS 服务器是非本地流量使用的实际 DNS 服务器，若未安装 DNS01，就不会有本地 DNS。\n\n<!--Link References-->\n[HOME]: /documentation/articles/best-practices-network-security\n\n<!---HONumber=82-->"
}