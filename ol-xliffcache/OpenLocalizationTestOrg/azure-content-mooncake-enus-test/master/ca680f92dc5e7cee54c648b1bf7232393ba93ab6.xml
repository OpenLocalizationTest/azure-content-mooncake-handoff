{
  "nodes": [
    {
      "content": "使用通知中心向用户发送跨平台通知 (ASP.NET)",
      "pos": [
        27,
        53
      ]
    },
    {
      "content": "了解如何使用通知中心模板在单个请求中发送针对所有平台的平台未知通知。",
      "pos": [
        73,
        107
      ]
    },
    {
      "content": "使用通知中心向用户发送跨平台通知",
      "pos": [
        334,
        350
      ]
    },
    {
      "pos": [
        353,
        564
      ],
      "content": "在上一教程<bpt id=\"p1\">[</bpt>使用通知中心通知用户<ept id=\"p1\">][使用通知中心通知用户]</ept>中，你了解了如何将通知推送到经过身份验证的特定用户所注册的所有设备。在该教程中，需要使用多个请求将通知发送到每个支持的客户端平台。通知中心支持模板，这允许你指定特定设备要如何接收通知。这简化了发送跨平台通知。本主题演示如何利用模板在单个请求中发送针对所有平台的平台未知通知。有关模板的更多详细信息，请参见 [Azure 通知中心概述][Azure 通知中心概述]。"
    },
    {
      "pos": [
        568,
        697
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>通知中心允许设备使用同一标记注册多个模板。在这种情况下，针对该标签的传入消息将导致多个通知发送到设备（每个通知对应一个模板）。这允许你在多个可视通知中显示同一消息，如作为 Windows 应用商店应用程序中的徽章和 toast 通知。"
    },
    {
      "content": "完成以下步骤来使用模板发送跨平台通知：",
      "pos": [
        699,
        718
      ]
    },
    {
      "content": "在 Visual Studio 的解决方案资源管理器中，展开“控制器”文件夹，然后打开 RegisterController.cs 文件。",
      "pos": [
        723,
        792
      ]
    },
    {
      "pos": [
        798,
        848
      ],
      "content": "在 <bpt id=\"p1\">**</bpt>Post<ept id=\"p1\">**</ept> 方法中查找用于创建新注册的代码块，并将 <ph id=\"ph1\">`switch`</ph> 内容替换为以下代码："
    },
    {
      "content": "此代码调用平台特定的方法来创建模板注册而非本机注册。不需要修改现有注册，因为模板注册派生自本机注册。",
      "pos": [
        2259,
        2309
      ]
    },
    {
      "pos": [
        2314,
        2372
      ],
      "content": "在 <bpt id=\"p1\">**</bpt>Notifications<ept id=\"p1\">**</ept> 控制器中，将 <bpt id=\"p2\">**</bpt>sendNotification<ept id=\"p2\">**</ept> 方法替换为以下代码："
    },
    {
      "pos": [
        2827,
        2896
      ],
      "content": "此代码将通知同时发送到所有平台，而不必指定本机负载。通知中心使用提供的<bpt id=\"p1\">*</bpt>标签<ept id=\"p1\">*</ept>值（在注册的模板中指定）生成正确的负载并将它传递到每个设备。"
    },
    {
      "content": "重新发布 WebApi 后端项目。",
      "pos": [
        2901,
        2918
      ]
    },
    {
      "content": "再次运行客户端应用程序并验证注册成功。",
      "pos": [
        2923,
        2942
      ]
    },
    {
      "content": "（可选）将客户端应用程序部署到第二个设备，然后运行该应用程序。",
      "pos": [
        2947,
        2978
      ]
    },
    {
      "content": "请注意通知将显示在每个设备上。",
      "pos": [
        2984,
        2999
      ]
    },
    {
      "content": "后续步骤",
      "pos": [
        3004,
        3008
      ]
    },
    {
      "content": "现在，你已完成本教程，可以查看以下主题了解有关通知中心和模板的更多信息：",
      "pos": [
        3010,
        3046
      ]
    },
    {
      "content": "演示使用模板的另一方案",
      "pos": [
        3073,
        3084
      ]
    },
    {
      "content": "Azure 通知中心概述",
      "pos": [
        3093,
        3105
      ]
    },
    {
      "content": "“概述”主题提供有关模板的更多详细信息。",
      "pos": [
        3124,
        3144
      ]
    },
    {
      "content": "包含模板表示语言参考。",
      "pos": [
        3184,
        3195
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"使用通知中心向用户发送跨平台通知 (ASP.NET)\" \n    description=\"了解如何使用通知中心模板在单个请求中发送针对所有平台的平台未知通知。\"\n    services=\"notification-hubs\"\n    documentationCenter=\"\"\n    authors=\"wesmc7777\"\n    manager=\"dwrede\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"notification-hubs\"\n    ms.date=\"12/11/2015\" \n    wacn.date=\"01/14/2016\"/>\n    \n# 使用通知中心向用户发送跨平台通知\n\n\n在上一教程[使用通知中心通知用户][使用通知中心通知用户]中，你了解了如何将通知推送到经过身份验证的特定用户所注册的所有设备。在该教程中，需要使用多个请求将通知发送到每个支持的客户端平台。通知中心支持模板，这允许你指定特定设备要如何接收通知。这简化了发送跨平台通知。本主题演示如何利用模板在单个请求中发送针对所有平台的平台未知通知。有关模板的更多详细信息，请参见 [Azure 通知中心概述][Azure 通知中心概述]。\n\n> [AZURE.NOTE]通知中心允许设备使用同一标记注册多个模板。在这种情况下，针对该标签的传入消息将导致多个通知发送到设备（每个通知对应一个模板）。这允许你在多个可视通知中显示同一消息，如作为 Windows 应用商店应用程序中的徽章和 toast 通知。\n\n完成以下步骤来使用模板发送跨平台通知：\n\n1. 在 Visual Studio 的解决方案资源管理器中，展开“控制器”文件夹，然后打开 RegisterController.cs 文件。 \n\n2. 在 **Post** 方法中查找用于创建新注册的代码块，并将 `switch` 内容替换为以下代码：\n\n        switch (deviceUpdate.Platform)\n        {\n            case \"mpns\":\n                var toastTemplate = \"<?xml version=\"1.0\" encoding=\"utf-8\"?>\" +\n                    \"<wp:Notification xmlns:wp=\"WPNotification\">\" +\n                       \"<wp:Toast>\" +\n                            \"<wp:Text1>$(message)</wp:Text1>\" +\n                       \"</wp:Toast> \" +\n                    \"</wp:Notification>\";\n                registration = new MpnsTemplateRegistrationDescription(deviceUpdate.Handle, toastTemplate);\n                break;\n            case \"wns\":\n                toastTemplate = @\"<toast><visual><binding template=\"\"ToastText01\"\"><text id=\"\"1\"\">$(message)</text></binding></visual></toast>\";\n                registration = new WindowsTemplateRegistrationDescription(deviceUpdate.Handle, toastTemplate);\n                break;\n            case \"apns\":\n                var alertTemplate = \"{\"aps\":{\"alert\":\"$(message)\"}}\";\n                registration = new AppleTemplateRegistrationDescription(deviceUpdate.Handle, alertTemplate);\n                break;\n            case \"gcm\":\n                var messageTemplate = \"{\"data\":{\"msg\":\"$(message)\"}}\";\n                registration = new GcmTemplateRegistrationDescription(deviceUpdate.Handle, messageTemplate);\n                break;\n            default:\n                throw new HttpResponseException(HttpStatusCode.BadRequest);\n        }\n    \n    此代码调用平台特定的方法来创建模板注册而非本机注册。不需要修改现有注册，因为模板注册派生自本机注册。\n\n3. 在 **Notifications** 控制器中，将 **sendNotification** 方法替换为以下代码：\n\n        public async Task<HttpResponseMessage> Post()\n        {\n            var user = HttpContext.Current.User.Identity.Name;\n            var userTag = \"username:\" + user;\n\n            var notification = new Dictionary<string, string> { { \"message\", \"Hello, \" + user } };\n            await Notifications.Instance.Hub.SendTemplateNotificationAsync(notification, userTag);   \n\n            return Request.CreateResponse(HttpStatusCode.OK);\n        }\n\n    此代码将通知同时发送到所有平台，而不必指定本机负载。通知中心使用提供的*标签*值（在注册的模板中指定）生成正确的负载并将它传递到每个设备。\n\n4. 重新发布 WebApi 后端项目。\n\n5. 再次运行客户端应用程序并验证注册成功。\n\n6. （可选）将客户端应用程序部署到第二个设备，然后运行该应用程序。\n\n    请注意通知将显示在每个设备上。\n\n## 后续步骤\n\n现在，你已完成本教程，可以查看以下主题了解有关通知中心和模板的更多信息：\n\n+ **[使用通知中心发送突发新闻]**<br/>演示使用模板的另一方案 \n\n+  **[Azure 通知中心概述][Templates]**<br/>“概述”主题提供有关模板的更多详细信息。\n\n+  **[针对 Windows 应用商店的通知中心操作指南]**<br/>包含模板表示语言参考。\n\n\n<!-- Anchors. --> \n\n<!-- Images. --> \n\n<!-- URLs. -->\n\n[Management Portal]: https://manage.windowsazure.cn/\n[使用通知中心发送突发新闻]: /documentation/articles/notification-hubs-windows-store-dotnet-send-breaking-news\n[Azure Notification Hubs]: /zh-cn/pricing/details/notification-hubs/\n[使用通知中心通知用户]: /documentation/articles/notification-hubs-aspnet-backend-windows-dotnet-notify-users\n[Templates]: https://msdn.microsoft.com/zh-cn/library/jj927170.aspx#BKMK_NH7\n[针对 Windows 应用商店的通知中心操作指南]: http://msdn.microsoft.com/zh-cn/library/azure/jj927172.aspx\n\n<!---HONumber=71-->"
}