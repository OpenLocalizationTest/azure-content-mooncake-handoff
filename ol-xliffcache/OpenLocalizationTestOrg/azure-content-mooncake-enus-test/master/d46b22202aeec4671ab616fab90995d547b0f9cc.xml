{
  "nodes": [
    {
      "content": "服务总线 AMQP 概述 | Azure",
      "pos": [
        28,
        48
      ]
    },
    {
      "content": "了解如何在 Azure 中使用高级消息队列协议 (AMQP) 1.0。",
      "pos": [
        68,
        103
      ]
    },
    {
      "content": "服务总线的 AMQP 1.0 支持",
      "pos": [
        336,
        353
      ]
    },
    {
      "pos": [
        355,
        589
      ],
      "content": "Azure 服务总线云服务和 <bpt id=\"p1\">[</bpt>Windows Server 服务总线（服务总线 1.1）<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/dn282144.aspx)</ept>均支持高级消息队列协议 (AMQP) 1.0。AMQP 让您能够使用开放标准协议构建跨平台的混合应用程序。你可以借助使用不同语言和框架构建的且运行在不同操作系统上的组件来构建应用程序。所有这些组件均可连接到服务总线，并且能够高效且完全无损地无缝交换结构化业务消息。"
    },
    {
      "content": "简介：什么是 AMQP 1.0，为何它很重要？",
      "pos": [
        594,
        617
      ]
    },
    {
      "content": "通常，面向消息的中间件产品始终使用专用协议来支持客户端应用程序和代理之间的通信。这意味着，在您选择特定供应商的消息传递代理后，您必须使用该供应商的库将您的客户端应用程序连接到该代理。这将导致在一定程度上依赖于该供应商，因为将应用程序传送到其他产品需要对所有已连接应用程序进行代码改写。",
      "pos": [
        619,
        761
      ]
    },
    {
      "content": "此外，连接来自不同供应商的消息传递代理比较棘手。这通常需要通过应用程序级桥接来将消息从一个系统移到另一个系统，并在其专用消息格式之间进行转换。这是一个常见的要求；例如，在必须向较旧的独立系统提供新的统一接口时，或者在合并后集成 IT 系统时。",
      "pos": [
        763,
        884
      ]
    },
    {
      "content": "软件产业是一个飞速发展的产业；新编程语言和应用程序框架的引入速度有时会非常惊人。同样，IT 系统的要求随着时间不断变化，并且开发人员希望利用最新的平台功能。但有时候，所选消息传送供应商不支持这些平台。由于使用的是专用消息协议，其他供应商无法为这些新平台提供库。因此，你必须使用构建网关等手段，或者可让你继续使用消息传递产品的网桥。",
      "pos": [
        886,
        1051
      ]
    },
    {
      "content": "这些问题推动了高级消息队列协议 (AMQP) 1.0 的开发。这种协议源于 JP Morgan Chase，像多数金融服务公司一样，该公司大量使用面向消息的中间件。目标非常简单：就是创建一个开放标准消息传送协议，从而能够借助使用不同语言、框架和操作系统构建的组件来构建基于消息的应用程序，而所有这些应用程序都使用各个供应商提供的同类最佳组件。",
      "pos": [
        1053,
        1224
      ]
    },
    {
      "content": "AMQP 1.0 技术特性",
      "pos": [
        1229,
        1242
      ]
    },
    {
      "content": "AMQP 1.0 是一个高效、可靠的线级消息传递协议，可用于构建强大、跨平台的消息传递应用程序。协议有一个简单的目标：定义用于在两方之间安全、可靠且高效传输消息的机制。这些消息本身使用可移植数据表示进行编码，这种表示支持不同发送者和接收者完全无损地交换结构化业务消息。下面简要介绍几个最重要的特性：",
      "pos": [
        1244,
        1393
      ]
    },
    {
      "pos": [
        1400,
        1515
      ],
      "content": "<bpt id=\"p1\">**</bpt>高效<ept id=\"p1\">**</ept>：AMQP 1.0 是一个面向连接的协议，它将二进制编码用于协议指令以及通过该协议传输的业务消息。它融合了复杂的流控制方案，可最大限度地利用网络和已连接组件。也就是说，该协议旨在实现有效性、灵活性和互操作性之间的平衡。"
    },
    {
      "pos": [
        1521,
        1635
      ],
      "content": "<bpt id=\"p1\">**</bpt>可靠<ept id=\"p1\">**</ept>：使用 AMQP 1.0 协议交换消息时，你可以获得一系列可靠性保证，如即发即弃 (fire-and-forget) 和可靠的恰一次确认传送 (exactly-once acknowledged delivery)。"
    },
    {
      "pos": [
        1641,
        1710
      ],
      "content": "<bpt id=\"p1\">**</bpt>灵活<ept id=\"p1\">**</ept>：AMQP 1.0 是一个灵活的协议，可用于支持不同的拓扑。可以将同一协议用于客户端到客户端、客户端到代理以及代理到代理通信。"
    },
    {
      "pos": [
        1716,
        1792
      ],
      "content": "<bpt id=\"p1\">**</bpt>独立于代理模型<ept id=\"p1\">**</ept>：AMQP 1.0 规范对代理所使用的消息传送模型不作任何要求。这意味着可以向现有消息传送代理中轻松添加 AMQP 1.0 支持。"
    },
    {
      "content": "AMQP 1.0 是一种标准（带有大写字母“S”）",
      "pos": [
        1797,
        1822
      ]
    },
    {
      "content": "AMQP 1.0 是一种国际标准，已通过 ISO 和 IEC 的认证，认证编号为 ISO/IEC 19464:2014。",
      "pos": [
        1824,
        1884
      ]
    },
    {
      "content": "自 2008 年以来，AMQP 1.0 一直由一个由 20 多家公司（包括技术提供商和最终用户企业）组成的核心小组进行开发。在此期间，用户企业提供其实际业务需求，技术供应商则开发该协议来满足这些需求。在整个过程中，供应商参加了研讨会，并在会上协作验证了其实现之间的互操作性。",
      "pos": [
        1886,
        2023
      ]
    },
    {
      "content": "2011 年 10 月，开发工作提交给结构化信息标准促进组织（Organization for the Advancement of Structured Information Standards，OASIS）内的技术委员会，随后 OASIS AMQP 1.0 标准于 2012 年 10 月发布。在开发该标准期间，以下公司参与了技术委员会的工作：",
      "pos": [
        2025,
        2200
      ]
    },
    {
      "pos": [
        2207,
        2415
      ],
      "content": "<bpt id=\"p1\">**</bpt>技术供应商<ept id=\"p1\">**</ept>：Axway Software、Huawei Technologies、IIT Software、INETCO Systems、Kaazing、Microsoft、Mitre Corporation、Primeton Technologies、Progress Software、Red Hat、SITA、Software AG、Solace Systems、VMware、WSO2、Zenika。"
    },
    {
      "pos": [
        2421,
        2505
      ],
      "content": "<bpt id=\"p1\">**</bpt>企业用户<ept id=\"p1\">**</ept>：Bank of America、Credit Suisse、Deutsche Boerse、Goldman Sachs、JPMorgan Chase。"
    },
    {
      "content": "开放标准的公认好处包括：",
      "pos": [
        2507,
        2519
      ]
    },
    {
      "content": "供应商锁定的几率较低",
      "pos": [
        2526,
        2536
      ]
    },
    {
      "content": "互操作性",
      "pos": [
        2542,
        2546
      ]
    },
    {
      "content": "有大量库和工具可供使用",
      "pos": [
        2552,
        2563
      ]
    },
    {
      "content": "不会过时",
      "pos": [
        2569,
        2573
      ]
    },
    {
      "content": "随时可找到知识渊博的工作人员",
      "pos": [
        2579,
        2593
      ]
    },
    {
      "content": "风险较低且可控",
      "pos": [
        2599,
        2606
      ]
    },
    {
      "content": "AMQP 1.0 和 Service Bus",
      "pos": [
        2611,
        2633
      ]
    },
    {
      "content": "Azure 服务总线中对 AMQP 1.0 的支持意味着现在可以通过一系列使用有效的二进制协议的平台利用队列和发布/订阅中转消息传送功能。此外，你还可以生成由结合使用多个语言、框架和操作系统构建的组件组成的应用程序。",
      "pos": [
        2635,
        2743
      ]
    },
    {
      "content": "下图显示了一个部署示例，其中 Java 客户端运行在 Linux 上，并使用标准 Java 消息服务 (JMS) API 写入数据；而 .NET 客户端运行在 Windows 上，并通过服务总线使用 AMQP 1.0 交换消息。",
      "pos": [
        2745,
        2859
      ]
    },
    {
      "content": "图 1：演示使用服务总线和 AMQP 1.0 进行跨平台消息传送的部署方案示例",
      "pos": [
        2871,
        2910
      ]
    },
    {
      "content": "在这种情况下，已知下列客户端库将使用服务总线：",
      "pos": [
        2914,
        2937
      ]
    },
    {
      "content": "语言",
      "pos": [
        2941,
        2943
      ]
    },
    {
      "content": "库",
      "pos": [
        2946,
        2947
      ]
    },
    {
      "content": "Java",
      "pos": [
        3045,
        3049
      ]
    },
    {
      "content": "Apache Qpid Java 消息服务 (JMS) 客户端",
      "pos": [
        3052,
        3083
      ]
    },
    {
      "content": "IIT 软件 SwiftMQ Java 客户端",
      "pos": [
        3088,
        3111
      ]
    },
    {
      "content": "C",
      "pos": [
        3116,
        3117
      ]
    },
    {
      "content": "Apache Qpid Proton-C",
      "pos": [
        3120,
        3140
      ]
    },
    {
      "content": "PHP",
      "pos": [
        3145,
        3148
      ]
    },
    {
      "content": "Apache Qpid Proton-PHP",
      "pos": [
        3151,
        3173
      ]
    },
    {
      "content": "Python",
      "pos": [
        3178,
        3184
      ]
    },
    {
      "content": "Apache Qpid Proton-Python",
      "pos": [
        3187,
        3212
      ]
    },
    {
      "content": "C",
      "pos": [
        3217,
        3218
      ]
    },
    {
      "content": "AMQP .Net Lite",
      "pos": [
        3222,
        3236
      ]
    },
    {
      "content": "图 2：AMQP 1.0 客户端库表",
      "pos": [
        3242,
        3260
      ]
    },
    {
      "content": "摘要",
      "pos": [
        3267,
        3269
      ]
    },
    {
      "content": "AMQP 1.0 是一个开放、可靠的消息传递协议，可用于构建跨平台的混合应用程序。AMQP 1.0 是一种 OASIS 标准。",
      "pos": [
        3276,
        3339
      ]
    },
    {
      "content": "Azure 服务总线和 Windows Server 服务总线（服务总线 1.1）都支持 AMQP 1.0。定价与现有协议相同。",
      "pos": [
        3345,
        3409
      ]
    },
    {
      "content": "后续步骤",
      "pos": [
        3414,
        3418
      ]
    },
    {
      "content": "准备好了解详细信息？ 请访问以下链接：",
      "pos": [
        3420,
        3439
      ]
    },
    {
      "content": "使用 AMQP 通过 .NET 使用服务总线",
      "pos": [
        3444,
        3466
      ]
    },
    {
      "content": "使用 AMQP 通过 Java 使用服务总线",
      "pos": [
        3471,
        3493
      ]
    },
    {
      "content": "使用 AMQP 通过 Python 使用服务总线",
      "pos": [
        3498,
        3522
      ]
    },
    {
      "content": "使用 AMQP 通过 PHP 使用服务总线",
      "pos": [
        3527,
        3548
      ]
    },
    {
      "content": "在 Azure Linux VM 上安装 Apache Qpid Proton-C",
      "pos": [
        3553,
        3594
      ]
    },
    {
      "content": "适用于 Windows Server 的服务总线中的 AMQP",
      "pos": [
        3599,
        3630
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"服务总线 AMQP 概述 | Azure\" \n    description=\"了解如何在 Azure 中使用高级消息队列协议 (AMQP) 1.0。\" \n    services=\"service-bus\" \n    documentationCenter=\".net\" \n    authors=\"sethmanheim\" \n    manager=\"timlt\" \n    editor=\"mattshel\"/>\n\n<tags \n    ms.service=\"service-bus\" \n    ms.date=\"10/05/2015\" \n    wacn.date=\"01/14/2016\"/>\n\n\n\n# 服务总线的 AMQP 1.0 支持\n\nAzure 服务总线云服务和 [Windows Server 服务总线（服务总线 1.1）](https://msdn.microsoft.com/zh-cn/library/dn282144.aspx)均支持高级消息队列协议 (AMQP) 1.0。AMQP 让您能够使用开放标准协议构建跨平台的混合应用程序。你可以借助使用不同语言和框架构建的且运行在不同操作系统上的组件来构建应用程序。所有这些组件均可连接到服务总线，并且能够高效且完全无损地无缝交换结构化业务消息。\n\n## 简介：什么是 AMQP 1.0，为何它很重要？\n\n通常，面向消息的中间件产品始终使用专用协议来支持客户端应用程序和代理之间的通信。这意味着，在您选择特定供应商的消息传递代理后，您必须使用该供应商的库将您的客户端应用程序连接到该代理。这将导致在一定程度上依赖于该供应商，因为将应用程序传送到其他产品需要对所有已连接应用程序进行代码改写。\n\n此外，连接来自不同供应商的消息传递代理比较棘手。这通常需要通过应用程序级桥接来将消息从一个系统移到另一个系统，并在其专用消息格式之间进行转换。这是一个常见的要求；例如，在必须向较旧的独立系统提供新的统一接口时，或者在合并后集成 IT 系统时。\n\n软件产业是一个飞速发展的产业；新编程语言和应用程序框架的引入速度有时会非常惊人。同样，IT 系统的要求随着时间不断变化，并且开发人员希望利用最新的平台功能。但有时候，所选消息传送供应商不支持这些平台。由于使用的是专用消息协议，其他供应商无法为这些新平台提供库。因此，你必须使用构建网关等手段，或者可让你继续使用消息传递产品的网桥。\n\n这些问题推动了高级消息队列协议 (AMQP) 1.0 的开发。这种协议源于 JP Morgan Chase，像多数金融服务公司一样，该公司大量使用面向消息的中间件。目标非常简单：就是创建一个开放标准消息传送协议，从而能够借助使用不同语言、框架和操作系统构建的组件来构建基于消息的应用程序，而所有这些应用程序都使用各个供应商提供的同类最佳组件。\n\n## AMQP 1.0 技术特性\n\nAMQP 1.0 是一个高效、可靠的线级消息传递协议，可用于构建强大、跨平台的消息传递应用程序。协议有一个简单的目标：定义用于在两方之间安全、可靠且高效传输消息的机制。这些消息本身使用可移植数据表示进行编码，这种表示支持不同发送者和接收者完全无损地交换结构化业务消息。下面简要介绍几个最重要的特性：\n\n*    **高效**：AMQP 1.0 是一个面向连接的协议，它将二进制编码用于协议指令以及通过该协议传输的业务消息。它融合了复杂的流控制方案，可最大限度地利用网络和已连接组件。也就是说，该协议旨在实现有效性、灵活性和互操作性之间的平衡。\n*    **可靠**：使用 AMQP 1.0 协议交换消息时，你可以获得一系列可靠性保证，如即发即弃 (fire-and-forget) 和可靠的恰一次确认传送 (exactly-once acknowledged delivery)。\n*    **灵活**：AMQP 1.0 是一个灵活的协议，可用于支持不同的拓扑。可以将同一协议用于客户端到客户端、客户端到代理以及代理到代理通信。\n*    **独立于代理模型**：AMQP 1.0 规范对代理所使用的消息传送模型不作任何要求。这意味着可以向现有消息传送代理中轻松添加 AMQP 1.0 支持。\n\n## AMQP 1.0 是一种标准（带有大写字母“S”）\n\nAMQP 1.0 是一种国际标准，已通过 ISO 和 IEC 的认证，认证编号为 ISO/IEC 19464:2014。\n\n自 2008 年以来，AMQP 1.0 一直由一个由 20 多家公司（包括技术提供商和最终用户企业）组成的核心小组进行开发。在此期间，用户企业提供其实际业务需求，技术供应商则开发该协议来满足这些需求。在整个过程中，供应商参加了研讨会，并在会上协作验证了其实现之间的互操作性。\n\n2011 年 10 月，开发工作提交给结构化信息标准促进组织（Organization for the Advancement of Structured Information Standards，OASIS）内的技术委员会，随后 OASIS AMQP 1.0 标准于 2012 年 10 月发布。在开发该标准期间，以下公司参与了技术委员会的工作：\n\n*    **技术供应商**：Axway Software、Huawei Technologies、IIT Software、INETCO Systems、Kaazing、Microsoft、Mitre Corporation、Primeton Technologies、Progress Software、Red Hat、SITA、Software AG、Solace Systems、VMware、WSO2、Zenika。\n*    **企业用户**：Bank of America、Credit Suisse、Deutsche Boerse、Goldman Sachs、JPMorgan Chase。\n\n开放标准的公认好处包括：\n\n*    供应商锁定的几率较低\n*    互操作性\n*    有大量库和工具可供使用\n*    不会过时\n*    随时可找到知识渊博的工作人员\n*    风险较低且可控\n\n## AMQP 1.0 和 Service Bus\n\nAzure 服务总线中对 AMQP 1.0 的支持意味着现在可以通过一系列使用有效的二进制协议的平台利用队列和发布/订阅中转消息传送功能。此外，你还可以生成由结合使用多个语言、框架和操作系统构建的组件组成的应用程序。\n\n下图显示了一个部署示例，其中 Java 客户端运行在 Linux 上，并使用标准 Java 消息服务 (JMS) API 写入数据；而 .NET 客户端运行在 Windows 上，并通过服务总线使用 AMQP 1.0 交换消息。\n\n![][0]\n\n**图 1：演示使用服务总线和 AMQP 1.0 进行跨平台消息传送的部署方案示例**\n\n在这种情况下，已知下列客户端库将使用服务总线：\n\n| 语言 | 库 |\n|----------|-------------------------------------------------------------------------------|\n| Java | Apache Qpid Java 消息服务 (JMS) 客户端<br/>IIT 软件 SwiftMQ Java 客户端 |\n| C | Apache Qpid Proton-C |\n| PHP | Apache Qpid Proton-PHP |\n| Python | Apache Qpid Proton-Python |\n| C# | AMQP .Net Lite |\n\n**图 2：AMQP 1.0 客户端库表**\n\n## 摘要\n\n*    AMQP 1.0 是一个开放、可靠的消息传递协议，可用于构建跨平台的混合应用程序。AMQP 1.0 是一种 OASIS 标准。\n*    Azure 服务总线和 Windows Server 服务总线（服务总线 1.1）都支持 AMQP 1.0。定价与现有协议相同。\n\n## 后续步骤\n\n准备好了解详细信息？ 请访问以下链接：\n\n- [使用 AMQP 通过 .NET 使用服务总线]\n- [使用 AMQP 通过 Java 使用服务总线]\n- [使用 AMQP 通过 Python 使用服务总线]\n- [使用 AMQP 通过 PHP 使用服务总线]\n- [在 Azure Linux VM 上安装 Apache Qpid Proton-C]\n- [适用于 Windows Server 的服务总线中的 AMQP]\n\n[0]: ./media/service-bus-amqp-overview/service-bus-amqp-1.png\n[使用 AMQP 通过 .NET 使用服务总线]: /documentation/articles/service-bus-amqp-dotnet\n[使用 AMQP 通过 Java 使用服务总线]: /documentation/articles/service-bus-amqp-java\n[使用 AMQP 通过 Python 使用服务总线]: /documentation/articles/service-bus-amqp-python\n[使用 AMQP 通过 PHP 使用服务总线]: /documentation/articles/service-bus-amqp-php\n[在 Azure Linux VM 上安装 Apache Qpid Proton-C]: /documentation/articles/service-bus-amqp-apache\n[适用于 Windows Server 的服务总线中的 AMQP]: https://msdn.microsoft.com/zh-cn/library/dn574799.aspx\n\n<!---HONumber=Mooncake_0104_2016-->"
}