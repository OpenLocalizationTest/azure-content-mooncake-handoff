<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1618cb326624aae07978c5a103cc3b0fdeb2d86</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>什么是 Azure WebJobs SDK</source>
          <target state="new">什么是 Azure WebJobs SDK</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Azure WebJobs SDK 简介。介绍 SDK 的定义，它适用的典型方案，以及代码示例。</source>
          <target state="new">Azure WebJobs SDK 简介。介绍 SDK 的定义，它适用的典型方案，以及代码示例。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>什么是 Azure WebJobs SDK</source>
          <target state="new">什么是 Azure WebJobs SDK</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="overview"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>概述</source>
          <target state="new"><ph id="ph1">&lt;a id="overview"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>概述</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>本文说明 WebJobs SDK 是什么、了解部分适用的典型方案，以及提供在代码中的使用方式概述。</source>
          <target state="new">本文说明 WebJobs SDK 是什么、了解部分适用的典型方案，以及提供在代码中的使用方式概述。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WebJobs<ept id="p1">](/documentation/articles/websites-webjobs-resources)</ept> 是一项 Azure Web 应用功能，可让你在与 Web、API 应用相同的上下文中运行程序或脚本。<bpt id="p2">[</bpt>WebJobs SDK<ept id="p2">](/documentation/articles/websites-webjobs-resources)</ept> 的用途是简化针对 Web 作业可以执行的常见任务（例如，图像处理、队列处理、RSS 聚合、文件维护和发送电子邮件）编写的代码。WebJobs SDK 中的内置功能使用 Azure 存储空间和 Service Bus，用于计划任务和处理错误，以及用于许多其他常见方案。此外，它还设计为可扩展并且有<bpt id="p3">[</bpt>用于扩展的开源存储库<ept id="p3">](https://github.com/Azure/azure-webjobs-sdk-extensions/wiki/Binding-Extensions-Overview)</ept>。</source>
          <target state="new"><bpt id="p1">[</bpt>WebJobs<ept id="p1">](/documentation/articles/websites-webjobs-resources)</ept> 是一项 Azure Web 应用功能，可让你在与 Web、API 应用相同的上下文中运行程序或脚本。<bpt id="p2">[</bpt>WebJobs SDK<ept id="p2">](/documentation/articles/websites-webjobs-resources)</ept> 的用途是简化针对 Web 作业可以执行的常见任务（例如，图像处理、队列处理、RSS 聚合、文件维护和发送电子邮件）编写的代码。WebJobs SDK 中的内置功能使用 Azure 存储空间和 Service Bus，用于计划任务和处理错误，以及用于许多其他常见方案。此外，它还设计为可扩展并且有<bpt id="p3">[</bpt>用于扩展的开源存储库<ept id="p3">](https://github.com/Azure/azure-webjobs-sdk-extensions/wiki/Binding-Extensions-Overview)</ept>。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>WebJobs SDK 包括以下组件：</source>
          <target state="new">WebJobs SDK 包括以下组件：</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>NuGet 程序包<ept id="p1">**</ept>。添加到 Visual Studio 控制台应用程序项目的 NuGet 包提供一个框架，你的代码可通过使用 WebJobs SDK 属性修饰方法来使用此框架。</source>
          <target state="new"><bpt id="p1">**</bpt>NuGet 程序包<ept id="p1">**</ept>。添加到 Visual Studio 控制台应用程序项目的 NuGet 包提供一个框架，你的代码可通过使用 WebJobs SDK 属性修饰方法来使用此框架。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>仪表板<ept id="p1">**</ept>。Azure Web 应用中包含 WebJobs SDK 部分，它可针对使用 NuGet 程序包的程序提供丰富的监视和诊断功能。你无需编写代码就可以使用这些监视和诊断功能。</source>
          <target state="new"><bpt id="p1">**</bpt>仪表板<ept id="p1">**</ept>。Azure Web 应用中包含 WebJobs SDK 部分，它可针对使用 NuGet 程序包的程序提供丰富的监视和诊断功能。你无需编写代码就可以使用这些监视和诊断功能。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="scenarios"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>方案</source>
          <target state="new"><ph id="ph1">&lt;a id="scenarios"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>方案</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>下面是 Azure WebJobs SDK 可帮助你轻松处理的部分典型方案：</source>
          <target state="new">下面是 Azure WebJobs SDK 可帮助你轻松处理的部分典型方案：</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>图像处理或其他需要大量 CPU 的工作。 Web 应用的一项常见功能是上载图像或视频。在许多时候，你想要在内容上载后处理该内容，但又不想在你执行此任务时让用户等候。</source>
          <target state="new">图像处理或其他需要大量 CPU 的工作。 Web 应用的一项常见功能是上载图像或视频。在许多时候，你想要在内容上载后处理该内容，但又不想在你执行此任务时让用户等候。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>队列处理。Web 前端与后端服务的一个常见通信方式是使用队列。当 Web 应用需要完成工作时，它会将消息推送到队列。后端服务会从队列提取消息，并完成工作。你可以在图像处理中使用队列：例如，在用户上载多个文件之后，文件名会被放置在队列消息中，由后端选取队列消息进行处理。或者，你可以使用队列来改进 Web 应用响应能力。例如，无需将目录直接写入 SQL 数据库，而可以写入队列并告知用户已完成，然后由后端服务处理高延迟的关系型数据库工作。有关使用图像处理的队列处理示例，请参阅 <bpt id="p1">[</bpt>WebJobs SDK 入门教程<ept id="p1">](/documentation/articles/websites-dotnet-webjobs-sdk-get-started)</ept>。</source>
          <target state="new">队列处理。Web 前端与后端服务的一个常见通信方式是使用队列。当 Web 应用需要完成工作时，它会将消息推送到队列。后端服务会从队列提取消息，并完成工作。你可以在图像处理中使用队列：例如，在用户上载多个文件之后，文件名会被放置在队列消息中，由后端选取队列消息进行处理。或者，你可以使用队列来改进 Web 应用响应能力。例如，无需将目录直接写入 SQL 数据库，而可以写入队列并告知用户已完成，然后由后端服务处理高延迟的关系型数据库工作。有关使用图像处理的队列处理示例，请参阅 <bpt id="p1">[</bpt>WebJobs SDK 入门教程<ept id="p1">](/documentation/articles/websites-dotnet-webjobs-sdk-get-started)</ept>。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>RSS 聚合。如果你有维护 RSS 源列表的 Web 应用，你可以在后台进程中提取源中的所有文章。</source>
          <target state="new">RSS 聚合。如果你有维护 RSS 源列表的 Web 应用，你可以在后台进程中提取源中的所有文章。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>文件维护，例如聚合或清理日志文件。你可能拥有由数个 Web 应用在不同的时间所创建的日志文件，你想要结合这些文件以便执行分析工作。或者你想要计划每周运行的任务，来清理旧的日志文件。</source>
          <target state="new">文件维护，例如聚合或清理日志文件。你可能拥有由数个 Web 应用在不同的时间所创建的日志文件，你想要结合这些文件以便执行分析工作。或者你想要计划每周运行的任务，来清理旧的日志文件。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>输入 Azure 表。你可能会有想要分析的存储文件和 Blob，并想要将数据存储在表中。入口函数可能会写入许多行（在某些情况下可能有上百万行），而 WebJobs SDK 让你可以轻松地实现此功能。SDK 还提供进度指示器的实时监视，例如表中的写入行数。</source>
          <target state="new">输入 Azure 表。你可能会有想要分析的存储文件和 Blob，并想要将数据存储在表中。入口函数可能会写入许多行（在某些情况下可能有上百万行），而 WebJobs SDK 让你可以轻松地实现此功能。SDK 还提供进度指示器的实时监视，例如表中的写入行数。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>您想要在后台线程中执行的其他长时间运行任务，例如<bpt id="p1">[</bpt>发送电子邮件<ept id="p1">](https://github.com/victorhurdugaci/AzureWebJobsSamples/tree/master/SendEmailOnFailure)</ept>。</source>
          <target state="new">您想要在后台线程中执行的其他长时间运行任务，例如<bpt id="p1">[</bpt>发送电子邮件<ept id="p1">](https://github.com/victorhurdugaci/AzureWebJobsSamples/tree/master/SendEmailOnFailure)</ept>。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>要按计划运行的任何任务，如每晚执行备份操作。</source>
          <target state="new">要按计划运行的任何任务，如每晚执行备份操作。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>在许多情况下，你可能想要扩展 Web 应用以便它在多个 VM 上运行，这就需要同时运行多个 Web 作业。在某些情况下，这可能导致相同的数据被处理多次，但如果使用 WebJobs SDK 的内置队列、Blob 和服务总线触发器，则不会造成问题。SDK 可确保只会针对每个消息或 Blob 处理函数一次。</source>
          <target state="new">在许多情况下，你可能想要扩展 Web 应用以便它在多个 VM 上运行，这就需要同时运行多个 Web 作业。在某些情况下，这可能导致相同的数据被处理多次，但如果使用 WebJobs SDK 的内置队列、Blob 和服务总线触发器，则不会造成问题。SDK 可确保只会针对每个消息或 Blob 处理函数一次。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>使用 WebJobs SDK 还可轻松处理常见的错误处理方案。你可以设置警报以在函数失败时发送通知，还可以设置超时，以便在函数未在指定的时间限制内完成时自动取消函数。</source>
          <target state="new">使用 WebJobs SDK 还可轻松处理常见的错误处理方案。你可以设置警报以在函数失败时发送通知，还可以设置超时，以便在函数未在指定的时间限制内完成时自动取消函数。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="code"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>代码示例</source>
          <target state="new"><ph id="ph1">&lt;a id="code"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>代码示例</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>使用 Azure 存储空间处理典型任务的代码十分简单。在控制台应用程序的 <ph id="ph1">`Main`</ph> 方法中创建一个 <ph id="ph2">`JobHost`</ph> 对象，以协调对你编写的方法的调用。WebJobs SDK 框架会根据方法中所用的 WebJobs SDK 属性，知道何时调用方法以及要使用什么参数值。该 SDK 提供了 <bpt id="p1">*</bpt>触发器<ept id="p1">*</ept> ，用于指定哪些条件导致调用函数，并提供了 <bpt id="p2">*</bpt>绑定器<ept id="p2">*</ept> ，用于指定如何获取传入和传出方法参数的信息。</source>
          <target state="new">使用 Azure 存储空间处理典型任务的代码十分简单。在控制台应用程序的 <ph id="ph1">`Main`</ph> 方法中创建一个 <ph id="ph2">`JobHost`</ph> 对象，以协调对你编写的方法的调用。WebJobs SDK 框架会根据方法中所用的 WebJobs SDK 属性，知道何时调用方法以及要使用什么参数值。该 SDK 提供了 <bpt id="p1">*</bpt>触发器<ept id="p1">*</ept> ，用于指定哪些条件导致调用函数，并提供了 <bpt id="p2">*</bpt>绑定器<ept id="p2">*</ept> ，用于指定如何获取传入和传出方法参数的信息。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>例如，<bpt id="p1">[</bpt>QueueTrigger<ept id="p1">](/documentation/articles/websites-dotnet-webjobs-sdk-storage-queues-how-to)</ept> 属性导致在队列中收到消息时调用函数，如果消息格式为字节数组或自定义类型的 JSON，该消息将自动反序列化。每次在 Azure 存储帐户中新建一个 blob 时，<bpt id="p2">[</bpt>BlobTrigger<ept id="p2">](/documentation/articles/websites-dotnet-webjobs-sdk-storage-blobs-how-to)</ept> 属性都会触发一个流程。</source>
          <target state="new">例如，<bpt id="p1">[</bpt>QueueTrigger<ept id="p1">](/documentation/articles/websites-dotnet-webjobs-sdk-storage-queues-how-to)</ept> 属性导致在队列中收到消息时调用函数，如果消息格式为字节数组或自定义类型的 JSON，该消息将自动反序列化。每次在 Azure 存储帐户中新建一个 blob 时，<bpt id="p2">[</bpt>BlobTrigger<ept id="p2">](/documentation/articles/websites-dotnet-webjobs-sdk-storage-blobs-how-to)</ept> 属性都会触发一个流程。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>下面是个一个简单程序，它可用来轮询队列并为收到的每个队列消息创建 Blob：</source>
          <target state="new">下面是个一个简单程序，它可用来轮询队列并为收到的每个队列消息创建 Blob：</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`JobHost`</ph> 对象是一组后台函数的容器。<ph id="ph2">`JobHost`</ph> 对象可监视函数、观察触发函数的事件，并在发生触发事件时执行函数。您可以调用 <ph id="ph3">`JobHost`</ph> 方法，以指示您要在当前线程或后台线程上执行容器进程。在此示例中，<ph id="ph4">`RunAndBlock`</ph> 方法将在当前线程上持续运行该进程。</source>
          <target state="new"><ph id="ph1">`JobHost`</ph> 对象是一组后台函数的容器。<ph id="ph2">`JobHost`</ph> 对象可监视函数、观察触发函数的事件，并在发生触发事件时执行函数。您可以调用 <ph id="ph3">`JobHost`</ph> 方法，以指示您要在当前线程或后台线程上执行容器进程。在此示例中，<ph id="ph4">`RunAndBlock`</ph> 方法将在当前线程上持续运行该进程。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>由于此示例中的 <ph id="ph1">`ProcessQueueMessage`</ph> 方法具有 <ph id="ph2">`QueueTrigger`</ph> 属性，接收新队列消息时便会触发该函数。<ph id="ph3">`JobHost`</ph> 对象监视指定队列（在此示例中为“webjobsqueue”）上的新队列消息，查找到新队列消息时，此对象将调用 <ph id="ph4">`ProcessQueueMessage`</ph>。</source>
          <target state="new">由于此示例中的 <ph id="ph1">`ProcessQueueMessage`</ph> 方法具有 <ph id="ph2">`QueueTrigger`</ph> 属性，接收新队列消息时便会触发该函数。<ph id="ph3">`JobHost`</ph> 对象监视指定队列（在此示例中为“webjobsqueue”）上的新队列消息，查找到新队列消息时，此对象将调用 <ph id="ph4">`ProcessQueueMessage`</ph>。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`QueueTrigger`</ph> 属性将 <ph id="ph2">`inputText`</ph> 参数绑定到队列消息的值。<ph id="ph3">`Blob`</ph> 将 <ph id="ph4">`TextWriter`</ph> 对象绑定到“containername”容器中名为“blobname”的 Blob。</source>
          <target state="new"><ph id="ph1">`QueueTrigger`</ph> 属性将 <ph id="ph2">`inputText`</ph> 参数绑定到队列消息的值。<ph id="ph3">`Blob`</ph> 将 <ph id="ph4">`TextWriter`</ph> 对象绑定到“containername”容器中名为“blobname”的 Blob。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>然后，该函数使用这些参数将队列消息的值写入 Blob：</source>
          <target state="new">然后，该函数使用这些参数将队列消息的值写入 Blob：</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>WebJobs SDK 的触发器和绑定器功能可大幅简化所需编写的代码。处理队列、blob 或文件，或者启动计划的任务所需的低级代码由 WebJobs SDK 框架为你完成。例如，该框架会创建尚不存在的队列、打开队列、读取队列消息并在处理完成后删除队列消息、创建尚不存在的 Blob 容器、写入 Blob，等等。</source>
          <target state="new">WebJobs SDK 的触发器和绑定器功能可大幅简化所需编写的代码。处理队列、blob 或文件，或者启动计划的任务所需的低级代码由 WebJobs SDK 框架为你完成。例如，该框架会创建尚不存在的队列、打开队列、读取队列消息并在处理完成后删除队列消息、创建尚不存在的 Blob 容器、写入 Blob，等等。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>下面的代码示例在一个 Web 作业中显示了各种触发器：<ph id="ph1">`QueueTrigger`</ph>、<ph id="ph2">`FileTrigger`</ph>、<ph id="ph3">`WebHookTrigger`</ph> 和 <ph id="ph4">`ErrorTrigger`</ph>。</source>
          <target state="new">下面的代码示例在一个 Web 作业中显示了各种触发器：<ph id="ph1">`QueueTrigger`</ph>、<ph id="ph2">`FileTrigger`</ph>、<ph id="ph3">`WebHookTrigger`</ph> 和 <ph id="ph4">`ErrorTrigger`</ph>。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="schedule"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> 计划</source>
          <target state="new"><ph id="ph1">&lt;a id="schedule"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> 计划</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>使用 <ph id="ph1">`TimerTrigger`</ph> 属性可以触发要按计划运行的函数。你可以通过 Azure 从整体上计划 Web 作业，也可以使用 WebJobs SDK <ph id="ph2">`TimerTrigger`</ph> 计划 Web 作业的各个函数。下面是代码示例。</source>
          <target state="new">使用 <ph id="ph1">`TimerTrigger`</ph> 属性可以触发要按计划运行的函数。你可以通过 Azure 从整体上计划 Web 作业，也可以使用 WebJobs SDK <ph id="ph2">`TimerTrigger`</ph> 计划 Web 作业的各个函数。下面是代码示例。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>有关更多示例代码，请参阅 GitHub.com 上 azure-webjobs-sdk-extensions 存储库中的 <bpt id="p1">[</bpt>TimerSamples.cs<ept id="p1">](https://github.com/Azure/azure-webjobs-sdk-extensions/blob/master/src/ExtensionsSample/Samples/TimerSamples.cs)</ept>。</source>
          <target state="new">有关更多示例代码，请参阅 GitHub.com 上 azure-webjobs-sdk-extensions 存储库中的 <bpt id="p1">[</bpt>TimerSamples.cs<ept id="p1">](https://github.com/Azure/azure-webjobs-sdk-extensions/blob/master/src/ExtensionsSample/Samples/TimerSamples.cs)</ept>。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>可扩展性</source>
          <target state="new">可扩展性</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>你可以不局限于内置功能 - WebJobs SDK 允许你编写自定义触发器和绑定器。例如，你可以为缓存事件和定期计划编写触发器。<bpt id="p1">[</bpt>开源存储库<ept id="p1">](https://github.com/Azure/azure-webjobs-sdk-extensions)</ept>包含<bpt id="p2">[</bpt>有关 WebJobs SDK 可扩展性的详细指南<ept id="p2">](https://github.com/Azure/azure-webjobs-sdk-extensions/wiki/Binding-Extensions-Overview)</ept>和示例代码，可帮助你开始编写你自己的触发器和绑定器。</source>
          <target state="new">你可以不局限于内置功能 - WebJobs SDK 允许你编写自定义触发器和绑定器。例如，你可以为缓存事件和定期计划编写触发器。<bpt id="p1">[</bpt>开源存储库<ept id="p1">](https://github.com/Azure/azure-webjobs-sdk-extensions)</ept>包含<bpt id="p2">[</bpt>有关 WebJobs SDK 可扩展性的详细指南<ept id="p2">](https://github.com/Azure/azure-webjobs-sdk-extensions/wiki/Binding-Extensions-Overview)</ept>和示例代码，可帮助你开始编写你自己的触发器和绑定器。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="workerrole"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>在 WebJobs 外部使用 WebJobs SDK</source>
          <target state="new"><ph id="ph1">&lt;a id="workerrole"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>在 WebJobs 外部使用 WebJobs SDK</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>使用 WebJobs SDK 的程序是指可在任意位置运行的标准控制台应用程序 - 它不一定要以 Web 作业的形式运行。你可以在开发计算机上本地测试程序，而在生产环境中，可以在云服务辅助角色或 Windows 服务中运行程序（如果你偏好其中一个环境）。</source>
          <target state="new">使用 WebJobs SDK 的程序是指可在任意位置运行的标准控制台应用程序 - 它不一定要以 Web 作业的形式运行。你可以在开发计算机上本地测试程序，而在生产环境中，可以在云服务辅助角色或 Windows 服务中运行程序（如果你偏好其中一个环境）。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="nostorage"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>仪表板功能</source>
          <target state="new"><ph id="ph1">&lt;a id="nostorage"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>仪表板功能</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>即使你不使用 WebJobs SDK 触发器或绑定器，WebJobs SDK 也提供了几个优点：</source>
          <target state="new">即使你不使用 WebJobs SDK 触发器或绑定器，WebJobs SDK 也提供了几个优点：</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>可以从仪表板调用函数。</source>
          <target state="new">可以从仪表板调用函数。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>可以从仪表板重放函数。</source>
          <target state="new">可以从仪表板重放函数。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>您可以在仪表板中查看日志，链接到特定的 WebJob（使用 Console.Out、Console.Error、Trace 等编写的应用程序日志）或链接到生成它们的特定函数调用（使用此 SDK 传递给函数作为参数的 <ph id="ph1">`TextWriter`</ph> 对象编写的日志）。</source>
          <target state="new">您可以在仪表板中查看日志，链接到特定的 WebJob（使用 Console.Out、Console.Error、Trace 等编写的应用程序日志）或链接到生成它们的特定函数调用（使用此 SDK 传递给函数作为参数的 <ph id="ph1">`TextWriter`</ph> 对象编写的日志）。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>有关详细信息，请参阅<bpt id="p1">[</bpt>如何手动调用函数<ept id="p1">](/documentation/articles/websites-dotnet-webjobs-sdk-storage-queues-how-to#manual)</ept>和<bpt id="p2">[</bpt>如何编写日志<ept id="p2">](/documentation/articles/websites-dotnet-webjobs-sdk-storage-queues-how-to#logs)</ept></source>
          <target state="new">有关详细信息，请参阅<bpt id="p1">[</bpt>如何手动调用函数<ept id="p1">](/documentation/articles/websites-dotnet-webjobs-sdk-storage-queues-how-to#manual)</ept>和<bpt id="p2">[</bpt>如何编写日志<ept id="p2">](/documentation/articles/websites-dotnet-webjobs-sdk-storage-queues-how-to#logs)</ept></target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="nextsteps"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>后续步骤</source>
          <target state="new"><ph id="ph1">&lt;a id="nextsteps"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>后续步骤</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>有关 WebJobs SDK 的详细信息，请参阅<bpt id="p1">[</bpt>Azure WebJobs 推荐资源<ept id="p1">](/documentation/articles/websites-webjobs-resources/)</ept>。</source>
          <target state="new">有关 WebJobs SDK 的详细信息，请参阅<bpt id="p1">[</bpt>Azure WebJobs 推荐资源<ept id="p1">](/documentation/articles/websites-webjobs-resources/)</ept>。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>有关 WebJobs SDK 的最新增强功能的信息，请参阅<bpt id="p1">[</bpt>发行说明<ept id="p1">](https://github.com/Azure/azure-webjobs-sdk/wiki/Release-Notes)</ept>。</source>
          <target state="new">有关 WebJobs SDK 的最新增强功能的信息，请参阅<bpt id="p1">[</bpt>发行说明<ept id="p1">](https://github.com/Azure/azure-webjobs-sdk/wiki/Release-Notes)</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>