{
  "nodes": [
    {
      "content": "既然需要经过身份验证才能访问 TodoItem 表中的数据，您可以使用移动服务分配的 userID 值来过滤返回的数据。",
      "pos": [
        2,
        62
      ]
    },
    {
      "content": "[WACOM.NOTE]以下方法要求在\"用户\"的\"授权级别\"上应用\"AuthorizeLevel\"属性。这样可以仅允许经过身份验证的用户访问表。",
      "pos": [
        65,
        137
      ]
    },
    {
      "content": "在 Visual Studio 2013 中，打开您的移动服务项目，展开 DataObjects 文件夹，然后打开 TodoItem.cs 项目文件。",
      "pos": [
        142,
        217
      ]
    },
    {
      "content": "TodoItem 类定义数据对象，您需要添加用于筛选的 UserId 属性。",
      "pos": [
        223,
        261
      ]
    },
    {
      "pos": [
        266,
        300
      ],
      "content": "将下面的新 UserId 属性添加到 <bpt id=\"p1\">**</bpt>TodoItem<ept id=\"p1\">**</ept> 类："
    },
    {
      "pos": [
        351,
        612
      ],
      "content": "[WACOM.NOTE] 使用默认数据库初始值设定项时，只要实体框架在代码优先模型定义中检测到数据模型更改，它就会删除并重新创建数据库。若要进行此数据模型更改并维护数据库中的现有数据，必须使用代码优先迁移。不能为 Azure 中的 SQL 数据库 使用默认的初始值设定项。有关更多信息，请参阅<bpt id=\"p1\">[</bpt>如何使用代码优先迁移来更新数据模型<ept id=\"p1\">](/zh-cn/documentation/articles/mobile-services-dotnet-backend-how-to-use-code-first-migrations)</ept>。"
    },
    {
      "pos": [
        617,
        701
      ],
      "content": "在\"解决方案资源管理器\"中，展开 Controllers 文件夹，打开 TodoItemController.cs 项目文件，然后添加下面的 <bpt id=\"p1\">**</bpt>using<ept id=\"p1\">**</ept> 语句："
    },
    {
      "pos": [
        770,
        814
      ],
      "content": "<bpt id=\"p1\">**</bpt>TodoItemController<ept id=\"p1\">**</ept> 类可为 TodoItem 表实现数据访问。"
    },
    {
      "pos": [
        821,
        872
      ],
      "content": "找到 <bpt id=\"p1\">**</bpt>PostTodoItem<ept id=\"p1\">**</ept> 方法，并在末尾的 <bpt id=\"p2\">**</bpt>return<ept id=\"p2\">**</ept> 语句之前添加以下代码："
    },
    {
      "content": "在将 UserId 值插入 TodoItem 表之前，这段代码将 UserId 值添加到项，该值是经过身份验证的用户的用户 ID。",
      "pos": [
        1044,
        1109
      ]
    },
    {
      "pos": [
        1120,
        1174
      ],
      "content": "找到 <bpt id=\"p1\">**</bpt>GetAllTodoItems<ept id=\"p1\">**</ept> 方法，并将现有的 <bpt id=\"p2\">**</bpt>return<ept id=\"p2\">**</ept> 语句替换为以下代码行："
    },
    {
      "content": "此查询可筛选返回的 TodoItem 对象，使得每个用户只收到他们插入的项。您可以选择",
      "pos": [
        1333,
        1376
      ]
    },
    {
      "content": "将移动服务项目重新发布到 Azure。",
      "pos": [
        1382,
        1401
      ]
    }
  ],
  "content": "\n\n既然需要经过身份验证才能访问 TodoItem 表中的数据，您可以使用移动服务分配的 userID 值来过滤返回的数据。\n\n>[WACOM.NOTE]以下方法要求在\"用户\"的\"授权级别\"上应用\"AuthorizeLevel\"属性。这样可以仅允许经过身份验证的用户访问表。\n\n1. 在 Visual Studio 2013 中，打开您的移动服务项目，展开 DataObjects 文件夹，然后打开 TodoItem.cs 项目文件。\n\n    TodoItem 类定义数据对象，您需要添加用于筛选的 UserId 属性。\n\n2. 将下面的新 UserId 属性添加到 **TodoItem** 类：\n\n        public string UserId { get; set; }\n\n    >[WACOM.NOTE] 使用默认数据库初始值设定项时，只要实体框架在代码优先模型定义中检测到数据模型更改，它就会删除并重新创建数据库。若要进行此数据模型更改并维护数据库中的现有数据，必须使用代码优先迁移。不能为 Azure 中的 SQL 数据库 使用默认的初始值设定项。有关更多信息，请参阅[如何使用代码优先迁移来更新数据模型](/zh-cn/documentation/articles/mobile-services-dotnet-backend-how-to-use-code-first-migrations)。\n\n3. 在\"解决方案资源管理器\"中，展开 Controllers 文件夹，打开 TodoItemController.cs 项目文件，然后添加下面的 **using** 语句：\n\n        using Microsoft.WindowsAzure.Mobile.Service.Security;\n\n    **TodoItemController** 类可为 TodoItem 表实现数据访问。 \n \n4. 找到 **PostTodoItem** 方法，并在末尾的 **return** 语句之前添加以下代码：\n\n        // Get the logged-in user.\n        var currentUser = User as ServiceUser;\n    \n        // Set the user ID on the item.\n        item.UserId = currentUser.Id;\n\n    在将 UserId 值插入 TodoItem 表之前，这段代码将 UserId 值添加到项，该值是经过身份验证的用户的用户 ID。 \n    \n\n5. 找到 **GetAllTodoItems** 方法，并将现有的 **return** 语句替换为以下代码行：\n\n        // Get the logged-in user.\n        var currentUser = User as ServiceUser;\n\n        return Query().Where(todo => todo.UserId == currentUser.Id);\n\n    此查询可筛选返回的 TodoItem 对象，使得每个用户只收到他们插入的项。您可以选择 \n\n6. 将移动服务项目重新发布到 Azure。\n"
}