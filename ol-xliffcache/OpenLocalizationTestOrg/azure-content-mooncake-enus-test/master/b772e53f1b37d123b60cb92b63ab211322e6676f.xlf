<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b772e53f1b37d123b60cb92b63ab211322e6676f</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>服务总线中转消息传送 REST 教程 | Azure</source>
          <target state="new">服务总线中转消息传送 REST 教程 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>中转消息传送 REST 教程。</source>
          <target state="new">中转消息传送 REST 教程。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>服务总线中转消息传送 REST 教程</source>
          <target state="new">服务总线中转消息传送 REST 教程</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>本教程介绍了如何创建基本的基于 REST 的 Azure 服务总线队列和主题/订阅服务。</source>
          <target state="new">本教程介绍了如何创建基本的基于 REST 的 Azure 服务总线队列和主题/订阅服务。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>第 1 步：创建命名空间</source>
          <target state="new">第 1 步：创建命名空间</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>第一步是创建服务命名空间并获取<bpt id="p1">[</bpt>共享访问签名<ept id="p1">](/documentation/articles/service-bus-sas-overview)</ept> (SAS) 密钥。服务命名空间为每个通过服务总线公开的应用程序提供应用程序边界。创建服务命名空间时，系统将自动生成 SAS 密钥。服务命名空间与 SAS 密钥的组合为服务总线提供了一个用于验证应用程序访问权限的凭据。</source>
          <target state="new">第一步是创建服务命名空间并获取<bpt id="p1">[</bpt>共享访问签名<ept id="p1">](/documentation/articles/service-bus-sas-overview)</ept> (SAS) 密钥。服务命名空间为每个通过服务总线公开的应用程序提供应用程序边界。创建服务命名空间时，系统将自动生成 SAS 密钥。服务命名空间与 SAS 密钥的组合为服务总线提供了一个用于验证应用程序访问权限的凭据。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>创建命名空间并获取共享密钥</source>
          <target state="new">创建命名空间并获取共享密钥</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>有关如何创建服务命名空间的完整信息，请参阅<bpt id="p1">[</bpt>管理服务总线服务命名空间<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/hh690928.aspx)</ept>部分中的<bpt id="p2">[</bpt>如何：创建或修改服务总线服务命名空间<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/hh690931.aspx)</ept>主题。</source>
          <target state="new">有关如何创建服务命名空间的完整信息，请参阅<bpt id="p1">[</bpt>管理服务总线服务命名空间<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/azure/hh690928.aspx)</ept>部分中的<bpt id="p2">[</bpt>如何：创建或修改服务总线服务命名空间<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/azure/hh690931.aspx)</ept>主题。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>在 [Azure 经典门户][] 的主窗口中，单击在上一步中创建的命名空间的名称。</source>
          <target state="new">在 [Azure 经典门户][] 的主窗口中，单击在上一步中创建的命名空间的名称。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>单击“配置”选项卡。</source>
          <target state="new">单击“配置”选项卡。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>在“共享访问密钥生成器”部分中，记下与 <bpt id="p1">**</bpt>RootManageSharedAccessKey<ept id="p1">**</ept> 策略关联的“主密钥”，或将其复制到剪贴板。你将在本教程的后面部分使用此值。</source>
          <target state="new">在“共享访问密钥生成器”部分中，记下与 <bpt id="p1">**</bpt>RootManageSharedAccessKey<ept id="p1">**</ept> 策略关联的“主密钥”，或将其复制到剪贴板。你将在本教程的后面部分使用此值。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>创建控制台客户端</source>
          <target state="new">创建控制台客户端</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>通过服务总线队列，你可以在第一个先进先出队列中存储消息。主题和订阅可实现发布/订阅模式；创建主题，然后创建与该主题关联的一个或多个订阅。当消息发送到主题时，就会立即发送到该主题的订户。</source>
          <target state="new">通过服务总线队列，你可以在第一个先进先出队列中存储消息。主题和订阅可实现发布/订阅模式；创建主题，然后创建与该主题关联的一个或多个订阅。当消息发送到主题时，就会立即发送到该主题的订户。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>本教程中的代码将执行以下操作。</source>
          <target state="new">本教程中的代码将执行以下操作。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>使用服务命名空间和<bpt id="p1">[</bpt>共享访问签名<ept id="p1">](/documentation/articles/service-bus-sas-overview)</ept> (SAS) 密钥来获取对服务总线命名空间资源的访问权限。</source>
          <target state="new">使用服务命名空间和<bpt id="p1">[</bpt>共享访问签名<ept id="p1">](/documentation/articles/service-bus-sas-overview)</ept> (SAS) 密钥来获取对服务总线命名空间资源的访问权限。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>创建队列、将消息发送到队列，并读取来自队列的消息。</source>
          <target state="new">创建队列、将消息发送到队列，并读取来自队列的消息。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>创建一个主题和对该主题的订阅，并向该订阅发送消息和读取来自该订阅的消息。</source>
          <target state="new">创建一个主题和对该主题的订阅，并向该订阅发送消息和读取来自该订阅的消息。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>从服务总线检索所有队列、主题和订阅信息（包括订阅规则）。</source>
          <target state="new">从服务总线检索所有队列、主题和订阅信息（包括订阅规则）。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>删除队列、主题和订阅资源。</source>
          <target state="new">删除队列、主题和订阅资源。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>由于该服务是 REST 样式的 Web 服务并且整个交换只涉及字符串，因此不涉及任何特殊类型。这意味着 Visual Studio 项目不得引用任何服务总线库。</source>
          <target state="new">由于该服务是 REST 样式的 Web 服务并且整个交换只涉及字符串，因此不涉及任何特殊类型。这意味着 Visual Studio 项目不得引用任何服务总线库。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>获取第一步中的服务命名空间和凭据后，下一步是创建一个基本的 Visual Studio 控制台应用程序。</source>
          <target state="new">获取第一步中的服务命名空间和凭据后，下一步是创建一个基本的 Visual Studio 控制台应用程序。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>创建控制台应用程序</source>
          <target state="new">创建控制台应用程序</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>在“开始”菜单中右键单击 Visual Studio，以便以管理员身份启动该程序，然后单击“以管理员身份运行”。</source>
          <target state="new">在“开始”菜单中右键单击 Visual Studio，以便以管理员身份启动该程序，然后单击“以管理员身份运行”。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>创建新的控制台应用程序项目。依次单击“文件”菜单、“新建”和“项目”。在“新建项目”对话框中，选择“Visual C#”（如果不显示“Visual C#”，则在“其他语言”下方查看），再选择“控制台应用程序”模板，然后将其命名为 <bpt id="p1">**</bpt>Microsoft.ServiceBus.Samples<ept id="p1">**</ept>。使用默认“位置”。单击“确定”以创建该项目。</source>
          <target state="new">创建新的控制台应用程序项目。依次单击“文件”菜单、“新建”和“项目”。在“新建项目”对话框中，选择“Visual C#”（如果不显示“Visual C#”，则在“其他语言”下方查看），再选择“控制台应用程序”模板，然后将其命名为 <bpt id="p1">**</bpt>Microsoft.ServiceBus.Samples<ept id="p1">**</ept>。使用默认“位置”。单击“确定”以创建该项目。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>在 Program.cs 中，确保 <ph id="ph1">`using`</ph> 语句如下所示：</source>
          <target state="new">在 Program.cs 中，确保 <ph id="ph1">`using`</ph> 语句如下所示：</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>如有需要，将该程序的命名空间从 Visual Studio 默认值重命名为 <ph id="ph1">`Microsoft.ServiceBus.Samples`</ph>。</source>
          <target state="new">如有需要，将该程序的命名空间从 Visual Studio 默认值重命名为 <ph id="ph1">`Microsoft.ServiceBus.Samples`</ph>。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>在 <ph id="ph1">`Program`</ph> 类中，添加以下全局变量：</source>
          <target state="new">在 <ph id="ph1">`Program`</ph> 类中，添加以下全局变量：</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>在 <ph id="ph1">`Main()`</ph> 中，粘贴以下代码：</source>
          <target state="new">在 <ph id="ph1">`Main()`</ph> 中，粘贴以下代码：</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>创建管理凭据</source>
          <target state="new">创建管理凭据</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>下一步是编写一个方法，用于处理上一步中输入的命名空间和 SAS 密钥，并返回一个 SAS 令牌。此示例创建了一个有效期为一小时的 SAS 令牌。</source>
          <target state="new">下一步是编写一个方法，用于处理上一步中输入的命名空间和 SAS 密钥，并返回一个 SAS 令牌。此示例创建了一个有效期为一小时的 SAS 令牌。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>创建 GetSASToken() 方法</source>
          <target state="new">创建 GetSASToken() 方法</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>在 <ph id="ph1">`Main()`</ph> 方法后面的 <ph id="ph2">`Program`</ph> 类中粘贴以下代码：</source>
          <target state="new">在 <ph id="ph1">`Main()`</ph> 方法后面的 <ph id="ph2">`Program`</ph> 类中粘贴以下代码：</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>创建队列</source>
          <target state="new">创建队列</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>下一步是编写使用 REST 样式的 HTTP PUT 命令来创建队列的方法。</source>
          <target state="new">下一步是编写使用 REST 样式的 HTTP PUT 命令来创建队列的方法。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>在上一步中添加的 <ph id="ph1">`GetSASToken()`</ph> 代码后直接粘贴以下代码：</source>
          <target state="new">在上一步中添加的 <ph id="ph1">`GetSASToken()`</ph> 代码后直接粘贴以下代码：</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>向队列发送消息</source>
          <target state="new">向队列发送消息</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>在此步骤中，你将添加一个方法，该方法使用 REST 样式的 HTTP POST 命令将消息发送到上一步中创建的队列。</source>
          <target state="new">在此步骤中，你将添加一个方法，该方法使用 REST 样式的 HTTP POST 命令将消息发送到上一步中创建的队列。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>在上一步中添加的 <ph id="ph1">`CreateQueue()`</ph> 代码后直接粘贴以下代码：</source>
          <target state="new">在上一步中添加的 <ph id="ph1">`CreateQueue()`</ph> 代码后直接粘贴以下代码：</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>标准中转消息属性位于 <ph id="ph1">`BrokerProperties`</ph> HTTP 标头中。中转站属性必须以 JSON 格式序列化。若要指定 30 秒的 <bpt id="p1">**</bpt>TimeToLive<ept id="p1">**</ept> 值并向消息添加消息标签“M1”，请在前面的示例所示的 <ph id="ph2">`webClient.UploadData()`</ph> 调用之前添加以下代码：</source>
          <target state="new">标准中转消息属性位于 <ph id="ph1">`BrokerProperties`</ph> HTTP 标头中。中转站属性必须以 JSON 格式序列化。若要指定 30 秒的 <bpt id="p1">**</bpt>TimeToLive<ept id="p1">**</ept> 值并向消息添加消息标签“M1”，请在前面的示例所示的 <ph id="ph2">`webClient.UploadData()`</ph> 调用之前添加以下代码：</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>请注意，已添加并将继续添加中转消息属性。因此，发送请求必须指定支持属于请求一部分的所有中转消息属性的 API 版本。如果指定的 API 版本不支持中转消息属性，则忽略该属性。</source>
          <target state="new">请注意，已添加并将继续添加中转消息属性。因此，发送请求必须指定支持属于请求一部分的所有中转消息属性的 API 版本。如果指定的 API 版本不支持中转消息属性，则忽略该属性。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>自定义消息属性被定义为一组键值对。每个自定义属性都存储在其自身的 TPPT 标头中。若要添加自定义属性“Priority”和“Customer”，请在前面的示例所示的 <ph id="ph1">`webClient.UploadData()`</ph> 调用之前直接添加以下代码：</source>
          <target state="new">自定义消息属性被定义为一组键值对。每个自定义属性都存储在其自身的 TPPT 标头中。若要添加自定义属性“Priority”和“Customer”，请在前面的示例所示的 <ph id="ph1">`webClient.UploadData()`</ph> 调用之前直接添加以下代码：</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>从队列接收并删除消息</source>
          <target state="new">从队列接收并删除消息</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>下一步是添加使用 REST 样式的 HTTP DELETE 命令从队列接收并删除消息的方法。</source>
          <target state="new">下一步是添加使用 REST 样式的 HTTP DELETE 命令从队列接收并删除消息的方法。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>在上一步中添加的 <ph id="ph1">`SendMessage()`</ph> 代码后直接粘贴以下代码：</source>
          <target state="new">在上一步中添加的 <ph id="ph1">`SendMessage()`</ph> 代码后直接粘贴以下代码：</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>创建主题和订阅</source>
          <target state="new">创建主题和订阅</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>下一步是编写使用 REST 样式的 HTTP PUT 命令来创建主题的方法。然后，编写创建对该主题的订阅的方法。</source>
          <target state="new">下一步是编写使用 REST 样式的 HTTP PUT 命令来创建主题的方法。然后，编写创建对该主题的订阅的方法。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>创建主题</source>
          <target state="new">创建主题</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>在上一步中添加的 <ph id="ph1">`ReceiveAndDeleteMessage()`</ph> 代码后直接粘贴以下代码：</source>
          <target state="new">在上一步中添加的 <ph id="ph1">`ReceiveAndDeleteMessage()`</ph> 代码后直接粘贴以下代码：</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>创建订阅</source>
          <target state="new">创建订阅</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>以下代码将创建对上一步中创建的主题的订阅。在 <ph id="ph1">`CreateTopic()`</ph> 定义后直接添加以下代码：</source>
          <target state="new">以下代码将创建对上一步中创建的主题的订阅。在 <ph id="ph1">`CreateTopic()`</ph> 定义后直接添加以下代码：</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>检索消息资源</source>
          <target state="new">检索消息资源</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>在此步骤中添加的代码用于检索消息属性，然后删除在前面的步骤中创建的消息资源。</source>
          <target state="new">在此步骤中添加的代码用于检索消息属性，然后删除在前面的步骤中创建的消息资源。</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>用指定资源检索 Atom 馈送</source>
          <target state="new">用指定资源检索 Atom 馈送</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>在上一步中添加的 <ph id="ph1">`CreateSubscription()`</ph> 方法后直接添加以下代码：</source>
          <target state="new">在上一步中添加的 <ph id="ph1">`CreateSubscription()`</ph> 方法后直接添加以下代码：</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>删除消息传送实体</source>
          <target state="new">删除消息传送实体</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>在上一步中添加的代码后直接添加以下代码：</source>
          <target state="new">在上一步中添加的代码后直接添加以下代码：</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>格式化 Atom 馈送</source>
          <target state="new">格式化 Atom 馈送</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`GetResources()`</ph> 方法包含对 <ph id="ph2">`FormatXml()`</ph> 方法的调用，用于对检索到的 Atom 馈送进行再次格式化，以增强其可读性。以下是 <ph id="ph3">`FormatXml()`</ph> 的定义；请在在上一部分中添加的 <ph id="ph4">`DeleteResource()`</ph> 代码后直接添加它：</source>
          <target state="new"><ph id="ph1">`GetResources()`</ph> 方法包含对 <ph id="ph2">`FormatXml()`</ph> 方法的调用，用于对检索到的 Atom 馈送进行再次格式化，以增强其可读性。以下是 <ph id="ph3">`FormatXml()`</ph> 的定义；请在在上一部分中添加的 <ph id="ph4">`DeleteResource()`</ph> 代码后直接添加它：</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>构建并运行应用程序</source>
          <target state="new">构建并运行应用程序</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>现在可以构建并运行应用程序。单击 Visual Studio 中“生成”菜单上的“生成解决方案”，或按 F6。</source>
          <target state="new">现在可以构建并运行应用程序。单击 Visual Studio 中“生成”菜单上的“生成解决方案”，或按 F6。</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>运行应用程序</source>
          <target state="new">运行应用程序</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>如果没有任何错误，请按 F5 以运行该应用程序。出现提示时，输入命名空间、SAS 密钥名和你在第一步中获取的 SAS 密钥值。</source>
          <target state="new">如果没有任何错误，请按 F5 以运行该应用程序。出现提示时，输入命名空间、SAS 密钥名和你在第一步中获取的 SAS 密钥值。</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>示例</source>
          <target state="new">示例</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>下例为完整的代码，它是遵循本教程中所有步骤之后的预期结果。</source>
          <target state="new">下例为完整的代码，它是遵循本教程中所有步骤之后的预期结果。</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>请参阅以下文章以了解更多信息：</source>
          <target state="new">请参阅以下文章以了解更多信息：</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>服务总线消息传送概述</source>
          <target state="new">服务总线消息传送概述</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Azure 服务总线基础知识</source>
          <target state="new">Azure 服务总线基础知识</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>服务总线中继 REST 教程</source>
          <target state="new">服务总线中继 REST 教程</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>[Azure 经典门户]: http://manage.windowsazure.cn</source>
          <target state="new">[Azure 经典门户]: http://manage.windowsazure.cn</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>