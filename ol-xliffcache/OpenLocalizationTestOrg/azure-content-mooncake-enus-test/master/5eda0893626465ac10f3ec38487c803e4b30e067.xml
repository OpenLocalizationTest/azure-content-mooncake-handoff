{
  "nodes": [
    {
      "content": "Azure Redis Cache 示例",
      "pos": [
        28,
        48
      ]
    },
    {
      "content": "了解如何使用 Azure Redis Cache",
      "pos": [
        68,
        92
      ]
    },
    {
      "content": "Azure Redis Cache 示例",
      "pos": [
        303,
        323
      ]
    },
    {
      "content": "本主题提供了 Azure Redis Cache 示例的列表，涵盖了诸如连接到缓存、从缓存中读取数据以及向其中写入数据、以及使用 ASP.NET Redis Cache 提供程序之类的方案。有些示例是可下载的项目，有些示例提供了分步指南并包含代码片段但没有链接到可下载的项目。",
      "pos": [
        326,
        464
      ]
    },
    {
      "content": "Hello world 示例",
      "pos": [
        469,
        483
      ]
    },
    {
      "content": "本部分中的示例显示了使用各种语言和 Redis 客户端连接到 Azure Redis Cache 实例、从缓存中读取数据以及向其中写入数据方面的基础知识。",
      "pos": [
        485,
        562
      ]
    },
    {
      "pos": [
        564,
        744
      ],
      "content": "<bpt id=\"p1\">[</bpt>Hello world<ept id=\"p1\">](https://github.com/rustd/RedisSamples/tree/master/HelloWorld)</ept> 示例展示了如何使用 <bpt id=\"p2\">[</bpt>StackExchange.Redis<ept id=\"p2\">](https://github.com/StackExchange/StackExchange.Redis)</ept> .NET 客户端执行不同的缓存操作。"
    },
    {
      "content": "此示例演示如何：",
      "pos": [
        746,
        754
      ]
    },
    {
      "content": "使用不同的连接选项",
      "pos": [
        760,
        769
      ]
    },
    {
      "content": "使用同步和异步操作与缓存相互读取和写入对象",
      "pos": [
        774,
        795
      ]
    },
    {
      "content": "使用 Redis MGET/MSET 命令返回指定键的值",
      "pos": [
        800,
        828
      ]
    },
    {
      "content": "执行 Redis 事务操作",
      "pos": [
        833,
        846
      ]
    },
    {
      "content": "处理 Redis 列表和排序集",
      "pos": [
        851,
        866
      ]
    },
    {
      "content": "使用 JsonConvert 序列化程序存储.NET 对象",
      "pos": [
        871,
        900
      ]
    },
    {
      "content": "使用 Redis 集实现标记",
      "pos": [
        905,
        919
      ]
    },
    {
      "pos": [
        921,
        1157
      ],
      "content": "有关详细信息，请参阅 github 上的 <bpt id=\"p1\">[</bpt>StackExchange.Redis<ept id=\"p1\">](https://github.com/StackExchange/StackExchange.Redis)</ept>；有关更多的使用方案，请参阅 <bpt id=\"p2\">[</bpt>StackExchange.Redis.Tests<ept id=\"p2\">](https://github.com/StackExchange/StackExchange.Redis/tree/master/StackExchange.Redis.Tests)</ept> 单位测试。"
    },
    {
      "pos": [
        1159,
        1334
      ],
      "content": "<bpt id=\"p1\">[</bpt>如何将 Azure Redis 缓存与 Python 配合使用<ept id=\"p1\">](/documentation/articles/cache-python-get-started)</ept>展示了如何使用 Python 和 <bpt id=\"p2\">[</bpt>redis-py<ept id=\"p2\">](https://github.com/andymccurdy/redis-py)</ept> 客户端开始使用 Azure Redis 缓存。"
    },
    {
      "pos": [
        1336,
        1493
      ],
      "content": "<bpt id=\"p1\">[</bpt>在缓存中处理 .NET 对象<ept id=\"p1\">](/documentation/articles/cache-dotnet-how-to-use-azure-redis-cache#working-with-caches)</ept>演示了如何对 .NET 对象进行序列化以便可以将其写入到 Azure Redis 缓存实例以及从中进行读取。"
    },
    {
      "content": "将 Redis Cache 用作 ASP.NET SignalR 的扩展基架",
      "pos": [
        1498,
        1536
      ]
    },
    {
      "pos": [
        1538,
        1792
      ],
      "content": "<bpt id=\"p1\">[</bpt>将 Redis 缓存用作 ASP.NET SignalR 的扩展基架<ept id=\"p1\">](https://github.com/rustd/RedisSamples/tree/master/RedisAsSignalRBackplane)</ept>示例演示了如何将 Azure Redis 缓存用作 SignalR 基架。有关基架的更多信息，请参阅<bpt id=\"p2\">[</bpt>采用 Redis 的 SignalR 扩展<ept id=\"p2\">](http://www.asp.net/signalr/overview/performance/scaleout-with-redis)</ept>。"
    },
    {
      "content": "Redis Cache 客户查询示例",
      "pos": [
        1797,
        1815
      ]
    },
    {
      "content": "此示例对从缓存访问数据与从持久存储访问数据时的性能进行了比较。此示例有两个项目。",
      "pos": [
        1817,
        1857
      ]
    },
    {
      "content": "展示 Redis Cache 如何通过对数据进行缓存提高性能",
      "pos": [
        1864,
        1894
      ]
    },
    {
      "content": "为进行展示创立数据库和缓存",
      "pos": [
        1982,
        1995
      ]
    },
    {
      "content": "ASP.NET 会话状态和输出缓存",
      "pos": [
        2084,
        2101
      ]
    },
    {
      "pos": [
        2103,
        2326
      ],
      "content": "<bpt id=\"p1\">[</bpt>使用 Azure Redis 缓存存储 ASP.NET SessionState 和 OutputCache<ept id=\"p1\">](https://github.com/rustd/RedisSamples/tree/master/SessionState_OutputCaching)</ept> 示例演示了如何使用 Azure Redis 缓存通过为 Redis 使用 SessionState 和 OutputCache 提供程序来存储 ASP.NET 会话和输出缓存。"
    },
    {
      "content": "使用 MAML 管理 Azure Redis Cache",
      "pos": [
        2331,
        2359
      ]
    },
    {
      "pos": [
        2361,
        2537
      ],
      "content": "<bpt id=\"p1\">[</bpt>使用 Azure Management Libraries 管理 Azure Redis 缓存<ept id=\"p1\">](https://github.com/rustd/RedisSamples/tree/master/ManageCacheUsingMAML)</ept>示例展示了如何使用 Azure Management Libraries 来管理（创建/更新/删除）你的缓存。"
    },
    {
      "content": "自定义监视示例",
      "pos": [
        2542,
        2549
      ]
    },
    {
      "pos": [
        2551,
        2668
      ],
      "content": "<bpt id=\"p1\">[</bpt>访问 Redis 缓存监视数据<ept id=\"p1\">](https://github.com/rustd/RedisSamples/tree/master/CustomMonitoring)</ept>示例演示了如何访问你的 Azure Redis 缓存的监视数据。"
    },
    {
      "content": "使用 PHP 和 Redis 编写的 Twitter 式克隆",
      "pos": [
        2673,
        2703
      ]
    },
    {
      "pos": [
        2705,
        2899
      ],
      "content": "<bpt id=\"p1\">[</bpt>Retwis<ept id=\"p1\">](https://github.com/SyntaxC4-MSFT/retwis)</ept> 示例是 Redis Hello World。它是最小的 Twitter 样式的社交网络克隆使用 Redis 和 PHP 编写使用 <bpt id=\"p2\">[</bpt>Predis<ept id=\"p2\">](https://github.com/nrk/predis)</ept> 客户端。源代码旨在是非常简单，并且在同一时间以显示其他 Redis 数据结构。"
    },
    {
      "content": "带宽监视器",
      "pos": [
        2904,
        2909
      ]
    },
    {
      "pos": [
        2911,
        3052
      ],
      "content": "<bpt id=\"p1\">[</bpt>带宽监视器<ept id=\"p1\">](https://github.com/JonCole/SampleCode/tree/master/BandWidthMonitor)</ept>示例允许你监视客户端上使用的带宽。若要测量带宽、请在缓存客户端计算机上运行该示例，对缓存执行调用，然后观察带宽监视器示例报告的带宽。"
    }
  ],
  "content": "<properties \n    pageTitle=\"Azure Redis Cache 示例\" \n    description=\"了解如何使用 Azure Redis Cache\" \n    services=\"redis-cache\" \n    documentationCenter=\"\" \n    authors=\"steved0x\" \n    manager=\"dwrede\" \n    editor=\"\"/>\n\n<tags \n    ms.service=\"cache\" \n    ms.date=\"12/17/2015\" \n    wacn.date=\"01/04/2016\"/>\n\n# Azure Redis Cache 示例 \n\n本主题提供了 Azure Redis Cache 示例的列表，涵盖了诸如连接到缓存、从缓存中读取数据以及向其中写入数据、以及使用 ASP.NET Redis Cache 提供程序之类的方案。有些示例是可下载的项目，有些示例提供了分步指南并包含代码片段但没有链接到可下载的项目。\n\n## Hello world 示例\n\n本部分中的示例显示了使用各种语言和 Redis 客户端连接到 Azure Redis Cache 实例、从缓存中读取数据以及向其中写入数据方面的基础知识。\n\n[Hello world](https://github.com/rustd/RedisSamples/tree/master/HelloWorld) 示例展示了如何使用 [StackExchange.Redis](https://github.com/StackExchange/StackExchange.Redis) .NET 客户端执行不同的缓存操作。\n\n此示例演示如何：\n\n-   使用不同的连接选项\n-   使用同步和异步操作与缓存相互读取和写入对象\n-   使用 Redis MGET/MSET 命令返回指定键的值\n-   执行 Redis 事务操作\n-   处理 Redis 列表和排序集\n-   使用 JsonConvert 序列化程序存储.NET 对象\n-   使用 Redis 集实现标记\n\n有关详细信息，请参阅 github 上的 [StackExchange.Redis](https://github.com/StackExchange/StackExchange.Redis)；有关更多的使用方案，请参阅 [StackExchange.Redis.Tests](https://github.com/StackExchange/StackExchange.Redis/tree/master/StackExchange.Redis.Tests) 单位测试。\n\n[如何将 Azure Redis 缓存与 Python 配合使用](/documentation/articles/cache-python-get-started)展示了如何使用 Python 和 [redis-py](https://github.com/andymccurdy/redis-py) 客户端开始使用 Azure Redis 缓存。\n\n[在缓存中处理 .NET 对象](/documentation/articles/cache-dotnet-how-to-use-azure-redis-cache#working-with-caches)演示了如何对 .NET 对象进行序列化以便可以将其写入到 Azure Redis 缓存实例以及从中进行读取。\n\n## 将 Redis Cache 用作 ASP.NET SignalR 的扩展基架\n\n[将 Redis 缓存用作 ASP.NET SignalR 的扩展基架](https://github.com/rustd/RedisSamples/tree/master/RedisAsSignalRBackplane)示例演示了如何将 Azure Redis 缓存用作 SignalR 基架。有关基架的更多信息，请参阅[采用 Redis 的 SignalR 扩展](http://www.asp.net/signalr/overview/performance/scaleout-with-redis)。\n\n## Redis Cache 客户查询示例\n\n此示例对从缓存访问数据与从持久存储访问数据时的性能进行了比较。此示例有两个项目。\n\n-   [展示 Redis Cache 如何通过对数据进行缓存提高性能](https://github.com/rustd/RedisSamples/tree/master/RedisCacheCustomerQuerySample)\n-   [为进行展示创立数据库和缓存](https://github.com/rustd/RedisSamples/tree/master/SeedCacheForCustomerQuerySample)\n\n## ASP.NET 会话状态和输出缓存\n\n[使用 Azure Redis 缓存存储 ASP.NET SessionState 和 OutputCache](https://github.com/rustd/RedisSamples/tree/master/SessionState_OutputCaching) 示例演示了如何使用 Azure Redis 缓存通过为 Redis 使用 SessionState 和 OutputCache 提供程序来存储 ASP.NET 会话和输出缓存。\n\n## 使用 MAML 管理 Azure Redis Cache\n\n[使用 Azure Management Libraries 管理 Azure Redis 缓存](https://github.com/rustd/RedisSamples/tree/master/ManageCacheUsingMAML)示例展示了如何使用 Azure Management Libraries 来管理（创建/更新/删除）你的缓存。\n\n## 自定义监视示例\n\n[访问 Redis 缓存监视数据](https://github.com/rustd/RedisSamples/tree/master/CustomMonitoring)示例演示了如何访问你的 Azure Redis 缓存的监视数据。\n\n## 使用 PHP 和 Redis 编写的 Twitter 式克隆\n\n[Retwis](https://github.com/SyntaxC4-MSFT/retwis) 示例是 Redis Hello World。它是最小的 Twitter 样式的社交网络克隆使用 Redis 和 PHP 编写使用 [Predis](https://github.com/nrk/predis) 客户端。源代码旨在是非常简单，并且在同一时间以显示其他 Redis 数据结构。\n\n## 带宽监视器\n\n[带宽监视器](https://github.com/JonCole/SampleCode/tree/master/BandWidthMonitor)示例允许你监视客户端上使用的带宽。若要测量带宽、请在缓存客户端计算机上运行该示例，对缓存执行调用，然后观察带宽监视器示例报告的带宽。\n\n<!---HONumber=76-->"
}