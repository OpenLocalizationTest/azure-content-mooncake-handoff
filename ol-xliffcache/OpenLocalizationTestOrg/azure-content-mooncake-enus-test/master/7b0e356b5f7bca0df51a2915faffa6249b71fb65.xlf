<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7b0e356b5f7bca0df51a2915faffa6249b71fb65</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>使用通知中心发送突发新闻 (Windows Universal)</source>
          <target state="new">使用通知中心发送突发新闻 (Windows Universal)</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>结合注册中的标记使用 Azure 通知中心将突发新闻发送到通用 Windows 应用。</source>
          <target state="new">结合注册中的标记使用 Azure 通知中心将突发新闻发送到通用 Windows 应用。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>使用通知中心发送突发新闻</source>
          <target state="new">使用通知中心发送突发新闻</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>概述</source>
          <target state="new">概述</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>本主题演示如何使用 Azure 通知中心将突发新闻通知广播到 Windows 应用商店或 Windows Phone 8.1（非 Silverlight）应用。如果你要以 Windows Phone 8.1 Silverlight 为目标，请参阅 <bpt id="p1">[</bpt>Windows Phone<ept id="p1">](/documentation/articles/notification-hubs-ios-send-breaking-news)</ept> 版本。完成时，你可以注册感兴趣的突发新闻类别并仅接收这些类别的推送通知。此方案对于很多应用程序来说是常见模式，在其中必须将通知发送到以前声明过对它们感兴趣的一组用户，这样的应用程序有 RSS 阅读器、针对音乐迷的应用程序等。</source>
          <target state="new">本主题演示如何使用 Azure 通知中心将突发新闻通知广播到 Windows 应用商店或 Windows Phone 8.1（非 Silverlight）应用。如果你要以 Windows Phone 8.1 Silverlight 为目标，请参阅 <bpt id="p1">[</bpt>Windows Phone<ept id="p1">](/documentation/articles/notification-hubs-ios-send-breaking-news)</ept> 版本。完成时，你可以注册感兴趣的突发新闻类别并仅接收这些类别的推送通知。此方案对于很多应用程序来说是常见模式，在其中必须将通知发送到以前声明过对它们感兴趣的一组用户，这样的应用程序有 RSS 阅读器、针对音乐迷的应用程序等。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>在创建通知中心的注册时，通过加入一个或多个<bpt id="p1">_</bpt>标记<ept id="p1">_</ept>来启用广播方案。将通知发送到标签时，已注册该标签的所有设备将接收通知。因为标签是简单的字符串，它们不必提前设置。有关标记的详细信息，请参阅<bpt id="p2">[</bpt>通知中心路由和标记表达式<ept id="p2">](/documentation/articles/notification-hubs-routing-tag-expressions)</ept>。</source>
          <target state="new">在创建通知中心的注册时，通过加入一个或多个<bpt id="p1">_</bpt>标记<ept id="p1">_</ept>来启用广播方案。将通知发送到标签时，已注册该标签的所有设备将接收通知。因为标签是简单的字符串，它们不必提前设置。有关标记的详细信息，请参阅<bpt id="p2">[</bpt>通知中心路由和标记表达式<ept id="p2">](/documentation/articles/notification-hubs-routing-tag-expressions)</ept>。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>先决条件</source>
          <target state="new">先决条件</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>本主题以你在<bpt id="p1">[</bpt>通知中心入门<ept id="p1">][get-started]</ept>中创建的应用程序为基础。在开始本教程之前，必须先阅读<bpt id="p2">[</bpt>通知中心入门<ept id="p2">][get-started]</ept>。</source>
          <target state="new">本主题以你在<bpt id="p1">[</bpt>通知中心入门<ept id="p1">][get-started]</ept>中创建的应用程序为基础。在开始本教程之前，必须先阅读<bpt id="p2">[</bpt>通知中心入门<ept id="p2">][get-started]</ept>。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="adding-categories"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>向应用程序中添加类别选择</source>
          <target state="new"><ph id="ph1">&lt;a name="adding-categories"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>向应用程序中添加类别选择</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>第一步是向现有主页添加 UI 元素，这些元素允许用户选择要注册的类别。用户选择的类别存储在设备上。应用程序启动时，使用所选类别作为标签在你的通知中心创建设备注册。</source>
          <target state="new">第一步是向现有主页添加 UI 元素，这些元素允许用户选择要注册的类别。用户选择的类别存储在设备上。应用程序启动时，使用所选类别作为标签在你的通知中心创建设备注册。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>打开 MainPage.xaml 项目文件，然后在 <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept> 元素中复制以下代码：</source>
          <target state="new">打开 MainPage.xaml 项目文件，然后在 <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept> 元素中复制以下代码：</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>右键单击“共享”项目，添加名为 <bpt id="p1">**</bpt>Notifications<ept id="p1">**</ept> 的新类，向类定义添加 <bpt id="p2">**</bpt>public<ept id="p2">**</ept> 修饰符，然后将以下 <bpt id="p3">**</bpt>using<ept id="p3">**</ept> 语句添加到新的代码文件：</source>
          <target state="new">右键单击“共享”项目，添加名为 <bpt id="p1">**</bpt>Notifications<ept id="p1">**</ept> 的新类，向类定义添加 <bpt id="p2">**</bpt>public<ept id="p2">**</ept> 修饰符，然后将以下 <bpt id="p3">**</bpt>using<ept id="p3">**</ept> 语句添加到新的代码文件：</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>将以下代码添加到新的 <bpt id="p1">**</bpt>Notifications<ept id="p1">**</ept> 类：</source>
          <target state="new">将以下代码添加到新的 <bpt id="p1">**</bpt>Notifications<ept id="p1">**</ept> 类：</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>此类使用本地存储区存储此设备必须接收的新闻类别。请注意，我们没有调用 <bpt id="p1">*</bpt>RegisterNativeAsync<ept id="p1">*</ept> 方法，而是调用了 <bpt id="p2">*</bpt>RegisterTemplateAsync<ept id="p2">*</ept>，以使用模板注册来注册类别。</source>
          <target state="new">此类使用本地存储区存储此设备必须接收的新闻类别。请注意，我们没有调用 <bpt id="p1">*</bpt>RegisterNativeAsync<ept id="p1">*</ept> 方法，而是调用了 <bpt id="p2">*</bpt>RegisterTemplateAsync<ept id="p2">*</ept>，以使用模板注册来注册类别。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>我们还提供模板的名称（“simpleWNSTemplateExample”），因为我们可能要注册多个模板（例如一个用于 toast 通知，一个用于磁贴），需要命名它们以便可以更新或删除它们。</source>
          <target state="new">我们还提供模板的名称（“simpleWNSTemplateExample”），因为我们可能要注册多个模板（例如一个用于 toast 通知，一个用于磁贴），需要命名它们以便可以更新或删除它们。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>请注意，如果一个设备使用同一标签注册多个模板，针对该标签的传入消息将导致多个通知发送到设备（每个通知对应一个模板）。当同一逻辑消息必须导致多个可视通知时，此行为很有用，例如在 Windows 应用商店应用程序显示徽章和 toast。</source>
          <target state="new">请注意，如果一个设备使用同一标签注册多个模板，针对该标签的传入消息将导致多个通知发送到设备（每个通知对应一个模板）。当同一逻辑消息必须导致多个可视通知时，此行为很有用，例如在 Windows 应用商店应用程序显示徽章和 toast。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>有关模板的详细信息，请参阅<bpt id="p1">[</bpt>模板<ept id="p1">](/documentation/articles/notification-hubs-templates)</ept>。</source>
          <target state="new">有关模板的详细信息，请参阅<bpt id="p1">[</bpt>模板<ept id="p1">](/documentation/articles/notification-hubs-templates)</ept>。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>在 App.xaml.cs 项目文件中，将以下属性添加到 <bpt id="p1">**</bpt>App<ept id="p1">**</ept> 类：</source>
          <target state="new">在 App.xaml.cs 项目文件中，将以下属性添加到 <bpt id="p1">**</bpt>App<ept id="p1">**</ept> 类：</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>此属性用于创建和访问 <bpt id="p1">**</bpt>Notifications<ept id="p1">**</ept> 实例。</source>
          <target state="new">此属性用于创建和访问 <bpt id="p1">**</bpt>Notifications<ept id="p1">**</ept> 实例。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>在上面的代码中，将 <ph id="ph1">`&lt;hub name&gt;`</ph> 和 <ph id="ph2">`&lt;connection string with listen access&gt;`</ph> 占位符替换为你的通知中心的名称和你之前获取的 <bpt id="p1">*</bpt>DefaultListenSharedAccessSignature<ept id="p1">*</ept> 的连接字符串。</source>
          <target state="new">在上面的代码中，将 <ph id="ph1">`&lt;hub name&gt;`</ph> 和 <ph id="ph2">`&lt;connection string with listen access&gt;`</ph> 占位符替换为你的通知中心的名称和你之前获取的 <bpt id="p1">*</bpt>DefaultListenSharedAccessSignature<ept id="p1">*</ept> 的连接字符串。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>由于使用客户端应用程序分发的凭据通常是不安全的，你只应使用客户端应用程序分发具有侦听访问权限的密钥。侦听访问权限允许应用程序注册通知，但是无法修改现有注册，也无法发送通知。在受保护的后端服务中使用完全访问权限密钥，以便发送通知和更改现有注册。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>由于使用客户端应用程序分发的凭据通常是不安全的，你只应使用客户端应用程序分发具有侦听访问权限的密钥。侦听访问权限允许应用程序注册通知，但是无法修改现有注册，也无法发送通知。在受保护的后端服务中使用完全访问权限密钥，以便发送通知和更改现有注册。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>在 MainPage.xaml.cs 中，添加以下行：</source>
          <target state="new">在 MainPage.xaml.cs 中，添加以下行：</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>在 MainPage.xaml.cs 项目文件中，添加以下方法：</source>
          <target state="new">在 MainPage.xaml.cs 项目文件中，添加以下方法：</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>此方法创建一个类别列表并使用 <bpt id="p1">**</bpt>Notifications<ept id="p1">**</ept> 类将该列表存储在本地存储区中，将相应的标签注册到你的通知中心。更改类别时，使用新类别重新创建注册。</source>
          <target state="new">此方法创建一个类别列表并使用 <bpt id="p1">**</bpt>Notifications<ept id="p1">**</ept> 类将该列表存储在本地存储区中，将相应的标签注册到你的通知中心。更改类别时，使用新类别重新创建注册。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>你的应用程序现在可以将一组类别存储在设备的本地存储区中了，每当用户更改所选类别时，会将这些类别注册到通知中心。</source>
          <target state="new">你的应用程序现在可以将一组类别存储在设备的本地存储区中了，每当用户更改所选类别时，会将这些类别注册到通知中心。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="register"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>注册通知</source>
          <target state="new"><ph id="ph1">&lt;a name="register"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>注册通知</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>这些步骤用于在启动时将在本地存储区中存储的类别注册到通知中心。</source>
          <target state="new">这些步骤用于在启动时将在本地存储区中存储的类别注册到通知中心。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>由于 Windows 通知服务 (WNS) 分配的通道 URI 随时可能更改，因此你应该经常注册通知以避免通知失败。此示例在每次应用程序启动时注册通知。对于经常运行（一天一次以上）的应用程序，如果每次注册间隔时间不到一天，你可以跳过注册来节省带宽。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>由于 Windows 通知服务 (WNS) 分配的通道 URI 随时可能更改，因此你应该经常注册通知以避免通知失败。此示例在每次应用程序启动时注册通知。对于经常运行（一天一次以上）的应用程序，如果每次注册间隔时间不到一天，你可以跳过注册来节省带宽。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>打开 App.xaml.cs 文件，并将 <bpt id="p1">**</bpt>InitNotificationsAsync<ept id="p1">**</ept> 方法更新为使用 <ph id="ph1">`notifications`</ph> 类来基于类别订阅。</source>
          <target state="new">打开 App.xaml.cs 文件，并将 <bpt id="p1">**</bpt>InitNotificationsAsync<ept id="p1">**</ept> 方法更新为使用 <ph id="ph1">`notifications`</ph> 类来基于类别订阅。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>这确保每次应用程序启动时，它从本地存储区检索类别并请求注册这些类别。<bpt id="p1">**</bpt>InitNotificationsAsync<ept id="p1">**</ept> 方法是在学习<bpt id="p2">[</bpt>通知中心入门<ept id="p2">][get-started]</ept>教程过程中创建的。</source>
          <target state="new">这确保每次应用程序启动时，它从本地存储区检索类别并请求注册这些类别。<bpt id="p1">**</bpt>InitNotificationsAsync<ept id="p1">**</ept> 方法是在学习<bpt id="p2">[</bpt>通知中心入门<ept id="p2">][get-started]</ept>教程过程中创建的。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>在 MainPage.xaml.cs 项目文件的 <bpt id="p1">*</bpt>OnNavigatedTo<ept id="p1">*</ept> 方法中添加以下代码：</source>
          <target state="new">在 MainPage.xaml.cs 项目文件的 <bpt id="p1">*</bpt>OnNavigatedTo<ept id="p1">*</ept> 方法中添加以下代码：</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>这基于以前保存的类别状态更新主页。</source>
          <target state="new">这基于以前保存的类别状态更新主页。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>应用程序现在已完成，可以在设备的本地存储区中存储一组类别了，每当用户更改所选类别时将使用这些类别注册到通知中心。接下来，我们将定义一个后端，它可将类别通知发送到此应用程序。</source>
          <target state="new">应用程序现在已完成，可以在设备的本地存储区中存储一组类别了，每当用户更改所选类别时将使用这些类别注册到通知中心。接下来，我们将定义一个后端，它可将类别通知发送到此应用程序。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>发送带标记的通知</source>
          <target state="new">发送带标记的通知</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>运行应用并生成通知</source>
          <target state="new">运行应用并生成通知</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 中，按 F5 编译并启动应用程序。</source>
          <target state="new">在 Visual Studio 中，按 F5 编译并启动应用程序。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>请注意，应用程序 UI 提供了一组开关，你可以使用它们选择要订阅的类别。</source>
          <target state="new">请注意，应用程序 UI 提供了一组开关，你可以使用它们选择要订阅的类别。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>启用一个或多个类别开关，然后单击“订阅”。</source>
          <target state="new">启用一个或多个类别开关，然后单击“订阅”。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>应用程序将所选类别转换为标签并针对所选标签从通知中心请求注册新设备。返回注册的类别并显示在对话框中。</source>
          <target state="new">应用程序将所选类别转换为标签并针对所选标签从通知中心请求注册新设备。返回注册的类别并显示在对话框中。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>使用以下方式之一从后端发送新通知：</source>
          <target state="new">使用以下方式之一从后端发送新通知：</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>控制台应用：<ept id="p1">**</ept>启动控制台应用。</source>
          <target state="new"><bpt id="p1">**</bpt>控制台应用：<ept id="p1">**</ept>启动控制台应用。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Java/PHP：<ept id="p1">**</ept>运行你的应用/脚本。</source>
          <target state="new"><bpt id="p1">**</bpt>Java/PHP：<ept id="p1">**</ept>运行你的应用/脚本。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>所选类别的通知作为 toast 通知显示。</source>
          <target state="new">所选类别的通知作为 toast 通知显示。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>在本教程中，我们了解了如何按类别广播突发消息。请考虑学习侧重说明其他高级通知中心方案的以下教程之一：</source>
          <target state="new">在本教程中，我们了解了如何按类别广播突发消息。请考虑学习侧重说明其他高级通知中心方案的以下教程之一：</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>使用通知中心广播本地化的突发新闻</source>
          <target state="new">使用通知中心广播本地化的突发新闻</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>了解如何扩展突发新闻应用程序以允许发送本地化的通知。</source>
          <target state="new">了解如何扩展突发新闻应用程序以允许发送本地化的通知。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>