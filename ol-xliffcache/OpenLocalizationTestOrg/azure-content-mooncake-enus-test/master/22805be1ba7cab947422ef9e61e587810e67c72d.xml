{
  "nodes": [
    {
      "content": "缓存 ASP.NET 输出缓存提供程序",
      "pos": [
        27,
        46
      ]
    },
    {
      "content": "了解如何使用 Azure Redis 缓存来缓存 ASP.NET 页面输出",
      "pos": [
        64,
        101
      ]
    },
    {
      "content": "Azure Redis 缓存的 ASP.NET 输出缓存提供程序",
      "pos": [
        307,
        339
      ]
    },
    {
      "content": "Redis 输出缓存提供程序是用于输出缓存数据的进程外存储机制。此数据专门用于完整 HTTP 响应（页面输出缓存）。此提供程序会插入 ASP.NET 4 中引入的新输出缓存提供程序扩展点。",
      "pos": [
        341,
        435
      ]
    },
    {
      "pos": [
        437,
        665
      ],
      "content": "要使用 Redis 输出缓存提供程序，首先配置你的缓存，然后使用 Redis 输出缓存提供程序 NuGet 包配置 ASP.NET 应用程序。本主题提供有关配置应用程序以使用 Redis 输出缓存提供程序的指南。有关创建和配置 Azure Redis 缓存实例的详细信息，请参阅<bpt id=\"p1\">[</bpt>创建缓存<ept id=\"p1\">](/documentation/articles/cache-dotnet-how-to-use-azure-redis-cache#create-a-cache)</ept>。"
    },
    {
      "content": "在缓存中存储 ASP.NET 页面输出",
      "pos": [
        670,
        689
      ]
    },
    {
      "content": "若要在 Visual Studio 中使用 Redis 输出缓存提供程序 NuGet 包配置客户端应用程序，请在“解决方案资源管理器”中右键单击项目，然后选择“管理 NuGet 包”。",
      "pos": [
        691,
        783
      ]
    },
    {
      "content": "Azure Redis 缓存管理 NuGet 包",
      "pos": [
        787,
        811
      ]
    },
    {
      "pos": [
        872,
        932
      ],
      "content": "在“联机搜索”文本框中键入 <bpt id=\"p1\">**</bpt>RedisOutputCacheProvider<ept id=\"p1\">**</ept>，从结果中选择它，然后单击“安装”。"
    },
    {
      "content": "Azure Redis 缓存输出缓存提供程序",
      "pos": [
        936,
        958
      ]
    },
    {
      "pos": [
        1019,
        1420
      ],
      "content": "Redis 输出缓存提供程序 NuGet 包依赖于 StackExchange.Redis.StrongName 包。如果你的项目中没有 StackExchange.Redis.StrongName 包，则将会安装它。请注意，除了强命名的 StackExchange.Redis.StrongName 包外，还有 StackExchange.Redis 非强命名版本。如果你的项目使用的是非强命名 StackExchange.Redis 版本，则必须在安装 Redis 输出缓存提供程序 NuGet 包之前或之后将其卸载，否则你的项目中将出现命名冲突。有关这些包的详细信息，请参阅<bpt id=\"p1\">[</bpt>配置 .NET 缓存客户端<ept id=\"p1\">](/documentation/articles/cache-dotnet-how-to-use-azure-redis-cache#configure-the-cache-clients)</ept>。"
    },
    {
      "content": "NuGet 包会下载并添加所需的程序集引用，并将以下部分添加到你的 web.config 文件，包含 ASP.NET 应用程序所需的配置，以使用 Redis 输出缓存提供程序。",
      "pos": [
        1422,
        1510
      ]
    },
    {
      "content": "注释部分提供了属性及每个属性的示例设置的一个示例。",
      "pos": [
        2227,
        2252
      ]
    },
    {
      "pos": [
        2254,
        2411
      ],
      "content": "你可以通过 Azure PowerShell 配置 Redis 缓存。有关访问缓存属性的说明，请参阅<bpt id=\"p1\">[</bpt>使用 Azure PowerShell 管理 Azure Redis 缓存<ept id=\"p1\">](/documentation/articles/cache-howto-manage-redis-cache-powershell)</ept>。"
    },
    {
      "pos": [
        2417,
        2436
      ],
      "content": "<bpt id=\"p1\">**</bpt>host<ept id=\"p1\">**</ept> - 指定缓存终结点。"
    },
    {
      "pos": [
        2441,
        2484
      ],
      "content": "<bpt id=\"p1\">**</bpt>port<ept id=\"p1\">**</ept> - 使用非 SSL 端口或 SSL 端口，具体取决于 SSL 设置。"
    },
    {
      "pos": [
        2489,
        2519
      ],
      "content": "<bpt id=\"p1\">**</bpt>accessKey<ept id=\"p1\">**</ept> - 使用缓存的主密钥或辅助密钥。"
    },
    {
      "pos": [
        2524,
        2584
      ],
      "content": "<bpt id=\"p1\">**</bpt>ssl<ept id=\"p1\">**</ept> - 如果要使用 ssl 保护缓存/客户端通信，则为 true；否则为 false。请务必指定正确的端口。"
    },
    {
      "content": "默认情况下，将为新缓存禁用非 SSL 端口。为此设置指定 true 可使用 SSL 端口。",
      "pos": [
        2593,
        2638
      ]
    },
    {
      "pos": [
        2643,
        2691
      ],
      "content": "<bpt id=\"p1\">**</bpt>databaseId<ept id=\"p1\">**</ept> - 指定要用于缓存输出数据的数据库。如果未指定，则使用默认值 0。"
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>applicationName<ept id=\"p1\">**</ept> - 密钥存储在 redis 中作为",
      "pos": [
        2696,
        2733
      ]
    },
    {
      "content": "\\_",
      "pos": [
        2743,
        2745
      ]
    },
    {
      "content": "\\_Data。这使多个应用程序可以共享同一密钥。此参数是可选的，如果未提供它，则使用默认值。",
      "pos": [
        2756,
        2802
      ]
    },
    {
      "pos": [
        2807,
        3018
      ],
      "content": "<bpt id=\"p1\">**</bpt>connectionTimeoutInMilliseconds<ept id=\"p1\">**</ept> - 此设置允许你覆盖 StackExchange.Redis 客户端中的 connectTimeout 设置。如果未指定，则使用默认 connectTimeout 设置 5000。有关详细信息，请参阅 <bpt id=\"p2\">[</bpt>StackExchange.Redis 配置模型<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkId=398705)</ept>。"
    },
    {
      "pos": [
        3023,
        3227
      ],
      "content": "<bpt id=\"p1\">**</bpt>operationTimeoutInMilliseconds<ept id=\"p1\">**</ept> - 此设置允许你覆盖 StackExchange.Redis 客户端中的 syncTimeout 设置。如果未指定，则使用默认 syncTimeout 设置 1000。有关详细信息，请参阅 <bpt id=\"p2\">[</bpt>StackExchange.Redis 配置模型<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkId=398705)</ept>。"
    },
    {
      "content": "将 OutputCache 指令添加到希望为其缓存输出的每个页面中。",
      "pos": [
        3229,
        3263
      ]
    },
    {
      "pos": [
        3319,
        3473
      ],
      "content": "在此示例中，缓存的页面数据将保留在缓存中 60 秒，并且将为每个参数组合缓存不同版本的页面。有关 OutputCache 指令的详细信息，请参阅 <bpt id=\"p1\">[</bpt>@OutputCache<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/hdxfb6cy(v=vs.100).aspx)</ept>。"
    },
    {
      "content": "执行这些步骤后，你的应用程序已配置为使用 Redis 输出缓存提供程序。",
      "pos": [
        3475,
        3511
      ]
    },
    {
      "content": "后续步骤",
      "pos": [
        3516,
        3520
      ]
    },
    {
      "pos": [
        3522,
        3622
      ],
      "content": "了解 <bpt id=\"p1\">[</bpt>Azure Redis 缓存的 ASP.NET 会话状态提供程序<ept id=\"p1\">](/documentation/articles/cache-asp.net-session-state-provider)</ept>。"
    }
  ],
  "content": "<properties \n   pageTitle=\"缓存 ASP.NET 输出缓存提供程序\"\n   description=\"了解如何使用 Azure Redis 缓存来缓存 ASP.NET 页面输出\"\n   services=\"redis-cache\"\n   documentationCenter=\"na\"\n   authors=\"steved0x\"\n   manager=\"dwrede\"\n   editor=\"tysonn\" />\n<tags\n    ms.service=\"cache\"\n    ms.date=\"10/23/2015\"\n    wacn.date=\"01/04/2016\"/>\n\n# Azure Redis 缓存的 ASP.NET 输出缓存提供程序\n\nRedis 输出缓存提供程序是用于输出缓存数据的进程外存储机制。此数据专门用于完整 HTTP 响应（页面输出缓存）。此提供程序会插入 ASP.NET 4 中引入的新输出缓存提供程序扩展点。\n\n要使用 Redis 输出缓存提供程序，首先配置你的缓存，然后使用 Redis 输出缓存提供程序 NuGet 包配置 ASP.NET 应用程序。本主题提供有关配置应用程序以使用 Redis 输出缓存提供程序的指南。有关创建和配置 Azure Redis 缓存实例的详细信息，请参阅[创建缓存](/documentation/articles/cache-dotnet-how-to-use-azure-redis-cache#create-a-cache)。\n\n## 在缓存中存储 ASP.NET 页面输出\n\n若要在 Visual Studio 中使用 Redis 输出缓存提供程序 NuGet 包配置客户端应用程序，请在“解决方案资源管理器”中右键单击项目，然后选择“管理 NuGet 包”。\n\n![Azure Redis 缓存管理 NuGet 包](./media/cache-asp.net-output-cache-provider/IC729541.png)\n\n在“联机搜索”文本框中键入 **RedisOutputCacheProvider**，从结果中选择它，然后单击“安装”。\n\n![Azure Redis 缓存输出缓存提供程序](./media/cache-asp.net-output-cache-provider/IC751727.jpg)\n\nRedis 输出缓存提供程序 NuGet 包依赖于 StackExchange.Redis.StrongName 包。如果你的项目中没有 StackExchange.Redis.StrongName 包，则将会安装它。请注意，除了强命名的 StackExchange.Redis.StrongName 包外，还有 StackExchange.Redis 非强命名版本。如果你的项目使用的是非强命名 StackExchange.Redis 版本，则必须在安装 Redis 输出缓存提供程序 NuGet 包之前或之后将其卸载，否则你的项目中将出现命名冲突。有关这些包的详细信息，请参阅[配置 .NET 缓存客户端](/documentation/articles/cache-dotnet-how-to-use-azure-redis-cache#configure-the-cache-clients)。\n\nNuGet 包会下载并添加所需的程序集引用，并将以下部分添加到你的 web.config 文件，包含 ASP.NET 应用程序所需的配置，以使用 Redis 输出缓存提供程序。\n\n    <caching>\n      <outputCachedefaultProvider=\"MyRedisOutputCache\">\n        <providers>\n          <!--\n          <add name=\"MyRedisOutputCache\" \n            host = \"127.0.0.1\" [String]\n            port = \"\" [number]\n            accessKey = \"\" [String]\n            ssl = \"false\" [true|false]\n            databaseId = \"0\" [number]\n            applicationName = \"\" [String]\n            connectionTimeoutInMilliseconds = \"5000\" [number]\n            operationTimeoutInMilliseconds = \"5000\" [number]\n          />\n          -->\n          <add name=\"MyRedisOutputCache\"type=\"Microsoft.Web.Redis.RedisOutputCacheProvider\"host=\"127.0.0.1\"accessKey=\"\" ssl=\"false\"/>\n        </providers>\n      </outputCache>\n    </caching>\n\n注释部分提供了属性及每个属性的示例设置的一个示例。\n\n你可以通过 Azure PowerShell 配置 Redis 缓存。有关访问缓存属性的说明，请参阅[使用 Azure PowerShell 管理 Azure Redis 缓存](/documentation/articles/cache-howto-manage-redis-cache-powershell)。\n\n-   **host** - 指定缓存终结点。\n-   **port** - 使用非 SSL 端口或 SSL 端口，具体取决于 SSL 设置。\n-   **accessKey** - 使用缓存的主密钥或辅助密钥。\n-   **ssl** - 如果要使用 ssl 保护缓存/客户端通信，则为 true；否则为 false。请务必指定正确的端口。\n    -   默认情况下，将为新缓存禁用非 SSL 端口。为此设置指定 true 可使用 SSL 端口。\n-   **databaseId** - 指定要用于缓存输出数据的数据库。如果未指定，则使用默认值 0。\n-   **applicationName** - 密钥存储在 redis 中作为 <AppName>\\_<SessionId>\\_Data。这使多个应用程序可以共享同一密钥。此参数是可选的，如果未提供它，则使用默认值。\n-   **connectionTimeoutInMilliseconds** - 此设置允许你覆盖 StackExchange.Redis 客户端中的 connectTimeout 设置。如果未指定，则使用默认 connectTimeout 设置 5000。有关详细信息，请参阅 [StackExchange.Redis 配置模型](http://go.microsoft.com/fwlink/?LinkId=398705)。\n-   **operationTimeoutInMilliseconds** - 此设置允许你覆盖 StackExchange.Redis 客户端中的 syncTimeout 设置。如果未指定，则使用默认 syncTimeout 设置 1000。有关详细信息，请参阅 [StackExchange.Redis 配置模型](http://go.microsoft.com/fwlink/?LinkId=398705)。\n\n将 OutputCache 指令添加到希望为其缓存输出的每个页面中。\n\n    <%@ OutputCache Duration=\"60\" VaryByParam=\"*\" %>\n\n在此示例中，缓存的页面数据将保留在缓存中 60 秒，并且将为每个参数组合缓存不同版本的页面。有关 OutputCache 指令的详细信息，请参阅 [@OutputCache](https://msdn.microsoft.com/zh-cn/library/hdxfb6cy(v=vs.100).aspx)。\n\n执行这些步骤后，你的应用程序已配置为使用 Redis 输出缓存提供程序。\n\n## 后续步骤\n\n了解 [Azure Redis 缓存的 ASP.NET 会话状态提供程序](/documentation/articles/cache-asp.net-session-state-provider)。\n\n<!---HONumber=Mooncake_1207_2015-->"
}