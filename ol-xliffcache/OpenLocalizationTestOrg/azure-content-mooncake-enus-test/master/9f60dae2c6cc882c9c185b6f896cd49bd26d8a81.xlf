<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f60dae2c6cc882c9c185b6f896cd49bd26d8a81</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>跨域资源共享 (CORS) 支持 | Azure</source>
          <target state="new">跨域资源共享 (CORS) 支持 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何为 Azure 存储服务启用 CORS 支持。</source>
          <target state="new">了解如何为 Azure 存储服务启用 CORS 支持。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>对 Azure 存储服务的跨域资源共享 (CORS) 支持</source>
          <target state="new">对 Azure 存储服务的跨域资源共享 (CORS) 支持</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>从版本 2013-08-15 开始，Azure 存储服务支持 Blob、表、队列和文件服务的跨域资源共享 (CORS)。CORS 是一项 HTTP 功能，使在一个域中运行的 Web 应用程序能够访问另一个域中的资源。Web 浏览器实施一种称为<bpt id="p1">[</bpt>同源策略<ept id="p1">](http://www.w3.org/Security/wiki/Same_Origin_Policy)</ept>的安全限制，以防止网页调用另一个域中的 API；CORS 提供了一种安全的方法来允许一个域（源域）调用另一个域中的 API。有关 CORS 的详细信息，请参阅 <bpt id="p2">[</bpt>CORS 规范<ept id="p2">](http://www.w3.org/TR/cors/)</ept>。</source>
          <target state="new">从版本 2013-08-15 开始，Azure 存储服务支持 Blob、表、队列和文件服务的跨域资源共享 (CORS)。CORS 是一项 HTTP 功能，使在一个域中运行的 Web 应用程序能够访问另一个域中的资源。Web 浏览器实施一种称为<bpt id="p1">[</bpt>同源策略<ept id="p1">](http://www.w3.org/Security/wiki/Same_Origin_Policy)</ept>的安全限制，以防止网页调用另一个域中的 API；CORS 提供了一种安全的方法来允许一个域（源域）调用另一个域中的 API。有关 CORS 的详细信息，请参阅 <bpt id="p2">[</bpt>CORS 规范<ept id="p2">](http://www.w3.org/TR/cors/)</ept>。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>可以通过调用<bpt id="p1">[</bpt>设置 Blob 服务属性<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/hh452235.aspx)</ept>、<bpt id="p2">[</bpt>设置队列服务属性<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/hh452232.aspx)</ept>和<bpt id="p3">[</bpt>设置表服务属性<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/hh452240.aspx)</ept>，分别为每个存储服务设置 CORS 规则。为服务设置 CORS 规则后，将会对从另一个域对服务发出的经过正确身份验证的请求进行评估，以根据你指定的规则确定是否允许该请求。</source>
          <target state="new">可以通过调用<bpt id="p1">[</bpt>设置 Blob 服务属性<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/hh452235.aspx)</ept>、<bpt id="p2">[</bpt>设置队列服务属性<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/hh452232.aspx)</ept>和<bpt id="p3">[</bpt>设置表服务属性<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/hh452240.aspx)</ept>，分别为每个存储服务设置 CORS 规则。为服务设置 CORS 规则后，将会对从另一个域对服务发出的经过正确身份验证的请求进行评估，以根据你指定的规则确定是否允许该请求。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> 请注意，CORS 不是一种身份验证机制。在启用 CORS 的情况下针对存储资源发出的任何请求必须具有适当的身份验证签名，或者必须是针对公共资源发出的。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> 请注意，CORS 不是一种身份验证机制。在启用 CORS 的情况下针对存储资源发出的任何请求必须具有适当的身份验证签名，或者必须是针对公共资源发出的。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>了解 CORS 请求</source>
          <target state="new">了解 CORS 请求</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>来自源域的 CORS 请求可能由两个单独的请求组成：</source>
          <target state="new">来自源域的 CORS 请求可能由两个单独的请求组成：</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>预检请求，它查询服务施加的 CORS 限制。仅当请求方法是<bpt id="p1">[</bpt>简单方法<ept id="p1">](http://www.w3.org/TR/cors/)</ept>（即 GET、HEAD 或 POST）时，才需要预检请求。</source>
          <target state="new">预检请求，它查询服务施加的 CORS 限制。仅当请求方法是<bpt id="p1">[</bpt>简单方法<ept id="p1">](http://www.w3.org/TR/cors/)</ept>（即 GET、HEAD 或 POST）时，才需要预检请求。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>实际请求，它针对所需资源发出。</source>
          <target state="new">实际请求，它针对所需资源发出。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>预检请求</source>
          <target state="new">预检请求</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>预检请求查询由帐户所有者为存储服务设定的 CORS 限制。Web 浏览器（或其他用户代理）发送一个包含请求标头、方法和源域的 OPTIONS 请求。存储服务基于一组预配置的 CORS 规则评估预期操作，这些规则规定针对存储资源的实际请求中可以指定哪些源域、请求方法和请求标头。</source>
          <target state="new">预检请求查询由帐户所有者为存储服务设定的 CORS 限制。Web 浏览器（或其他用户代理）发送一个包含请求标头、方法和源域的 OPTIONS 请求。存储服务基于一组预配置的 CORS 规则评估预期操作，这些规则规定针对存储资源的实际请求中可以指定哪些源域、请求方法和请求标头。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>如果为服务启用了 CORS，并且有一条 CORS 规则与预检请求相匹配，则服务将使用状态代码 200 (OK) 进行响应，并在响应中包含所需的 Access-Control 标头。</source>
          <target state="new">如果为服务启用了 CORS，并且有一条 CORS 规则与预检请求相匹配，则服务将使用状态代码 200 (OK) 进行响应，并在响应中包含所需的 Access-Control 标头。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>如果没有为服务启用 CORS，或者不存在与预检请求相匹配的 CORS 规则，服务将使用状态代码 403 (Forbidden) 进行响应。</source>
          <target state="new">如果没有为服务启用 CORS，或者不存在与预检请求相匹配的 CORS 规则，服务将使用状态代码 403 (Forbidden) 进行响应。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>如果 OPTIONS 请求不包含所需的 CORS 标头（Origin 和 Access-Control-Request-Method 标头），服务将使用状态代码 400 (Bad request) 进行响应。</source>
          <target state="new">如果 OPTIONS 请求不包含所需的 CORS 标头（Origin 和 Access-Control-Request-Method 标头），服务将使用状态代码 400 (Bad request) 进行响应。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>请注意，将针对服务（Blob、队列和表）而不是针对请求的资源对预检请求进行评估。帐户所有者必须已经在帐户服务属性中启用了 CORS，请求才能成功。</source>
          <target state="new">请注意，将针对服务（Blob、队列和表）而不是针对请求的资源对预检请求进行评估。帐户所有者必须已经在帐户服务属性中启用了 CORS，请求才能成功。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>实际请求</source>
          <target state="new">实际请求</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>接受预检请求并返回响应后，浏览器将根据存储资源分发实际请求。如果预检请求被拒绝，浏览器会立即拒绝实际请求。</source>
          <target state="new">接受预检请求并返回响应后，浏览器将根据存储资源分发实际请求。如果预检请求被拒绝，浏览器会立即拒绝实际请求。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>实际请求将被视为针对存储服务的普通请求。请求中的 Origin 标头表示该请求是一个 CORS 请求，服务将检查匹配的 CORS 规则。如果找到匹配项，将向响应中添加 Access-Control 标头并将其发送回客户端。如果找不到匹配项，则不会返回 CORS Access-Control 标头。</source>
          <target state="new">实际请求将被视为针对存储服务的普通请求。请求中的 Origin 标头表示该请求是一个 CORS 请求，服务将检查匹配的 CORS 规则。如果找到匹配项，将向响应中添加 Access-Control 标头并将其发送回客户端。如果找不到匹配项，则不会返回 CORS Access-Control 标头。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>为 Azure 存储服务启用 CORS</source>
          <target state="new">为 Azure 存储服务启用 CORS</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>CORS 规则在服务级别设置，因此你需要分别为每个服务（Blob、队列和表）启用或禁用 CORS。默认情况下，对每个服务禁用 CORS。若要启用 CORS，你需要使用版本 2013-08-15 或更高版本设置适当的服务属性，并向服务属性中添加 CORS 规则。有关如何为服务启用或禁用 CORS 以及如何设置 CORS 规则的详细信息，请参阅<bpt id="p1">[</bpt>设置 Blob 服务属性<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/hh452235.aspx)</ept>、<bpt id="p2">[</bpt>设置队列服务属性<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/hh452232.aspx)</ept>和<bpt id="p3">[</bpt>设置表服务属性<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/hh452240.aspx)</ept>。</source>
          <target state="new">CORS 规则在服务级别设置，因此你需要分别为每个服务（Blob、队列和表）启用或禁用 CORS。默认情况下，对每个服务禁用 CORS。若要启用 CORS，你需要使用版本 2013-08-15 或更高版本设置适当的服务属性，并向服务属性中添加 CORS 规则。有关如何为服务启用或禁用 CORS 以及如何设置 CORS 规则的详细信息，请参阅<bpt id="p1">[</bpt>设置 Blob 服务属性<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/hh452235.aspx)</ept>、<bpt id="p2">[</bpt>设置队列服务属性<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/hh452232.aspx)</ept>和<bpt id="p3">[</bpt>设置表服务属性<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/hh452240.aspx)</ept>。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>下面是通过“设置服务属性”操作指定的一个 CORS 规则示例：</source>
          <target state="new">下面是通过“设置服务属性”操作指定的一个 CORS 规则示例：</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>下面描述了 CORS 规则中包含的每个元素：</source>
          <target state="new">下面描述了 CORS 规则中包含的每个元素：</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AllowedOrigins<ept id="p1">**</ept>：允许通过 CORS 对存储服务发出请求的源域。源域是从中发出请求的域。请注意，来源必须与用户代理发送到服务的来源完全相同，包括大小写。也可以使用通配符“*”允许所有源域通过 CORS 发出请求。在上面的示例中，域 <bpt id="p2">[</bpt>http://www.contoso.com<ept id="p2">](http://www.contoso.com)</ept> 和 <bpt id="p3">[</bpt>http://www.fabrikam.com<ept id="p3">](http://www.fabrikam.com)</ept> 可以使用 CORS 发出服务请求。</source>
          <target state="new"><bpt id="p1">**</bpt>AllowedOrigins<ept id="p1">**</ept>：允许通过 CORS 对存储服务发出请求的源域。源域是从中发出请求的域。请注意，来源必须与用户代理发送到服务的来源完全相同，包括大小写。也可以使用通配符“*”允许所有源域通过 CORS 发出请求。在上面的示例中，域 <bpt id="p2">[</bpt>http://www.contoso.com<ept id="p2">](http://www.contoso.com)</ept> 和 <bpt id="p3">[</bpt>http://www.fabrikam.com<ept id="p3">](http://www.fabrikam.com)</ept> 可以使用 CORS 发出服务请求。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AllowedMethods<ept id="p1">**</ept>：源域可用于 CORS 请求的方法（HTTP 请求谓词）。在上面的示例中，只允许 PUT 和 GET 请求。</source>
          <target state="new"><bpt id="p1">**</bpt>AllowedMethods<ept id="p1">**</ept>：源域可用于 CORS 请求的方法（HTTP 请求谓词）。在上面的示例中，只允许 PUT 和 GET 请求。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AllowedHeaders<ept id="p1">**</ept>：源域可以在 CORS 请求上指定的请求标头。在上面的示例中，允许所有以 x-ms-meta-data、x-ms-meta-target 和 x-ms-meta-abc 开头的元数据标头。请注意，通配符“*”表示允许任何以指定前缀开头的标头。</source>
          <target state="new"><bpt id="p1">**</bpt>AllowedHeaders<ept id="p1">**</ept>：源域可以在 CORS 请求上指定的请求标头。在上面的示例中，允许所有以 x-ms-meta-data、x-ms-meta-target 和 x-ms-meta-abc 开头的元数据标头。请注意，通配符“*”表示允许任何以指定前缀开头的标头。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ExposedHeaders<ept id="p1">**</ept>：可以在 CORS 请求响应中发送并由浏览器向请求发出方公开的响应标头。在上面的示例中，指示浏览器公开任何以 x-ms-meta 开头的标头。</source>
          <target state="new"><bpt id="p1">**</bpt>ExposedHeaders<ept id="p1">**</ept>：可以在 CORS 请求响应中发送并由浏览器向请求发出方公开的响应标头。在上面的示例中，指示浏览器公开任何以 x-ms-meta 开头的标头。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MaxAgeInSeconds<ept id="p1">**</ept>：浏览器应缓存预检 OPTIONS 请求的最长时间。</source>
          <target state="new"><bpt id="p1">**</bpt>MaxAgeInSeconds<ept id="p1">**</ept>：浏览器应缓存预检 OPTIONS 请求的最长时间。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Azure 存储服务支持为 <bpt id="p1">**</bpt>AllowedHeaders<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>ExposedHeaders<ept id="p2">**</ept> 两个元素指定带前缀的标头。若要允许某个标头类别，可以为该类别指定一个通用前缀。例如，如果指定 <bpt id="p3">*</bpt>x-ms-meta<ept id="p3">*</ept>* 作为带前缀的标头，将会建立一条与所有以 x-ms-meta 开头的标头相匹配的规则。</source>
          <target state="new">Azure 存储服务支持为 <bpt id="p1">**</bpt>AllowedHeaders<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>ExposedHeaders<ept id="p2">**</ept> 两个元素指定带前缀的标头。若要允许某个标头类别，可以为该类别指定一个通用前缀。例如，如果指定 <bpt id="p3">*</bpt>x-ms-meta<ept id="p3">*</ept>* 作为带前缀的标头，将会建立一条与所有以 x-ms-meta 开头的标头相匹配的规则。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>以下限制适用于 CORS 规则：</source>
          <target state="new">以下限制适用于 CORS 规则：</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>每个存储服务（Blob、表和队列）最多可以指定五个 CORS 规则。</source>
          <target state="new">每个存储服务（Blob、表和队列）最多可以指定五个 CORS 规则。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>请求中的所有 CORS 规则设置（XML 标记除外）的最大大小不应超过 2 KB。</source>
          <target state="new">请求中的所有 CORS 规则设置（XML 标记除外）的最大大小不应超过 2 KB。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>允许的标头、公开的标头或允许的源的长度不应超过 256 个字符。</source>
          <target state="new">允许的标头、公开的标头或允许的源的长度不应超过 256 个字符。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>允许的标头和公开的标头可能是：</source>
          <target state="new">允许的标头和公开的标头可能是：</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>文本标头，其中提供了准确的标头名称，如 <bpt id="p1">**</bpt>x-ms-meta-processed<ept id="p1">**</ept>。最多可在请求中指定 64 个文本标头。</source>
          <target state="new">文本标头，其中提供了准确的标头名称，如 <bpt id="p1">**</bpt>x-ms-meta-processed<ept id="p1">**</ept>。最多可在请求中指定 64 个文本标头。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>带前缀的标头，其中提供了标头的前缀，如 <bpt id="p1">**</bpt>x-ms-meta-data<ept id="p1">**</ept>*。以此方式指定前缀将允许或公开以给定前缀开头的所有标头。最多可在请求中指定 2 个带前缀的标头。</source>
          <target state="new">带前缀的标头，其中提供了标头的前缀，如 <bpt id="p1">**</bpt>x-ms-meta-data<ept id="p1">**</ept>*。以此方式指定前缀将允许或公开以给定前缀开头的所有标头。最多可在请求中指定 2 个带前缀的标头。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>AllowedMethods<ept id="p1">**</ept> 元素中指定的方法（或 HTTP 谓词）必须与 Azure 存储服务 API 支持的方法一致。支持的方法为 DELETE、GET、HEAD、MERGE、POST、OPTIONS 和 PUT。</source>
          <target state="new">在 <bpt id="p1">**</bpt>AllowedMethods<ept id="p1">**</ept> 元素中指定的方法（或 HTTP 谓词）必须与 Azure 存储服务 API 支持的方法一致。支持的方法为 DELETE、GET、HEAD、MERGE、POST、OPTIONS 和 PUT。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>了解 CORS 规则的评估逻辑</source>
          <target state="new">了解 CORS 规则的评估逻辑</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>当存储服务收到预检请求或实际请求时，它会根据你通过适当的“设置服务属性”操作为该服务设定的 CORS 规则评估该请求。按照 CORS 规则在“设置服务属性”操作的请求正文中的设置顺序对它们进行评估。</source>
          <target state="new">当存储服务收到预检请求或实际请求时，它会根据你通过适当的“设置服务属性”操作为该服务设定的 CORS 规则评估该请求。按照 CORS 规则在“设置服务属性”操作的请求正文中的设置顺序对它们进行评估。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>按如下所示评估 CORS 规则：</source>
          <target state="new">按如下所示评估 CORS 规则：</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>首先，根据 <bpt id="p1">**</bpt>AllowedOrigins<ept id="p1">**</ept> 元素中列出的域检查请求的源域。如果列表中包含源域，或者通过通配符“*”允许了所有域，则规则评估会继续进行。如果列表中不包含源域，则请求失败。</source>
          <target state="new">首先，根据 <bpt id="p1">**</bpt>AllowedOrigins<ept id="p1">**</ept> 元素中列出的域检查请求的源域。如果列表中包含源域，或者通过通配符“*”允许了所有域，则规则评估会继续进行。如果列表中不包含源域，则请求失败。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>接下来，根据 <bpt id="p1">**</bpt>AllowedMethods<ept id="p1">**</ept> 元素中列出的方法检查请求的方法（或 HTTP 谓词）。如果列表中包含所用方法，则规则评估会继续进行；否则，请求失败。</source>
          <target state="new">接下来，根据 <bpt id="p1">**</bpt>AllowedMethods<ept id="p1">**</ept> 元素中列出的方法检查请求的方法（或 HTTP 谓词）。如果列表中包含所用方法，则规则评估会继续进行；否则，请求失败。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>如果请求的源域和方法与某个规则相匹配，则选择该规则来处理请求，并且不再评估其他规则。但是，必须先根据 <bpt id="p1">**</bpt>AllowedHeaders<ept id="p1">**</ept> 元素中列出的标头对请求中指定的标头进行检查，请求才能成功。如果发送的标头与允许的标头不匹配，请求将失败。</source>
          <target state="new">如果请求的源域和方法与某个规则相匹配，则选择该规则来处理请求，并且不再评估其他规则。但是，必须先根据 <bpt id="p1">**</bpt>AllowedHeaders<ept id="p1">**</ept> 元素中列出的标头对请求中指定的标头进行检查，请求才能成功。如果发送的标头与允许的标头不匹配，请求将失败。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>由于将按照规则在请求正文中出现的顺序处理规则，因此最佳做法建议你在列表中最先指定与来源有关的限制性最强的规则，以便先对这些规则进行评估。在列表的最后指定限制性较弱的规则，例如，允许所有来源的规则。</source>
          <target state="new">由于将按照规则在请求正文中出现的顺序处理规则，因此最佳做法建议你在列表中最先指定与来源有关的限制性最强的规则，以便先对这些规则进行评估。在列表的最后指定限制性较弱的规则，例如，允许所有来源的规则。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>示例 – CORS 规则评估</source>
          <target state="new">示例 – CORS 规则评估</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>以下示例显示用于为存储服务设置 CORS 规则的操作的部分请求正文。有关构造请求的详细信息，请参阅<bpt id="p1">[</bpt>设置 Blob 服务属性<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/hh452235.aspx)</ept>、<bpt id="p2">[</bpt>设置队列服务属性<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/hh452232.aspx)</ept>和<bpt id="p3">[</bpt>设置表服务属性<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/hh452240.aspx)</ept>。</source>
          <target state="new">以下示例显示用于为存储服务设置 CORS 规则的操作的部分请求正文。有关构造请求的详细信息，请参阅<bpt id="p1">[</bpt>设置 Blob 服务属性<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/hh452235.aspx)</ept>、<bpt id="p2">[</bpt>设置队列服务属性<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/hh452232.aspx)</ept>和<bpt id="p3">[</bpt>设置表服务属性<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/hh452240.aspx)</ept>。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>接下来，考虑以下 CORS 请求：</source>
          <target state="new">接下来，考虑以下 CORS 请求：</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>请求</source>
          <target state="new">请求</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>响应</source>
          <target state="new">响应</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>方法</source>
          <target state="new">方法</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>源</source>
          <target state="new">源</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>请求标头</source>
          <target state="new">请求标头</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>规则匹配</source>
          <target state="new">规则匹配</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>结果</source>
          <target state="new">结果</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>PUT</source>
          <target state="new">PUT</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>http://www.contoso.com</source>
          <target state="new">http://www.contoso.com</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>x-ms-blob-content-type</source>
          <target state="new">x-ms-blob-content-type</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>第一条规则</source>
          <target state="new">第一条规则</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>成功</source>
          <target state="new">成功</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>GET</source>
          <target state="new">GET</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>http://www.contoso.com</source>
          <target state="new">http://www.contoso.com</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>x-ms-blob-content-type</source>
          <target state="new">x-ms-blob-content-type</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>第二条规则</source>
          <target state="new">第二条规则</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>成功</source>
          <target state="new">成功</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>GET</source>
          <target state="new">GET</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>http://www.contoso.com</source>
          <target state="new">http://www.contoso.com</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>x-ms-blob-content-type</source>
          <target state="new">x-ms-blob-content-type</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>第二条规则</source>
          <target state="new">第二条规则</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>失败</source>
          <target state="new">失败</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>第一个请求与第一条规则相匹配，源域与允许的来源相匹配，方法与允许的方法相匹配，标头与允许的标头相匹配，所以第一个请求成功。</source>
          <target state="new">第一个请求与第一条规则相匹配，源域与允许的来源相匹配，方法与允许的方法相匹配，标头与允许的标头相匹配，所以第一个请求成功。</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>第二个请求不与第一条规则相匹配，因为方法与允许的方法不相符。但是它却与第二条规则相匹配，因此它也成功完成。</source>
          <target state="new">第二个请求不与第一条规则相匹配，因为方法与允许的方法不相符。但是它却与第二条规则相匹配，因此它也成功完成。</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>第三个请求与第二条规则中的源域和方法相匹配，因此不再评估其他规则。但是，第二条规则不允许 <bpt id="p1">*</bpt>x-ms-client-request-id header<ept id="p1">*</ept> 标头，因此，尽管第三条规则的语义允许它成功，但该请求仍然失败。</source>
          <target state="new">第三个请求与第二条规则中的源域和方法相匹配，因此不再评估其他规则。但是，第二条规则不允许 <bpt id="p1">*</bpt>x-ms-client-request-id header<ept id="p1">*</ept> 标头，因此，尽管第三条规则的语义允许它成功，但该请求仍然失败。</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> 虽然此示例先显示一个限制性较弱的规则，然后显示一个限制性更强的规则，但通常情况下，最佳做法是先列出限制性最强的规则。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> 虽然此示例先显示一个限制性较弱的规则，然后显示一个限制性更强的规则，但通常情况下，最佳做法是先列出限制性最强的规则。</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>了解如何设置 Vary 标头</source>
          <target state="new">了解如何设置 Vary 标头</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Vary<ept id="p1">*</ept> 标头是一个由一组请求标头字段组成的标准 HTTP/1.1 标头，这些字段可告知浏览器或用户代理服务器选择用于处理该请求的条件。 <bpt id="p2">*</bpt>Vary<ept id="p2">*</ept> 标头主要用于代理、浏览器和 CDN 缓存，它们使用该标头来确定应如何缓存响应。有关详细信息，请参阅 <bpt id="p3">[</bpt>Vary 标头<ept id="p3">](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html)</ept>的规范。</source>
          <target state="new"><bpt id="p1">*</bpt>Vary<ept id="p1">*</ept> 标头是一个由一组请求标头字段组成的标准 HTTP/1.1 标头，这些字段可告知浏览器或用户代理服务器选择用于处理该请求的条件。 <bpt id="p2">*</bpt>Vary<ept id="p2">*</ept> 标头主要用于代理、浏览器和 CDN 缓存，它们使用该标头来确定应如何缓存响应。有关详细信息，请参阅 <bpt id="p3">[</bpt>Vary 标头<ept id="p3">](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html)</ept>的规范。</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>当浏览器或其他用户代理缓存 CORS 请求的响应时，源域将作为允许的来源缓存。如果第二个域在缓存处于活动时对存储资源发出相同请求，用户代理将会检索缓存的源域。由于第二个域与缓存的域不匹配，因此原本应该成功的请求将会失败。在某些情况下，Azure 存储空间会将 Vary 标头设置为 <bpt id="p1">**</bpt>Origin<ept id="p1">**</ept>，以便在发出请求的域不同于缓存的来源时，指示用户代理将后续 CORS 请求发送到服务。</source>
          <target state="new">当浏览器或其他用户代理缓存 CORS 请求的响应时，源域将作为允许的来源缓存。如果第二个域在缓存处于活动时对存储资源发出相同请求，用户代理将会检索缓存的源域。由于第二个域与缓存的域不匹配，因此原本应该成功的请求将会失败。在某些情况下，Azure 存储空间会将 Vary 标头设置为 <bpt id="p1">**</bpt>Origin<ept id="p1">**</ept>，以便在发出请求的域不同于缓存的来源时，指示用户代理将后续 CORS 请求发送到服务。</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>在以下情况下，Azure 存储空间会针对实际 GET/HEAD 请求，将 <bpt id="p1">*</bpt>Vary<ept id="p1">*</ept> 标头设置为 <bpt id="p2">**</bpt>Origin<ept id="p2">**</ept>：</source>
          <target state="new">在以下情况下，Azure 存储空间会针对实际 GET/HEAD 请求，将 <bpt id="p1">*</bpt>Vary<ept id="p1">*</ept> 标头设置为 <bpt id="p2">**</bpt>Origin<ept id="p2">**</ept>：</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>当请求来源与 CORS 规则定义的允许来源完全匹配时。要想成为精确匹配项，CORS 规则不能包含 ' * ' 通配符。</source>
          <target state="new">当请求来源与 CORS 规则定义的允许来源完全匹配时。要想成为精确匹配项，CORS 规则不能包含 ' * ' 通配符。</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>不存在与请求源匹配的规则，但为存储服务启用了 CORS。</source>
          <target state="new">不存在与请求源匹配的规则，但为存储服务启用了 CORS。</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>如果 GET/HEAD 请求与允许所有来源的 CORS 规则匹配，响应将指示允许所有来源，并且用户代理缓存将在缓存处于活动时允许来自任何源域的后续请求。</source>
          <target state="new">如果 GET/HEAD 请求与允许所有来源的 CORS 规则匹配，响应将指示允许所有来源，并且用户代理缓存将在缓存处于活动时允许来自任何源域的后续请求。</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>请注意，对于使用 GET/HEAD 之外的方法的请求，存储服务不会设置 Vary 标头，因为用户代理不会缓存对这些方法的响应。</source>
          <target state="new">请注意，对于使用 GET/HEAD 之外的方法的请求，存储服务不会设置 Vary 标头，因为用户代理不会缓存对这些方法的响应。</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>下表指示了 Azure 存储如何基于前面提供的情况响应 GET/HEAD 请求：</source>
          <target state="new">下表指示了 Azure 存储如何基于前面提供的情况响应 GET/HEAD 请求：</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>请求|帐户设置和规则评估结果|||响应|||</source>
          <target state="new">请求|帐户设置和规则评估结果|||响应|||</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>请求中存在 Origin 标头<ept id="p1">**</ept> | <bpt id="p2">**</bpt>为此服务指定了 CORS 规则<ept id="p2">**</ept> | <bpt id="p3">*</bpt><bpt id="p4">*</bpt>存在允许所有域 (<ept id="p4">*</ept>) 的匹配规则<ept id="p3">*</ept>* | <bpt id="p5">**</bpt>存在精确匹配域的匹配规则<ept id="p5">**</ept> | <bpt id="p6">**</bpt>响应包含设置为 Origin 的 Vary 标头<ept id="p6">**</ept> | <bpt id="p7">*</bpt><bpt id="p8">*</bpt>响应包含 Access-Control-Allowed-Origin:"<ept id="p8">*</ept>"<ept id="p7">*</ept>* | <bpt id="p9">**</bpt>响应包含 Access-Control-Exposed-Headers<ept id="p9">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>请求中存在 Origin 标头<ept id="p1">**</ept> | <bpt id="p2">**</bpt>为此服务指定了 CORS 规则<ept id="p2">**</ept> | <bpt id="p3">*</bpt><bpt id="p4">*</bpt>存在允许所有域 (<ept id="p4">*</ept>) 的匹配规则<ept id="p3">*</ept>* | <bpt id="p5">**</bpt>存在精确匹配域的匹配规则<ept id="p5">**</ept> | <bpt id="p6">**</bpt>响应包含设置为 Origin 的 Vary 标头<ept id="p6">**</ept> | <bpt id="p7">*</bpt><bpt id="p8">*</bpt>响应包含 Access-Control-Allowed-Origin:"<ept id="p8">*</ept>"<ept id="p7">*</ept>* | <bpt id="p9">**</bpt>响应包含 Access-Control-Exposed-Headers<ept id="p9">**</ept></target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>否|否|否|否|否|否|否</source>
          <target state="new">否|否|否|否|否|否|否</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>否|是|否|否|是|否|否</source>
          <target state="new">否|是|否|否|是|否|否</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>否|是|是|否|否|是|是</source>
          <target state="new">否|是|是|否|否|是|是</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>是|否|否|否|否|否|否</source>
          <target state="new">是|否|否|否|否|否|否</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>是|是|否|是|是|否|是</source>
          <target state="new">是|是|否|是|是|否|是</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>是|是|否|否|是|否|否</source>
          <target state="new">是|是|否|否|是|否|否</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>是|是|是|否|否|是|是</source>
          <target state="new">是|是|是|否|否|是|是</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>CORS 请求的计费</source>
          <target state="new">CORS 请求的计费</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>如果你已经为你的帐户的任一存储服务启用了 CORS（通过调用<bpt id="p1">[</bpt>设置 Blob 服务属性<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/hh452235.aspx)</ept>、<bpt id="p2">[</bpt>设置队列服务属性<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/hh452232.aspx)</ept>或<bpt id="p3">[</bpt>设置表服务属性<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/hh452240.aspx)</ept>），将会对成功的预检请求计费。为了尽可能减少费用，可考虑将你的 CORS 规则中的 <bpt id="p4">**</bpt>MaxAgeInSeconds<ept id="p4">**</ept> 元素设置为一个较大的值，以便用户代理可以缓存请求。</source>
          <target state="new">如果你已经为你的帐户的任一存储服务启用了 CORS（通过调用<bpt id="p1">[</bpt>设置 Blob 服务属性<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/hh452235.aspx)</ept>、<bpt id="p2">[</bpt>设置队列服务属性<ept id="p2">](https://msdn.microsoft.com/zh-cn/library/hh452232.aspx)</ept>或<bpt id="p3">[</bpt>设置表服务属性<ept id="p3">](https://msdn.microsoft.com/zh-cn/library/hh452240.aspx)</ept>），将会对成功的预检请求计费。为了尽可能减少费用，可考虑将你的 CORS 规则中的 <bpt id="p4">**</bpt>MaxAgeInSeconds<ept id="p4">**</ept> 元素设置为一个较大的值，以便用户代理可以缓存请求。</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>将不会对失败的预检请求计费。</source>
          <target state="new">将不会对失败的预检请求计费。</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>设置 Blob 服务属性</source>
          <target state="new">设置 Blob 服务属性</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>设置队列服务属性</source>
          <target state="new">设置队列服务属性</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>设置表服务属性</source>
          <target state="new">设置表服务属性</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>W3C 跨域资源共享规范</source>
          <target state="new">W3C 跨域资源共享规范</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>