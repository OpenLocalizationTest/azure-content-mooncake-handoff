<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0292389770f0069af0d5e843671867fb2b9e0a27</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>配合 Java 使用 Storm on HDInsight 从事件中心处理事件 | Azure</source>
          <target state="new">配合 Java 使用 Storm on HDInsight 从事件中心处理事件 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何使用通过 Maven 创建的 Java Storm 拓扑处理事件中心数据。</source>
          <target state="new">了解如何使用通过 Maven 创建的 Java Storm 拓扑处理事件中心数据。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>使用 Storm on HDInsight 从 Azure 事件中心处理事件 (Java)</source>
          <target state="new">使用 Storm on HDInsight 从 Azure 事件中心处理事件 (Java)</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Azure 事件中心可让你处理 Web 应用、应用程序和设备中的大量数据。借助事件中心 Spout，你可以轻松使用 Apache Storm on HDInsight 实时分析这些数据。你还可以使用事件中心 Bolt 从 Storm 向事件中心写入数据。</source>
          <target state="new">Azure 事件中心可让你处理 Web 应用、应用程序和设备中的大量数据。借助事件中心 Spout，你可以轻松使用 Apache Storm on HDInsight 实时分析这些数据。你还可以使用事件中心 Bolt 从 Storm 向事件中心写入数据。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>在本教程中，你将学习如何使用事件中心 Spout 和 Bolt 在基于 Java 的 Storm 拓扑中读取和写入数据。</source>
          <target state="new">在本教程中，你将学习如何使用事件中心 Spout 和 Bolt 在基于 Java 的 Storm 拓扑中读取和写入数据。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>先决条件</source>
          <target state="new">先决条件</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>一个 Apache Storm on HDInsight 群集。参考下列其中一篇入门文章来创建群集：</source>
          <target state="new">一个 Apache Storm on HDInsight 群集。参考下列其中一篇入门文章来创建群集：</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>一个<bpt id="p1">[</bpt>基于 Windows 的群集<ept id="p1">](/documentation/articles/hdinsight-apache-storm-tutorial-get-started)</ept>：若要从 Windows 客户端使用 PowerShell 来操作群集，请选择此选项</source>
          <target state="new">一个<bpt id="p1">[</bpt>基于 Windows 的群集<ept id="p1">](/documentation/articles/hdinsight-apache-storm-tutorial-get-started)</ept>：若要从 Windows 客户端使用 PowerShell 来操作群集，请选择此选项</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>两种群集类型之间的唯一差别是，是要使用 SSH 将拓扑提交到群集还是 Web 窗体。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>两种群集类型之间的唯一差别是，是要使用 SSH 将拓扑提交到群集还是 Web 窗体。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>一个 <bpt id="p1">[</bpt>Azure 事件中心<ept id="p1">](/documentation/articles/event-hubs-csharp-ephcs-getstarted)</ept></source>
          <target state="new">一个 <bpt id="p1">[</bpt>Azure 事件中心<ept id="p1">](/documentation/articles/event-hubs-csharp-ephcs-getstarted)</ept></target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Oracle Java Developer Kit (JDK) 版本 7<ept id="p1">](https://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html)</ept> 或同等版本，例如 <bpt id="p2">[</bpt>OpenJDK<ept id="p2">](http://openjdk.java.net/)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>Oracle Java Developer Kit (JDK) 版本 7<ept id="p1">](https://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html)</ept> 或同等版本，例如 <bpt id="p2">[</bpt>OpenJDK<ept id="p2">](http://openjdk.java.net/)</ept></target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Maven<ept id="p1">](https://maven.apache.org/download.cgi)</ept>：Maven 是 Java 项目的项目生成系统。</source>
          <target state="new"><bpt id="p1">[</bpt>Maven<ept id="p1">](https://maven.apache.org/download.cgi)</ept>：Maven 是 Java 项目的项目生成系统。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>一个文本编辑器或 Java 集成开发环境 (IDE)</source>
          <target state="new">一个文本编辑器或 Java 集成开发环境 (IDE)</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>你的编辑器或 IDE 可能具有处理 Maven 的特定功能，但本文档中未提供说明。有关环境编辑功能的详细信息，请参阅所使用产品的文档。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>你的编辑器或 IDE 可能具有处理 Maven 的特定功能，但本文档中未提供说明。有关环境编辑功能的详细信息，请参阅所使用产品的文档。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>一个 SCP 客户端。对于 Windows 客户端，建议使用可从 <bpt id="p1">[</bpt>PuTTY 下载页<ept id="p1">](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html)</ept>获取的 PSCP。</source>
          <target state="new">一个 SCP 客户端。对于 Windows 客户端，建议使用可从 <bpt id="p1">[</bpt>PuTTY 下载页<ept id="p1">](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html)</ept>获取的 PSCP。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>了解示例</source>
          <target state="new">了解示例</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>hdinsight-java-storm-eventhub<ept id="p1">](https://github.com/Blackmist/hdinsight-java-storm-eventhub)</ept> 示例包含两个拓扑：</source>
          <target state="new"><bpt id="p1">[</bpt>hdinsight-java-storm-eventhub<ept id="p1">](https://github.com/Blackmist/hdinsight-java-storm-eventhub)</ept> 示例包含两个拓扑：</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">__</bpt>com.microsoft.example.EventHubWriter<ept id="p1">__</ept> 将随机数据写入 Azure 事件中心。数据由 Spout 生成，是随机设备 ID 和设备值。因此它可以模拟发出字符串 ID 和数字值的某些硬件。</source>
          <target state="new"><bpt id="p1">__</bpt>com.microsoft.example.EventHubWriter<ept id="p1">__</ept> 将随机数据写入 Azure 事件中心。数据由 Spout 生成，是随机设备 ID 和设备值。因此它可以模拟发出字符串 ID 和数字值的某些硬件。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">__</bpt>com.microsoft.example.EventHubReader<ept id="p1">__</ept> 从事件中心读取数据（EventHubWriter 写入的数据），并将其存储到 HDFS（在本例中为 WASB，因为它是使用 Azure HDInsight 编写和测试的）上的 /devicedata 目录中。</source>
          <target state="new"><bpt id="p1">__</bpt>com.microsoft.example.EventHubReader<ept id="p1">__</ept> 从事件中心读取数据（EventHubWriter 写入的数据），并将其存储到 HDFS（在本例中为 WASB，因为它是使用 Azure HDInsight 编写和测试的）上的 /devicedata 目录中。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>数据在写入事件中心之前已格式化为 JSON 文档，在被读取器读取时，将从 JSON 解析成 Tuple。JSON 格式如下：</source>
          <target state="new">数据在写入事件中心之前已格式化为 JSON 文档，在被读取器读取时，将从 JSON 解析成 Tuple。JSON 格式如下：</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>使用 JSON 文档将数据存储到事件中心的原因是让我们知道格式是什么，而不是依赖于事件中心 Spout 和 Bolt 的内部格式化机制。</source>
          <target state="new">使用 JSON 文档将数据存储到事件中心的原因是让我们知道格式是什么，而不是依赖于事件中心 Spout 和 Bolt 的内部格式化机制。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>项目配置</source>
          <target state="new">项目配置</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>POM.xml<ept id="p1">**</ept> 文件包含此 Maven 项目的配置信息。需要关注的部分是：</source>
          <target state="new"><bpt id="p1">**</bpt>POM.xml<ept id="p1">**</ept> 文件包含此 Maven 项目的配置信息。需要关注的部分是：</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>EventHubs Storm Spout 依赖项</source>
          <target state="new">EventHubs Storm Spout 依赖项</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>这会添加 eventhubs-storm-spout 包的依赖项，包含用于从事件中心读取的 Spout 和写入事件中心的 Bolt。</source>
          <target state="new">这会添加 eventhubs-storm-spout 包的依赖项，包含用于从事件中心读取的 Spout 和写入事件中心的 Bolt。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>此包不适用于 Maven，在稍后的步骤中将手动安装在本地 Maven 存储库中。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>此包不适用于 Maven，在稍后的步骤中将手动安装在本地 Maven 存储库中。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>HdfsBolt 和 WASB 组件</source>
          <target state="new">HdfsBolt 和 WASB 组件</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>HdfsBolt 一般用于将数据存储到 Hadoop 分布式文件系统 (HDFS)。但是，HDInsight 群集使用 Azure 存储空间 (WASB) 作为默认的数据存储区，因此我们必须加载多个组件，使 HdfsBolt 识别 WASB 文件系统。</source>
          <target state="new">HdfsBolt 一般用于将数据存储到 Hadoop 分布式文件系统 (HDFS)。但是，HDInsight 群集使用 Azure 存储空间 (WASB) 作为默认的数据存储区，因此我们必须加载多个组件，使 HdfsBolt 识别 WASB 文件系统。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>用于启用 WASB 的包不适用于 Maven 存储库，将在稍后的步骤中手动安装。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>用于启用 WASB 的包不适用于 Maven 存储库，将在稍后的步骤中手动安装。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>maven-compiler-plugin</source>
          <target state="new">maven-compiler-plugin</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>告诉 Maven，编译后的项目应与 HDInsight 群集所用的Java 7 版本兼容。</source>
          <target state="new">告诉 Maven，编译后的项目应与 HDInsight 群集所用的Java 7 版本兼容。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>maven-shade-plugin</source>
          <target state="new">maven-shade-plugin</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>用于将解决方案打包成 uber jar，其中包含项目代码和所需的依赖项。它还用于：</source>
          <target state="new">用于将解决方案打包成 uber jar，其中包含项目代码和所需的依赖项。它还用于：</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>重命名依赖项的许可证文件：如果不这样做，基于 Windows 的 HDInsight 群集在运行时可能会出错。</source>
          <target state="new">重命名依赖项的许可证文件：如果不这样做，基于 Windows 的 HDInsight 群集在运行时可能会出错。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>排除安全性/签名：如果不这样做，HDInsight 群集在运行时可能会出错。</source>
          <target state="new">排除安全性/签名：如果不这样做，HDInsight 群集在运行时可能会出错。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>exec-maven-plugin</source>
          <target state="new">exec-maven-plugin</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>可让你使用以下命令在开发环境上本地运行拓扑：</source>
          <target state="new">可让你使用以下命令在开发环境上本地运行拓扑：</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>例如，<ph id="ph1">`mvn compile exec:java -Dstorm.topology=com.microsoft.example.EventHubWriter`</ph>。</source>
          <target state="new">例如，<ph id="ph1">`mvn compile exec:java -Dstorm.topology=com.microsoft.example.EventHubWriter`</ph>。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>resources 节</source>
          <target state="new">resources 节</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>定义项目所需的资源：</source>
          <target state="new">定义项目所需的资源：</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>EventHubs.properties<ept id="p1">**</ept>：包含用于连接到 Azure 事件中心的信息</source>
          <target state="new"><bpt id="p1">**</bpt>EventHubs.properties<ept id="p1">**</ept>：包含用于连接到 Azure 事件中心的信息</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>core-site.xml<ept id="p1">**</ept>：包含 HDInsight 群集使用的 Azure 存储空间的相关信息。</source>
          <target state="new"><bpt id="p1">**</bpt>core-site.xml<ept id="p1">**</ept>：包含 HDInsight 群集使用的 Azure 存储空间的相关信息。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>必须在这两节中填充事件中心与 HDInsight 群集的相关信息。</source>
          <target state="new">必须在这两节中填充事件中心与 HDInsight 群集的相关信息。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>配置环境变量</source>
          <target state="new">配置环境变量</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>可以在开发工作站上安装 Java 和 JDK 时设置以下环境变量。不过，你应该检查它们是否存在并且包含系统的正确值。</source>
          <target state="new">可以在开发工作站上安装 Java 和 JDK 时设置以下环境变量。不过，你应该检查它们是否存在并且包含系统的正确值。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>JAVA\_HOME<ept id="p1">**</ept> - 应该指向已安装 Java 运行时环境 (JRE) 的目录。例如，在 Windows 中，它的值类似于 <ph id="ph1">`c:\Program Files (x86)\Java\jre1.7`</ph></source>
          <target state="new"><bpt id="p1">**</bpt>JAVA\_HOME<ept id="p1">**</ept> - 应该指向已安装 Java 运行时环境 (JRE) 的目录。例如，在 Windows 中，它的值类似于 <ph id="ph1">`c:\Program Files (x86)\Java\jre1.7`</ph></target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PATH<ept id="p1">**</ept> - 应该包含以下路径：</source>
          <target state="new"><bpt id="p1">**</bpt>PATH<ept id="p1">**</ept> - 应该包含以下路径：</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>JAVA\_HOME<ept id="p1">**</ept>（或等效的路径）</source>
          <target state="new"><bpt id="p1">**</bpt>JAVA\_HOME<ept id="p1">**</ept>（或等效的路径）</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>JAVA\_HOME\\bin<ept id="p1">**</ept>（或等效的路径）</source>
          <target state="new"><bpt id="p1">**</bpt>JAVA\_HOME\\bin<ept id="p1">**</ept>（或等效的路径）</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>安装 Maven 的目录</source>
          <target state="new">安装 Maven 的目录</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>配置事件中心</source>
          <target state="new">配置事件中心</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>事件中心是此示例的数据源。按照下列步骤创建一个新的事件中心。</source>
          <target state="new">事件中心是此示例的数据源。按照下列步骤创建一个新的事件中心。</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">[</bpt>Azure 管理门户<ept id="p1">](https://manage.windowsazure.cn)</ept>中，选择“新建”&gt;“服务总线”&gt;“事件中心”&gt;“自定义创建”。</source>
          <target state="new">在 <bpt id="p1">[</bpt>Azure 管理门户<ept id="p1">](https://manage.windowsazure.cn)</ept>中，选择“新建”&gt;“服务总线”&gt;“事件中心”&gt;“自定义创建”。</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>在“添加新事件中心”屏幕中，输入“事件中心名称”，选择要在其中创建中心的“区域”，然后创建新的命名空间或选择现有的命名空间。单击<bpt id="p1">**</bpt>箭头<ept id="p1">**</ept>继续。</source>
          <target state="new">在“添加新事件中心”屏幕中，输入“事件中心名称”，选择要在其中创建中心的“区域”，然后创建新的命名空间或选择现有的命名空间。单击<bpt id="p1">**</bpt>箭头<ept id="p1">**</ept>继续。</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>向导页 1</source>
          <target state="new">向导页 1</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>应该选择与 Storm on HDInsight 服务器相同的<bpt id="p1">**</bpt>位置<ept id="p1">**</ept>，以降低延迟和成本。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>应该选择与 Storm on HDInsight 服务器相同的<bpt id="p1">**</bpt>位置<ept id="p1">**</ept>，以降低延迟和成本。</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>在“配置事件中心”屏幕中，输入“分区计数”和“消息保留期”值。对于本示例，请使用分区计数 10，消息保留期 1。记下分区计数，因为稍后需要用到。</source>
          <target state="new">在“配置事件中心”屏幕中，输入“分区计数”和“消息保留期”值。对于本示例，请使用分区计数 10，消息保留期 1。记下分区计数，因为稍后需要用到。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>向导页 2</source>
          <target state="new">向导页 2</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>创建事件中心之后，请选择命名空间，选择“事件中心”，然后选择你前面创建的事件中心。</source>
          <target state="new">创建事件中心之后，请选择命名空间，选择“事件中心”，然后选择你前面创建的事件中心。</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>选择“配置”，然后使用以下信息创建两个新的访问策略。</source>
          <target state="new">选择“配置”，然后使用以下信息创建两个新的访问策略。</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="new">Name</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>权限</source>
          <target state="new">权限</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>写入器</source>
          <target state="new">写入器</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>发送</source>
          <target state="new">发送</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>读取器</source>
          <target state="new">读取器</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>侦听</source>
          <target state="new">侦听</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>创建权限后，在页面底部选择“保存”图标。这将会创建共享访问策略，用于对此事件中心进行发送 (writer) 和侦听 (reader)。</source>
          <target state="new">创建权限后，在页面底部选择“保存”图标。这将会创建共享访问策略，用于对此事件中心进行发送 (writer) 和侦听 (reader)。</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>策略</source>
          <target state="new">策略</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>保存策略后，使用页面底部的“共享访问密钥生成器”检索 <bpt id="p1">**</bpt>writer<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>reader<ept id="p2">**</ept> 策略的密钥。保存这些密钥，因为稍后将要用到。</source>
          <target state="new">保存策略后，使用页面底部的“共享访问密钥生成器”检索 <bpt id="p1">**</bpt>writer<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>reader<ept id="p2">**</ept> 策略的密钥。保存这些密钥，因为稍后将要用到。</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>下载并构建项目</source>
          <target state="new">下载并构建项目</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>从 GitHub 下载项目：<bpt id="p1">[</bpt>hdinsight-java-storm-eventhub<ept id="p1">](https://github.com/Blackmist/hdinsight-java-storm-eventhub)</ept>。可以下载 zip 存档形式的包，或者使用 <bpt id="p2">[</bpt>git<ept id="p2">](https://git-scm.com/)</ept> 在本地克隆项目。</source>
          <target state="new">从 GitHub 下载项目：<bpt id="p1">[</bpt>hdinsight-java-storm-eventhub<ept id="p1">](https://github.com/Blackmist/hdinsight-java-storm-eventhub)</ept>。可以下载 zip 存档形式的包，或者使用 <bpt id="p2">[</bpt>git<ept id="p2">](https://git-scm.com/)</ept> 在本地克隆项目。</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>使用以下命令以将项目中包含的包安装到本地 Maven 存储库。这些包将启用事件中心 Spout 和 Bolt，以及使用 HdfsBolt 写入 Azure 存储空间 (WASB) 的功能。</source>
          <target state="new">使用以下命令以将项目中包含的包安装到本地 Maven 存储库。这些包将启用事件中心 Spout 和 Bolt，以及使用 HdfsBolt 写入 Azure 存储空间 (WASB) 的功能。</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>如果使用 Powershell，必须用引号括住 <ph id="ph2">`-D`</ph> 参数。例如，<ph id="ph3">`"-Dfile=lib/hadoop/hadoop-main-3.0.0-SNAPSHOT.pom"`</ph>。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>如果使用 Powershell，必须用引号括住 <ph id="ph2">`-D`</ph> 参数。例如，<ph id="ph3">`"-Dfile=lib/hadoop/hadoop-main-3.0.0-SNAPSHOT.pom"`</ph>。</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>这些文件最初来自 https://github.com/hdinsight/hdinsight-storm-examples，因此可以在那里找到最新版本。</source>
          <target state="new">这些文件最初来自 https://github.com/hdinsight/hdinsight-storm-examples，因此可以在那里找到最新版本。</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>使用以下命令构建和打包项目：</source>
          <target state="new">使用以下命令构建和打包项目：</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>这会下载所需的依赖项，构建然后打包项目。输出在 <bpt id="p1">__</bpt>/target<ept id="p1">__</ept> 目录中存储为 <bpt id="p2">__</bpt>EventHubExample-1.0-SNAPSHOT.jar<ept id="p2">__</ept>。</source>
          <target state="new">这会下载所需的依赖项，构建然后打包项目。输出在 <bpt id="p1">__</bpt>/target<ept id="p1">__</ept> 目录中存储为 <bpt id="p2">__</bpt>EventHubExample-1.0-SNAPSHOT.jar<ept id="p2">__</ept>。</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>部署拓扑</source>
          <target state="new">部署拓扑</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>此项目创建的 jar 包含两个拓扑；<bpt id="p1">__</bpt>com.microsoft.example.EventHubWriter<ept id="p1">__</ept> 和 <bpt id="p2">__</bpt>com.microsoft.example.EventHubReader<ept id="p2">__</ept>。应该先启动 EventHubWriter 拓扑，因为它会将事件写入事件中心，然后由 EventHubReader 读取事件。</source>
          <target state="new">此项目创建的 jar 包含两个拓扑；<bpt id="p1">__</bpt>com.microsoft.example.EventHubWriter<ept id="p1">__</ept> 和 <bpt id="p2">__</bpt>com.microsoft.example.EventHubReader<ept id="p2">__</ept>。应该先启动 EventHubWriter 拓扑，因为它会将事件写入事件中心，然后由 EventHubReader 读取事件。</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>如果使用基于 Windows 的群集</source>
          <target state="new">如果使用基于 Windows 的群集</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>在浏览器中打开 https://CLUSTERNAME.azurehdinsight.cn。出现提示时，输入 HDInsight 群集的管理员凭据。随后你将进入 Storm 仪表板。</source>
          <target state="new">在浏览器中打开 https://CLUSTERNAME.azurehdinsight.cn。出现提示时，输入 HDInsight 群集的管理员凭据。随后你将进入 Storm 仪表板。</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>使用“Jar 文件”下拉列表在构建环境中浏览并选择 EventHubExample-1.0-SNAPSHOT.jar 文件。</source>
          <target state="new">使用“Jar 文件”下拉列表在构建环境中浏览并选择 EventHubExample-1.0-SNAPSHOT.jar 文件。</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>对于“类名”，请输入 <ph id="ph1">`com.mirosoft.example.EventHubWriter`</ph>。</source>
          <target state="new">对于“类名”，请输入 <ph id="ph1">`com.mirosoft.example.EventHubWriter`</ph>。</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>对于“其他参数”，请输入 <ph id="ph1">`writer`</ph>。最后，单击“提交”上载 jar 并启动 EventHubWriter 拓扑。</source>
          <target state="new">对于“其他参数”，请输入 <ph id="ph1">`writer`</ph>。最后，单击“提交”上载 jar 并启动 EventHubWriter 拓扑。</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>启动拓扑后，使用窗体来启动 EventHubReader：</source>
          <target state="new">启动拓扑后，使用窗体来启动 EventHubReader：</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">__</bpt>Jar 文件<ept id="p1">__</ept>：选择前面上载的 EventHubExample-1.0-SNAPSHOT.jar</source>
          <target state="new"><bpt id="p1">__</bpt>Jar 文件<ept id="p1">__</ept>：选择前面上载的 EventHubExample-1.0-SNAPSHOT.jar</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">__</bpt>类名<ept id="p1">__</ept>：输入 <ph id="ph1">`com.microsoft.example.EventHubReader`</ph></source>
          <target state="new"><bpt id="p1">__</bpt>类名<ept id="p1">__</ept>：输入 <ph id="ph1">`com.microsoft.example.EventHubReader`</ph></target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">__</bpt>其他参数<ept id="p1">__</ept>：输入 <ph id="ph1">`reader`</ph></source>
          <target state="new"><bpt id="p1">__</bpt>其他参数<ept id="p1">__</ept>：输入 <ph id="ph1">`reader`</ph></target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>单击“提交”启动 EventHubReader 拓扑。</source>
          <target state="new">单击“提交”启动 EventHubReader 拓扑。</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>等待几分钟让拓扑生成事件并将事件存储到 Azure 存储空间，然后选择“Storm 仪表板”页面顶部的“查询控制台”选项卡。</source>
          <target state="new">等待几分钟让拓扑生成事件并将事件存储到 Azure 存储空间，然后选择“Storm 仪表板”页面顶部的“查询控制台”选项卡。</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>在“查询控制台”上，选择“Hive 编辑器”并将默认的 <ph id="ph1">`select * from hivesampletable`</ph> 替换为以下内容：</source>
          <target state="new">在“查询控制台”上，选择“Hive 编辑器”并将默认的 <ph id="ph1">`select * from hivesampletable`</ph> 替换为以下内容：</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>单击“选择”以运行查询。这会返回 10 行由 EventHubReader 写入 Azure 存储空间 (WASB) 的数据。完成查询后，你应会看到类似于下面的数据：</source>
          <target state="new">单击“选择”以运行查询。这会返回 10 行由 EventHubReader 写入 Azure 存储空间 (WASB) 的数据。完成查询后，你应会看到类似于下面的数据：</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>选择页面顶部的“Storm 仪表板”，然后选择“Storm UI”。从“Storm UI”中选择<bpt id="p1">__</bpt>读取器<ept id="p1">__</ept>拓扑的链接，然后使用“终止”按钮停止拓扑。针对<bpt id="p2">__</bpt>写入器<ept id="p2">__</ept>拓扑重复该过程。</source>
          <target state="new">选择页面顶部的“Storm 仪表板”，然后选择“Storm UI”。从“Storm UI”中选择<bpt id="p1">__</bpt>读取器<ept id="p1">__</ept>拓扑的链接，然后使用“终止”按钮停止拓扑。针对<bpt id="p2">__</bpt>写入器<ept id="p2">__</ept>拓扑重复该过程。</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>检查点</source>
          <target state="new">检查点</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>EventHubSpout 定期检查点其状态为 Zookeeper 节点，将保存当前的偏移量的消息从队列中读取。这样，要开始在以下情况下接收已保存的偏移量处的消息的组件：</source>
          <target state="new">EventHubSpout 定期检查点其状态为 Zookeeper 节点，将保存当前的偏移量的消息从队列中读取。这样，要开始在以下情况下接收已保存的偏移量处的消息的组件：</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>组件实例失败，并已重新启动。</source>
          <target state="new">组件实例失败，并已重新启动。</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>通过添加或删除节点扩大或收缩群集。</source>
          <target state="new">通过添加或删除节点扩大或收缩群集。</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>拓扑已终止并已<bpt id="p1">**</bpt>使用相同的名称<ept id="p1">**</ept>重新启动。</source>
          <target state="new">拓扑已终止并已<bpt id="p1">**</bpt>使用相同的名称<ept id="p1">**</ept>重新启动。</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>在基于 Windows 的 HDInsight 群集上</source>
          <target state="new">在基于 Windows 的 HDInsight 群集上</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>你可以将持久性检查点导入和导出到 WASB（HDInsight 群集使用的 Azure 存储空间。） 用于执行此操作的脚本位于 Storm on HDInsight 上的 <bpt id="p1">**</bpt>c:\\apps\\dist\\storm-0.9.3.2.2.1.0-2340\\zkdatatool-1.0\\bin<ept id="p1">**</ept> 中。</source>
          <target state="new">你可以将持久性检查点导入和导出到 WASB（HDInsight 群集使用的 Azure 存储空间。） 用于执行此操作的脚本位于 Storm on HDInsight 上的 <bpt id="p1">**</bpt>c:\\apps\\dist\\storm-0.9.3.2.2.1.0-2340\\zkdatatool-1.0\\bin<ept id="p1">**</ept> 中。</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>路径中的版本号可能不同，因为群集上安装的 Storm 版本将来可能会更改。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>路径中的版本号可能不同，因为群集上安装的 Storm 版本将来可能会更改。</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>此目录中的脚本是：</source>
          <target state="new">此目录中的脚本是：</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>stormmeta\_import.cmd<ept id="p1">**</ept>：将所有 Storm 元数据从群集默认存储容器导入 Zookeeper。</source>
          <target state="new"><bpt id="p1">**</bpt>stormmeta\_import.cmd<ept id="p1">**</ept>：将所有 Storm 元数据从群集默认存储容器导入 Zookeeper。</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>stormmeta\_export.cmd<ept id="p1">**</ept>：将所有 Storm 元数据从 Zookeeper 导出到群集默认存储容器。</source>
          <target state="new"><bpt id="p1">**</bpt>stormmeta\_export.cmd<ept id="p1">**</ept>：将所有 Storm 元数据从 Zookeeper 导出到群集默认存储容器。</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>stormmeta\_delete.cmd<ept id="p1">**</ept>：从 Zookeeper 中删除所有 Storm 元数据。</source>
          <target state="new"><bpt id="p1">**</bpt>stormmeta\_delete.cmd<ept id="p1">**</ept>：从 Zookeeper 中删除所有 Storm 元数据。</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>当你需要删除群集，但在将新群集重新联机的情况下想要从中心的当前偏移量恢复处理时，可以使用导出和导入来保存检查点数据。</source>
          <target state="new">当你需要删除群集，但在将新群集重新联机的情况下想要从中心的当前偏移量恢复处理时，可以使用导出和导入来保存检查点数据。</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>由于数据将保存到默认的存储容器，新群集<bpt id="p1">**</bpt>必须<ept id="p1">**</ept>使用前一群集所用的同一个存储帐户和容器。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>由于数据将保存到默认的存储容器，新群集<bpt id="p1">**</bpt>必须<ept id="p1">**</ept>使用前一群集所用的同一个存储帐户和容器。</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>故障排除</source>
          <target state="new">故障排除</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>如果你未看到文件存储在 /devicedata 位置（使用 <ph id="ph1">`hadoop fs -ls /devicedata`</ph> 命令或在查询控制台中使用 Hive 命令），请使用 Storm UI 来查找拓扑返回的任何错误。</source>
          <target state="new">如果你未看到文件存储在 /devicedata 位置（使用 <ph id="ph1">`hadoop fs -ls /devicedata`</ph> 命令或在查询控制台中使用 Hive 命令），请使用 Storm UI 来查找拓扑返回的任何错误。</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>有关使用 Storm UI 的详细信息，请参阅以下主题：</source>
          <target state="new">有关使用 Storm UI 的详细信息，请参阅以下主题：</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>如果你在 HDInsight 群集上使用<bpt id="p1">__</bpt>基于 Windows<ept id="p1">__</ept> 的 Storm，请参阅<bpt id="p2">[</bpt>部署和管理基于 Windows 的 HDInsight 上的 Apache Storm 拓扑<ept id="p2">](/documentation/articles/hdinsight-storm-deploy-monitor-topology)</ept></source>
          <target state="new">如果你在 HDInsight 群集上使用<bpt id="p1">__</bpt>基于 Windows<ept id="p1">__</ept> 的 Storm，请参阅<bpt id="p2">[</bpt>部署和管理基于 Windows 的 HDInsight 上的 Apache Storm 拓扑<ept id="p2">](/documentation/articles/hdinsight-storm-deploy-monitor-topology)</ept></target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Storm on HDInsight 的示例拓扑</source>
          <target state="new">Storm on HDInsight 的示例拓扑</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>