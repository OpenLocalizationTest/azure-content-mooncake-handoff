{
  "nodes": [
    {
      "content": "Windows VM 上的自定义脚本扩展 | Azure",
      "pos": [
        26,
        54
      ]
    },
    {
      "content": "通过使用自定义脚本扩展在远程 Windows VM 上运行 PowerShell 脚本自动执行 Azure VM 配置任务",
      "pos": [
        72,
        133
      ]
    },
    {
      "content": "适用于 Windows 虚拟机的自定义脚本扩展",
      "pos": [
        378,
        401
      ]
    },
    {
      "content": "本文概述了如何在 Windows VM 上通过 Azure Powershell cmdlet 来使用自定义脚本扩展。",
      "pos": [
        403,
        462
      ]
    },
    {
      "pos": [
        464,
        608
      ],
      "content": "虚拟机 (VM) 扩展由 Microsoft 和受信任的第三方发布者构建，用于扩展 VM 的功能。有关 VM 扩展的概述，请参阅 <bpt id=\"p1\">[</bpt>Azure VM 扩展和功能<ept id=\"p1\">](/documentation/articles/virtual-machines-extensions-features)</ept>。"
    },
    {
      "content": "自定义脚本扩展概述",
      "pos": [
        725,
        734
      ]
    },
    {
      "content": "适用于 Windows 的自定义脚本扩展允许你在不登录到远程 VM 的情况下在其上运行 Powershell 脚本。可以在预配 VM 后或者在 VM 的生命周期中的任何时间运行这些脚本，而不需要在 VM 上打开任何其他端口。自定义脚本扩展的最常见用例包括在预配 VM 后在 VM 上运行、安装和配置其他软件。",
      "pos": [
        736,
        890
      ]
    },
    {
      "content": "运行自定义脚本扩展的先决条件",
      "pos": [
        896,
        910
      ]
    },
    {
      "pos": [
        915,
        1001
      ],
      "content": "从<ph id=\"ph1\">&lt;a href=\"/downloads\" target=\"_blank\"&gt;</ph>此处<ph id=\"ph2\">&lt;/a&gt;</ph>安装 Azure PowerShell Cmdlet 版本 0.8.0 或更高版本。"
    },
    {
      "pos": [
        1005,
        1151
      ],
      "content": "如果脚本将在现有 VM 上运行，请确保已在该 VM 上启用了 VM 代理，如果没有启用，请按照<ph id=\"ph1\">&lt;a href=\"https://msdn.microsoft.com/zh-cn/library/azure/dn832621.aspx\" target=\"_blank\"&gt;</ph>此文<ph id=\"ph2\">&lt;/a&gt;</ph>来安装一个。"
    },
    {
      "content": "将你要在 VM 上运行的脚本上载到 Azure 存储。脚本可以来自单个容器或多个存储容器。",
      "pos": [
        1155,
        1200
      ]
    },
    {
      "content": "脚本应当以下述方式编写：使用扩展启动入口脚本，然后入口脚本再启动其他脚本。",
      "pos": [
        1204,
        1241
      ]
    },
    {
      "content": "自定义脚本扩展方案",
      "pos": [
        1246,
        1255
      ]
    },
    {
      "content": "将文件上载到默认容器",
      "pos": [
        1261,
        1271
      ]
    },
    {
      "pos": [
        1273,
        1395
      ],
      "content": "如果你的脚本位于你的订阅的默认帐户的存储容器中，则下面的示例演示如何在 VM 上运行它们。ContainerName 是你将脚本上载到的位置。可以使用 <bpt id=\"p1\">**</bpt>Get-AzureSubscription –Default<ept id=\"p1\">**</ept> 命令验证默认存储帐户。"
    },
    {
      "content": "下面的示例将创建一个新 VM，但同一方案也可以在现有 VM 上运行。",
      "pos": [
        1397,
        1431
      ]
    },
    {
      "content": "将文件上载到非默认存储容器",
      "pos": [
        2308,
        2321
      ]
    },
    {
      "content": "此方案说明如何使用同一订阅中的或不同订阅中的非默认存储来上载脚本和文件。这次，我们将使用现有 VM，但可以在创建新 VM 时执行同样的操作。",
      "pos": [
        2323,
        2393
      ]
    },
    {
      "content": "将脚本上载到不同存储帐户中的多个容器",
      "pos": [
        2653,
        2671
      ]
    },
    {
      "content": "如果脚本文件存储在多个容器中，则要运行脚本，你必须提供这些文件的完整 SAS URL。",
      "pos": [
        2675,
        2718
      ]
    },
    {
      "content": "卸载自定义脚本扩展",
      "pos": [
        2972,
        2981
      ]
    },
    {
      "content": "可以使用以下命令从 VM 中卸载自定义脚本扩展。",
      "pos": [
        2983,
        3007
      ]
    },
    {
      "content": "将自定义脚本扩展与模板配合使用",
      "pos": [
        3132,
        3147
      ]
    },
    {
      "content": "若要了解如何将自定义脚本扩展与模板配合使用，请参阅 [此处](/documentation/articles/virtual-machines-extensions-customscript -with template) 的文档。",
      "pos": [
        3149,
        3265
      ]
    }
  ],
  "content": "<properties\n   pageTitle=\"Windows VM 上的自定义脚本扩展 | Azure\"\n   description=\"通过使用自定义脚本扩展在远程 Windows VM 上运行 PowerShell 脚本自动执行 Azure VM 配置任务\"\n   services=\"virtual-machines\"\n   documentationCenter=\"\"\n   authors=\"kundanap\"\n   manager=\"timlt\"\n   editor=\"\"\n   tags=\"azure-service-management\"/>\n\n<tags\n   ms.service=\"virtual-machines\"\n   ms.date=\"08/06/2015\"\n   wacn.date=\"11/12/2015\"/>\n\n# 适用于 Windows 虚拟机的自定义脚本扩展\n\n本文概述了如何在 Windows VM 上通过 Azure Powershell cmdlet 来使用自定义脚本扩展。\n\n虚拟机 (VM) 扩展由 Microsoft 和受信任的第三方发布者构建，用于扩展 VM 的功能。有关 VM 扩展的概述，请参阅 [Azure VM 扩展和功能](/documentation/articles/virtual-machines-extensions-features)。\n\n[AZURE.INCLUDE [learn-about-deployment-models](../includes/learn-about-deployment-models-classic-include.md)]\n\n\n## 自定义脚本扩展概述\n\n适用于 Windows 的自定义脚本扩展允许你在不登录到远程 VM 的情况下在其上运行 Powershell 脚本。可以在预配 VM 后或者在 VM 的生命周期中的任何时间运行这些脚本，而不需要在 VM 上打开任何其他端口。自定义脚本扩展的最常见用例包括在预配 VM 后在 VM 上运行、安装和配置其他软件。\n\n### 运行自定义脚本扩展的先决条件\n\n1. 从<a href=\"/downloads\" target=\"_blank\">此处</a>安装 Azure PowerShell Cmdlet 版本 0.8.0 或更高版本。\n2. 如果脚本将在现有 VM 上运行，请确保已在该 VM 上启用了 VM 代理，如果没有启用，请按照<a href=\"https://msdn.microsoft.com/zh-cn/library/azure/dn832621.aspx\" target=\"_blank\">此文</a>来安装一个。\n3. 将你要在 VM 上运行的脚本上载到 Azure 存储。脚本可以来自单个容器或多个存储容器。\n4. 脚本应当以下述方式编写：使用扩展启动入口脚本，然后入口脚本再启动其他脚本。\n\n## 自定义脚本扩展方案\n\n### 将文件上载到默认容器\n\n如果你的脚本位于你的订阅的默认帐户的存储容器中，则下面的示例演示如何在 VM 上运行它们。ContainerName 是你将脚本上载到的位置。可以使用 **Get-AzureSubscription –Default** 命令验证默认存储帐户。\n\n下面的示例将创建一个新 VM，但同一方案也可以在现有 VM 上运行。\n\n    # create a new VM in Azure.\n    $vm = New-AzureVMConfig -Name $name -InstanceSize Small -ImageName $imagename\n    $vm = Add-AzureProvisioningConfig -VM $vm -Windows -AdminUsername $username -Password $password\n    // Add Custom Script Extension to the VM. The container name refer to the storage container which contains the file.\n    $vm = Set-AzureVMCustomScriptExtension -VM $vm -ContainerName $container -FileName 'start.ps1'\n    New-AzureVM -ServiceName $servicename -Location $location -VMs $vm\n    #  After the VM is created, the extension downloads the script from the storage location and executes it on the VM.\n\n    # Viewing the  script execution output.\n    $vm = Get-AzureVM -ServiceName $servicename -Name $name\n    # Use the position of the extension in the output as index.\n    $vm.ResourceExtensionStatusList[i].ExtensionSettingStatus.SubStatusList\n\n### 将文件上载到非默认存储容器\n\n此方案说明如何使用同一订阅中的或不同订阅中的非默认存储来上载脚本和文件。这次，我们将使用现有 VM，但可以在创建新 VM 时执行同样的操作。\n\n        Get-AzureVM -Name $name -ServiceName $servicename | Set-AzureVMCustomScriptExtension -StorageAccountName $storageaccount -StorageAccountKey $storagekey -ContainerName $container -FileName 'file1.ps1','file2.ps1' -Run 'file.ps1' | Update-AzureVM\n\n### 将脚本上载到不同存储帐户中的多个容器\n\n  如果脚本文件存储在多个容器中，则要运行脚本，你必须提供这些文件的完整 SAS URL。\n\n      Get-AzureVM -Name $name -ServiceName $servicename | Set-AzureVMCustomScriptExtension -StorageAccountName $storageaccount -StorageAccountKey $storagekey -ContainerName $container -FileUri $fileUrl1, $fileUrl2 -Run 'file.ps1' | Update-AzureVM\n\n### 卸载自定义脚本扩展\n\n可以使用以下命令从 VM 中卸载自定义脚本扩展。\n\n      get-azureVM -ServiceName KPTRDemo -Name KPTRDemo | Set-AzureVMCustomScriptExtension -Uninstall | Update-AzureVM\n\n### 将自定义脚本扩展与模板配合使用\n\n若要了解如何将自定义脚本扩展与模板配合使用，请参阅 [此处](/documentation/articles/virtual-machines-extensions-customscript -with template) 的文档。\n\n<!--Image references-->\n[5]: ./media/virtual-machines-extensions-customscript/addcse.png\n\n<!---HONumber=79-->"
}