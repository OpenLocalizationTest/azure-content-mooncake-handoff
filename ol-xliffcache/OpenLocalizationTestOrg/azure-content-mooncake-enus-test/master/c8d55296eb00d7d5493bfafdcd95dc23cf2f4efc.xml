{
  "nodes": [
    {
      "content": "注册新的插入脚本，当插入新的 Todo 项时，它可以生成 SAS。",
      "pos": [
        0,
        33
      ]
    },
    {
      "pos": [
        38,
        122
      ],
      "content": "如果你尚未创建你的存储帐户，请参阅<bpt id=\"p1\">[</bpt>如何创建存储帐户<ept id=\"p1\">](/documentation/articles/storage-create-storage-account)</ept>。"
    },
    {
      "pos": [
        127,
        201
      ],
      "content": "在 <bpt id=\"p1\">[</bpt>Azure 经典门户<ept id=\"p1\">](https://manage.windowsazure.cn/)</ept>中，单击“存储”，单击存储帐户，然后单击“管理密钥”。"
    },
    {
      "content": "记下“存储帐户名称”和“访问密钥”。",
      "pos": [
        206,
        224
      ]
    },
    {
      "content": "在你的移动服务中，单击“配置”选项卡、向下滚动到“应用设置”、输入你从存储帐户获取的下述每个项的“名称”和“值”对，然后单击“保存”。",
      "pos": [
        323,
        390
      ]
    },
    {
      "pos": [
        555,
        613
      ],
      "content": "存储帐户访问密钥将会加密存储在应用设置中。你可在运行时从任何服务器脚本访问此密钥。有关详细信息，请参阅<bpt id=\"p1\">[</bpt><ept id=\"p1\">应用设置]</ept>。"
    },
    {
      "pos": [
        618,
        781
      ],
      "content": "在“配置”选项卡中，请确保已启用“<bpt id=\"p1\">[</bpt>动态架构<ept id=\"p1\">](http://msdn.microsoft.com/zh-cn/library/windowsazure/b6bb7d2d-35ae-47eb-a03f-6ee393e170f7)</ept>”。你需要启用动态架构以能够将新列添加到 TodoItem 表。不应在任何生产服务中启用动态架构。"
    },
    {
      "pos": [
        786,
        816
      ],
      "content": "单击“数据”选项卡，然后单击 <bpt id=\"p1\">**</bpt>TodoItem<ept id=\"p1\">**</ept> 表。"
    },
    {
      "pos": [
        823,
        887
      ],
      "content": "在 <bpt id=\"p1\">**</bpt>todoitem<ept id=\"p1\">**</ept> 中，单击“脚本”选项卡，然后选择“插入”，将 insert 函数替换为以下代码，然后单击“保存”："
    },
    {
      "pos": [
        3414,
        3574
      ],
      "content": "这样可将当 TodoItem 表中发生插入时所调用的函数替换为新脚本。此新脚本将为插入生成新 SAS（它的有效时间为 5 分钟）并将生成的 SAS 的值分配给所返回项目的 <ph id=\"ph1\">`sasQueryString`</ph> 属性。还将 <ph id=\"ph2\">`imageUri`</ph> 属性设置为新 BLOB 的资源路径，以便在绑定时在客户端 UI 中启用图像显示。"
    },
    {
      "pos": [
        3581,
        3755
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> 这段代码为单个 BLOB 创建 SAS。如果你需要使用同一个 SAS 将多个 blob 上载到容器，可以改为使用空 blob 资源名称调用 <bpt id=\"p1\">[</bpt>generateSharedAccessSignature 方法<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=390455)</ept><ph id=\"ph2\">&lt;/a&gt;</ph>，如下所示："
    },
    {
      "content": "接下来，你将更新快速启动应用，通过使用在发生插入时生成的 SAS，添加图像上载功能。",
      "pos": [
        3872,
        3914
      ]
    }
  ],
  "content": "注册新的插入脚本，当插入新的 Todo 项时，它可以生成 SAS。\n\n0. 如果你尚未创建你的存储帐户，请参阅[如何创建存储帐户](/documentation/articles/storage-create-storage-account)。\n\n1. 在 [Azure 经典门户](https://manage.windowsazure.cn/)中，单击“存储”，单击存储帐户，然后单击“管理密钥”。\n\n2. 记下“存储帐户名称”和“访问密钥”。\n\n    ![](./media/mobile-services-configure-blob-storage/mobile-blob-storage-account-keys.png)\n\n3. 在你的移动服务中，单击“配置”选项卡、向下滚动到“应用设置”、输入你从存储帐户获取的下述每个项的“名称”和“值”对，然后单击“保存”。\n\n    + `STORAGE_ACCOUNT_NAME`\n    + `STORAGE_ACCOUNT_ACCESS_KEY`\n\n    ![](./media/mobile-services-configure-blob-storage/mobile-blob-storage-app-settings.png)\n\n    存储帐户访问密钥将会加密存储在应用设置中。你可在运行时从任何服务器脚本访问此密钥。有关详细信息，请参阅[应用设置]。\n\n4. 在“配置”选项卡中，请确保已启用“[动态架构](http://msdn.microsoft.com/zh-cn/library/windowsazure/b6bb7d2d-35ae-47eb-a03f-6ee393e170f7)”。你需要启用动态架构以能够将新列添加到 TodoItem 表。不应在任何生产服务中启用动态架构。\n\n5. 单击“数据”选项卡，然后单击 **TodoItem** 表。\n\n\n6.  在 **todoitem** 中，单击“脚本”选项卡，然后选择“插入”，将 insert 函数替换为以下代码，然后单击“保存”：\n\n        var azure = require('azure');\n        var qs = require('querystring');\n        var appSettings = require('mobileservice-config').appSettings;\n        \n        function insert(item, user, request) {\n            // Get storage account settings from app settings. \n            var accountName = appSettings.STORAGE_ACCOUNT_NAME;\n            var accountKey = appSettings.STORAGE_ACCOUNT_ACCESS_KEY;\n            var host = accountName + '.blob.core.windows.net';\n        \n            if ((typeof item.containerName !== \"undefined\") && (\n            item.containerName !== null)) {\n                // Set the BLOB store container name on the item, which must be lowercase.\n                item.containerName = item.containerName.toLowerCase();\n        \n                // If it does not already exist, create the container \n                // with public read access for blobs.        \n                var blobService = azure.createBlobService(accountName, accountKey, host);\n                blobService.createContainerIfNotExists(item.containerName, {\n                    publicAccessLevel: 'blob'\n                }, function(error) {\n                    if (!error) {\n        \n                        // Provide write access to the container for the next 5 mins.        \n                        var sharedAccessPolicy = {\n                            AccessPolicy: {\n                                Permissions: azure.Constants.BlobConstants.SharedAccessPermissions.WRITE,\n                                Expiry: new Date(new Date().getTime() + 5 * 60 * 1000)\n                            }\n                        };\n        \n                        // Generate the upload URL with SAS for the new image.\n                        var sasQueryUrl = \n                        blobService.generateSharedAccessSignature(item.containerName, \n                        item.resourceName, sharedAccessPolicy);\n        \n                        // Set the query string.\n                        item.sasQueryString = qs.stringify(sasQueryUrl.queryString);\n        \n                        // Set the full path on the new new item, \n                        // which is used for data binding on the client. \n                        item.imageUri = sasQueryUrl.baseUrl + sasQueryUrl.path;\n        \n                    } else {\n                        console.error(error);\n                    }\n                    request.execute();\n                });\n            } else {\n                request.execute();\n            }\n        }\n\n    这样可将当 TodoItem 表中发生插入时所调用的函数替换为新脚本。此新脚本将为插入生成新 SAS（它的有效时间为 5 分钟）并将生成的 SAS 的值分配给所返回项目的 `sasQueryString` 属性。还将 `imageUri` 属性设置为新 BLOB 的资源路径，以便在绑定时在客户端 UI 中启用图像显示。\n\n    >[AZURE.NOTE] 这段代码为单个 BLOB 创建 SAS。如果你需要使用同一个 SAS 将多个 blob 上载到容器，可以改为使用空 blob 资源名称调用 [generateSharedAccessSignature 方法](http://go.microsoft.com/fwlink/?LinkId=390455)</a>，如下所示：\n    >                 \n    >     blobService.generateSharedAccessSignature(containerName, '', sharedAccessPolicy);\n\n接下来，你将更新快速启动应用，通过使用在发生插入时生成的 SAS，添加图像上载功能。\n \n<!-- Anchors. -->\n\n<!-- Images. -->\n\n<!-- URLs. -->\n[应用设置]: http://msdn.microsoft.com/zh-cn/library/windowsazure/b6bb7d2d-35ae-47eb-a03f-6ee393e170f7\n\n<!---HONumber=Mooncake_0118_2016-->"
}