{
  "nodes": [
    {
      "content": "通过自定义任务预设操作编码任务",
      "pos": [
        28,
        43
      ]
    },
    {
      "content": "Azure 媒体服务编码器使你能够将自定义预设文件传递给 Azure 媒体编码器。本主题演示如何自定义预设文件以完成以下任务：将图像叠加到现有视频、控制编码器生成的输出文件名、拼结视频。",
      "pos": [
        63,
        156
      ]
    },
    {
      "content": "通过自定义任务预设操作编码任务",
      "pos": [
        374,
        389
      ]
    },
    {
      "content": "Azure 媒体服务编码器使你能够将自定义预设文件传递给 Azure 媒体编码器。本主题演示如何自定义预设文件以完成以下任务：",
      "pos": [
        392,
        455
      ]
    },
    {
      "content": "将图像叠加到现有视频、",
      "pos": [
        459,
        470
      ]
    },
    {
      "content": "控制编码器生成的输出文件名、",
      "pos": [
        474,
        488
      ]
    },
    {
      "content": "拼结视频、",
      "pos": [
        492,
        497
      ]
    },
    {
      "content": "对主要包含语音的演示文稿进行编码。",
      "pos": [
        500,
        517
      ]
    },
    {
      "content": "控制 Azure 媒体编码器输出文件名",
      "pos": [
        521,
        540
      ]
    },
    {
      "content": "默认情况下，Azure 媒体编码器通过将输入资产和编码过程的各种特性组合在一起来创建输出文件名。如下文所述，使用宏来标识每种特性。",
      "pos": [
        608,
        673
      ]
    },
    {
      "content": "以下是可用于输出文件命名的宏的完整列表：",
      "pos": [
        675,
        695
      ]
    },
    {
      "content": "音频比特率 - 对音频进行编码时使用的比特率，单位为 kbps",
      "pos": [
        696,
        727
      ]
    },
    {
      "content": "音频编解码器 - 用于对音频进行编码的编解码器，有效值为 AAC、WMA 和 DDP",
      "pos": [
        731,
        773
      ]
    },
    {
      "content": "通道计数 - 编码的音频通道数，有效值为：1、2 或 6",
      "pos": [
        776,
        804
      ]
    },
    {
      "content": "默认扩展名 – 默认的文件扩展名",
      "pos": [
        807,
        823
      ]
    },
    {
      "content": "语言 - BCP-47 语言代码，表示音频中使用的语言。当前默认为“und”。",
      "pos": [
        827,
        866
      ]
    },
    {
      "content": "原始文件名 - 上载到 Azure 存储空间的文件的名称",
      "pos": [
        870,
        898
      ]
    },
    {
      "content": "StreamId – 由预设文件中",
      "pos": [
        901,
        918
      ]
    },
    {
      "content": "元素的 streamID 特性定义的流 ID",
      "pos": [
        932,
        954
      ]
    },
    {
      "content": "视频编解码器 - 用于编码的编解码器，有效值为 H264 和 VC1",
      "pos": [
        958,
        992
      ]
    },
    {
      "content": "视频比特率 - 对视频进行编码时使用的比特率，单位为 kbps",
      "pos": [
        995,
        1026
      ]
    },
    {
      "content": "这些宏可按任意排列组合，从而控制媒体服务编码器生成的文件名。例如，默认命名约定为：",
      "pos": [
        1028,
        1069
      ]
    },
    {
      "pos": [
        1199,
        1319
      ],
      "content": "使用 <bpt id=\"p1\">[</bpt>Preset<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/azure/dn554334.aspx)</ept> 元素的 DefaultMediaOutputFileName 属性来指定文件命名约定。例如："
    },
    {
      "content": "编码器将在每个宏之间插入下划线，例如，上面的配置将会产生类似于以下形式的文件名：MyVideo\\_H264\\_4500kpbs\\_AAC\\_und\\_ch2\\_128kbps.mp4。",
      "pos": [
        2388,
        2480
      ]
    },
    {
      "content": "创建叠加",
      "pos": [
        2485,
        2489
      ]
    },
    {
      "pos": [
        2524,
        2642
      ],
      "content": "Azure 媒体服务编码器可让你将图像（jpg、bmp、gif、tif）、视频或音轨（<bpt id=\"p1\">*</bpt>.wma、<ept id=\"p1\">*</ept>.mp3、*.wav）叠加到现有视频。此功能类似于 Expression Encoder 4 (Service Pack 2) 的功能。"
    },
    {
      "content": "使用媒体服务编码器进行叠加",
      "pos": [
        2647,
        2660
      ]
    },
    {
      "content": "可以指定叠加出现的时间、呈现叠加的持续时间、叠加出现在屏幕上的位置（对于图像/视频叠加）。还可使叠加层淡入和/或淡出。要叠加的音频/视频文件可包含在多个资产或单个资产中。可通过传递到编码器的预设 XML 对叠加进行控制。有关预设架构的完整说明，请参阅“Azure 媒体编码器架构”。如下面的预设代码片段所示，将在",
      "pos": [
        2662,
        2818
      ]
    },
    {
      "content": "元素中指定叠加：",
      "pos": [
        2831,
        2839
      ]
    },
    {
      "content": "视频或图像叠加的预设",
      "pos": [
        3488,
        3498
      ]
    },
    {
      "content": "叠加可源自单个或多个资产。当使用多个资产创建视频叠加时，通过使用 %n% 语法（其中 n 是编码任务输入资产从零开始的索引）在 OverlayFileName 特性中指定叠加文件名。当使用单个资产创建视频叠加时，直接在 OverlayFileName 特性中指定叠加文件名，如下面的预设代码片段所示：",
      "pos": [
        3500,
        3650
      ]
    },
    {
      "content": "示例 1：",
      "pos": [
        3652,
        3657
      ]
    },
    {
      "content": "示例 2：",
      "pos": [
        4013,
        4018
      ]
    },
    {
      "content": "视频叠加的位置和大小由 OverlayRect 特性控制。将调整要叠加的内容的大小以适应此矩形。不透明度由 OverlayOpacity 特性控制。有效值为 0.0 – 1.0，其中 1.0 表示 100% 不透明。叠加将于 OverlayStartTime 特性所指定的时间显示，并将于 OverlayEndTime 特性所指定的时间结束。OverlayStartTime 和 OverlayEndTime 都应在源视频的时间线内。有关每个特定于叠加的特性的详细信息，请参阅“Azure 媒体编码器架构”。",
      "pos": [
        4384,
        4638
      ]
    },
    {
      "content": "音频叠加的预设",
      "pos": [
        4643,
        4650
      ]
    },
    {
      "content": "音频叠加可以是任何支持的音频文件格式。有关受支持音频文件格式的完整列表，请参阅“媒体服务编码器支持的格式”。如下面的预设代码片段所示，也会在",
      "pos": [
        4652,
        4722
      ]
    },
    {
      "content": "元素中指定音频叠加：",
      "pos": [
        4735,
        4745
      ]
    },
    {
      "content": "当音频叠加内容存储在多个资产时，通过使用 %n% 语法（其中 n 是编码任务的输入资产集合的从零开始的索引）在 AudioOverlayFileName 特性中指定音频叠加文件名。对于存储在单个资产中的音频叠加内容，直接在 AudioOverlayFileName 特性中指定叠加文件名。AudioOverlayLayoutMode 确定呈现音频叠加的时间。当设置为“WholeSequence”时，音轨将在整个视频持续期间呈现。当设置为“自定义”时，由 AudioOverlayStartTime 和 AudioOverlayEndTime 特性确定音频叠加的开始和结束时间。OverlayStartTime 和 OverlayEndTime 都应在源视频的时间线内。有关所有音频叠加特性的详细信息，请参阅“Azure 媒体编码器架构”。如下面的预设代码片段所示，音频叠加可与视频叠加合并：",
      "pos": [
        5219,
        5615
      ]
    },
    {
      "content": "提交具有叠加的任务",
      "pos": [
        6431,
        6440
      ]
    },
    {
      "content": "创建预设文件后必须执行以下操作：",
      "pos": [
        6442,
        6458
      ]
    },
    {
      "content": "上载资产",
      "pos": [
        6462,
        6466
      ]
    },
    {
      "content": "加载预设配置（请注意：以下代码假定使用上述预设。）",
      "pos": [
        6469,
        6494
      ]
    },
    {
      "content": "创建作业",
      "pos": [
        6497,
        6501
      ]
    },
    {
      "content": "获取对媒体服务编码器的引用",
      "pos": [
        6504,
        6517
      ]
    },
    {
      "content": "创建一个任务，该任务指定输入资产、预设配置、媒体编码器和输出资产的集合",
      "pos": [
        6520,
        6555
      ]
    },
    {
      "content": "提交作业",
      "pos": [
        6558,
        6562
      ]
    },
    {
      "content": "以下代码片段演示如何执行这些步骤：",
      "pos": [
        6564,
        6581
      ]
    },
    {
      "pos": [
        8670,
        8839
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>为简单起见，此代码段按顺序加载每个资产。在生产环境中将批量加载资产。有关批量上载多个资产的详细信息，请参阅<bpt id=\"p1\">[</bpt>使用用于 .NET 的媒体服务 SDK 批量引入资产<ept id=\"p1\">](/documentation/articles/media-services-dotnet-upload-files#ingest_in_bulk)</ept>。"
    },
    {
      "pos": [
        8841,
        8937
      ],
      "content": "有关完整的示例代码，请参阅<bpt id=\"p1\">[</bpt>使用媒体服务编码器创建叠加<ept id=\"p1\">](https://code.msdn.microsoft.com/Creating-Audio-and-Video-c2942c47)</ept>。"
    },
    {
      "content": "错误条件",
      "pos": [
        8942,
        8946
      ]
    },
    {
      "content": "当编辑预设字符串时，必须确保以下各项：",
      "pos": [
        8948,
        8967
      ]
    },
    {
      "content": "对于视频/图像叠加，叠加矩形必须完全适应源视频的尺寸",
      "pos": [
        8971,
        8997
      ]
    },
    {
      "content": "叠加的开始和结束时间应在源视频的时间线内",
      "pos": [
        9000,
        9020
      ]
    },
    {
      "content": "如果预设 XML 包含对 ?OverlayFileName=”%n%” 的引用，那么任务的 InputAssets 集合应包含至少 n+1 个资产",
      "pos": [
        9023,
        9096
      ]
    },
    {
      "content": "拼结视频段",
      "pos": [
        9102,
        9107
      ]
    },
    {
      "pos": [
        9109,
        9332
      ],
      "content": "媒体服务编码器支持将一组视频拼结在一起。视频可首尾相连地拼结在一起，也可以指定一个或两个视频要拼结到一起的部分。拼结生成的单个输出资产，其中包含输入资产种的指定视频。要拼结的视频可包含在多个资产或单个资产中。可通过传递到编码器的预设 XML 对拼结进行控制。有关预设架构的完整说明，请参阅 <bpt id=\"p1\">[</bpt>Azure 媒体编码器架构<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/azure/dn584702.aspx)</ept>。"
    },
    {
      "content": "使用媒体服务编码器进行拼结",
      "pos": [
        9337,
        9350
      ]
    },
    {
      "content": "在",
      "pos": [
        9352,
        9353
      ]
    },
    {
      "content": "元素内对拼结进行控制，如下面的预设所示：",
      "pos": [
        9364,
        9384
      ]
    },
    {
      "content": "对于要拼结的每个视频，将向",
      "pos": [
        10407,
        10420
      ]
    },
    {
      "content": "元素添加",
      "pos": [
        10429,
        10433
      ]
    },
    {
      "content": "元素。每个",
      "pos": [
        10441,
        10446
      ]
    },
    {
      "content": "元素包含一个",
      "pos": [
        10454,
        10460
      ]
    },
    {
      "content": "元素。每个",
      "pos": [
        10467,
        10472
      ]
    },
    {
      "content": "元素包含一个或多个",
      "pos": [
        10479,
        10488
      ]
    },
    {
      "content": "元素，后者通过指定开始时间和结束时间来指定拼结到输出资产中的视频数目。",
      "pos": [
        10494,
        10529
      ]
    },
    {
      "content": "元素引用其作用于的资产。引用的格式取决于要拼结的视频是位于不同资产中还是位于单个资产中。如果想要拼结整个视频，只需省略",
      "pos": [
        10537,
        10596
      ]
    },
    {
      "content": "元素。",
      "pos": [
        10603,
        10606
      ]
    },
    {
      "content": "拼结多个资产中的视频",
      "pos": [
        10611,
        10621
      ]
    },
    {
      "content": "拼结多个资产中的视频时，将从零开始的索引用于",
      "pos": [
        10623,
        10645
      ]
    },
    {
      "content": "元素的 MediaFile 特性，以标识",
      "pos": [
        10653,
        10673
      ]
    },
    {
      "content": "元素对应的资产。当未指定零索引时，未指定 MediaFile 特性的",
      "pos": [
        10681,
        10715
      ]
    },
    {
      "content": "元素将引用首个输入资产。所有其他",
      "pos": [
        10723,
        10739
      ]
    },
    {
      "content": "元素都必须通过使用 %n% 语法（其中 n 是输入资产从零开始的索引）来指定所引用输入资产从零开始的索引。在前面的示例中，第一个",
      "pos": [
        10747,
        10811
      ]
    },
    {
      "content": "元素指定第一个输入资产，第二个",
      "pos": [
        10819,
        10834
      ]
    },
    {
      "content": "元素指定第二个输入资产，依此类推。不要求按顺序引用输入资产，例如：",
      "pos": [
        10842,
        10875
      ]
    },
    {
      "content": "此示例将第二个、第一个和第三个输入资产的某些部分拼结在一起。请注意，由于每个视频由从零开始的索引引用，因此可能会将两个具有相同名称的视频拼结在一起。创建预设文件后必须执行以下操作：",
      "pos": [
        11784,
        11874
      ]
    },
    {
      "content": "上载资产",
      "pos": [
        11879,
        11883
      ]
    },
    {
      "content": "加载预设配置",
      "pos": [
        11886,
        11892
      ]
    },
    {
      "content": "创建作业",
      "pos": [
        11895,
        11899
      ]
    },
    {
      "content": "获取对媒体服务编码器的引用",
      "pos": [
        11902,
        11915
      ]
    },
    {
      "content": "创建一个任务，该任务指定输入资产、预设配置、媒体编码器和输出资产",
      "pos": [
        11918,
        11950
      ]
    },
    {
      "content": "提交作业",
      "pos": [
        11953,
        11957
      ]
    },
    {
      "content": "以下代码片段演示如何执行这些步骤：",
      "pos": [
        11959,
        11976
      ]
    },
    {
      "pos": [
        13994,
        14243
      ],
      "content": "为简单起见，此代码段按顺序加载每个资产。在生产环境中将批量加载资产。有关批量上载多个资产的详细信息，请参阅<bpt id=\"p1\">[</bpt>使用用于 .NET 的媒体服务 SDK 批量引入资产<ept id=\"p1\">](/documentation/articles/media-services-dotnet-upload-files#ingest_in_bulk)</ept>。有关完整的示例代码，请参阅<bpt id=\"p2\">[</bpt>使用媒体服务编码器进行拼结<ept id=\"p2\">](https://code.msdn.microsoft.com/Stitching-with-Media-8fd5f203)</ept>。"
    },
    {
      "content": "拼结单个资产中的视频",
      "pos": [
        14248,
        14258
      ]
    },
    {
      "content": "拼结单个资产中的视频时，每个视频必须具有唯一的名称。视频通过使用文件名作为特性值的 MediaFile 特性指定。例如：",
      "pos": [
        14260,
        14320
      ]
    },
    {
      "content": "此预设将 video1.mp4、video2.wmv 和 video3.wmv 的某些部分拼结为输出资产。",
      "pos": [
        15268,
        15321
      ]
    },
    {
      "content": "创建作业和任务与拼结多个资产中的视频相同，只需上载单个资产，如以下代码所示：",
      "pos": [
        15322,
        15360
      ]
    },
    {
      "content": "对主要包含语音的演示文稿或音频流进行编码",
      "pos": [
        16773,
        16793
      ]
    },
    {
      "content": "当对其音轨主要包含语音的视频进行编码时，默认编码器预设可能会导致背景噪音在已编码资产中放大。此行为是由于将 NormalizeAudio 特性设置为 true 所致。",
      "pos": [
        16796,
        16879
      ]
    },
    {
      "content": "对主要包含语音的演示文稿进行编码",
      "pos": [
        16884,
        16900
      ]
    },
    {
      "content": "若要防止背景噪音被放大，请执行以下操作：",
      "pos": [
        16902,
        16922
      ]
    },
    {
      "content": "将正在使用的编码器预设复制到 XML 文件中。可在 Azure 媒体编码器架构中找到编码器预设",
      "pos": [
        16927,
        16974
      ]
    },
    {
      "content": "删除 NormalizeAudio 特性，它位于",
      "pos": [
        16978,
        17002
      ]
    },
    {
      "content": "元素下的预设文件顶部附近：",
      "pos": [
        17015,
        17028
      ]
    },
    {
      "content": "将已修改的预设文件保存到本地硬盘驱动器，然后通过诸如以下形式的代码使用自定义预设进行编码：",
      "pos": [
        17224,
        17269
      ]
    },
    {
      "content": "另请参阅",
      "pos": [
        18947,
        18951
      ]
    },
    {
      "content": "Azure 媒体编码器 XML 架构",
      "pos": [
        18954,
        18972
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"通过自定义任务预设操作编码任务\" \n    description=\"Azure 媒体服务编码器使你能够将自定义预设文件传递给 Azure 媒体编码器。本主题演示如何自定义预设文件以完成以下任务：将图像叠加到现有视频、控制编码器生成的输出文件名、拼结视频。\" \n    services=\"media-services\" \n    documentationCenter=\"\" \n    authors=\"juliako\" \n    manager=\"dwrede\" \n    editor=\"\"/>\n\n<tags\n    ms.service=\"media-services\"\n    ms.date=\"12/05/2015\"\n    wacn.date=\"01/14/2016\"/>\n\n#通过自定义任务预设操作编码任务 \n\nAzure 媒体服务编码器使你能够将自定义预设文件传递给 Azure 媒体编码器。本主题演示如何自定义预设文件以完成以下任务：\n\n- 将图像叠加到现有视频、 \n- 控制编码器生成的输出文件名、 \n- 拼结视频、\n- 对主要包含语音的演示文稿进行编码。\n\n##控制 Azure 媒体编码器输出文件名 \n<a name=\"controlling-azure-media-encoder-output-file-names\"></a>\n\n默认情况下，Azure 媒体编码器通过将输入资产和编码过程的各种特性组合在一起来创建输出文件名。如下文所述，使用宏来标识每种特性。\n\n以下是可用于输出文件命名的宏的完整列表：\n音频比特率 - 对音频进行编码时使用的比特率，单位为 kbps\n\n- 音频编解码器 - 用于对音频进行编码的编解码器，有效值为 AAC、WMA 和 DDP\n- 通道计数 - 编码的音频通道数，有效值为：1、2 或 6\n- 默认扩展名 – 默认的文件扩展名 \n- 语言 - BCP-47 语言代码，表示音频中使用的语言。当前默认为“und”。 \n- 原始文件名 - 上载到 Azure 存储空间的文件的名称\n- StreamId – 由预设文件中 <StreamInfo> 元素的 streamID 特性定义的流 ID \n- 视频编解码器 - 用于编码的编解码器，有效值为 H264 和 VC1\n- 视频比特率 - 对视频进行编码时使用的比特率，单位为 kbps\n\n这些宏可按任意排列组合，从而控制媒体服务编码器生成的文件名。例如，默认命名约定为：\n\n    {Original File Name}_{Video Codec}{Video Bitrate}{Audio Codec}{Language}{Channel Count}{Audio Bitrate}.{Default Extension}\n\n使用 [Preset](https://msdn.microsoft.com/zh-cn/library/azure/dn554334.aspx) 元素的 DefaultMediaOutputFileName 属性来指定文件命名约定。例如：\n\n    <Preset DefaultMediaOutputFileName=\"{Original file name}{StreamId}_LongOutputFileName{Bit Rate}{Video Codec}{Video Bitrate}{Audio Codec}{Audio Bitrate}{Language}{Channel Count}.{Default extension}\"\n      Version=\"5.0\">\n    <MediaFile …>\n       <OutputFormat>\n          <MP4OutputFormat StreamCompatibility=\"Standard\">\n             <VideoProfile>\n                <MainH264VideoProfile … >\n                   <Streams  AutoSize=\"False\"\n                             FreezeSort=\"False\">\n                      <StreamInfo StreamId=\"1\"\n                                  Size=\"1280, 720\">\n                         <Bitrate>\n                           <ConstantBitrate Bitrate=\"3400\"\n                                            IsTwoPass=\"False\"\n                                            BufferWindow=\"00:00:05\" />\n                         </Bitrate>\n                       </StreamInfo>\n                      </Streams>\n                   </MainH264VideoProfile>\n                </VideoProfile>\n             </MP4OutputFormat>\n       </OutputFormat>\n    </MediaFile>\n\n编码器将在每个宏之间插入下划线，例如，上面的配置将会产生类似于以下形式的文件名：MyVideo\\_H264\\_4500kpbs\\_AAC\\_und\\_ch2\\_128kbps.mp4。\n\n\n##创建叠加\n<a name=\"creating-overlays\"></a>\n\nAzure 媒体服务编码器可让你将图像（jpg、bmp、gif、tif）、视频或音轨（*.wma、*.mp3、*.wav）叠加到现有视频。此功能类似于 Expression Encoder 4 (Service Pack 2) 的功能。\n\n###使用媒体服务编码器进行叠加\n\n可以指定叠加出现的时间、呈现叠加的持续时间、叠加出现在屏幕上的位置（对于图像/视频叠加）。还可使叠加层淡入和/或淡出。要叠加的音频/视频文件可包含在多个资产或单个资产中。可通过传递到编码器的预设 XML 对叠加进行控制。有关预设架构的完整说明，请参阅“Azure 媒体编码器架构”。如下面的预设代码片段所示，将在 <MediaFile> 元素中指定叠加：\n\n    <MediaFile\n        ...\n        OverlayFileName=\"%1%\"\n        OverlayRect=\"257, 144, 255, 144\"\n        OverlayOpacity=\"0.9\"\n        OverlayFadeInDuration=\"00:00:02\"\n        OverlayFadeOutDuration=\"00:00:02\"\n        OverlayLayoutMode=\"Custom\"\n        OverlayStartTime=\"00:00:05\"\n        OverlayEndTime=\"00:00:10.2120000\"\n    \n        AudioOverlayFileName=\"%2%\"\n        AudioOverlayLoop=\"True\"\n        AudioOverlayLoopingGap=\"00:00:00\"\n        AudioOverlayLayoutMode=\"WholeSequence\"\n        AudioOverlayGainLevel=\"2.2\"\n        AudioOverlayFadeInDuration=\"00:00:00\"\n        AudioOverlayFadeOutDuration=\"00:00:00\">\n        ...\n    </MediaFile>\n\n###视频或图像叠加的预设\n\n叠加可源自单个或多个资产。当使用多个资产创建视频叠加时，通过使用 %n% 语法（其中 n 是编码任务输入资产从零开始的索引）在 OverlayFileName 特性中指定叠加文件名。当使用单个资产创建视频叠加时，直接在 OverlayFileName 特性中指定叠加文件名，如下面的预设代码片段所示：\n\n示例 1：\n\n    <!-- Multiple Assets -->\n    <MediaFile\n        ...\n        OverlayFileName=\"%1%\"\n        OverlayRect=\"257, 144, 255, 144\"\n        OverlayOpacity=\"0.9\"\n        OverlayFadeInDuration=\"00:00:02\"\n        OverlayFadeOutDuration=\"00:00:02\"\n        OverlayLayoutMode=\"Custom\"\n        OverlayStartTime=\"00:00:05\"\n        OverlayEndTime=\"00:00:10.2120000\">\n\n示例 2：\n\n    <!-- Single Asset -->\n    <MediaFile\n        ...\n        OverlayFileName=\"videoOverlay.mp4\"\n        OverlayRect=\"257, 144, 255, 144\"\n        OverlayOpacity=\"0.9\"\n        OverlayFadeInDuration=\"00:00:02\"\n        OverlayFadeOutDuration=\"00:00:02\"\n        OverlayLayoutMode=\"Custom\"\n        OverlayStartTime=\"00:00:05\"\n        OverlayEndTime=\"00:00:10.2120000\">\n\n视频叠加的位置和大小由 OverlayRect 特性控制。将调整要叠加的内容的大小以适应此矩形。不透明度由 OverlayOpacity 特性控制。有效值为 0.0 – 1.0，其中 1.0 表示 100% 不透明。叠加将于 OverlayStartTime 特性所指定的时间显示，并将于 OverlayEndTime 特性所指定的时间结束。OverlayStartTime 和 OverlayEndTime 都应在源视频的时间线内。有关每个特定于叠加的特性的详细信息，请参阅“Azure 媒体编码器架构”。\n\n###音频叠加的预设\n\n音频叠加可以是任何支持的音频文件格式。有关受支持音频文件格式的完整列表，请参阅“媒体服务编码器支持的格式”。如下面的预设代码片段所示，也会在 <MediaFile> 元素中指定音频叠加：\n\n    <MediaFile\n        ...\n        AudioOverlayFileName=\"%1%\" <!-- or AudioOverlayFileName=”audioOverlay.mp3” for overlays from a single asset -->\n        AudioOverlayLoop=\"True\"\n        AudioOverlayLoopingGap=\"00:00:00\"\n        AudioOverlayLayoutMode=\"Custom\"\n        AudioOverlayStartTime=\"00:05:00\"\n        AudioOverlayEndTime=\"00:10:00\"\n        AudioOverlayGainLevel=\"2.2\"\n        AudioOverlayFadeInDuration=\"00:00:00\"\n        AudioOverlayFadeOutDuration=\"00:00:00\">\n\n当音频叠加内容存储在多个资产时，通过使用 %n% 语法（其中 n 是编码任务的输入资产集合的从零开始的索引）在 AudioOverlayFileName 特性中指定音频叠加文件名。对于存储在单个资产中的音频叠加内容，直接在 AudioOverlayFileName 特性中指定叠加文件名。AudioOverlayLayoutMode 确定呈现音频叠加的时间。当设置为“WholeSequence”时，音轨将在整个视频持续期间呈现。当设置为“自定义”时，由 AudioOverlayStartTime 和 AudioOverlayEndTime 特性确定音频叠加的开始和结束时间。OverlayStartTime 和 OverlayEndTime 都应在源视频的时间线内。有关所有音频叠加特性的详细信息，请参阅“Azure 媒体编码器架构”。如下面的预设代码片段所示，音频叠加可与视频叠加合并：\n    \n    <MediaFile\n        DeinterlaceMode=\"AutoPixelAdaptive\"\n        ResizeQuality=\"Super\"\n        AudioGainLevel=\"1\"\n        VideoResizeMode=\"Stretch\"\n        OverlayFileName=\"%1%\"\n        OverlayRect=\"257, 144, 255, 144\"\n        OverlayOpacity=\"0.9\"\n        OverlayFadeInDuration=\"00:00:02\"\n        OverlayFadeOutDuration=\"00:00:02\"\n        OverlayLayoutMode=\"Custom\"\n        OverlayStartTime=\"00:00:05\"\n        OverlayEndTime=\"00:00:10.2120000\"\n        AudioOverlayFileName=\"%2%\"\n        AudioOverlayLoop=\"True\"\n        AudioOverlayLoopingGap=\"00:00:00\"\n        AudioOverlayLayoutMode=\"Custom\"\n        AudioOverlayStartTime=\"00:05:00\"\n        AudioOverlayEndTime=\"00:10:00\"\n        AudioOverlayGainLevel=\"2.2\"\n        AudioOverlayFadeInDuration=\"00:00:00\"\n        AudioOverlayFadeOutDuration=\"00:00:00\">\n\n\n###提交具有叠加的任务\n\n创建预设文件后必须执行以下操作：\n\n- 上载资产\n- 加载预设配置（请注意：以下代码假定使用上述预设。）\n- 创建作业\n- 获取对媒体服务编码器的引用\n- 创建一个任务，该任务指定输入资产、预设配置、媒体编码器和输出资产的集合\n- 提交作业\n\n以下代码片段演示如何执行这些步骤：\n\n    static public void CreateOverlayJob()\n    {\n        // Create and cache the Media Services credentials in a static class variable.\n        _cachedCredentials = new MediaServicesCredentials(\n                        MediaServicesAccountName,\n                        MediaServicesAccountKey,\n                        _defaultScope,\n                        _chinaAcsBaseAddressUrl);\n\n        // Create the API server Uri\n        _apiServer = new Uri(_chinaApiServerUrl);\n\n        // Used the cached credentials to create CloudMediaContext.\n        _context = new CloudMediaContext(_apiServer, _cachedCredentials);\n\n\n        // Upload assets to overlay\n        IAsset inputAsset1 = CreateAssetAndUploadSingleFile(AssetCreationOptions.None, video1.mp4); // this is the input mezzanine\n        IAsset inputAsset2 = CreateAssetAndUploadSingleFile(AssetCreationOptions.None, video2.wmv);// this will be used as a video overlay\n        IAsset inputAsset3 = CreateAssetAndUploadSingleFile(AssetCreationOptions.None, video3.wmv); // this will be used as an audio overlay\n        \n        // Load the preset configuration\n        string presetFileName = \"OverlayPreset.xml\";\n        string configuration = File.ReadAllText(presetFileName);\n        \n        // Create a job\n        IJob job = _context.Jobs.Create(\"A AME overlay job, using \" + presetFileName);\n                 \n        // Get a reference to the media services encoder   \n        IMediaProcessor processor = GetLatestMediaProcessorByName(\"Azure Media Encoder\");\n            \n        // Create a task    \n        ITask task = job.Tasks.AddNew(\"Encode Task for overlay, using \" + presetFileName, processor, configuration, TaskOptions.None);\n        \n        // Add the input assets\n        task.InputAssets.Add(inputAsset1);\n        task.InputAssets.Add(inputAsset2);\n        task.InputAssets.Add(inputAsset3);\n        \n        // Add the output asset\n        task.OutputAssets.AddNew(\"Result of an overlay job, using \" + presetFileName, AssetCreationOptions.None);\n        \n        // Submit the job\n        job.Submit();\n    }\n\n\n\n>[AZURE.NOTE]为简单起见，此代码段按顺序加载每个资产。在生产环境中将批量加载资产。有关批量上载多个资产的详细信息，请参阅[使用用于 .NET 的媒体服务 SDK 批量引入资产](/documentation/articles/media-services-dotnet-upload-files#ingest_in_bulk)。\n\n有关完整的示例代码，请参阅[使用媒体服务编码器创建叠加](https://code.msdn.microsoft.com/Creating-Audio-and-Video-c2942c47)。\n\n###错误条件\n\n当编辑预设字符串时，必须确保以下各项：\n\n- 对于视频/图像叠加，叠加矩形必须完全适应源视频的尺寸\n- 叠加的开始和结束时间应在源视频的时间线内\n- 如果预设 XML 包含对 ?OverlayFileName=”%n%” 的引用，那么任务的 InputAssets 集合应包含至少 n+1 个资产\n\n\n\n##拼结视频段\n\n媒体服务编码器支持将一组视频拼结在一起。视频可首尾相连地拼结在一起，也可以指定一个或两个视频要拼结到一起的部分。拼结生成的单个输出资产，其中包含输入资产种的指定视频。要拼结的视频可包含在多个资产或单个资产中。可通过传递到编码器的预设 XML 对拼结进行控制。有关预设架构的完整说明，请参阅 [Azure 媒体编码器架构](https://msdn.microsoft.com/zh-cn/library/azure/dn584702.aspx)。\n\n###使用媒体服务编码器进行拼结\n\n在<MediaFile>元素内对拼结进行控制，如下面的预设所示：\n    \n    <MediaFile\n        DeinterlaceMode=\"AutoPixelAdaptive\"\n        ResizeQuality=\"Super\"\n        AudioGainLevel=\"1\"\n        VideoResizeMode=\"Stretch\">\n        <Sources>\n          <Source\n            AudioStreamIndex=\"0\">\n            <Clips>\n              <Clip\n                StartTime=\"00:00:00\"\n                EndTime=\"00:00:05\" />\n            </Clips>\n          </Source>\n          <Source\n            ResizeMode=\"Letterbox\"\n            ApplyCrop=\"False\"\n            AudioStreamIndex=\"0\"\n            MediaFile=\"%1%\">\n            <Clips>\n              <Clip\n                StartTime=\"00:00:00\"\n                EndTime=\"00:00:05\" />\n            </Clips>\n          </Source>\n          <Source\n            ResizeMode=\"Letterbox\"\n            ApplyCrop=\"False\"\n            AudioStreamIndex=\"0\"\n            MediaFile=\"%2%\">\n            <Clips>\n              <Clip\n                StartTime=\"00:00:00\"\n                EndTime=\"00:00:05\" />\n            </Clips>\n          </Source>\n         </Sources>\n    </MediaFile>\n\n对于要拼结的每个视频，将向<Sources>元素添加<Source>元素。每个<Source>元素包含一个<Clips>元素。每个<Clips>元素包含一个或多个<Clip>元素，后者通过指定开始时间和结束时间来指定拼结到输出资产中的视频数目。<Source>元素引用其作用于的资产。引用的格式取决于要拼结的视频是位于不同资产中还是位于单个资产中。如果想要拼结整个视频，只需省略<Clips>元素。\n\n###拼结多个资产中的视频\n\n拼结多个资产中的视频时，将从零开始的索引用于<Source>元素的 MediaFile 特性，以标识<Source>元素对应的资产。当未指定零索引时，未指定 MediaFile 特性的<Source>元素将引用首个输入资产。所有其他<Source>元素都必须通过使用 %n% 语法（其中 n 是输入资产从零开始的索引）来指定所引用输入资产从零开始的索引。在前面的示例中，第一个<Source>元素指定第一个输入资产，第二个<Source>元素指定第二个输入资产，依此类推。不要求按顺序引用输入资产，例如：\n    \n    <MediaFile\n        DeinterlaceMode=\"AutoPixelAdaptive\"\n        ResizeQuality=\"Super\"\n        AudioGainLevel=\"1\"\n        VideoResizeMode=\"Stretch\">\n        <Sources>\n          <Source\n            AudioStreamIndex=\"0\"\n            MediaFile=\"%1%\">\n            <Clips>\n              <Clip EndTime=\"00:00:05\" \n                    StartTime=\"00:00:00\" />\n            </Clips>\n                      \n            </Source>\n          <Source\n           AudioStreamIndex=\"0\">\n            <Clips>\n              <Clip\n                StartTime=\"00:00:00\"\n                EndTime=\"00:00:05\" />\n            </Clips>\n          </Source>\n          <Source\n              AudioStreamIndex=\"0\"\n             MediaFile=\"%2%\">\n            <Clips>\n              <Clip\n                StartTime=\"00:00:00\"\n                EndTime=\"00:00:05\" />\n            </Clips>\n          </Source>\n         </Sources>\n    </MediaFile>\n\n此示例将第二个、第一个和第三个输入资产的某些部分拼结在一起。请注意，由于每个视频由从零开始的索引引用，因此可能会将两个具有相同名称的视频拼结在一起。创建预设文件后必须执行以下操作：\n \n- 上载资产\n- 加载预设配置\n- 创建作业\n- 获取对媒体服务编码器的引用\n- 创建一个任务，该任务指定输入资产、预设配置、媒体编码器和输出资产\n- 提交作业\n\n以下代码片段演示如何执行这些步骤：\n    \n    static public void StitchWithMultipleAssets()\n    {\n        // Create and cache the Media Services credentials in a static class variable.\n        _cachedCredentials = new MediaServicesCredentials(\n                        MediaServicesAccountName,\n                        MediaServicesAccountKey,\n                        _defaultScope,\n                        _chinaAcsBaseAddressUrl);\n\n        // Create the API server Uri\n        _apiServer = new Uri(_chinaApiServerUrl);\n\n        // Used the cached credentials to create CloudMediaContext.\n        _context = new CloudMediaContext(_apiServer, _cachedCredentials);\n        \n        // Upload assets to stitch\n        IAsset inputAsset1 = CreateAssetAndUploadSingleFile(AssetCreationOptions.None, video1.mp4);\n        IAsset inputAsset2 = CreateAssetAndUploadSingleFile(AssetCreationOptions.None, video2.wmv);\n        IAsset inputAsset3 = CreateAssetAndUploadSingleFile(AssetCreationOptions.None, video3.wmv);\n        \n        // Load the preset configuration\n        string presetFileName = \"StitchingWithMultipleAssets.xml\";\n        string configuration = File.ReadAllText(presetFileName);\n        \n        // Create a job\n        IJob job = _context.Jobs.Create(\"A AME stitching job, using \" + presetFileName);\n                 \n        // Get a reference to the media services encoder   \n        IMediaProcessor processor = GetLatestMediaProcessorByName(\"Azure Media Encoder\");\n            \n        // Create a task    \n        ITask task = job.Tasks.AddNew(\"Encode Task for stitching, using \" + presetFileName, processor, configuration, TaskOptions.None);\n        \n        // Add the input assets\n        task.InputAssets.Add(inputAsset1);\n        task.InputAssets.Add(inputAsset2);\n        task.InputAssets.Add(inputAsset3);\n        \n        // Add the output asset\n        task.OutputAssets.AddNew(\"Result of a stitching job, using \" + presetFileName, AssetCreationOptions.None);\n        \n        // Submit the job\n        job.Submit();\n        } \n\n\n为简单起见，此代码段按顺序加载每个资产。在生产环境中将批量加载资产。有关批量上载多个资产的详细信息，请参阅[使用用于 .NET 的媒体服务 SDK 批量引入资产](/documentation/articles/media-services-dotnet-upload-files#ingest_in_bulk)。有关完整的示例代码，请参阅[使用媒体服务编码器进行拼结](https://code.msdn.microsoft.com/Stitching-with-Media-8fd5f203)。\n\n###拼结单个资产中的视频\n\n拼结单个资产中的视频时，每个视频必须具有唯一的名称。视频通过使用文件名作为特性值的 MediaFile 特性指定。例如：\n    \n    <MediaFile\n        DeinterlaceMode=\"AutoPixelAdaptive\"\n        ResizeQuality=\"Super\"\n        AudioGainLevel=\"1\"\n        VideoResizeMode=\"Stretch\">\n        <Sources>\n          <Source\n            AudioStreamIndex=\"0\"\n            MediaFile=\"video1.mp4\">\n            <Clips>\n              <Clip\n                StartTime=\"00:00:00\"\n                EndTime=\"00:00:05\" />\n            </Clips>\n          </Source>\n          <Source\n           AudioStreamIndex=\"0\"\n           MediaFile=\"video2.wmv\">\n    \n            <Clips>\n              <Clip\n                StartTime=\"00:00:00\"\n                EndTime=\"00:00:05\" />\n            </Clips>\n          </Source>\n          <Source\n              AudioStreamIndex=\"0\"\n             MediaFile=\"video3.wmv\">\n            <Clips>\n              <Clip\n                StartTime=\"00:00:00\"\n                EndTime=\"00:00:05\" />\n            </Clips>\n          </Source>\n         </Sources>\n    </MediaFile>\n\n此预设将 video1.mp4、video2.wmv 和 video3.wmv 的某些部分拼结为输出资产。\n创建作业和任务与拼结多个资产中的视频相同，只需上载单个资产，如以下代码所示：\n\n    // Creates a stitching job that uses a single asset \n    static public void StitchWithASingleAsset()\n    {\n        string presetFileName = \"StitchingWithASingleAsset.xml\";\n        string configuration = File.ReadAllText(presetFileName);\n\n        // Create and cache the Media Services credentials in a static class variable.\n        _cachedCredentials = new MediaServicesCredentials(\n                        MediaServicesAccountName,\n                        MediaServicesAccountKey,\n                        _defaultScope,\n                        _chinaAcsBaseAddressUrl);\n\n        // Create the API server Uri\n        _apiServer = new Uri(_chinaApiServerUrl);\n\n        // Used the cached credentials to create CloudMediaContext.\n        _context = new CloudMediaContext(_apiServer, _cachedCredentials);\n\n        IMediaProcessor processor = GetLatestMediaProcessorByName(\"Azure Media Encoder\");\n        IJob job = _context.Jobs.Create(\"A AME stitching job, using \" + presetFileName);\n        IAsset asset = CreateAssetAndUploadMultipleFiles(AssetCreationOptions.None, _stitchingFiles);\n\n        ITask task = job.Tasks.AddNew(\"Encode Task for stitching, using \" + presetFileName, processor, configuration, TaskOptions.None);\n        task.InputAssets.Add(asset);\n        task.OutputAssets.AddNew(\"Result of a stitching job, using \" + presetFileName, AssetCreationOptions.None);\n\n        job.Submit();\n    }\n\n##对主要包含语音的演示文稿或音频流进行编码\n \n当对其音轨主要包含语音的视频进行编码时，默认编码器预设可能会导致背景噪音在已编码资产中放大。此行为是由于将 NormalizeAudio 特性设置为 true 所致。\n\n###对主要包含语音的演示文稿进行编码\n\n若要防止背景噪音被放大，请执行以下操作：\n\n1. 将正在使用的编码器预设复制到 XML 文件中。可在 Azure 媒体编码器架构中找到编码器预设\n1. 删除 NormalizeAudio 特性，它位于 <MediaFile> 元素下的预设文件顶部附近：\n    \n    <MediaFile\n         DeinterlaceMode=\"AutoPixelAdaptive\"\n         ResizeQuality=\"Super\"\n         NormalizeAudio=\"True\"\n         AudioGainLevel=\"1\"\n         VideoResizeMode=\"Stretch\">\n\n1. 将已修改的预设文件保存到本地硬盘驱动器，然后通过诸如以下形式的代码使用自定义预设进行编码：\n        \n        // Upload file and create asset\n        IAsset asset = CreateAssetAndUploadSingleFile(AssetCreationOptions.None, @\"C:\\TEMP\\Original.mp4\");\n         \n        string inputPresetFile = @\"C:\\TEMP\\H264 Broadband 720p NoAudioNorm.xml\";\n        string presetName = Path.GetFileNameWithoutExtension(inputPresetFile);\n         \n        IJob job = _context.Jobs.Create(\"Encode Job for \" + asset.Name + \", encoded using \" +  presetName);\n        \n        Console.WriteLine(\"Encode Job for \" + asset.Name + \", encoded using \" + presetName);\n        \n        // Get a media processor reference, and pass to it the name of the processor to use for the specific task.\n        IMediaProcessor processor = GetLatestMediaProcessorByName(\"Azure Media Encoder\");\n        Console.WriteLine(\"Got MP \" + processor.Name + \", ID : \" + processor.Id + \", version: \" + processor.Version);\n         \n        // Read the configuration data into a string. \n        string configuration = File.ReadAllText(inputPresetFile);\n         \n        // Create a task with the encoding details, using a string preset.\n        ITask task = job.Tasks.AddNew(\"Encode Task for \" + asset.Name + \", encoded using \" + presetName, processor, configuration,\n                        Microsoft.WindowsAzure.MediaServices.Client.TaskOptions.None);\n         \n        // Specify the input asset to be encoded.\n        task.InputAssets.Add(asset);\n         \n        // Add an output asset to contain the results of the job.\n        task.OutputAssets.AddNew(\"Output asset for \" + asset.Name + \", encoded using \" + presetName, AssetCreationOptions.None);\n         \n        // Launch the job. \n        job.Submit();\n\n##另请参阅\n\n[Azure 媒体编码器 XML 架构](https://msdn.microsoft.com/zh-cn/library/azure/dn584702.aspx)\n\n<!---HONumber=74-->"
}