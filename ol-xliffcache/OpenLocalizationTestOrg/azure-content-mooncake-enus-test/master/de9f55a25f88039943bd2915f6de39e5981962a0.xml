{
  "nodes": [
    {
      "content": "在 Azure 上部署自己的私有 Docker 注册表 | Azure",
      "pos": [
        26,
        61
      ]
    },
    {
      "content": "介绍如何使用 Docker 注册表在 Azure Blob 存储服务上托管你的容器映像。",
      "pos": [
        78,
        122
      ]
    },
    {
      "content": "在 Azure 上部署自己的私有 Docker 注册表",
      "pos": [
        411,
        438
      ]
    },
    {
      "pos": [
        440,
        518
      ],
      "content": "[AZURE.INCLUDE <bpt id=\"p1\">[</bpt>了解部署模型<ept id=\"p1\">](../includes/learn-about-deployment-models-include.md)</ept>]"
    },
    {
      "content": "本文档描述什么是 Docker 私有注册表，并说明如何使用 Azure Blob 存储将 Docker 注册表 2.0 容器映像部署到 Azure 上的 Docker 私有注册表。",
      "pos": [
        521,
        611
      ]
    },
    {
      "content": "本文档假设：",
      "pos": [
        613,
        619
      ]
    },
    {
      "pos": [
        624,
        700
      ],
      "content": "你知道如何使用 Docker 并具有要存储的 Docker 映像。（你不知道？ <bpt id=\"p1\">[</bpt>了解 Docker<ept id=\"p1\">](https://www.docker.com)</ept>）"
    },
    {
      "content": "什么是私有 Docker 注册表？",
      "pos": [
        706,
        723
      ]
    },
    {
      "content": "若要将容器化应用程序传送到云，你需要构建 Docker 容器映像，并将其存储到某个位置，供自己和他人使用。",
      "pos": [
        725,
        778
      ]
    },
    {
      "pos": [
        780,
        897
      ],
      "content": "创建容器映像并将其传送到云的过程十分轻松，但要可靠地存储生成的映像则是个难题。因此，Docker 提供了一个称为 <bpt id=\"p1\">[</bpt>Docker Hub<ept id=\"p1\">][docker-hub]</ept> 的集中式服务，可将容器映像存储在云中，并让你随时使用这些映像创建容器。"
    },
    {
      "pos": [
        899,
        1096
      ],
      "content": "尽管 <bpt id=\"p1\">[</bpt>Docker Hub<ept id=\"p1\">][docker-hub]</ept> 是存储私有应用程序容器映像的付费服务，但 Docker 仍会遵循开发人员的需求并提供开放源代码工具集，用于在防火墙后面或本地你自己的私有 Docker 注册表中存储映像，而无需使用公共 Internet。由于可以轻松保护 Azure Blob 存储，因此你可以快速地使用它在自行控制的 Azure 中创建并使用私有 Docker 注册表。"
    },
    {
      "content": "为何应在 Azure 上托管 Docker 注册表？",
      "pos": [
        1101,
        1127
      ]
    },
    {
      "content": "通过在 Azure 上托管 Docker 注册表实例并将映像存储在 Azure Blob 存储上，可以获得多种好处：",
      "pos": [
        1129,
        1187
      ]
    },
    {
      "pos": [
        1189,
        1259
      ],
      "content": "<bpt id=\"p1\">**</bpt>安全性：<ept id=\"p1\">**</ept>Docker 映像不会离开 Azure 数据中心，因此它们不会像使用 Docker Hub 时一样跨公共 Internet。"
    },
    {
      "pos": [
        1263,
        1331
      ],
      "content": "<bpt id=\"p1\">**</bpt>性能：<ept id=\"p1\">**</ept>Docker 映像存储在与应用程序相同的数据中心或区域内。这意味着，可以比 Docker Hub 更快、更可靠地提取映像。"
    },
    {
      "pos": [
        1333,
        1396
      ],
      "content": "<bpt id=\"p1\">**</bpt>可靠性：<ept id=\"p1\">**</ept>通过使用 Azure Blob 存储，你可以利用许多存储属性，例如高可用性、冗余、高级存储 (SSD) 等等。"
    },
    {
      "content": "将 Docker 注册表配置为使用 Azure Blob 存储",
      "pos": [
        1401,
        1432
      ]
    },
    {
      "pos": [
        1434,
        1486
      ],
      "content": "（继续下一步之前，建议你先阅读 <bpt id=\"p1\">[</bpt>Docker 注册表 2.0 文档<ept id=\"p1\">][registry-docs]</ept>。）"
    },
    {
      "pos": [
        1488,
        1537
      ],
      "content": "你可以使用两种不同的方式<bpt id=\"p1\">[</bpt>配置<ept id=\"p1\">][registry-config]</ept> Docker 注册表。你可以："
    },
    {
      "pos": [
        1542,
        1602
      ],
      "content": "使用 <ph id=\"ph1\">`config.yml`</ph> 文件。在此情况下，必须在 <ph id=\"ph2\">`registry`</ph> 映像顶部创建独立的 Docker 映像。"
    },
    {
      "content": "通过环境变量重写默认配置文件：在不创建和维护单独 Docker 映像的情况下完成操作。",
      "pos": [
        1606,
        1649
      ]
    },
    {
      "content": "为简单起见，本主题遵循选项 2，即使用环境变量。",
      "pos": [
        1651,
        1675
      ]
    },
    {
      "content": "若要运行 Docker 注册表实例：",
      "pos": [
        1677,
        1695
      ]
    },
    {
      "content": "使用 Azure 存储帐户存储映像",
      "pos": [
        1698,
        1715
      ]
    },
    {
      "content": "侦听虚拟机的通信端口 5000",
      "pos": [
        1719,
        1734
      ]
    },
    {
      "content": "未配置验证（不建议，请参阅以下注释）",
      "pos": [
        1738,
        1756
      ]
    },
    {
      "pos": [
        1758,
        1835
      ],
      "content": "需要在 bash 终端中运行以下 Docker 命令（将 <ph id=\"ph1\">`&lt;storage-account&gt;`</ph> 和 <ph id=\"ph2\">`&lt;storage-key&gt;`</ph> 和替换为你的凭据）："
    },
    {
      "pos": [
        2154,
        2210
      ],
      "content": "命令退出后，你可以通过在主机上运行 <ph id=\"ph1\">`docker ps`</ph> 命令，查看托管私有 Docker 注册表实例的容器："
    },
    {
      "pos": [
        2516,
        2631
      ],
      "content": "<ph id=\"ph1\">[AZURE.IMPORTANT]</ph>本文档未涵盖配置 Docker 注册表安全性的操作，如果打开连接到虚拟机终结点上注册表端口的端口，则默认情况下，任何未经身份验证的用户都可以访问注册表；如果使用上述部署命令，则可以访问负载平衡器。"
    },
    {
      "content": "请参阅[配置 Docker 注册表][registry-config]文档，以了解如何保护注册表实例和映像。",
      "pos": [
        2637,
        2691
      ]
    },
    {
      "content": "后续步骤",
      "pos": [
        2696,
        2700
      ]
    },
    {
      "pos": [
        2702,
        2750
      ],
      "content": "设置注册表之后，你可以充分地利用它。首先从 docker <bpt id=\"p1\">[</bpt><ept id=\"p1\">registry-docs]</ept> 开始。"
    }
  ],
  "content": "<properties \n  pageTitle=\"在 Azure 上部署自己的私有 Docker 注册表 | Azure\"\n  description=\"介绍如何使用 Docker 注册表在 Azure Blob 存储服务上托管你的容器映像。\"\n  services=\"virtual-machines\"\n  documentationCenter=\"virtual-machines\"\n  authors=\"ahmetalpbalkan\"\n  editor=\"squillace\"\n  manager=\"\" \n  tags=\"azure-service-management,azure-resource-manager\" />\n\n<tags\n  ms.service=\"virtual-machines\"\n  ms.date=\"06/17/2015\" \n  wacn.date=\"02/17/2016\" />\n\n# 在 Azure 上部署自己的私有 Docker 注册表\n\n[AZURE.INCLUDE [了解部署模型](../includes/learn-about-deployment-models-include.md)]\n\n\n本文档描述什么是 Docker 私有注册表，并说明如何使用 Azure Blob 存储将 Docker 注册表 2.0 容器映像部署到 Azure 上的 Docker 私有注册表。\n\n本文档假设：\n\n1. 你知道如何使用 Docker 并具有要存储的 Docker 映像。（你不知道？ [了解 Docker](https://www.docker.com)）\n\n\n## 什么是私有 Docker 注册表？\n\n若要将容器化应用程序传送到云，你需要构建 Docker 容器映像，并将其存储到某个位置，供自己和他人使用。\n\n创建容器映像并将其传送到云的过程十分轻松，但要可靠地存储生成的映像则是个难题。因此，Docker 提供了一个称为 [Docker Hub][docker-hub] 的集中式服务，可将容器映像存储在云中，并让你随时使用这些映像创建容器。\n\n尽管 [Docker Hub][docker-hub] 是存储私有应用程序容器映像的付费服务，但 Docker 仍会遵循开发人员的需求并提供开放源代码工具集，用于在防火墙后面或本地你自己的私有 Docker 注册表中存储映像，而无需使用公共 Internet。由于可以轻松保护 Azure Blob 存储，因此你可以快速地使用它在自行控制的 Azure 中创建并使用私有 Docker 注册表。\n\n## 为何应在 Azure 上托管 Docker 注册表？\n\n通过在 Azure 上托管 Docker 注册表实例并将映像存储在 Azure Blob 存储上，可以获得多种好处：\n\n**安全性：**Docker 映像不会离开 Azure 数据中心，因此它们不会像使用 Docker Hub 时一样跨公共 Internet。\n  \n**性能：**Docker 映像存储在与应用程序相同的数据中心或区域内。这意味着，可以比 Docker Hub 更快、更可靠地提取映像。\n\n**可靠性：**通过使用 Azure Blob 存储，你可以利用许多存储属性，例如高可用性、冗余、高级存储 (SSD) 等等。\n\n## 将 Docker 注册表配置为使用 Azure Blob 存储\n\n（继续下一步之前，建议你先阅读 [Docker 注册表 2.0 文档][registry-docs]。）\n\n你可以使用两种不同的方式[配置][registry-config] Docker 注册表。你可以：\n\n1. 使用 `config.yml` 文件。在此情况下，必须在 `registry` 映像顶部创建独立的 Docker 映像。\n2. 通过环境变量重写默认配置文件：在不创建和维护单独 Docker 映像的情况下完成操作。\n\n为简单起见，本主题遵循选项 2，即使用环境变量。\n\n若要运行 Docker 注册表实例：\n* 使用 Azure 存储帐户存储映像 \n* 侦听虚拟机的通信端口 5000 \n* 未配置验证（不建议，请参阅以下注释）\n\n需要在 bash 终端中运行以下 Docker 命令（将 `<storage-account>` 和 `<storage-key>` 和替换为你的凭据）：\n\n\n    $ docker run -d -p 5000:5000 \\\n         -e REGISTRY_STORAGE=azure \\\n         -e REGISTRY_STORAGE_AZURE_ACCOUNTNAME=\"<storage-account>\" \\\n         -e REGISTRY_STORAGE_AZURE_ACCOUNTKEY=\"<storage-key>\" \\\n         -e REGISTRY_STORAGE_AZURE_CONTAINER=\"registry\" \\\n         --name=registry \\\n         registry:2\n    \n\n命令退出后，你可以通过在主机上运行 `docker ps` 命令，查看托管私有 Docker 注册表实例的容器：\n\n\n    $ docker ps\n    CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS                    NAMES\n    3698ddfebc6f        registry:2          \"registry cmd/regist   2 seconds ago       Up 1 seconds        0.0.0.0:5000->5000/tcp   registry\n    \n\n> [AZURE.IMPORTANT]本文档未涵盖配置 Docker 注册表安全性的操作，如果打开连接到虚拟机终结点上注册表端口的端口，则默认情况下，任何未经身份验证的用户都可以访问注册表；如果使用上述部署命令，则可以访问负载平衡器。\n> <p>请参阅[配置 Docker 注册表][registry-config]文档，以了解如何保护注册表实例和映像。\n\n## 后续步骤\n\n设置注册表之后，你可以充分地利用它。首先从 docker [registry-docs] 开始。\n\n[docker-hub]: https://hub.docker.com/\n[registry]: https://github.com/docker/distribution\n[registry-docs]: http://docs.docker.com/registry/\n[registry-config]: http://docs.docker.com/registry/configuration/\n \n\n<!---HONumber=79-->"
}