{
  "nodes": [
    {
      "content": "在 Windows 应用商店应用中使用 Azure 存储 | Azure",
      "pos": [
        27,
        63
      ]
    },
    {
      "content": "了解如何创建使用 Azure Blob、队列、表或文件存储的 Windows 应用商店应用。",
      "pos": [
        83,
        129
      ]
    },
    {
      "content": "如何在 Windows 应用商店应用程序中使用 Azure 存储空间",
      "pos": [
        347,
        381
      ]
    },
    {
      "content": "概述",
      "pos": [
        386,
        388
      ]
    },
    {
      "content": "本指南演示了如何开始开发使用 Azure 存储空间的 Windows 应用商店应用程序。",
      "pos": [
        390,
        434
      ]
    },
    {
      "content": "下载所需工具",
      "pos": [
        439,
        445
      ]
    },
    {
      "pos": [
        449,
        568
      ],
      "content": "<bpt id=\"p1\">[</bpt>Visual Studio 2012<ept id=\"p1\">](http://msdn.microsoft.com/zh-cn/library/windows/apps/br211384)</ept> 便于生成、调试、本地化、包装和部署 Windows 应用商店应用程序。"
    },
    {
      "pos": [
        571,
        750
      ],
      "content": "<bpt id=\"p1\">[</bpt>适用于 Windows 运行时的 Azure 存储客户端库<ept id=\"p1\">](http://blogs.msdn.com/b/windowsazurestorage/archive/2012/11/05/windows-azure-storage-client-library-for-windows-runtime.aspx)</ept> 提供用于使用 Azure 存储空间的类库。"
    },
    {
      "pos": [
        753,
        924
      ],
      "content": "<bpt id=\"p1\">[</bpt>适用于 Windows 应用商店应用程序的 WCF 数据服务工具<ept id=\"p1\">](http://www.microsoft.com/zh-cn/download/details.aspx?id=30714)</ept>利用 Visual Studio 2012 及更高版本中对 Windows 应用商店应用程序的客户端 OData 支持，扩展了\"添加服务引用\"体验。"
    },
    {
      "content": "开发应用",
      "pos": [
        929,
        933
      ]
    },
    {
      "content": "做好准备",
      "pos": [
        939,
        943
      ]
    },
    {
      "content": "在 Visual Studio 2012 或更高版本中创建新的 Windows 应用商店应用程序项目：",
      "pos": [
        945,
        996
      ]
    },
    {
      "content": "store-apps-storage-vs-project",
      "pos": [
        1000,
        1029
      ]
    },
    {
      "content": "接下来，通过以下方法添加对 Azure 存储客户端库的引用：右键单击“引用”，单击“添加引用”，然后浏览到你已下载的针对 Windows 运行时的存储客户端库：",
      "pos": [
        1063,
        1143
      ]
    },
    {
      "content": "store-apps-storage-choose-library",
      "pos": [
        1147,
        1180
      ]
    },
    {
      "content": "将库用于 Blob 和队列服务",
      "pos": [
        1222,
        1237
      ]
    },
    {
      "pos": [
        1239,
        1310
      ],
      "content": "此时，你的应用已做好调用 Azure Blob 和队列服务的准备。添加以下 <bpt id=\"p1\">**</bpt>using<ept id=\"p1\">**</ept> 语句，以便可以直接引用 Azure 存储类型："
    },
    {
      "pos": [
        1402,
        1532
      ],
      "content": "接下来，向你的页面添加一个按钮。将以下代码添加到其 <bpt id=\"p1\">**</bpt>Click<ept id=\"p1\">**</ept> 事件，并使用 <bpt id=\"p2\">[</bpt>async 关键字<ept id=\"p2\">](http://msdn.microsoft.com/zh-cn/library/vstudio/hh156513.aspx)</ept>修改你的事件处理程序方法："
    },
    {
      "pos": [
        1836,
        1910
      ],
      "content": "此代码假定你有两个字符串变量： <bpt id=\"p1\">*</bpt>accountName<ept id=\"p1\">*</ept> 和 <bpt id=\"p2\">*</bpt>accountKey<ept id=\"p2\">*</ept> 。它们分别表示你的存储帐户名称以及与该帐户关联的帐户密钥。"
    },
    {
      "pos": [
        1912,
        1970
      ],
      "content": "构建并运行应用程序。单击该按钮将检查名为 <bpt id=\"p1\">*</bpt>container1<ept id=\"p1\">*</ept> 的容器在你的帐户中是否存在，如果不存在则创建它。"
    },
    {
      "content": "将库用于表服务",
      "pos": [
        1976,
        1983
      ]
    },
    {
      "content": "用于与 Azure 表服务进行通信的类型取决于针对 Windows 应用商店应用库的 WCF 数据服务。接下来，通过使用程序包管理器控制台添加对所需 WCF 库的引用：",
      "pos": [
        1985,
        2069
      ]
    },
    {
      "content": "store-apps-storage-package-manager",
      "pos": [
        2073,
        2107
      ]
    },
    {
      "content": "使用以下命令可以将程序包管理器指向你的计算机上的位置：",
      "pos": [
        2146,
        2173
      ]
    },
    {
      "pos": [
        2305,
        2512
      ],
      "content": "该命令将自动添加对你的项目的所有必需的引用。如果你不想使用程序包管理器控制台，可以将你的本地计算机上的 WCF Data Services NuGet 文件夹添加到程序包源的列表，然后通过在<bpt id=\"p1\">[</bpt>使用对话框管理 NuGet 程序包<ept id=\"p1\">](http://docs.nuget.org/docs/start-here/Managing-NuGet-Packages-Using-The-Dialog)</ept>中介绍的用户界面添加引用。"
    },
    {
      "pos": [
        2514,
        2573
      ],
      "content": "在你引用 WCF Data Services NuGet 程序包后，更改你的按钮的 <bpt id=\"p1\">**</bpt>Click<ept id=\"p1\">**</ept> 事件中的代码："
    },
    {
      "pos": [
        2864,
        2905
      ],
      "content": "该代码将检查名为 <bpt id=\"p1\">*</bpt>table1<ept id=\"p1\">*</ept> 的表在你的帐户中是否存在，如果不存在则创建它。"
    },
    {
      "content": "你还可以添加对 Microsoft.WindowsAzure.Storage.Table.dll 的引用，该 dll 位于你下载的同一个程序包中。该库包含其他一些功能，例如基于反射的序列化和一般查询。请注意，该库不支持 JavaScript。",
      "pos": [
        2907,
        3028
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"在 Windows 应用商店应用中使用 Azure 存储 | Azure\" \n    description=\"了解如何创建使用 Azure Blob、队列、表或文件存储的 Windows 应用商店应用。\"\n    services=\"storage\" \n    documentationCenter=\"\" \n    authors=\"tamram\" \n    manager=\"adinah\" \n    editor=\"cgronlun\"/>\n\n<tags \n    ms.service=\"storage\" \n    ms.date=\"01/07/2016\" \n    wacn.date=\"02/25/2016\"/>\n\n\n\n\n\n# 如何在 Windows 应用商店应用程序中使用 Azure 存储空间\n\n## 概述\n\n本指南演示了如何开始开发使用 Azure 存储空间的 Windows 应用商店应用程序。\n\n## 下载所需工具\n\n- [Visual Studio 2012](http://msdn.microsoft.com/zh-cn/library/windows/apps/br211384) 便于生成、调试、本地化、包装和部署 Windows 应用商店应用程序。\n- [适用于 Windows 运行时的 Azure 存储客户端库](http://blogs.msdn.com/b/windowsazurestorage/archive/2012/11/05/windows-azure-storage-client-library-for-windows-runtime.aspx) 提供用于使用 Azure 存储空间的类库。\n- [适用于 Windows 应用商店应用程序的 WCF 数据服务工具](http://www.microsoft.com/zh-cn/download/details.aspx?id=30714)利用 Visual Studio 2012 及更高版本中对 Windows 应用商店应用程序的客户端 OData 支持，扩展了\"添加服务引用\"体验。\n\n## 开发应用\n\n### 做好准备\n\n在 Visual Studio 2012 或更高版本中创建新的 Windows 应用商店应用程序项目：\n\n![store-apps-storage-vs-project][store-apps-storage-vs-project]\n\n接下来，通过以下方法添加对 Azure 存储客户端库的引用：右键单击“引用”，单击“添加引用”，然后浏览到你已下载的针对 Windows 运行时的存储客户端库：\n\n![store-apps-storage-choose-library][store-apps-storage-choose-library]\n\n### 将库用于 Blob 和队列服务\n\n此时，你的应用已做好调用 Azure Blob 和队列服务的准备。添加以下 **using** 语句，以便可以直接引用 Azure 存储类型：\n\n    using Microsoft.WindowsAzure.Storage;\n    using Microsoft.WindowsAzure.Storage.Auth;\n\n接下来，向你的页面添加一个按钮。将以下代码添加到其 **Click** 事件，并使用 [async 关键字](http://msdn.microsoft.com/zh-cn/library/vstudio/hh156513.aspx)修改你的事件处理程序方法：\n\n    var credentials = new StorageCredentials(accountName, accountKey);\n    var account = new CloudStorageAccount(credentials, true);\n    var blobClient = account.CreateCloudBlobClient();\n    var container = blobClient.GetContainerReference(\"container1\");\n    await container.CreateIfNotExistsAsync();\n\n此代码假定你有两个字符串变量： *accountName* 和 *accountKey* 。它们分别表示你的存储帐户名称以及与该帐户关联的帐户密钥。\n\n构建并运行应用程序。单击该按钮将检查名为 *container1* 的容器在你的帐户中是否存在，如果不存在则创建它。\n\n### 将库用于表服务\n\n用于与 Azure 表服务进行通信的类型取决于针对 Windows 应用商店应用库的 WCF 数据服务。接下来，通过使用程序包管理器控制台添加对所需 WCF 库的引用：\n\n![store-apps-storage-package-manager][store-apps-storage-package-manager]\n\n使用以下命令可以将程序包管理器指向你的计算机上的位置：\n\n    Install-Package Microsoft.Data.OData.WindowsStore -Source \"C:\\Program Files (x86)\\Microsoft WCF Data Services\\5.0\\bin\\NuGet\"\n\n该命令将自动添加对你的项目的所有必需的引用。如果你不想使用程序包管理器控制台，可以将你的本地计算机上的 WCF Data Services NuGet 文件夹添加到程序包源的列表，然后通过在[使用对话框管理 NuGet 程序包](http://docs.nuget.org/docs/start-here/Managing-NuGet-Packages-Using-The-Dialog)中介绍的用户界面添加引用。\n\n在你引用 WCF Data Services NuGet 程序包后，更改你的按钮的 **Click** 事件中的代码：\n\n    var credentials = new StorageCredentials(accountName, accountKey);\n    var account = new CloudStorageAccount(credentials, true);\n    var tableClient = account.CreateCloudTableClient();\n    var table = tableClient.GetTableReference(\"table1\");\n    await table.CreateIfNotExistsAsync();\n\n该代码将检查名为 *table1* 的表在你的帐户中是否存在，如果不存在则创建它。\n\n你还可以添加对 Microsoft.WindowsAzure.Storage.Table.dll 的引用，该 dll 位于你下载的同一个程序包中。该库包含其他一些功能，例如基于反射的序列化和一般查询。请注意，该库不支持 JavaScript。\n\n\n\n[store-apps-storage-vs-project]: ./media/storage-use-store-apps/store-apps-storage-vs-project.png\n[store-apps-storage-choose-library]: ./media/storage-use-store-apps/store-apps-storage-choose-library.png\n[store-apps-storage-package-manager]: ./media/storage-use-store-apps/store-apps-storage-package-manager.png\n \n\n<!---HONumber=Mooncake_0215_2016-->"
}