{
  "nodes": [
    {
      "content": "现在，让我们更新应用，以便在 Azure 移动服务而不是本地内存集合中存储项。",
      "pos": [
        1,
        40
      ]
    },
    {
      "pos": [
        44,
        71
      ],
      "content": "在 <bpt id=\"p1\">**</bpt>TodoService.h<ept id=\"p1\">**</ept> 中找到以下行："
    },
    {
      "pos": [
        120,
        163
      ],
      "content": "将此注释替换为以下行。这会创建一个属性，该属性表示与服务连接的 <ph id=\"ph1\">`MSClient`</ph>。"
    },
    {
      "pos": [
        227,
        254
      ],
      "content": "在 <bpt id=\"p1\">**</bpt>TodoService.m<ept id=\"p1\">**</ept> 中找到以下行："
    },
    {
      "pos": [
        317,
        364
      ],
      "content": "将此注释替换为 <ph id=\"ph1\">`@interface`</ph> 声明中的以下行。这将会创建移动服务表的属性表示形式。"
    },
    {
      "pos": [
        426,
        561
      ],
      "content": "在 <bpt id=\"p1\">[</bpt>Azure 经典门户<ept id=\"p1\">](https://manage.windowsazure.cn/)</ept>中单击“移动服务”，然后单击该移动服务。单击“仪表板”选项卡，并记下“站点 URL”。然后单击“管理密钥”，并记下“应用程序密钥”。从应用代码访问移动服务时，您需要使用这些值。"
    },
    {
      "pos": [
        566,
        593
      ],
      "content": "在 <bpt id=\"p1\">**</bpt>TodoService.m<ept id=\"p1\">**</ept> 中找到以下行："
    },
    {
      "pos": [
        667,
        729
      ],
      "content": "在此注释后，添加以下代码行。将 <ph id=\"ph1\">`APPURL`</ph> 和 <ph id=\"ph2\">`APPKEY`</ph> 替换为你在上一步获取的站点 URL 和应用程序密钥。"
    },
    {
      "pos": [
        835,
        862
      ],
      "content": "在 <bpt id=\"p1\">**</bpt>TodoService.m<ept id=\"p1\">**</ept> 中找到以下行："
    },
    {
      "content": "将此注释替换为以下行。这将会创建 TodoItem 表实例。",
      "pos": [
        948,
        978
      ]
    },
    {
      "pos": [
        1046,
        1073
      ],
      "content": "在 <bpt id=\"p1\">**</bpt>TodoService.m<ept id=\"p1\">**</ept> 中找到以下行："
    },
    {
      "content": "将此注释替换为以下行。这将会创建一个查询，用于返回尚未完成的所有任务。",
      "pos": [
        1147,
        1182
      ]
    },
    {
      "content": "找到以下行：",
      "pos": [
        1275,
        1281
      ]
    },
    {
      "pos": [
        1384,
        1419
      ],
      "content": "将该注释和后面的 <bpt id=\"p1\">**</bpt>completion<ept id=\"p1\">**</ept> 块调用替换为以下代码："
    },
    {
      "pos": [
        1593,
        1643
      ],
      "content": "找到 <bpt id=\"p1\">**</bpt>addItem<ept id=\"p1\">**</ept> 方法，并将其正文替换为以下代码。此代码会将一个插入请求发送到移动服务。"
    },
    {
      "pos": [
        2048,
        2083
      ],
      "content": "找到 <bpt id=\"p1\">**</bpt>completeItem<ept id=\"p1\">**</ept> 方法，并找到以下注释的代码行："
    },
    {
      "content": "在该方法的正文中，将从该位置到方法末尾的部分替换为以下代码。此代码将删除标记为已完成的 todo 项。",
      "pos": [
        2181,
        2232
      ]
    },
    {
      "pos": [
        2679,
        2731
      ],
      "content": "在 TodoListController.m 中，找到 <bpt id=\"p1\">**</bpt>onAdd<ept id=\"p1\">**</ept> 方法，并用以下代码将其覆盖："
    }
  ],
  "content": "\n现在，让我们更新应用，以便在 Azure 移动服务而不是本地内存集合中存储项。\n\n* 在 **TodoService.h** 中找到以下行：\n\n```\n// TODO - create an MSClient property\n```\n\n将此注释替换为以下行。这会创建一个属性，该属性表示与服务连接的 `MSClient`。\n\n```\n@property (nonatomic, strong)   MSClient *client;\n```\n\n\n* 在 **TodoService.m** 中找到以下行：\n\n```\n// TODO - create an MSTable property for your items\n```\n\n将此注释替换为 `@interface` 声明中的以下行。这将会创建移动服务表的属性表示形式。\n\n```\n@property (nonatomic, strong)   MSTable *table;\n```\n\n\n* 在 [Azure 经典门户](https://manage.windowsazure.cn/)中单击“移动服务”，然后单击该移动服务。单击“仪表板”选项卡，并记下“站点 URL”。然后单击“管理密钥”，并记下“应用程序密钥”。从应用代码访问移动服务时，您需要使用这些值。\n\n\n* 在 **TodoService.m** 中找到以下行：\n\n```\n// Initialize the Mobile Service client with your URL and key.\n```\n\n在此注释后，添加以下代码行。将 `APPURL` 和 `APPKEY` 替换为你在上一步获取的站点 URL 和应用程序密钥。\n\n```\nself.client = [MSClient clientWithApplicationURLString:@\"APPURL\" applicationKey:@\"APPKEY\"];\n```\n\n\n* 在 **TodoService.m** 中找到以下行：\n\n```\n// Create an MSTable instance to allow us to work with the TodoItem table.\n```\n\n将此注释替换为以下行。这将会创建 TodoItem 表实例。\n\n```\nself.table = [self.client tableWithName:@\"TodoItem\"];\n```\n\n\n* 在 **TodoService.m** 中找到以下行：\n\n```\n// Create a predicate that finds items where complete is false\n```\n\n将此注释替换为以下行。这将会创建一个查询，用于返回尚未完成的所有任务。\n\n```\nNSPredicate * predicate = [NSPredicate predicateWithFormat:@\"complete == NO\"];\n```\n\n\n* 找到以下行：\n\n```\n// Query the TodoItem table and update the items property with the results from the service\n```\n\n将该注释和后面的 **completion** 块调用替换为以下代码：\n\n```\n[self.table readWhere:predicate completion:^(NSArray *results, NSInteger totalCount, NSError *error)\n{\nself.items = [results mutableCopy];\n   completion();\n}];\n```\n\n\n* 找到 **addItem** 方法，并将其正文替换为以下代码。此代码会将一个插入请求发送到移动服务。\n\n```\n\n        // Insert the item into the TodoItem table and add to the items array on completion\n        [self.table insert:item completion:^(NSDictionary *result, NSError *error) {\n            NSUInteger index = [items count];\n            [(NSMutableArray *)items insertObject:item atIndex:index];\n\n            // Let the caller know that we finished\n            completion(index);\n        }];\n```\n\n\n* 找到 **completeItem** 方法，并找到以下注释的代码行：\n\n```\n// Update the item in the TodoItem table and remove from the items array on completion\n```\n\n在该方法的正文中，将从该位置到方法末尾的部分替换为以下代码。此代码将删除标记为已完成的 todo 项。\n\n```\n// Update the item in the TodoItem table and remove from the items array on completion\n[self.table update:mutable completion:^(NSDictionary *item, NSError *error) {\n\n            // Get a fresh index in case the list has changed\n            NSUInteger index = [items indexOfObjectIdenticalTo:mutable];\n\n            [mutableItems removeObjectAtIndex:index];\n\n    // Let the caller know that we have finished\n    completion(index);\n}];\n```\n\n\n* 在 TodoListController.m 中，找到 **onAdd** 方法，并用以下代码将其覆盖：\n\n```\n- (IBAction)onAdd:(id)sender\n{\n    if (itemText.text.length  == 0)\n    {\n        return;\n    }\n\n          NSDictionary *item = @{ @\"text\" : itemText.text, @\"complete\" : @NO };\n          UITableView *view = self.tableView;\n          [self.todoService addItem:item completion:^(NSUInteger index)\n          {\n              NSIndexPath *indexPath = [NSIndexPath indexPathForRow:index inSection:0];\n              [view insertRowsAtIndexPaths:@[ indexPath ]\n                          withRowAnimation:UITableViewRowAnimationTop];\n          }];\n\n    itemText.text = @\"\";\n}\n```\n\n<!---HONumber=Mooncake_0118_2016-->"
}