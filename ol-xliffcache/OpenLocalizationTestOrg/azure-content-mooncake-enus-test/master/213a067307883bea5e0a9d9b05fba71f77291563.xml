{
  "nodes": [
    {
      "content": "在 Windows 上开始使用 Azure 文件存储 | Azure",
      "pos": [
        35,
        69
      ]
    },
    {
      "content": "使用 Azure 文件存储在云中存储文件数据和从 Azure 虚拟机 (VM) 或从运行 Windows 的本地应用程序装载你的云文件共享。",
      "pos": [
        96,
        166
      ]
    },
    {
      "content": "如何通过 Windows 使用 Azure 文件存储",
      "pos": [
        411,
        437
      ]
    },
    {
      "content": "概述",
      "pos": [
        537,
        539
      ]
    },
    {
      "pos": [
        541,
        830
      ],
      "content": "Azure 文件存储是一种使用标准<bpt id=\"p1\">[</bpt>服务器消息块 (SMB) 协议<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/windows/desktop/aa365233.aspx)</ept>在云中提供文件共享的服务。支持 SMB 2.1 和 SMB 3.0。通过 Azure 文件存储，你可以将依赖文件共享的旧版应用程序快速迁移到 Azure 且无成本高昂的重写。在 Azure 虚拟机或云服务中或者从本地客户端运行的应用程序可以在云中装载文件共享，就像桌面应用程序装载典型的 SMB 共享一样。之后，任意数量的应用程序组件可以装载并同时访问文件存储共享。"
    },
    {
      "content": "由于文件存储共享是标准的 SMB 文件共享，在 Azure 中运行的应用程序可以通过文件系统 I/O API 访问共享中的数据。因此，开发人员可以利用其现有代码和技术迁移现有应用程序。IT 专业人员在管理 Azure 应用程序的过程中，可以使用 PowerShell cmdlet 来创建、装载和管理文件存储共享。",
      "pos": [
        832,
        989
      ]
    },
    {
      "content": "你可以使用 Azure 存储空间 PowerShell cmdlet、Azure 存储空间客户端库或 Azure 存储空间 REST API 来创建 Azure 文件共享。此外，由于这些文件共享是 SMB 共享，因此你还可以通过标准的和熟悉的文件系统 API 来访问它们。",
      "pos": [
        991,
        1127
      ]
    },
    {
      "pos": [
        1129,
        1236
      ],
      "content": "有关通过 Linux 使用文件存储的信息，请参阅<bpt id=\"p1\">[</bpt>如何通过 Linux 使用 Azure 文件存储<ept id=\"p1\">](/documentation/articles/storage-how-to-use-files-linux)</ept>。"
    },
    {
      "pos": [
        1238,
        1387
      ],
      "content": "有关文件存储的可伸缩性和性能目标的信息，请参阅 <bpt id=\"p1\">[</bpt>Azure 存储空间可伸缩性和性能目标<ept id=\"p1\">](/documentation/articles/storage-scalability-targets#scalability-targets-for-standard-storage-accounts)</ept>。"
    },
    {
      "content": "关于本教程",
      "pos": [
        1614,
        1619
      ]
    },
    {
      "content": "此入门教程演示使用 Azure 文件存储的基础知识。在本教程中，我们将：",
      "pos": [
        1621,
        1657
      ]
    },
    {
      "content": "使用 PowerShell 创建新的 Azure 文件共享、添加目录、将本地文件上载到该共享，以及列出该目录中的文件。",
      "pos": [
        1661,
        1720
      ]
    },
    {
      "content": "装载文件共享，就像装载任何 SMB 共享一样。",
      "pos": [
        1723,
        1746
      ]
    },
    {
      "content": "使用用于.NET 的 Azure 存储空间客户端库从本地应用程序访问文件共享。创建一个控制台应用程序并通过文件共享执行以下操作：",
      "pos": [
        1749,
        1813
      ]
    },
    {
      "content": "将共享中一个文件的内容写入控制台窗口。",
      "pos": [
        1820,
        1839
      ]
    },
    {
      "content": "设置文件共享的配额（最大大小）。",
      "pos": [
        1846,
        1862
      ]
    },
    {
      "content": "若一个文件使用在共享中定义的共享访问策略，则为该文件创建一个共享访问签名。",
      "pos": [
        1869,
        1906
      ]
    },
    {
      "content": "将文件复制到同一存储帐户中的另一个文件。",
      "pos": [
        1913,
        1933
      ]
    },
    {
      "content": "将文件复制到同一存储帐户中的一个 Blob。",
      "pos": [
        1940,
        1962
      ]
    },
    {
      "content": "使用 Azure 存储空间度量值进行故障排除",
      "pos": [
        1965,
        1987
      ]
    },
    {
      "pos": [
        1989,
        2145
      ],
      "content": "现在所有存储帐户均支持文件存储，因此你可以使用现有存储帐户，也可以创建新的存储帐户。有关创建新存储帐户的信息，请参阅<bpt id=\"p1\">[</bpt>如何创建、管理或删除存储帐户<ept id=\"p1\">](/documentation/articles/storage-create-storage-account#create-a-storage-account)</ept>。"
    },
    {
      "content": "使用 PowerShell 管理文件共享",
      "pos": [
        2585,
        2605
      ]
    },
    {
      "content": "我们将使用 Azure PowerShell 创建文件共享。创建文件共享之后，即可从任何支持 SMB 2.1 或 SMB 3.0 的文件系统装载它。",
      "pos": [
        2607,
        2681
      ]
    },
    {
      "content": "为 Azure 存储空间安装 PowerShell cmdlet",
      "pos": [
        2687,
        2719
      ]
    },
    {
      "pos": [
        2721,
        2865
      ],
      "content": "若要准备使用 PowerShell，请下载并安装 Azure PowerShell cmdlet。有关安装点和安装说明，请参阅<bpt id=\"p1\">[</bpt>如何安装和配置 Azure PowerShell<ept id=\"p1\">](/documentation/articles/powershell-install-configure)</ept>。"
    },
    {
      "pos": [
        2869,
        2922
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> 建议你下载并安装最新的 Azure PowerShell 模块或升级到最新模块。"
    },
    {
      "pos": [
        2924,
        3025
      ],
      "content": "通过单击“开始”并键入 <bpt id=\"p1\">**</bpt>Azure PowerShell<ept id=\"p1\">**</ept> 打开 Azure PowerShell 窗口。Azure PowerShell 窗口将为你加载 Azure PowerShell 模块。"
    },
    {
      "content": "为存储帐户和密钥创建上下文",
      "pos": [
        3031,
        3044
      ]
    },
    {
      "pos": [
        3046,
        3253
      ],
      "content": "现在，将创建存储帐户上下文。该上下文封装了存储帐户名称和帐户密钥。有关从<bpt id=\"p1\">[</bpt>管理门户<ept id=\"p1\">](https://manage.windowsazure.cn)</ept>复制帐户密钥的说明，请参阅<bpt id=\"p2\">[</bpt>查看、复制和重新生成存储访问密钥<ept id=\"p2\">](/documentation/articles/storage-create-storage-account#view-copy-and-regenerate-storage-access-keys)</ept>。"
    },
    {
      "pos": [
        3255,
        3326
      ],
      "content": "请将下面示例中的 <ph id=\"ph1\">`storage-account-name`</ph> 和 <ph id=\"ph2\">`storage-account-key`</ph> 替换为你的存储帐户名称和密钥："
    },
    {
      "content": "创建新的文件共享",
      "pos": [
        3479,
        3487
      ]
    },
    {
      "pos": [
        3489,
        3510
      ],
      "content": "接下来，创建名为 <ph id=\"ph1\">`logs`</ph> 的新共享。"
    },
    {
      "content": "现在，你在文件存储中已有一个文件共享。接下来，我们将添加目录和文件。",
      "pos": [
        3588,
        3622
      ]
    },
    {
      "pos": [
        3626,
        3763
      ],
      "content": "<ph id=\"ph1\">[AZURE.IMPORTANT]</ph> 文件共享的名称必须是全部小写。有关命名文件共享和文件的完整详细信息，请参阅<bpt id=\"p1\">[</bpt>命名和引用共享、目录、文件和元数据<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/azure/dn167011.aspx)</ept>。"
    },
    {
      "content": "在文件共享中创建目录",
      "pos": [
        3769,
        3779
      ]
    },
    {
      "pos": [
        3781,
        3821
      ],
      "content": "接下来，将在共享中创建目录。在下面的示例中，目录名为 <ph id=\"ph1\">`CustomLogs`</ph>。"
    },
    {
      "content": "将本地文件上载到目录",
      "pos": [
        3923,
        3933
      ]
    },
    {
      "pos": [
        3935,
        4005
      ],
      "content": "现在，将本地文件上载到该目录。以下示例从 <ph id=\"ph1\">`C:\\temp\\Log1.txt`</ph> 上载文件。请编辑文件路径，使其指向你本地计算机上的有效文件。"
    },
    {
      "content": "列出目录中的文件",
      "pos": [
        4143,
        4151
      ]
    },
    {
      "content": "可以列出目录的文件，以便查看其中的文件。此命令也将列出子目录，但在此示例中没有子目录，因此只列出文件。",
      "pos": [
        4153,
        4204
      ]
    },
    {
      "content": "复制文件",
      "pos": [
        4301,
        4305
      ]
    },
    {
      "content": "从 Azure PowerShell 的 0.9.7 版开始，可以将一个文件复制到另一个文件，将一个文件复制到一个 Blob，或将一个 Blob 复制到一个文件。下面，我们演示如何使用 PowerShell cmdlet 执行这些复制操作。",
      "pos": [
        4307,
        4427
      ]
    },
    {
      "content": "装载文件共享",
      "pos": [
        4866,
        4872
      ]
    },
    {
      "content": "由于支持 SMB 3.0，文件存储现在支持加密和持久保留 SMB 3.0 客户端中的句柄。支持加密意味着 SMB 3.0 客户端可以从任意位置装载文件共享，这些位置包括：",
      "pos": [
        4875,
        4960
      ]
    },
    {
      "content": "同一区域中的 Azure 虚拟机（SMB 2.1 也支持）",
      "pos": [
        4964,
        4993
      ]
    },
    {
      "content": "不同区域中的 Azure 虚拟机（仅适用于 SMB 3.0）",
      "pos": [
        4996,
        5026
      ]
    },
    {
      "content": "本地客户端应用程序（仅适用于 SMB 3.0）",
      "pos": [
        5029,
        5052
      ]
    },
    {
      "pos": [
        5055,
        5322
      ],
      "content": "当客户端访问文件存储时，所使用的 SMB 版本取决于操作系统支持的 SMB 版本。下表提供了有关 Windows 客户端支持的摘要。有关 <bpt id=\"p1\">[</bpt>SMB 版本<ept id=\"p1\">](http://blogs.technet.com/b/josebda/archive/2013/10/02/windows-server-2012-r2-which-version-of-the-smb-protocol-smb-1-0-smb-2-0-smb-2-1-smb-3-0-or-smb-3-02-you-are-using.aspx)</ept>的更多详细信息，请参阅此博客。"
    },
    {
      "content": "Windows 客户端",
      "pos": [
        5326,
        5337
      ]
    },
    {
      "content": "支持的 SMB 版本",
      "pos": [
        5340,
        5350
      ]
    },
    {
      "content": "Windows 7",
      "pos": [
        5405,
        5414
      ]
    },
    {
      "content": "SMB 2.1",
      "pos": [
        5417,
        5424
      ]
    },
    {
      "content": "Windows Server 2008 R2",
      "pos": [
        5429,
        5451
      ]
    },
    {
      "content": "SMB 2.1",
      "pos": [
        5454,
        5461
      ]
    },
    {
      "content": "Windows 8",
      "pos": [
        5466,
        5475
      ]
    },
    {
      "content": "SMB 3.0",
      "pos": [
        5478,
        5485
      ]
    },
    {
      "content": "Windows Server 2012",
      "pos": [
        5490,
        5509
      ]
    },
    {
      "content": "SMB 3.0",
      "pos": [
        5512,
        5519
      ]
    },
    {
      "content": "Windows Server 2012 R2",
      "pos": [
        5524,
        5546
      ]
    },
    {
      "content": "SMB 3.0",
      "pos": [
        5549,
        5556
      ]
    },
    {
      "content": "Windows 10",
      "pos": [
        5561,
        5571
      ]
    },
    {
      "content": "SMB 3.0",
      "pos": [
        5574,
        5581
      ]
    },
    {
      "content": "从运行 Windows 的 Azure 虚拟机装载文件共享",
      "pos": [
        5589,
        5618
      ]
    },
    {
      "content": "为了演示如何装载 Azure 文件共享，现在我们将创建一个运行 Windows 的 Azure 虚拟机，并远程登录到它内部以装载共享。",
      "pos": [
        5620,
        5687
      ]
    },
    {
      "pos": [
        5692,
        5818
      ],
      "content": "首先，按照<bpt id=\"p1\">[</bpt>创建运行 Windows Server 的虚拟机<ept id=\"p1\">](/documentation/articles/virtual-machines-windows-tutorial-classic-portal)</ept>中的说明创建一个新的 Azure 虚拟机。"
    },
    {
      "pos": [
        5822,
        5936
      ],
      "content": "然后，按照<bpt id=\"p1\">[</bpt>如何登录到运行 Windows Server 的虚拟机<ept id=\"p1\">](/documentation/articles/virtual-machines-log-on-windows-server)</ept>中的说明远程登录到该虚拟机内部。"
    },
    {
      "content": "在该虚拟机上打开 PowerShell 窗口。",
      "pos": [
        5940,
        5963
      ]
    },
    {
      "content": "保存虚拟机的存储帐户凭据",
      "pos": [
        5969,
        5981
      ]
    },
    {
      "pos": [
        5983,
        6170
      ],
      "content": "装载到文件共享之前，先在虚拟机上保存存储帐户凭据。当虚拟机重新启动时，此步骤允许 Windows 自动重新连接到文件共享。若要持久保存帐户凭据，请在虚拟机上的 PowerShell 窗口中运行 <ph id=\"ph1\">`cmdkey`</ph> 命令。请将 <ph id=\"ph2\">`&lt;storage-account-name&gt;`</ph> 替换为你的存储帐户名称，将 <ph id=\"ph3\">`&lt;storage-account-key&gt;`</ph> 替换为你的存储帐户密钥："
    },
    {
      "pos": [
        6296,
        6378
      ],
      "content": "现在，当虚拟机重新启动时，Windows 将重新连接到你的文件共享。可以通过在 PowerShell 窗口中运行 <ph id=\"ph1\">`net use`</ph> 命令来验证是否已重新连接共享。"
    },
    {
      "pos": [
        6380,
        6446
      ],
      "content": "请注意，凭据仅在运行 <ph id=\"ph1\">`cmdkey`</ph> 的上下文中持久保存。如果你正在开发作为服务运行的应用程序，你也需要在该上下文中持久保存凭据。"
    },
    {
      "content": "使用保存的凭据装载文件共享",
      "pos": [
        6452,
        6465
      ]
    },
    {
      "pos": [
        6467,
        6584
      ],
      "content": "建立与虚拟机的远程连接后，便可以使用以下语法运行 <ph id=\"ph1\">`net use`</ph> 命令来装载文件共享了。请将 <ph id=\"ph2\">`&lt;storage-account-name&gt;`</ph> 替换为你的存储帐户名称，将 <ph id=\"ph3\">`&lt;share-name&gt;`</ph> 替换为你的文件存储共享名称。"
    },
    {
      "pos": [
        6752,
        6842
      ],
      "content": "由于你已在上一步中保存了存储帐户凭据，因此你无需随 <ph id=\"ph1\">`net use`</ph> 命令提供这些凭据。如果你尚未保存凭据，请作为传递给 <ph id=\"ph2\">`net use`</ph> 命令的参数提供凭据，如以下示例所示。"
    },
    {
      "pos": [
        7091,
        7315
      ],
      "content": "现在，你可以使用虚拟机中的文件存储共享，就像使用任何其他驱动器一样。你可以从命令提示符发出标准文件命令，也可以从文件资源管理器查看已装载的共享及其内容。你也可以在虚拟机中运行代码，以便访问使用标准 Windows 文件 I/O API 的文件共享，例如 .NET Framework 中由 <bpt id=\"p1\">[</bpt>System.IO 命名空间<ept id=\"p1\">](http://msdn.microsoft.com/zh-cn/library/gg145019.aspx)</ept>提供的文件共享。"
    },
    {
      "content": "你还可以通过远程登录到角色中从 Azure 云服务中运行的角色装载文件共享。",
      "pos": [
        7317,
        7355
      ]
    },
    {
      "content": "从运行 Windows 的本地客户端装载文件共享",
      "pos": [
        7361,
        7385
      ]
    },
    {
      "content": "若要从本地客户端装载文件共享，必须首先执行以下步骤：",
      "pos": [
        7388,
        7414
      ]
    },
    {
      "content": "安装支持 SMB 3.0 的 Windows 版本。Windows 将利用 SMB 3.0 加密来在本地客户端和云中的 Azure 文件共享之间安全地传输数据。",
      "pos": [
        7418,
        7498
      ]
    },
    {
      "content": "根据 SMB 协议的需要，在本地网络中打开端口 445（TCP 出站）的 Internet 访问。",
      "pos": [
        7502,
        7551
      ]
    },
    {
      "pos": [
        7556,
        7616
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> 某些 Internet 服务提供商可能会阻止端口 445，因此你可能需要与你的服务提供商核实。"
    },
    {
      "content": "使用文件存储进行开发",
      "pos": [
        7621,
        7631
      ]
    },
    {
      "pos": [
        7633,
        7834
      ],
      "content": "若要以编程方式使用文件存储，可以使用适用于 .NET 和 Java 的存储空间客户端库或 Azure 存储空间 REST API。本部分中的示例演示如何通过在桌面上运行的简单控制台应用程序使用 <bpt id=\"p1\">[</bpt>Azure .NET 存储空间客户端库<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/wa_storage_30_reference_home.aspx)</ept>处理文件共享。"
    },
    {
      "content": "创建控制台应用程序，并获取程序集",
      "pos": [
        7840,
        7856
      ]
    },
    {
      "content": "若要在 Visual Studio 中创建新的控制台应用程序并安装 Azure 存储 NuGet 包，请执行以下操作：",
      "pos": [
        7858,
        7917
      ]
    },
    {
      "content": "在 Visual Studio 中，选择“文件”&gt;“新建项目”，然后从 Visual C# 模板列表中选择“Windows”&gt;“控制台应用程序”。",
      "pos": [
        7922,
        7995
      ]
    },
    {
      "content": "提供控制台应用程序的名称，然后单击“确定”。",
      "pos": [
        7999,
        8021
      ]
    },
    {
      "content": "创建项目后，在解决方案资源管理器中右键单击该项目并选择“管理 NuGet 包”。在线搜索“WindowsAzure.Storage”，然后单击“安装”以安装 Azure 存储包和依赖项。",
      "pos": [
        8025,
        8118
      ]
    },
    {
      "content": "将存储帐户凭据保存到 app.config 文件",
      "pos": [
        8124,
        8148
      ]
    },
    {
      "pos": [
        8150,
        8261
      ],
      "content": "接下来，将你的凭据保存到项目的 app.config 文件中。编辑 app.config 文件，使其看起来类似于下面的示例，将 <ph id=\"ph1\">`myaccount`</ph> 替换为你的存储帐户名称，并将 <ph id=\"ph2\">`mykey`</ph> 替换为你的存储帐户密钥。"
    },
    {
      "pos": [
        8701,
        8770
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> 最新版本的 Azure 存储模拟器不支持文件存储。连接字符串必须针对云中要使用文件存储的 Azure 存储帐户。"
    },
    {
      "content": "添加命名空间声明",
      "pos": [
        8776,
        8784
      ]
    },
    {
      "content": "从解决方案资源管理器打开 program.cs 文件，并在该文件顶部添加以下命名空间声明。",
      "pos": [
        8786,
        8831
      ]
    },
    {
      "content": "以编程方式检索连接字符串",
      "pos": [
        9008,
        9020
      ]
    },
    {
      "pos": [
        9022,
        9312
      ],
      "content": "可以使用 <ph id=\"ph1\">`Microsoft.WindowsAzure.CloudConfigurationManager`</ph> 类或 <ph id=\"ph2\">`System.Configuration.ConfigurationManager `</ph> 类从 app.config 文件中检索保存的凭据。Azure 配置管理器包，其中包括 <ph id=\"ph3\">`Microsoft.WindowsAzure.CloudConfigurationManager`</ph> 类，可从 <bpt id=\"p1\">[</bpt>Nuget<ept id=\"p1\">](https://www.nuget.org/packages/Microsoft.WindowsAzure.ConfigurationManager)</ept> 获得。"
    },
    {
      "pos": [
        9314,
        9429
      ],
      "content": "此处的示例显示如何使用 <ph id=\"ph1\">`CloudConfigurationManager`</ph> 类检索凭据，并使用 <ph id=\"ph2\">`CloudStorageAccount`</ph> 类封装这些凭据。将以下代码添加到 program.cs 的 <ph id=\"ph3\">`Main()`</ph> 方法中。"
    },
    {
      "content": "以编程方式访问文件共享",
      "pos": [
        9579,
        9590
      ]
    },
    {
      "pos": [
        9592,
        9671
      ],
      "content": "接下来，将以下代码添加到 <ph id=\"ph1\">`Main()`</ph> 方法（在上面显示的代码后面）以检索连接字符串。此代码将获取我们先前创建的文件的引用，并将其内容输出到控制台窗口中。"
    },
    {
      "content": "运行控制台应用程序以查看输出。",
      "pos": [
        10797,
        10812
      ]
    },
    {
      "content": "设置文件共享的最大大小",
      "pos": [
        10818,
        10829
      ]
    },
    {
      "content": "从 Azure 存储空间客户端库的 5.x 版开始，可以设置文件共享的配额（或最大大小），单位为千兆字节。你还可以查看共享当前存储了多少数据。",
      "pos": [
        10831,
        10902
      ]
    },
    {
      "content": "通过设置一个共享的配额，可以限制在该共享上存储的文件的总大小。如果共享上文件的总大小超过在共享上设定的配额，则客户端将不能增加现有文件的大小或创建新文件，除非这些文件是空的。",
      "pos": [
        10904,
        10991
      ]
    },
    {
      "content": "下面的示例演示如何检查共享的当前使用情况，以及如何设置共享的配额。",
      "pos": [
        10993,
        11026
      ]
    },
    {
      "content": "为文件或文件共享生成共享访问签名",
      "pos": [
        12382,
        12398
      ]
    },
    {
      "content": "从 Azure 存储空间客户端库的 5.x 版开始，可以为文件共享或单个文件生成共享访问签名 (SAS)。还可以在文件共享上创建一个共享访问策略以管理共享访问签名。建议创建共享访问策略，因为它提供了一种在受到威胁时撤消 SAS 的方式。",
      "pos": [
        12400,
        12518
      ]
    },
    {
      "content": "以下示例在一个共享上创建共享访问策略，然后使用该策略为共享中的一个文件提供 SAS 约束。",
      "pos": [
        12520,
        12565
      ]
    },
    {
      "pos": [
        14658,
        14868
      ],
      "content": "有关创建和使用共享访问签名的更多信息，请参阅<bpt id=\"p1\">[</bpt>共享访问签名：了解 SAS 模型<ept id=\"p1\">](/documentation/articles/storage-dotnet-shared-access-signature-part-1)</ept>和<bpt id=\"p2\">[</bpt>创建 SAS 并将 SAS 用于 Blob 存储<ept id=\"p2\">](/documentation/articles/storage-dotnet-shared-access-signature-part-2)</ept>。"
    },
    {
      "content": "复制文件",
      "pos": [
        14874,
        14878
      ]
    },
    {
      "content": "从 Azure 存储空间客户端库的 5.x 版开始，可以将一个文件复制到另一个文件，将一个文件复制到一个 Blob，或将一个 Blob 复制到一个文件。在后续部分中，我们将演示如何以编程方式执行这些复制操作。",
      "pos": [
        14880,
        14984
      ]
    },
    {
      "pos": [
        14986,
        15204
      ],
      "content": "还可以使用 AzCopy 将一个文件复制到另一个文件或将一个 Blob 复制到一个文件，反之亦然。请参阅<bpt id=\"p1\">[</bpt>如何将 AzCopy 与  Azure 存储空间一起使用<ept id=\"p1\">](/documentation/articles/storage-use-azcopy#copy-files-in-azure-file-storage-with-azcopy-preview-version-only)</ept>，以了解有关使用 AzCopy 复制文件的详细信息。"
    },
    {
      "pos": [
        15208,
        15301
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> 如果将一个 Blob 复制到一个文件，或将一个文件复制到一个 Blob，必须使用共享访问签名 (SAS) 对源对象进行身份验证，即使你在同一存储帐户内进行复制。"
    },
    {
      "content": "将一个文件复制到另一个文件",
      "pos": [
        15305,
        15318
      ]
    },
    {
      "content": "以下示例将一个文件复制到同一共享中的另一个文件。因为此操作在同一存储帐户中的文件之间进行复制，可以使用共享密钥身份验证来进行复制。",
      "pos": [
        15322,
        15387
      ]
    },
    {
      "content": "将一个文件复制到一个 Blob",
      "pos": [
        16994,
        17009
      ]
    },
    {
      "content": "以下示例创建一个文件并将其复制到同一存储帐户中的某个 blob。该示例为源文件创建一个 SAS，服务在复制操作期间使用该 SAS 验证对源文件的访问。",
      "pos": [
        17013,
        17088
      ]
    },
    {
      "content": "可以用相同的方式将一个 Blob 复制到一个文件。如果源对象是一个 Blob，则创建一个 SAS 以复制操作期间验证对该 Blob 的访问。",
      "pos": [
        19201,
        19271
      ]
    },
    {
      "content": "使用指标对文件存储进行故障排除",
      "pos": [
        19276,
        19291
      ]
    },
    {
      "content": "Azure 存储服务分析现在支持用于文件存储的指标。使用指标数据，可以跟踪请求和诊断问题。",
      "pos": [
        19293,
        19338
      ]
    },
    {
      "pos": [
        19340,
        19446
      ],
      "content": "可以从<bpt id=\"p1\">[</bpt>管理门户<ept id=\"p1\">](https://manage.windowsazure.cn)</ept>为文件存储启用指标。你还可以通过 REST API 或存储客户端库中的类似物之一调用“设置文件服务属性”操作，以编程方式启用指标。"
    },
    {
      "content": "文件存储常见问题",
      "pos": [
        19451,
        19459
      ]
    },
    {
      "content": "文件存储是否支持基于 Active Directory 的身份验证？",
      "pos": [
        19466,
        19500
      ]
    },
    {
      "content": "我们目前不支持基于 AD 的身份验证或 ACL，但会将其列入我们的功能请求列表中。目前，Azure 存储帐户密钥用于为文件共享提供身份验证。我们确实提供通过 REST API 或客户端库使用共享访问签名 (SAS) 的解决方法。使用 SAS，可以生成具有在指定的时间间隔内有效的特定权限的令牌。例如，你可以生成对给定文件具有只读访问权限的令牌。在此令牌的有效期内拥有此令牌的任何人对该文件具有只读访问权限。",
      "pos": [
        19509,
        19712
      ]
    },
    {
      "content": "仅通过 REST API 或客户端库支持 SAS。通过 SMB 协议装载文件共享时，不能使用 SAS 委派对其内容的访问权限。",
      "pos": [
        19718,
        19781
      ]
    },
    {
      "content": "Azure 文件共享是在 Internet 上公开可见，还是只能通过 Azure 对其进行访问？",
      "pos": [
        19788,
        19836
      ]
    },
    {
      "pos": [
        19845,
        19946
      ],
      "content": "只要端口 445（TCP 出站）处于打开状态且客户端支持 SMB 3.0 协议（ <bpt id=\"p1\">*</bpt>例如<ept id=\"p1\">*</ept> ，Windows 8 或 Windows Server 2012），文件共享就可通过 Internet 使用。"
    },
    {
      "content": "Azure 虚拟机与文件共享之间的网络流量是否算作对订阅计费的外部带宽？",
      "pos": [
        19953,
        19989
      ]
    },
    {
      "content": "如果文件共享和虚拟机位于不同的区域，则它们之间的流量将作为外部带宽收费。",
      "pos": [
        19997,
        20033
      ]
    },
    {
      "content": "如果是虚拟机和同一区域中的文件共享之间的网络流量，是免费吗？",
      "pos": [
        20041,
        20071
      ]
    },
    {
      "content": "是的。如果流量在同一区域，是免费的。",
      "pos": [
        20079,
        20097
      ]
    },
    {
      "content": "从本地虚拟机连接到 Azure 文件存储是否依赖于 Azure ExpressRoute？",
      "pos": [
        20104,
        20149
      ]
    },
    {
      "content": "否。如果你没有 ExpressRoute，你仍可以从本地访问文件共享，只要你将端口 445（TCP 出站）打开供 Internet 访问。但是，如果你愿意，你可以将 ExpressRoute 用于文件存储。",
      "pos": [
        20157,
        20260
      ]
    },
    {
      "content": "故障转移群集的“文件共享见证”是 Azure 文件存储的使用案例之一吗？",
      "pos": [
        20267,
        20303
      ]
    },
    {
      "content": "目前，不支持此功能。",
      "pos": [
        20311,
        20321
      ]
    },
    {
      "content": "当前仅通过 LRS 或 GRS 复制文件存储，对吗？",
      "pos": [
        20329,
        20355
      ]
    },
    {
      "content": "我们计划支持 RA-GRS，但尚没有共享时间表。",
      "pos": [
        20363,
        20387
      ]
    },
    {
      "content": "何时能够将现有存储帐户用于 Azure 文件存储？",
      "pos": [
        20394,
        20419
      ]
    },
    {
      "content": "现已为所有存储帐户启用 Azure 文件存储。",
      "pos": [
        20427,
        20450
      ]
    },
    {
      "content": "是否会将重命名操作也添加到 REST API？",
      "pos": [
        20457,
        20480
      ]
    },
    {
      "content": "在我们的 REST API 中尚不支持重命名。",
      "pos": [
        20488,
        20511
      ]
    },
    {
      "content": "能否使用嵌套共享，换而言之就是共享下的共享？",
      "pos": [
        20519,
        20541
      ]
    },
    {
      "content": "否。文件共享是你可以装载的虚拟驱动程序，因此不支持嵌套共享。",
      "pos": [
        20549,
        20579
      ]
    },
    {
      "content": "是否可以对共享中的文件夹指定只读或只写权限？",
      "pos": [
        20587,
        20609
      ]
    },
    {
      "content": "如果通过 SMB 装载文件共享，你不具有此级别的权限控制。但是，你可以通过 REST API 或客户端库创建共享访问签名 (SAS) 来实现此控制。",
      "pos": [
        20617,
        20691
      ]
    },
    {
      "content": "尝试将文件解压缩到文件存储中时我的性能速度太慢。我该怎样做？",
      "pos": [
        20699,
        20729
      ]
    },
    {
      "content": "若要将大量文件传输到文件存储，建议使用 AzCopy、Azure Powershell (Windows) 或 Azure CLI (Linux/Unix)，因为这些工具已针对网络传输进行优化。",
      "pos": [
        20737,
        20834
      ]
    },
    {
      "content": "后续步骤",
      "pos": [
        20839,
        20843
      ]
    },
    {
      "content": "请参阅以下链接以获取有关 Azure 文件存储的更多信息。",
      "pos": [
        20845,
        20874
      ]
    },
    {
      "content": "概念性文章",
      "pos": [
        20880,
        20885
      ]
    },
    {
      "content": "如何通过 Linux 使用 Azure 文件存储",
      "pos": [
        20890,
        20914
      ]
    },
    {
      "content": "文件存储的工具支持",
      "pos": [
        20977,
        20986
      ]
    },
    {
      "content": "对 Azure 存储空间使用 Azure PowerShell",
      "pos": [
        20991,
        21022
      ]
    },
    {
      "content": "如何对 Azure 存储空间使用 AzCopy",
      "pos": [
        21082,
        21105
      ]
    },
    {
      "content": "将 Azure CLI 用于 Azure 存储空间",
      "pos": [
        21154,
        21179
      ]
    },
    {
      "content": "引用",
      "pos": [
        21259,
        21261
      ]
    },
    {
      "content": ".NET 存储客户端库参考",
      "pos": [
        21266,
        21279
      ]
    },
    {
      "content": "文件服务 REST API 参考",
      "pos": [
        21346,
        21362
      ]
    },
    {
      "content": "博客文章",
      "pos": [
        21430,
        21434
      ]
    },
    {
      "content": "深入了解 Azure 文件存储",
      "pos": [
        21439,
        21454
      ]
    },
    {
      "content": "Azure 文件服务简介",
      "pos": [
        21484,
        21496
      ]
    },
    {
      "content": "将连接保存到 Azure 文件中",
      "pos": [
        21611,
        21627
      ]
    }
  ],
  "content": "<properties\n            pageTitle=\"在 Windows 上开始使用 Azure 文件存储 | Azure\"\n            description=\"使用 Azure 文件存储在云中存储文件数据和从 Azure 虚拟机 (VM) 或从运行 Windows 的本地应用程序装载你的云文件共享。\"\n            services=\"storage\"\n            documentationCenter=\".net\"\n            authors=\"tamram\"\n            manager=\"adinah\"\n            editor=\"\" />\n\n<tags ms.service=\"storage\"\n      ms.date=\"02/03/2016\"\n      wacn.date=\"03/17/2016\" />\n\n# 如何通过 Windows 使用 Azure 文件存储\n\n[AZURE.INCLUDE [storage-selector-file-include](../includes/storage-selector-file-include.md)]\n\n## 概述\n\nAzure 文件存储是一种使用标准[服务器消息块 (SMB) 协议](https://msdn.microsoft.com/zh-cn/library/windows/desktop/aa365233.aspx)在云中提供文件共享的服务。支持 SMB 2.1 和 SMB 3.0。通过 Azure 文件存储，你可以将依赖文件共享的旧版应用程序快速迁移到 Azure 且无成本高昂的重写。在 Azure 虚拟机或云服务中或者从本地客户端运行的应用程序可以在云中装载文件共享，就像桌面应用程序装载典型的 SMB 共享一样。之后，任意数量的应用程序组件可以装载并同时访问文件存储共享。\n\n由于文件存储共享是标准的 SMB 文件共享，在 Azure 中运行的应用程序可以通过文件系统 I/O API 访问共享中的数据。因此，开发人员可以利用其现有代码和技术迁移现有应用程序。IT 专业人员在管理 Azure 应用程序的过程中，可以使用 PowerShell cmdlet 来创建、装载和管理文件存储共享。\n\n你可以使用 Azure 存储空间 PowerShell cmdlet、Azure 存储空间客户端库或 Azure 存储空间 REST API 来创建 Azure 文件共享。此外，由于这些文件共享是 SMB 共享，因此你还可以通过标准的和熟悉的文件系统 API 来访问它们。\n\n有关通过 Linux 使用文件存储的信息，请参阅[如何通过 Linux 使用 Azure 文件存储](/documentation/articles/storage-how-to-use-files-linux)。\n\n有关文件存储的可伸缩性和性能目标的信息，请参阅 [Azure 存储空间可伸缩性和性能目标](/documentation/articles/storage-scalability-targets#scalability-targets-for-standard-storage-accounts)。\n\n[AZURE.INCLUDE [storage-dotnet-client-library-version-include](../includes/storage-dotnet-client-library-version-include.md)]\n\n[AZURE.INCLUDE [storage-file-concepts-include](../includes/storage-file-concepts-include.md)]\n\n## 关于本教程\n\n此入门教程演示使用 Azure 文件存储的基础知识。在本教程中，我们将：\n\n- 使用 PowerShell 创建新的 Azure 文件共享、添加目录、将本地文件上载到该共享，以及列出该目录中的文件。\n- 装载文件共享，就像装载任何 SMB 共享一样。\n- 使用用于.NET 的 Azure 存储空间客户端库从本地应用程序访问文件共享。创建一个控制台应用程序并通过文件共享执行以下操作：\n    - 将共享中一个文件的内容写入控制台窗口。\n    - 设置文件共享的配额（最大大小）。\n    - 若一个文件使用在共享中定义的共享访问策略，则为该文件创建一个共享访问签名。\n    - 将文件复制到同一存储帐户中的另一个文件。\n    - 将文件复制到同一存储帐户中的一个 Blob。\n- 使用 Azure 存储空间度量值进行故障排除\n\n现在所有存储帐户均支持文件存储，因此你可以使用现有存储帐户，也可以创建新的存储帐户。有关创建新存储帐户的信息，请参阅[如何创建、管理或删除存储帐户](/documentation/articles/storage-create-storage-account#create-a-storage-account)。\n\n<!--\n## Use the Azure preview portal to manage a file share\n\nThe [Azure preview portal](https://ms.portal.azure.com/) provides a user interface for customers to manage File storage. From the preview portal, you can:\n\n- Upload and download files to and from your file share\n- Monitor the actual usage of each file share\n- Adjust the share size quota\n- Get the `net use` command to use to mount the file share from a Windows client \n-->\n## 使用 PowerShell 管理文件共享\n\n我们将使用 Azure PowerShell 创建文件共享。创建文件共享之后，即可从任何支持 SMB 2.1 或 SMB 3.0 的文件系统装载它。\n\n### 为 Azure 存储空间安装 PowerShell cmdlet\n\n若要准备使用 PowerShell，请下载并安装 Azure PowerShell cmdlet。有关安装点和安装说明，请参阅[如何安装和配置 Azure PowerShell](/documentation/articles/powershell-install-configure)。\n\n> [AZURE.NOTE] 建议你下载并安装最新的 Azure PowerShell 模块或升级到最新模块。\n\n通过单击“开始”并键入 **Azure PowerShell** 打开 Azure PowerShell 窗口。Azure PowerShell 窗口将为你加载 Azure PowerShell 模块。\n\n### 为存储帐户和密钥创建上下文\n\n现在，将创建存储帐户上下文。该上下文封装了存储帐户名称和帐户密钥。有关从[管理门户](https://manage.windowsazure.cn)复制帐户密钥的说明，请参阅[查看、复制和重新生成存储访问密钥](/documentation/articles/storage-create-storage-account#view-copy-and-regenerate-storage-access-keys)。\n\n请将下面示例中的 `storage-account-name` 和 `storage-account-key` 替换为你的存储帐户名称和密钥：\n\n    # create a context for account and key\n    $ctx=New-AzureStorageContext -Environment AzureChinaCloud storage-account-name storage-account-key\n\n### 创建新的文件共享\n\n接下来，创建名为 `logs` 的新共享。\n\n    # create a new share\n    $s = New-AzureStorageShare logs -Context $ctx\n\n现在，你在文件存储中已有一个文件共享。接下来，我们将添加目录和文件。\n\n> [AZURE.IMPORTANT] 文件共享的名称必须是全部小写。有关命名文件共享和文件的完整详细信息，请参阅[命名和引用共享、目录、文件和元数据](https://msdn.microsoft.com/zh-cn/library/azure/dn167011.aspx)。\n\n### 在文件共享中创建目录\n\n接下来，将在共享中创建目录。在下面的示例中，目录名为 `CustomLogs`。\n\n    # create a directory in the share\n    New-AzureStorageDirectory -Share $s -Path CustomLogs\n\n### 将本地文件上载到目录\n\n现在，将本地文件上载到该目录。以下示例从 `C:\\temp\\Log1.txt` 上载文件。请编辑文件路径，使其指向你本地计算机上的有效文件。\n\n    # upload a local file to the new directory\n    Set-AzureStorageFileContent -Share $s -Source C:\\temp\\Log1.txt -Path CustomLogs\n\n### 列出目录中的文件\n\n可以列出目录的文件，以便查看其中的文件。此命令也将列出子目录，但在此示例中没有子目录，因此只列出文件。\n\n    # list files in the new directory\n    Get-AzureStorageFile -Share $s -Path CustomLogs\n\n### 复制文件\n\n从 Azure PowerShell 的 0.9.7 版开始，可以将一个文件复制到另一个文件，将一个文件复制到一个 Blob，或将一个 Blob 复制到一个文件。下面，我们演示如何使用 PowerShell cmdlet 执行这些复制操作。\n\n    # copy a file to the new directory\n    Start-AzureStorageFileCopy -SrcShareName srcshare -SrcFilePath srcdir/hello.txt -DestShareName destshare -DestFilePath destdir/hellocopy.txt -Context $srcCtx -DestContext $destCtx\n\n    # copy a blob to a file directory\n    Start-AzureStorageFileCopy -SrcContainerName srcctn -SrcBlobName hello2.txt -DestShareName hello -DestFilePath hellodir/hello2copy.txt -DestContext $ctx -Context $ctx\n\n## 装载文件共享 \n\n由于支持 SMB 3.0，文件存储现在支持加密和持久保留 SMB 3.0 客户端中的句柄。支持加密意味着 SMB 3.0 客户端可以从任意位置装载文件共享，这些位置包括：\n\n- 同一区域中的 Azure 虚拟机（SMB 2.1 也支持）\n- 不同区域中的 Azure 虚拟机（仅适用于 SMB 3.0）\n- 本地客户端应用程序（仅适用于 SMB 3.0） \n\n当客户端访问文件存储时，所使用的 SMB 版本取决于操作系统支持的 SMB 版本。下表提供了有关 Windows 客户端支持的摘要。有关 [SMB 版本](http://blogs.technet.com/b/josebda/archive/2013/10/02/windows-server-2012-r2-which-version-of-the-smb-protocol-smb-1-0-smb-2-0-smb-2-1-smb-3-0-or-smb-3-02-you-are-using.aspx)的更多详细信息，请参阅此博客。\n\n| Windows 客户端 | 支持的 SMB 版本 |\n|------------------------|----------------------|\n| Windows 7 | SMB 2.1 |\n| Windows Server 2008 R2 | SMB 2.1 |\n| Windows 8 | SMB 3.0 |\n| Windows Server 2012 | SMB 3.0 |\n| Windows Server 2012 R2 | SMB 3.0 |\n| Windows 10 | SMB 3.0 |\n\n### 从运行 Windows 的 Azure 虚拟机装载文件共享\n\n为了演示如何装载 Azure 文件共享，现在我们将创建一个运行 Windows 的 Azure 虚拟机，并远程登录到它内部以装载共享。\n\n1. 首先，按照[创建运行 Windows Server 的虚拟机](/documentation/articles/virtual-machines-windows-tutorial-classic-portal)中的说明创建一个新的 Azure 虚拟机。\n2. 然后，按照[如何登录到运行 Windows Server 的虚拟机](/documentation/articles/virtual-machines-log-on-windows-server)中的说明远程登录到该虚拟机内部。\n3. 在该虚拟机上打开 PowerShell 窗口。\n\n### 保存虚拟机的存储帐户凭据\n\n装载到文件共享之前，先在虚拟机上保存存储帐户凭据。当虚拟机重新启动时，此步骤允许 Windows 自动重新连接到文件共享。若要持久保存帐户凭据，请在虚拟机上的 PowerShell 窗口中运行 `cmdkey` 命令。请将 `<storage-account-name>` 替换为你的存储帐户名称，将 `<storage-account-key>` 替换为你的存储帐户密钥：\n\n    cmdkey /add:<storage-account-name>.file.core.chinacloudapi.cn /user:<storage-account-name> /pass:<storage-account-key>\n\n现在，当虚拟机重新启动时，Windows 将重新连接到你的文件共享。可以通过在 PowerShell 窗口中运行 `net use` 命令来验证是否已重新连接共享。\n\n请注意，凭据仅在运行 `cmdkey` 的上下文中持久保存。如果你正在开发作为服务运行的应用程序，你也需要在该上下文中持久保存凭据。\n\n### 使用保存的凭据装载文件共享\n\n建立与虚拟机的远程连接后，便可以使用以下语法运行 `net use` 命令来装载文件共享了。请将 `<storage-account-name>` 替换为你的存储帐户名称，将 `<share-name>` 替换为你的文件存储共享名称。\n\n    net use <drive-letter>: \\\\<storage-account-name>.file.core.chinacloudapi.cn\\<share-name>\n\n    example :\n    net use z: \\\\samples.file.core.chinacloudapi.cn\\logs\n\n由于你已在上一步中保存了存储帐户凭据，因此你无需随 `net use` 命令提供这些凭据。如果你尚未保存凭据，请作为传递给 `net use` 命令的参数提供凭据，如以下示例所示。\n\n    net use <drive-letter>: \\\\<storage-account-name>.file.core.chinacloudapi.cn\\<share-name> /u:<storage-account-name> <storage-account-key>\n\n    example :\n    net use z: \\\\samples.file.core.chinacloudapi.cn\\logs /u:samples <storage-account-key>\n\n现在，你可以使用虚拟机中的文件存储共享，就像使用任何其他驱动器一样。你可以从命令提示符发出标准文件命令，也可以从文件资源管理器查看已装载的共享及其内容。你也可以在虚拟机中运行代码，以便访问使用标准 Windows 文件 I/O API 的文件共享，例如 .NET Framework 中由 [System.IO 命名空间](http://msdn.microsoft.com/zh-cn/library/gg145019.aspx)提供的文件共享。\n\n你还可以通过远程登录到角色中从 Azure 云服务中运行的角色装载文件共享。\n\n### 从运行 Windows 的本地客户端装载文件共享 \n\n若要从本地客户端装载文件共享，必须首先执行以下步骤：\n\n- 安装支持 SMB 3.0 的 Windows 版本。Windows 将利用 SMB 3.0 加密来在本地客户端和云中的 Azure 文件共享之间安全地传输数据。 \n- 根据 SMB 协议的需要，在本地网络中打开端口 445（TCP 出站）的 Internet 访问。 \n\n> [AZURE.NOTE] 某些 Internet 服务提供商可能会阻止端口 445，因此你可能需要与你的服务提供商核实。\n\n## 使用文件存储进行开发\n\n若要以编程方式使用文件存储，可以使用适用于 .NET 和 Java 的存储空间客户端库或 Azure 存储空间 REST API。本部分中的示例演示如何通过在桌面上运行的简单控制台应用程序使用 [Azure .NET 存储空间客户端库](https://msdn.microsoft.com/zh-cn/library/wa_storage_30_reference_home.aspx)处理文件共享。\n\n### 创建控制台应用程序，并获取程序集\n\n若要在 Visual Studio 中创建新的控制台应用程序并安装 Azure 存储 NuGet 包，请执行以下操作：\n\n1. 在 Visual Studio 中，选择“文件”>“新建项目”，然后从 Visual C# 模板列表中选择“Windows”>“控制台应用程序”。\n2. 提供控制台应用程序的名称，然后单击“确定”。\n3. 创建项目后，在解决方案资源管理器中右键单击该项目并选择“管理 NuGet 包”。在线搜索“WindowsAzure.Storage”，然后单击“安装”以安装 Azure 存储包和依赖项。\n\n### 将存储帐户凭据保存到 app.config 文件\n\n接下来，将你的凭据保存到项目的 app.config 文件中。编辑 app.config 文件，使其看起来类似于下面的示例，将 `myaccount` 替换为你的存储帐户名称，并将 `mykey` 替换为你的存储帐户密钥。\n\n    <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n    <configuration>\n        <startup>\n            <supportedRuntime version=\"v4.0\" sku=\".NETFramework,Version=v4.5\" />\n        </startup>\n        <appSettings>\n            <add key=\"StorageConnectionString\" value=\"DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=StorageAccountKeyEndingIn==;EndpointSuffix=core.Chinacloudapi.cn\" />\n        </appSettings>\n    </configuration>\n\n> [AZURE.NOTE] 最新版本的 Azure 存储模拟器不支持文件存储。连接字符串必须针对云中要使用文件存储的 Azure 存储帐户。\n\n### 添加命名空间声明\n\n从解决方案资源管理器打开 program.cs 文件，并在该文件顶部添加以下命名空间声明。\n\n    using Microsoft.WindowsAzure;\n    using Microsoft.WindowsAzure.Storage;\n    using Microsoft.WindowsAzure.Storage.Blob;\n    using Microsoft.WindowsAzure.Storage.File;\n\n### 以编程方式检索连接字符串\n\n可以使用 `Microsoft.WindowsAzure.CloudConfigurationManager` 类或 `System.Configuration.ConfigurationManager ` 类从 app.config 文件中检索保存的凭据。Azure 配置管理器包，其中包括 `Microsoft.WindowsAzure.CloudConfigurationManager` 类，可从 [Nuget](https://www.nuget.org/packages/Microsoft.WindowsAzure.ConfigurationManager) 获得。\n\n此处的示例显示如何使用 `CloudConfigurationManager` 类检索凭据，并使用 `CloudStorageAccount` 类封装这些凭据。将以下代码添加到 program.cs 的 `Main()` 方法中。\n\n    CloudStorageAccount storageAccount = CloudStorageAccount.Parse(\n        CloudConfigurationManager.GetSetting(\"StorageConnectionString\")); \n\n### 以编程方式访问文件共享\n\n接下来，将以下代码添加到 `Main()` 方法（在上面显示的代码后面）以检索连接字符串。此代码将获取我们先前创建的文件的引用，并将其内容输出到控制台窗口中。\n\n    // Create a CloudFileClient object for credentialed access to File storage.\n    CloudFileClient fileClient = storageAccount.CreateCloudFileClient();\n\n    // Get a reference to the file share we created previously.\n    CloudFileShare share = fileClient.GetShareReference(\"logs\");\n\n    // Ensure that the share exists.\n    if (share.Exists())\n    {\n        // Get a reference to the root directory for the share.\n        CloudFileDirectory rootDir = share.GetRootDirectoryReference();\n\n        // Get a reference to the directory we created previously.\n        CloudFileDirectory sampleDir = rootDir.GetDirectoryReference(\"CustomLogs\");\n\n        // Ensure that the directory exists.\n        if (sampleDir.Exists())\n        {\n            // Get a reference to the file we created previously.\n            CloudFile file = sampleDir.GetFileReference(\"Log1.txt\");\n\n            // Ensure that the file exists.\n            if (file.Exists())\n            {\n                // Write the contents of the file to the console window.\n                Console.WriteLine(file.DownloadTextAsync().Result);\n            }\n        }\n    }\n\n运行控制台应用程序以查看输出。\n\n### 设置文件共享的最大大小\n\n从 Azure 存储空间客户端库的 5.x 版开始，可以设置文件共享的配额（或最大大小），单位为千兆字节。你还可以查看共享当前存储了多少数据。\n\n通过设置一个共享的配额，可以限制在该共享上存储的文件的总大小。如果共享上文件的总大小超过在共享上设定的配额，则客户端将不能增加现有文件的大小或创建新文件，除非这些文件是空的。\n\n下面的示例演示如何检查共享的当前使用情况，以及如何设置共享的配额。\n\n    // Parse the connection string for the storage account.\n    CloudStorageAccount storageAccount = CloudStorageAccount.Parse(\n        Microsoft.Azure.CloudConfigurationManager.GetSetting(\"StorageConnectionString\"));\n\n    // Create a CloudFileClient object for credentialed access to File storage.\n    CloudFileClient fileClient = storageAccount.CreateCloudFileClient();\n\n    // Get a reference to the file share we created previously.\n    CloudFileShare share = fileClient.GetShareReference(\"logs\");\n\n    // Ensure that the share exists.\n    if (share.Exists())\n    {\n        // Check current usage stats for the share.\n        // Note that the ShareStats object is part of the protocol layer for the File service.\n        Microsoft.WindowsAzure.Storage.File.Protocol.ShareStats stats = share.GetStats();\n        Console.WriteLine(\"Current share usage: {0} GB\", stats.Usage.ToString());\n\n        // Specify the maximum size of the share, in GB.\n        // This line sets the quota to be 10 GB greater than the current usage of the share.\n        share.Properties.Quota = 10 + stats.Usage;\n        share.SetProperties();\n\n        // Now check the quota for the share. Call FetchAttributes() to populate the share's properties.\n        share.FetchAttributes();\n        Console.WriteLine(\"Current share quota: {0} GB\", share.Properties.Quota);\n    }\n\n### 为文件或文件共享生成共享访问签名\n\n从 Azure 存储空间客户端库的 5.x 版开始，可以为文件共享或单个文件生成共享访问签名 (SAS)。还可以在文件共享上创建一个共享访问策略以管理共享访问签名。建议创建共享访问策略，因为它提供了一种在受到威胁时撤消 SAS 的方式。\n\n以下示例在一个共享上创建共享访问策略，然后使用该策略为共享中的一个文件提供 SAS 约束。\n\n    // Parse the connection string for the storage account.\n    CloudStorageAccount storageAccount = CloudStorageAccount.Parse(\n        Microsoft.Azure.CloudConfigurationManager.GetSetting(\"StorageConnectionString\"));\n\n    // Create a CloudFileClient object for credentialed access to File storage.\n    CloudFileClient fileClient = storageAccount.CreateCloudFileClient();\n\n    // Get a reference to the file share we created previously.\n    CloudFileShare share = fileClient.GetShareReference(\"logs\");\n\n    // Ensure that the share exists.\n    if (share.Exists())\n    {\n        string policyName = \"sampleSharePolicy\" + DateTime.UtcNow.Ticks;\n\n        // Create a new shared access policy and define its constraints.\n        SharedAccessFilePolicy sharedPolicy = new SharedAccessFilePolicy()\n            {\n                SharedAccessExpiryTime = DateTime.UtcNow.AddHours(24),\n                Permissions = SharedAccessFilePermissions.Read | SharedAccessFilePermissions.Write\n            };\n\n        // Get existing permissions for the share.\n        FileSharePermissions permissions = share.GetPermissions();\n\n        // Add the shared access policy to the share's policies. Note that each policy must have a unique name.\n        permissions.SharedAccessPolicies.Add(policyName, sharedPolicy);\n        share.SetPermissions(permissions);\n\n        // Generate a SAS for a file in the share and associate this access policy with it.\n        CloudFileDirectory rootDir = share.GetRootDirectoryReference();\n        CloudFileDirectory sampleDir = rootDir.GetDirectoryReference(\"CustomLogs\");\n        CloudFile file = sampleDir.GetFileReference(\"Log1.txt\");\n        string sasToken = file.GetSharedAccessSignature(null, policyName);\n        Uri fileSasUri = new Uri(file.StorageUri.PrimaryUri.ToString() + sasToken);\n\n        // Create a new CloudFile object from the SAS, and write some text to the file.\n        CloudFile fileSas = new CloudFile(fileSasUri);\n        fileSas.UploadText(\"This write operation is authenticated via SAS.\");\n        Console.WriteLine(fileSas.DownloadText());\n    }\n\n有关创建和使用共享访问签名的更多信息，请参阅[共享访问签名：了解 SAS 模型](/documentation/articles/storage-dotnet-shared-access-signature-part-1)和[创建 SAS 并将 SAS 用于 Blob 存储](/documentation/articles/storage-dotnet-shared-access-signature-part-2)。\n\n### 复制文件\n\n从 Azure 存储空间客户端库的 5.x 版开始，可以将一个文件复制到另一个文件，将一个文件复制到一个 Blob，或将一个 Blob 复制到一个文件。在后续部分中，我们将演示如何以编程方式执行这些复制操作。\n\n还可以使用 AzCopy 将一个文件复制到另一个文件或将一个 Blob 复制到一个文件，反之亦然。请参阅[如何将 AzCopy 与  Azure 存储空间一起使用](/documentation/articles/storage-use-azcopy#copy-files-in-azure-file-storage-with-azcopy-preview-version-only)，以了解有关使用 AzCopy 复制文件的详细信息。\n\n> [AZURE.NOTE] 如果将一个 Blob 复制到一个文件，或将一个文件复制到一个 Blob，必须使用共享访问签名 (SAS) 对源对象进行身份验证，即使你在同一存储帐户内进行复制。\n\n**将一个文件复制到另一个文件**\n\n以下示例将一个文件复制到同一共享中的另一个文件。因为此操作在同一存储帐户中的文件之间进行复制，可以使用共享密钥身份验证来进行复制。\n\n    // Parse the connection string for the storage account.\n    CloudStorageAccount storageAccount = CloudStorageAccount.Parse(\n        Microsoft.Azure.CloudConfigurationManager.GetSetting(\"StorageConnectionString\"));\n\n    // Create a CloudFileClient object for credentialed access to File storage.\n    CloudFileClient fileClient = storageAccount.CreateCloudFileClient();\n\n    // Get a reference to the file share we created previously.\n    CloudFileShare share = fileClient.GetShareReference(\"logs\");\n\n    // Ensure that the share exists.\n    if (share.Exists())\n    {\n        // Get a reference to the root directory for the share.\n        CloudFileDirectory rootDir = share.GetRootDirectoryReference();\n\n        // Get a reference to the directory we created previously.\n        CloudFileDirectory sampleDir = rootDir.GetDirectoryReference(\"CustomLogs\");\n\n        // Ensure that the directory exists.\n        if (sampleDir.Exists())\n        {\n            // Get a reference to the file we created previously.\n            CloudFile sourceFile = sampleDir.GetFileReference(\"Log1.txt\");\n\n            // Ensure that the source file exists.\n            if (sourceFile.Exists())\n            {\n                // Get a reference to the destination file.\n                CloudFile destFile = sampleDir.GetFileReference(\"Log1Copy.txt\");\n\n                // Start the copy operation.\n                destFile.StartCopy(sourceFile);\n\n                // Write the contents of the destination file to the console window.\n                Console.WriteLine(destFile.DownloadText());\n            }\n        }\n    }\n\n\n**将一个文件复制到一个 Blob**\n\n以下示例创建一个文件并将其复制到同一存储帐户中的某个 blob。该示例为源文件创建一个 SAS，服务在复制操作期间使用该 SAS 验证对源文件的访问。\n\n    // Parse the connection string for the storage account.\n    CloudStorageAccount storageAccount = CloudStorageAccount.Parse(\n        Microsoft.Azure.CloudConfigurationManager.GetSetting(\"StorageConnectionString\"));\n\n    // Create a CloudFileClient object for credentialed access to File storage.\n    CloudFileClient fileClient = storageAccount.CreateCloudFileClient();\n\n    // Create a new file share, if it does not already exist.\n    CloudFileShare share = fileClient.GetShareReference(\"sample-share\");\n    share.CreateIfNotExists();\n\n    // Create a new file in the root directory.\n    CloudFile sourceFile = share.GetRootDirectoryReference().GetFileReference(\"sample-file.txt\");\n    sourceFile.UploadText(\"A sample file in the root directory.\");\n\n    // Get a reference to the blob to which the file will be copied.\n    CloudBlobClient blobClient = storageAccount.CreateCloudBlobClient();\n    CloudBlobContainer container = blobClient.GetContainerReference(\"sample-container\");\n    container.CreateIfNotExists();\n    CloudBlockBlob destBlob = container.GetBlockBlobReference(\"sample-blob.txt\");\n\n    // Create a SAS for the file that's valid for 24 hours.\n    // Note that when you are copying a file to a blob, or a blob to a file, you must use a SAS\n    // to authenticate access to the source object, even if you are copying within the same\n    // storage account.\n    string fileSas = sourceFile.GetSharedAccessSignature(new SharedAccessFilePolicy()\n    {\n        // Only read permissions are required for the source file.\n        Permissions = SharedAccessFilePermissions.Read,\n        SharedAccessExpiryTime = DateTime.UtcNow.AddHours(24)\n    });\n\n    // Construct the URI to the source file, including the SAS token.\n    Uri fileSasUri = new Uri(sourceFile.StorageUri.PrimaryUri.ToString() + fileSas);\n\n    // Copy the file to the blob.\n    destBlob.StartCopy(fileSasUri);\n\n    // Write the contents of the file to the console window.\n    Console.WriteLine(\"Source file contents: {0}\", sourceFile.DownloadText());\n    Console.WriteLine(\"Destination blob contents: {0}\", destBlob.DownloadText());\n\n可以用相同的方式将一个 Blob 复制到一个文件。如果源对象是一个 Blob，则创建一个 SAS 以复制操作期间验证对该 Blob 的访问。\n\n## 使用指标对文件存储进行故障排除\n\nAzure 存储服务分析现在支持用于文件存储的指标。使用指标数据，可以跟踪请求和诊断问题。\n\n可以从[管理门户](https://manage.windowsazure.cn)为文件存储启用指标。你还可以通过 REST API 或存储客户端库中的类似物之一调用“设置文件服务属性”操作，以编程方式启用指标。\n\n## 文件存储常见问题\n\n1. **文件存储是否支持基于 Active Directory 的身份验证？** \n\n    我们目前不支持基于 AD 的身份验证或 ACL，但会将其列入我们的功能请求列表中。目前，Azure 存储帐户密钥用于为文件共享提供身份验证。我们确实提供通过 REST API 或客户端库使用共享访问签名 (SAS) 的解决方法。使用 SAS，可以生成具有在指定的时间间隔内有效的特定权限的令牌。例如，你可以生成对给定文件具有只读访问权限的令牌。在此令牌的有效期内拥有此令牌的任何人对该文件具有只读访问权限。\n\n    仅通过 REST API 或客户端库支持 SAS。通过 SMB 协议装载文件共享时，不能使用 SAS 委派对其内容的访问权限。\n\n2. **Azure 文件共享是在 Internet 上公开可见，还是只能通过 Azure 对其进行访问？**\n \n    只要端口 445（TCP 出站）处于打开状态且客户端支持 SMB 3.0 协议（ *例如* ，Windows 8 或 Windows Server 2012），文件共享就可通过 Internet 使用。\n\n3. **Azure 虚拟机与文件共享之间的网络流量是否算作对订阅计费的外部带宽？**\n\n    如果文件共享和虚拟机位于不同的区域，则它们之间的流量将作为外部带宽收费。\n \n4. **如果是虚拟机和同一区域中的文件共享之间的网络流量，是免费吗？**\n\n    是的。如果流量在同一区域，是免费的。\n\n5. **从本地虚拟机连接到 Azure 文件存储是否依赖于 Azure ExpressRoute？**\n\n    否。如果你没有 ExpressRoute，你仍可以从本地访问文件共享，只要你将端口 445（TCP 出站）打开供 Internet 访问。但是，如果你愿意，你可以将 ExpressRoute 用于文件存储。\n\n6. **故障转移群集的“文件共享见证”是 Azure 文件存储的使用案例之一吗？**\n\n    目前，不支持此功能。\n \n7. **当前仅通过 LRS 或 GRS 复制文件存储，对吗？**\n\n    我们计划支持 RA-GRS，但尚没有共享时间表。\n\n8. **何时能够将现有存储帐户用于 Azure 文件存储？**\n\n    现已为所有存储帐户启用 Azure 文件存储。\n\n9. **是否会将重命名操作也添加到 REST API？**\n\n    在我们的 REST API 中尚不支持重命名。\n\n10. **能否使用嵌套共享，换而言之就是共享下的共享？**\n\n    否。文件共享是你可以装载的虚拟驱动程序，因此不支持嵌套共享。\n\n11. **是否可以对共享中的文件夹指定只读或只写权限？**\n\n    如果通过 SMB 装载文件共享，你不具有此级别的权限控制。但是，你可以通过 REST API 或客户端库创建共享访问签名 (SAS) 来实现此控制。\n\n12. **尝试将文件解压缩到文件存储中时我的性能速度太慢。我该怎样做？**\n\n    若要将大量文件传输到文件存储，建议使用 AzCopy、Azure Powershell (Windows) 或 Azure CLI (Linux/Unix)，因为这些工具已针对网络传输进行优化。\n\n## 后续步骤\n\n请参阅以下链接以获取有关 Azure 文件存储的更多信息。\n\n### 概念性文章\n\n- [如何通过 Linux 使用 Azure 文件存储](/documentation/articles/storage-how-to-use-files-linux)\n\n### 文件存储的工具支持\n\n- [对 Azure 存储空间使用 Azure PowerShell](/documentation/articles/storage-powershell-guide-full)\n- [如何对 Azure 存储空间使用 AzCopy](/documentation/articles/storage-use-azcopy)\n- [将 Azure CLI 用于 Azure 存储空间](/documentation/articles/storage-azure-cli#create-and-manage-file-shares)\n\n### 引用\n\n- [.NET 存储客户端库参考](https://msdn.microsoft.com/zh-cn/library/azure/dn261237.aspx)\n- [文件服务 REST API 参考](http://msdn.microsoft.com/zh-cn/library/azure/dn167006.aspx)\n\n### 博客文章\n\n- [深入了解 Azure 文件存储](/home/features/storage) \n- [Azure 文件服务简介](http://blogs.msdn.com/b/windowsazurestorage/archive/2014/05/12/introducing-microsoft-azure-file-service.aspx)\n- [将连接保存到 Azure 文件中](http://blogs.msdn.com/b/windowsazurestorage/archive/2014/05/27/persisting-connections-to-microsoft-azure-files.aspx)\n\n<!---HONumber=Mooncake_0307_2016-->"
}