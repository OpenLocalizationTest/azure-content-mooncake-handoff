<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e39df8a8029a977d6f7e99b33fe4e884ec4f8942</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>如何通过 Python 使用表存储 | Azure</source>
          <target state="new">如何通过 Python 使用表存储 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何通过 Python 使用表服务来创建和删除表，以及插入和查询表。</source>
          <target state="new">了解如何通过 Python 使用表服务来创建和删除表，以及插入和查询表。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>如何通过 Python 使用表存储</source>
          <target state="new">如何通过 Python 使用表存储</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>概述</source>
          <target state="new">概述</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>本指南将演示如何使用 Azure 表存储服务执行常见方案。相关示例是使用 Python 编写的，并使用 [Python Azure 存储包][]。涉及的方案包括创建和删除表、以及在表中插入和查询实体。</source>
          <target state="new">本指南将演示如何使用 Azure 表存储服务执行常见方案。相关示例是使用 Python 编写的，并使用 [Python Azure 存储包][]。涉及的方案包括创建和删除表、以及在表中插入和查询实体。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>如果您需要安装 Python 或 <bpt id="p1">[</bpt>Python Azure 包<ept id="p1">][]</ept>，请参阅 <bpt id="p2">[</bpt>Python 安装指南<ept id="p2">](/documentation/articles/python-how-to-install)</ept>。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>如果您需要安装 Python 或 <bpt id="p1">[</bpt>Python Azure 包<ept id="p1">][]</ept>，请参阅 <bpt id="p2">[</bpt>Python 安装指南<ept id="p2">](/documentation/articles/python-how-to-install)</ept>。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>创建表</source>
          <target state="new">创建表</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>可通过 <bpt id="p1">**</bpt>TableService<ept id="p1">**</ept> 对象使用表服务。以下代码创建 <bpt id="p2">**</bpt>TableService<ept id="p2">**</ept> 对象。在你希望在其中以编程方式访问 Azure 存储空间的任何 Python 文件中，将代码添加到文件的顶部附近：</source>
          <target state="new">可通过 <bpt id="p1">**</bpt>TableService<ept id="p1">**</ept> 对象使用表服务。以下代码创建 <bpt id="p2">**</bpt>TableService<ept id="p2">**</ept> 对象。在你希望在其中以编程方式访问 Azure 存储空间的任何 Python 文件中，将代码添加到文件的顶部附近：</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>以下代码使用存储帐户名称和帐户密钥创建 <bpt id="p1">**</bpt>TableService<ept id="p1">**</ept> 对象。使用实际帐户和密钥替换“myaccount”和“mykey”。</source>
          <target state="new">以下代码使用存储帐户名称和帐户密钥创建 <bpt id="p1">**</bpt>TableService<ept id="p1">**</ept> 对象。使用实际帐户和密钥替换“myaccount”和“mykey”。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>将实体添加到表</source>
          <target state="new">将实体添加到表</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>若要添加实体，请首先创建定义实体属性名称和值的字典。请注意，对于每个实体，你必须指定 <bpt id="p1">**</bpt>PartitionKey<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>RowKey<ept id="p2">**</ept>。这些是您的实体的唯一标识符。您可以查询这些值，比查询其他属性快得多。系统使用 <bpt id="p3">**</bpt>PartitionKey<ept id="p3">**</ept> 自动将表的实体分发到多个存储节点上。具有相同的 <bpt id="p4">**</bpt>PartitionKey<ept id="p4">**</ept> 的实体存储在同一个节点上。<bpt id="p5">**</bpt>RowKey<ept id="p5">**</ept> 是实体在其所属分区内的唯一 ID。</source>
          <target state="new">若要添加实体，请首先创建定义实体属性名称和值的字典。请注意，对于每个实体，你必须指定 <bpt id="p1">**</bpt>PartitionKey<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>RowKey<ept id="p2">**</ept>。这些是您的实体的唯一标识符。您可以查询这些值，比查询其他属性快得多。系统使用 <bpt id="p3">**</bpt>PartitionKey<ept id="p3">**</ept> 自动将表的实体分发到多个存储节点上。具有相同的 <bpt id="p4">**</bpt>PartitionKey<ept id="p4">**</ept> 的实体存储在同一个节点上。<bpt id="p5">**</bpt>RowKey<ept id="p5">**</ept> 是实体在其所属分区内的唯一 ID。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>若要将实体添加到表中，请将字典对象传递给 <bpt id="p1">**</bpt>insert_entity<ept id="p1">**</ept> 方法。</source>
          <target state="new">若要将实体添加到表中，请将字典对象传递给 <bpt id="p1">**</bpt>insert_entity<ept id="p1">**</ept> 方法。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>你还可以将 <bpt id="p1">**</bpt>Entity<ept id="p1">**</ept> 类的实例传递给 <bpt id="p2">**</bpt>insert_entity<ept id="p2">**</ept> 方法。</source>
          <target state="new">你还可以将 <bpt id="p1">**</bpt>Entity<ept id="p1">**</ept> 类的实例传递给 <bpt id="p2">**</bpt>insert_entity<ept id="p2">**</ept> 方法。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>更新实体</source>
          <target state="new">更新实体</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>此代码演示如何使用更新版本替换现有实体的旧版本。</source>
          <target state="new">此代码演示如何使用更新版本替换现有实体的旧版本。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>如果要更新的实体不存在，更新操作将失败。如果你要存储实体，而不管它以前是否已存在，请使用 <bpt id="p1">**</bpt>insert_or_replace_entity<ept id="p1">**</ept>。在下面的示例中，第一次调用将替换现有实体。第二次调用将插入新实体，因为表中不存在具有指定的 <bpt id="p2">**</bpt>PartitionKey<ept id="p2">**</ept> 和 <bpt id="p3">**</bpt>RowKey<ept id="p3">**</ept> 的实体。</source>
          <target state="new">如果要更新的实体不存在，更新操作将失败。如果你要存储实体，而不管它以前是否已存在，请使用 <bpt id="p1">**</bpt>insert_or_replace_entity<ept id="p1">**</ept>。在下面的示例中，第一次调用将替换现有实体。第二次调用将插入新实体，因为表中不存在具有指定的 <bpt id="p2">**</bpt>PartitionKey<ept id="p2">**</ept> 和 <bpt id="p3">**</bpt>RowKey<ept id="p3">**</ept> 的实体。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>更改实体组</source>
          <target state="new">更改实体组</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>有时，有必要成批地同时提交多项操作以确保通过服务器进行原子处理。若要实现该目的，请对 <bpt id="p1">**</bpt>TableService<ept id="p1">**</ept> 使用 <bpt id="p2">**</bpt>begin_batch<ept id="p2">**</ept> 方法，然后像通常一样调用一系列操作。在你确实要按批提交时，可调用 <bpt id="p3">**</bpt>commit_batch<ept id="p3">**</ept>。请注意，所有实体必须在相同分区中才能更改为批处理。下面的示例将两个实体一起添加到批处理中。</source>
          <target state="new">有时，有必要成批地同时提交多项操作以确保通过服务器进行原子处理。若要实现该目的，请对 <bpt id="p1">**</bpt>TableService<ept id="p1">**</ept> 使用 <bpt id="p2">**</bpt>begin_batch<ept id="p2">**</ept> 方法，然后像通常一样调用一系列操作。在你确实要按批提交时，可调用 <bpt id="p3">**</bpt>commit_batch<ept id="p3">**</ept>。请注意，所有实体必须在相同分区中才能更改为批处理。下面的示例将两个实体一起添加到批处理中。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>查询实体</source>
          <target state="new">查询实体</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>若要查询表中的实体，请使用 <bpt id="p1">**</bpt>get_entity<ept id="p1">**</ept> 方法并传递 <bpt id="p2">**</bpt>PartitionKey<ept id="p2">**</ept> 和 <bpt id="p3">**</bpt>RowKey<ept id="p3">**</ept>。</source>
          <target state="new">若要查询表中的实体，请使用 <bpt id="p1">**</bpt>get_entity<ept id="p1">**</ept> 方法并传递 <bpt id="p2">**</bpt>PartitionKey<ept id="p2">**</ept> 和 <bpt id="p3">**</bpt>RowKey<ept id="p3">**</ept>。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>查询实体集</source>
          <target state="new">查询实体集</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>此示例基于 <bpt id="p1">**</bpt>PartitionKey<ept id="p1">**</ept> 查找 Seattle 中的所有任务。</source>
          <target state="new">此示例基于 <bpt id="p1">**</bpt>PartitionKey<ept id="p1">**</ept> 查找 Seattle 中的所有任务。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>查询一部分实体属性</source>
          <target state="new">查询一部分实体属性</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>对表的查询可以只检索实体中的少数几个属性。此方法称为“投影”，可减少带宽并提高查询性能，尤其适用于大型实体。使用 <bpt id="p1">**</bpt>select<ept id="p1">**</ept> 参数并传递你希望显示给客户端的属性的名称。</source>
          <target state="new">对表的查询可以只检索实体中的少数几个属性。此方法称为“投影”，可减少带宽并提高查询性能，尤其适用于大型实体。使用 <bpt id="p1">**</bpt>select<ept id="p1">**</ept> 参数并传递你希望显示给客户端的属性的名称。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>以下代码中的查询只返回表中实体的说明。</source>
          <target state="new">以下代码中的查询只返回表中实体的说明。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>下面的代码段仅对云存储服务有效。不受存储模拟器支持。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>下面的代码段仅对云存储服务有效。不受存储模拟器支持。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>删除实体</source>
          <target state="new">删除实体</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>可以使用实体的分区键和行键删除实体。</source>
          <target state="new">可以使用实体的分区键和行键删除实体。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>删除表</source>
          <target state="new">删除表</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>以下代码从存储帐户中删除一个表。</source>
          <target state="new">以下代码从存储帐户中删除一个表。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>现在，您已了解有关表存储的基础知识，请按照下面的链接了解更复杂的存储任务：</source>
          <target state="new">现在，您已了解有关表存储的基础知识，请按照下面的链接了解更复杂的存储任务：</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>请参阅 MSDN 参考：[Azure 存储服务][]。</source>
          <target state="new">请参阅 MSDN 参考：[Azure 存储服务][]。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>访问 <bpt id="p1">[</bpt>Azure 存储空间团队博客<ept id="p1">][]</ept>。</source>
          <target state="new">访问 <bpt id="p1">[</bpt>Azure 存储空间团队博客<ept id="p1">][]</ept>。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>有关详细信息，另请参阅 <bpt id="p1">[</bpt>Python 开发人员中心<ept id="p1">](/develop/python/)</ept>。</source>
          <target state="new">有关详细信息，另请参阅 <bpt id="p1">[</bpt>Python 开发人员中心<ept id="p1">](/develop/python/)</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>