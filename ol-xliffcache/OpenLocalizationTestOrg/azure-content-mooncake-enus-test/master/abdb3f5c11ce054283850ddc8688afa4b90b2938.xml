{
  "nodes": [
    {
      "content": "跨数据库查询（垂直分区）入门 | Azure",
      "pos": [
        27,
        49
      ]
    },
    {
      "content": "如何在垂直分区数据库中使用弹性数据库查询",
      "pos": [
        70,
        90
      ]
    },
    {
      "content": "跨数据库查询（垂直分区）入门",
      "pos": [
        291,
        305
      ]
    },
    {
      "pos": [
        308,
        452
      ],
      "content": "Azure SQL 数据库弹性数据库查询（预览版）可让你使用单一连接点运行跨多个数据库的 T-SQL 查询。本主题适用于<bpt id=\"p1\">[</bpt>垂直分区数据库<ept id=\"p1\">](/documentation/articles/sql-database-elastic-query-vertical-partitioning)</ept>。"
    },
    {
      "content": "完成时，你将会：了解如何配置和使用 Azure SQL 数据库执行跨多个相关数据库的查询。",
      "pos": [
        454,
        499
      ]
    },
    {
      "pos": [
        501,
        608
      ],
      "content": "有关弹性数据库查询功能的详细信息，请参阅 <bpt id=\"p1\">[</bpt>Azure SQL 数据库弹性数据库查询概述<ept id=\"p1\">](/documentation/articles/sql-database-elastic-query-overview)</ept>。"
    },
    {
      "content": "创建示例数据库",
      "pos": [
        613,
        620
      ]
    },
    {
      "pos": [
        622,
        676
      ],
      "content": "首先，我们需要在相同或不同逻辑服务器中创建两个数据库 <bpt id=\"p1\">**</bpt>Customers<ept id=\"p1\">**</ept> 和 <bpt id=\"p2\">**</bpt>Orders<ept id=\"p2\">**</ept>。"
    },
    {
      "pos": [
        678,
        735
      ],
      "content": "在 <bpt id=\"p1\">**</bpt>Orders<ept id=\"p1\">**</ept> 数据库中执行以下查询以创建 <bpt id=\"p2\">**</bpt>OrderInformation<ept id=\"p2\">**</ept> 表并输入示例数据。"
    },
    {
      "content": "现在，在 Customers 数据库中执行以下查询以创建 CustomerInformation 表并输入示例数据。",
      "pos": [
        1285,
        1343
      ]
    },
    {
      "content": "创建数据库对象",
      "pos": [
        1934,
        1941
      ]
    },
    {
      "content": "数据库范围的主密钥和凭据",
      "pos": [
        1946,
        1958
      ]
    },
    {
      "content": "它们用来连接到分片映射管理器和分片：",
      "pos": [
        1961,
        1979
      ]
    },
    {
      "content": "在 Visual Studio 中打开 SQL Server Management Studio 或 SQL Server Data Tools。",
      "pos": [
        1984,
        2057
      ]
    },
    {
      "content": "连接到 Orders 数据库，并执行以下 T-SQL 命令：",
      "pos": [
        2061,
        2091
      ]
    },
    {
      "content": "“username”和“password”应是用于登录到 Customers 数据库的用户名和密码。",
      "pos": [
        2298,
        2348
      ]
    },
    {
      "content": "外部数据源",
      "pos": [
        2354,
        2359
      ]
    },
    {
      "content": "若要创建外部数据源，请对 Orders 数据库执行以下命令：",
      "pos": [
        2360,
        2390
      ]
    },
    {
      "content": "外部表",
      "pos": [
        2634,
        2637
      ]
    },
    {
      "content": "在 Orders 数据库中创建外部表，该表应与 CustomerInformation 表的定义相匹配：",
      "pos": [
        2638,
        2690
      ]
    },
    {
      "content": "执行示例弹性数据库 T-SQL 查询",
      "pos": [
        2930,
        2948
      ]
    },
    {
      "content": "定义外部数据源和外部表后，现在可以使用 T-SQL 查询外部表。对 Orders 数据库执行以下查询：",
      "pos": [
        2950,
        3001
      ]
    },
    {
      "content": "成本",
      "pos": [
        3268,
        3270
      ]
    },
    {
      "content": "目前，弹性数据库查询功能包含在 Azure SQL 数据库的成本中。",
      "pos": [
        3272,
        3306
      ]
    },
    {
      "pos": [
        3308,
        3362
      ],
      "content": "有关定价信息，请参阅 <bpt id=\"p1\">[</bpt>SQL 数据库定价<ept id=\"p1\">](/pricing/details/sql-database)</ept>。"
    }
  ],
  "content": "<properties\n    pageTitle=\"跨数据库查询（垂直分区）入门 | Azure\"  \n    description=\"如何在垂直分区数据库中使用弹性数据库查询\"\n    services=\"sql-database\"\n    documentationCenter=\"\"  \n    manager=\"jeffreyg\"\n    authors=\"sidneyh\"/>\n\n<tags\n    ms.service=\"sql-database\"\n    ms.date=\"01/26/2016\"\n    wacn.date=\"02/19/2016\" />\n\n# 跨数据库查询（垂直分区）入门 \n\nAzure SQL 数据库弹性数据库查询（预览版）可让你使用单一连接点运行跨多个数据库的 T-SQL 查询。本主题适用于[垂直分区数据库](/documentation/articles/sql-database-elastic-query-vertical-partitioning)。\n\n完成时，你将会：了解如何配置和使用 Azure SQL 数据库执行跨多个相关数据库的查询。\n\n有关弹性数据库查询功能的详细信息，请参阅 [Azure SQL 数据库弹性数据库查询概述](/documentation/articles/sql-database-elastic-query-overview)。\n\n## 创建示例数据库\n\n首先，我们需要在相同或不同逻辑服务器中创建两个数据库 **Customers** 和 **Orders**。\n\n在 **Orders** 数据库中执行以下查询以创建 **OrderInformation** 表并输入示例数据。\n\n    CREATE TABLE [dbo].[OrderInformation]( \n        [OrderID] [int] NOT NULL, \n        [CustomerID] [int] NOT NULL \n        ) \n    INSERT INTO [dbo].[OrderInformation] ([OrderID], [CustomerID]) VALUES (123, 1) \n    INSERT INTO [dbo].[OrderInformation] ([OrderID], [CustomerID]) VALUES (149, 2) \n    INSERT INTO [dbo].[OrderInformation] ([OrderID], [CustomerID]) VALUES (857, 2) \n    INSERT INTO [dbo].[OrderInformation] ([OrderID], [CustomerID]) VALUES (321, 1) \n    INSERT INTO [dbo].[OrderInformation] ([OrderID], [CustomerID]) VALUES (564, 8) \n\n现在，在 Customers 数据库中执行以下查询以创建 CustomerInformation 表并输入示例数据。\n\n    CREATE TABLE [dbo].[CustomerInformation]( \n        [CustomerID] [int] NOT NULL, \n        [CustomerName] [varchar](50) NULL, \n        [Company] [varchar](50) NULL \n        CONSTRAINT [CustID] PRIMARY KEY CLUSTERED ([CustomerID] ASC) \n    ) \n    INSERT INTO [dbo].[CustomerInformation] ([CustomerID], [CustomerName], [Company]) VALUES (1, 'Jack', 'ABC') \n    INSERT INTO [dbo].[CustomerInformation] ([CustomerID], [CustomerName], [Company]) VALUES (2, 'Steve', 'XYZ') \n    INSERT INTO [dbo].[CustomerInformation] ([CustomerID], [CustomerName], [Company]) VALUES (3, 'Lylla', 'MNO') \n\n## 创建数据库对象\n### 数据库范围的主密钥和凭据\n\n\n它们用来连接到分片映射管理器和分片：\n\n1. 在 Visual Studio 中打开 SQL Server Management Studio 或 SQL Server Data Tools。\n2. 连接到 Orders 数据库，并执行以下 T-SQL 命令：\n\n        CREATE MASTER KEY ENCRYPTION BY PASSWORD = '<password>'; \n        CREATE DATABASE SCOPED CREDENTIAL ElasticDBQueryCred \n        WITH IDENTITY = '<username>', \n        SECRET = '<password>';  \n\n    “username”和“password”应是用于登录到 Customers 数据库的用户名和密码。\n\n### 外部数据源\n若要创建外部数据源，请对 Orders 数据库执行以下命令：\n\n    CREATE EXTERNAL DATA SOURCE MyElasticDBQueryDataSrc WITH \n        (TYPE = RDBMS, \n        LOCATION = '<server_name>.database.chinacloudapi.cn', \n        DATABASE_NAME = 'Customers', \n        CREDENTIAL = ElasticDBQueryCred, \n    ) ;\n\n### 外部表\n在 Orders 数据库中创建外部表，该表应与 CustomerInformation 表的定义相匹配：\n\n    CREATE EXTERNAL TABLE [dbo].[CustomerInformation] \n    ( [CustomerID] [int] NOT NULL, \n      [CustomerName] [varchar](50) NOT NULL, \n      [Company] [varchar](50) NOT NULL) \n    WITH \n    ( DATA_SOURCE = MyElasticDBQueryDataSrc) \n\n## 执行示例弹性数据库 T-SQL 查询\n\n定义外部数据源和外部表后，现在可以使用 T-SQL 查询外部表。对 Orders 数据库执行以下查询：\n\n    SELECT OrderInformation.CustomerID, OrderInformation.OrderId, CustomerInformation.CustomerName, CustomerInformation.Company \n    FROM OrderInformation \n    INNER JOIN CustomerInformation \n    ON CustomerInformation.CustomerID = OrderInformation.CustomerID \n\n## 成本\n\n目前，弹性数据库查询功能包含在 Azure SQL 数据库的成本中。\n\n有关定价信息，请参阅 [SQL 数据库定价](/pricing/details/sql-database)。\n\n\n[AZURE.INCLUDE [elastic-scale-include](../includes/elastic-scale-include.md)]\n\n<!--Image references-->\n\n<!--anchors-->\n\n<!---HONumber=Mooncake_1207_2015-->"
}