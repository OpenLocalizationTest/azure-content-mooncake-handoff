{
  "nodes": [
    {
      "content": "使用 FTP 在 Azure 中创建和部署 PHP-MySQL Web 应用",
      "pos": [
        28,
        66
      ]
    },
    {
      "content": "本教程演示如何创建在 MySQL 中存储数据的 PHP Web 应用并使用 FTP 部署到 Azure。",
      "pos": [
        86,
        138
      ]
    },
    {
      "content": "使用 FTP 在 Azure 中创建和部署 PHP-MySQL Web 应用",
      "pos": [
        359,
        397
      ]
    },
    {
      "content": "[AZURE.SELECTOR]",
      "pos": [
        401,
        417
      ]
    },
    {
      "content": ".Net",
      "pos": [
        421,
        425
      ]
    },
    {
      "content": "Node.js",
      "pos": [
        484,
        491
      ]
    },
    {
      "content": "Java",
      "pos": [
        557,
        561
      ]
    },
    {
      "content": "PHP - Git",
      "pos": [
        618,
        627
      ]
    },
    {
      "content": "PHP - FTP",
      "pos": [
        692,
        701
      ]
    },
    {
      "content": "Python",
      "pos": [
        766,
        772
      ]
    },
    {
      "pos": [
        835,
        1036
      ],
      "content": "本教程演示如何创建 PHP-MySQL Web 应用以及如何使用 FTP 部署该应用。本教程假定你已在计算机上安装 <bpt id=\"p1\">[</bpt>PHP<ept id=\"p1\">][install-php]</ept>、<bpt id=\"p2\">[</bpt>MySQL<ept id=\"p2\">][install-mysql]</ept>、Web 服务器和 FTP 客户端。本教程中的说明适用于任何操作系统，包括 Windows、Mac 和 Linux。完成本指南之后，你将拥有一个在 Azure 中运行的 PHP/MySQL Web 应用。"
    },
    {
      "content": "你将学习以下内容：",
      "pos": [
        1039,
        1048
      ]
    },
    {
      "content": "如何使用 Azure 管理门户创建 Web 应用和 MySQL 数据库。由于 Web 应用默认已启用 PHP，因此运行 PHP 代码没有任何特殊要求。",
      "pos": [
        1052,
        1127
      ]
    },
    {
      "content": "如何使用 FTP 将应用程序发布到 Azure。",
      "pos": [
        1130,
        1154
      ]
    },
    {
      "content": "通过按照本教程中的说明进行操作，你将在 PHP 中构建简单的注册 Web 应用。将在 Web 应用中托管应用程序。以下是已完成应用程序的屏幕快照：",
      "pos": [
        1157,
        1230
      ]
    },
    {
      "content": "Azure PHP Web 应用",
      "pos": [
        1234,
        1250
      ]
    },
    {
      "content": "创建 Web 应用并设置 FTP 发布",
      "pos": [
        1269,
        1288
      ]
    },
    {
      "content": "按照以下步骤创建 Web 应用和 MySQL 数据库：",
      "pos": [
        1290,
        1317
      ]
    },
    {
      "pos": [
        1322,
        1358
      ],
      "content": "登录到 <bpt id=\"p1\">[</bpt>Azure 管理门户<ept id=\"p1\">][management-portal]</ept>。"
    },
    {
      "content": "单击该门户左下的“+ 新建”图标。",
      "pos": [
        1362,
        1379
      ]
    },
    {
      "content": "创建新的 Azure Web 应用",
      "pos": [
        1387,
        1404
      ]
    },
    {
      "content": "单击“ Web 应用”，然后单击“自定义创建”。",
      "pos": [
        1423,
        1447
      ]
    },
    {
      "content": "在“URL”中输入值，从“数据库”下拉列表中选择“无数据库”，然后在“区域”下拉列表中选择 Web 应用的数据中心。点击确定新建 Web 应用",
      "pos": [
        1457,
        1528
      ]
    },
    {
      "content": "填写 Web 应用详细信息",
      "pos": [
        1536,
        1549
      ]
    },
    {
      "content": "继续单击“新建” --&gt; “数据服务” --&gt; “MYSQL DATABASE ON AZURE” --&gt; “快速创建”，为你的 Web 应用创建一个 MYSQL 数据库。",
      "pos": [
        1572,
        1658
      ]
    },
    {
      "content": "数据库",
      "pos": [
        1666,
        1669
      ]
    },
    {
      "content": "创建 Web 应用后，你将看到文本“创建 Web 应用 ‘[SITENAME]’ 成功完成”。现在，您可以启用 Git 发布。",
      "pos": [
        1690,
        1753
      ]
    },
    {
      "content": "单击 Web 应用列表中显示的 Web 应用的名称以打开该 Web 应用的“快速启动”仪表板。",
      "pos": [
        1758,
        1805
      ]
    },
    {
      "content": "打开 Web 应用仪表板",
      "pos": [
        1813,
        1825
      ]
    },
    {
      "content": "在“快速启动”页的底部，单击“重置部署凭据”。",
      "pos": [
        1849,
        1872
      ]
    },
    {
      "content": "重置部署凭据",
      "pos": [
        1880,
        1886
      ]
    },
    {
      "content": "若要启用 FTP 发布，必须提供用户名和密码。记下你创建的用户名和密码。",
      "pos": [
        1922,
        1958
      ]
    },
    {
      "content": "创建发布凭据",
      "pos": [
        1966,
        1972
      ]
    },
    {
      "content": "在本地生成并测试应用",
      "pos": [
        2007,
        2017
      ]
    },
    {
      "content": "注册应用程序是一个简单的 PHP 应用程序，它使您能够通过提供您的姓名和电子邮件地址来注册事件。有关以前的注册者的信息将显示在表中。注册信息将存储在 MySQL 数据库中。该应用由两个文件组成：",
      "pos": [
        2019,
        2116
      ]
    },
    {
      "pos": [
        2120,
        2152
      ],
      "content": "<bpt id=\"p1\">**</bpt>index.php<ept id=\"p1\">**</ept>：将显示注册形式及包含注册者信息的表。"
    },
    {
      "pos": [
        2155,
        2204
      ],
      "content": "<bpt id=\"p1\">**</bpt>createtable.php<ept id=\"p1\">**</ept>：创建用于应用程序的 MySQL 表。该文件只能被使用一次。"
    },
    {
      "pos": [
        2206,
        2302
      ],
      "content": "若要本地构建和运行应用，请执行下列步骤。请注意，这些步骤假定你已在本地计算机上设置 PHP、MySQL 和 Web 服务器，并且已启用 <bpt id=\"p1\">[</bpt>MySQL 的 PDO 扩展<ept id=\"p1\">][pdo-mysql]</ept>。"
    },
    {
      "pos": [
        2307,
        2367
      ],
      "content": "创建名为 <ph id=\"ph1\">`registration`</ph> 的 MySQL 数据库。您可以在 MySQL 命令提示符中使用此命令执行此操作："
    },
    {
      "pos": [
        2418,
        2514
      ],
      "content": "在 Web 服务器的根目录中，创建一个名为 <ph id=\"ph1\">`registration`</ph> 的文件夹，并在其中创建两个文件 - 一个名为 <ph id=\"ph2\">`createtable.php`</ph>，另一个名为 <ph id=\"ph3\">`index.php`</ph>。"
    },
    {
      "pos": [
        2519,
        2614
      ],
      "content": "在文本编辑器或 IDE 中打开 <ph id=\"ph1\">`createtable.php`</ph> 文件并添加以下代码。此代码将用于在 <ph id=\"ph2\">`registration`</ph> 数据库中创建 <ph id=\"ph3\">`registration_tbl`</ph> 表。"
    },
    {
      "pos": [
        3380,
        3463
      ],
      "content": "[AZURE.NOTE]\n需要使用本地 MySQL 用户名和密码更新 <code>$user</code> 和 <code>$pwd</code> 的值。",
      "leadings": [
        "",
        "    > "
      ],
      "nodes": [
        {
          "content": "需要使用本地 MySQL 用户名和密码更新 <ph id=\"ph1\">&lt;code&gt;</ph><ph id=\"ph2\">$user</ph><ph id=\"ph3\">&lt;/code&gt;</ph> 和 <ph id=\"ph4\">&lt;code&gt;</ph><ph id=\"ph5\">$pwd</ph><ph id=\"ph6\">&lt;/code&gt;</ph> 的值。",
          "pos": [
            13,
            77
          ]
        }
      ]
    },
    {
      "pos": [
        3468,
        3585
      ],
      "content": "打开 Web 浏览器并浏览到 <bpt id=\"p1\">[</bpt>http://localhost/registration/createtable.php<ept id=\"p1\">][localhost-createtable]</ept>。这将在数据库中创建 <ph id=\"ph1\">`registration_tbl`</ph> 表。"
    },
    {
      "pos": [
        3590,
        3664
      ],
      "content": "在文本编辑器或 IDE 中打开 <bpt id=\"p1\">**</bpt>index.php<ept id=\"p1\">**</ept> 文件，并为页面添加基本 HTML 和 CSS 代码（将在后续步骤中添加 PHP 代码）。"
    },
    {
      "content": "在 PHP 标记中，添加用于连接到数据库的 PHP 代码。",
      "pos": [
        4924,
        4953
      ]
    },
    {
      "pos": [
        5385,
        5471
      ],
      "content": "[AZURE.NOTE]\n同样，需要使用本地 MySQL 用户名和密码更新 <code>$user</code> 和 <code>$pwd</code> 的值。",
      "leadings": [
        "",
        "    > "
      ],
      "nodes": [
        {
          "content": "同样，需要使用本地 MySQL 用户名和密码更新 <ph id=\"ph1\">&lt;code&gt;</ph><ph id=\"ph2\">$user</ph><ph id=\"ph3\">&lt;/code&gt;</ph> 和 <ph id=\"ph4\">&lt;code&gt;</ph><ph id=\"ph5\">$pwd</ph><ph id=\"ph6\">&lt;/code&gt;</ph> 的值。",
          "pos": [
            13,
            80
          ]
        }
      ]
    },
    {
      "content": "在数据库连接代码后面添加用于将注册信息插入数据库的代码。",
      "pos": [
        5476,
        5504
      ]
    },
    {
      "content": "最后，在上述代码后面添加从数据库中检索数据的代码。",
      "pos": [
        6146,
        6171
      ]
    },
    {
      "pos": [
        6913,
        6987
      ],
      "content": "你现在可以浏览到 <bpt id=\"p1\">[</bpt>http://localhost/registration/index.php<ept id=\"p1\">][localhost-index]</ept> 来测试应用。"
    },
    {
      "content": "获取 MySQL 和 FTP 连接信息",
      "pos": [
        6991,
        7010
      ]
    },
    {
      "content": "若要连接到正在 Azure 中运行的 MySQL 数据库，你将需要连接信息。若要获取 MySQL 连接信息，请按照以下步骤操作：",
      "pos": [
        7012,
        7076
      ]
    },
    {
      "content": "点击打开你的 MYSQL 服务器，进入“仪表板”页面，在“速览”下可以查看你的服务器地址以及端口。",
      "pos": [
        7081,
        7130
      ]
    },
    {
      "content": "获取数据库连接信息",
      "pos": [
        7138,
        7147
      ]
    },
    {
      "content": "在“账户”页面可以查看各个账户名，也可以重置其密码。",
      "pos": [
        7181,
        7207
      ]
    },
    {
      "content": "在“数据库”页面可以查看这个服务器下的数据库。",
      "pos": [
        7212,
        7235
      ]
    },
    {
      "content": "于是 Data Source 为 tcp:&lt;your MYSQL server name\\&gt;.database.chinacloudapi.cn,&lt;port\\&gt;",
      "pos": [
        7241,
        7321
      ]
    },
    {
      "content": "发布应用",
      "pos": [
        7325,
        7329
      ]
    },
    {
      "pos": [
        7331,
        7485
      ],
      "content": "在本地测试你的应用之后，你可以使用 FTP 将其发布到 Web 应用。但是，你首先需要更新应用程序中的数据库连接信息。使用之前获取的数据库连接信息（在“获取 MySQL 和 FTP 连接信息”部分中），使用适当的值在 <ph id=\"ph1\">`createdatabase.php`</ph> 和 <ph id=\"ph2\">`index.php`</ph> 文件中更新以下信息："
    },
    {
      "content": "现在你可使用 FTP 发布应用。",
      "pos": [
        7645,
        7661
      ]
    },
    {
      "content": "打开选择的 FTP 客户端。",
      "pos": [
        7666,
        7680
      ]
    },
    {
      "pos": [
        7685,
        7729
      ],
      "content": "将上文中记下的 <ph id=\"ph1\">`publishUrl`</ph> 属性中的<bpt id=\"p1\">*</bpt>主机名部分<ept id=\"p1\">*</ept>输入到 FTP 客户端。"
    },
    {
      "pos": [
        7734,
        7781
      ],
      "content": "将上面记下的 <ph id=\"ph1\">`userName`</ph> 和 <ph id=\"ph2\">`userPWD`</ph> 属性按原样输入到 FTP 客户端。"
    },
    {
      "content": "建立连接。",
      "pos": [
        7786,
        7791
      ]
    },
    {
      "pos": [
        7793,
        7841
      ],
      "content": "连接后，您将能够根据需要上载和下载文件。确保将文件上载到根目录 <ph id=\"ph1\">`/site/wwwroot`</ph>。"
    },
    {
      "pos": [
        7843,
        8030
      ],
      "content": "上载 <ph id=\"ph1\">`index.php`</ph> 和 <ph id=\"ph2\">`createtable.php`</ph> 之后，浏览到 <bpt id=\"p1\">**</bpt>http://[site name].chinacloudsites.cn/createtable.php<ept id=\"p1\">**</ept> 以创建用于应用程序的 MySQL 表，然后浏览到 <bpt id=\"p2\">**</bpt>http://[site name].chinacloudsites.cn/index.php<ept id=\"p2\">**</ept> 以开始使用应用程序。"
    }
  ],
  "content": "<properties \n    pageTitle=\"使用 FTP 在 Azure 中创建和部署 PHP-MySQL Web 应用\" \n    description=\"本教程演示如何创建在 MySQL 中存储数据的 PHP Web 应用并使用 FTP 部署到 Azure。\" \n    services=\"app-service\\web\" \n    documentationCenter=\"php\" \n    authors=\"tfitzmac\" \n    manager=\"wpickett\" \n    editor=\"\"/>\n\n<tags\n    ms.service=\"web-sites\"\n    ms.date=\"10/01/2015\"\n    wacn.date=\"01/21/2016\"/>\n\n\n#使用 FTP 在 Azure 中创建和部署 PHP-MySQL Web 应用\n\n> [AZURE.SELECTOR]\n- [.Net](/documentation/articles/web-sites-dotnet-get-started)\n- [Node.js](/documentation/articles/web-sites-nodejs-develop-deploy-mac)\n- [Java](/documentation/articles/web-sites-java-get-started)\n- [PHP - Git](/documentation/articles/web-sites-php-mysql-deploy-use-git)\n- [PHP - FTP](/documentation/articles/web-sites-php-mysql-deploy-use-ftp)\n- [Python](/documentation/articles/web-sites-python-ptvs-django-mysql)\n\n本教程演示如何创建 PHP-MySQL Web 应用以及如何使用 FTP 部署该应用。本教程假定你已在计算机上安装 [PHP][install-php]、[MySQL][install-mysql]、Web 服务器和 FTP 客户端。本教程中的说明适用于任何操作系统，包括 Windows、Mac 和 Linux。完成本指南之后，你将拥有一个在 Azure 中运行的 PHP/MySQL Web 应用。\n \n你将学习以下内容：\n\n* 如何使用 Azure 管理门户创建 Web 应用和 MySQL 数据库。由于 Web 应用默认已启用 PHP，因此运行 PHP 代码没有任何特殊要求。\n* 如何使用 FTP 将应用程序发布到 Azure。\n \n通过按照本教程中的说明进行操作，你将在 PHP 中构建简单的注册 Web 应用。将在 Web 应用中托管应用程序。以下是已完成应用程序的屏幕快照：\n\n![Azure PHP Web 应用][running-app]\n\n\n##创建 Web 应用并设置 FTP 发布\n\n按照以下步骤创建 Web 应用和 MySQL 数据库：\n\n1. 登录到 [Azure 管理门户][management-portal]。\n2. 单击该门户左下的“+ 新建”图标。\n\n    ![创建新的 Azure Web 应用][new-website]\n\n3. 单击“ Web 应用”，然后单击“自定义创建”。\n    \n    在“URL”中输入值，从“数据库”下拉列表中选择“无数据库”，然后在“区域”下拉列表中选择 Web 应用的数据中心。点击确定新建 Web 应用\n\n    ![填写 Web 应用详细信息][Website-details]\n\n4. 继续单击“新建” --> “数据服务” --> “MYSQL DATABASE ON AZURE” --> “快速创建”，为你的 Web 应用创建一个 MYSQL 数据库。\n\n    ![数据库][new-mysql-db]\n\n    创建 Web 应用后，你将看到文本“创建 Web 应用 ‘[SITENAME]’ 成功完成”。现在，您可以启用 Git 发布。\n\n5. 单击 Web 应用列表中显示的 Web 应用的名称以打开该 Web 应用的“快速启动”仪表板。\n\n    ![打开 Web 应用仪表板][go-to-dashboard]\n\n\n6. 在“快速启动”页的底部，单击“重置部署凭据”。\n\n    ![重置部署凭据][reset-deployment-credentials]\n\n7. 若要启用 FTP 发布，必须提供用户名和密码。记下你创建的用户名和密码。\n\n    ![创建发布凭据][portal-git-username-password]\n\n##在本地生成并测试应用\n\n注册应用程序是一个简单的 PHP 应用程序，它使您能够通过提供您的姓名和电子邮件地址来注册事件。有关以前的注册者的信息将显示在表中。注册信息将存储在 MySQL 数据库中。该应用由两个文件组成：\n\n* **index.php**：将显示注册形式及包含注册者信息的表。\n* **createtable.php**：创建用于应用程序的 MySQL 表。该文件只能被使用一次。\n\n若要本地构建和运行应用，请执行下列步骤。请注意，这些步骤假定你已在本地计算机上设置 PHP、MySQL 和 Web 服务器，并且已启用 [MySQL 的 PDO 扩展][pdo-mysql]。\n\n1. 创建名为 `registration` 的 MySQL 数据库。您可以在 MySQL 命令提示符中使用此命令执行此操作：\n\n        mysql> create database registration;\n\n2. 在 Web 服务器的根目录中，创建一个名为 `registration` 的文件夹，并在其中创建两个文件 - 一个名为 `createtable.php`，另一个名为 `index.php`。\n\n3. 在文本编辑器或 IDE 中打开 `createtable.php` 文件并添加以下代码。此代码将用于在 `registration` 数据库中创建 `registration_tbl` 表。\n\n        <?php\n        // DB connection info\n        $host = \"localhost\";\n        $user = \"user name\";\n        $pwd = \"password\";\n        $db = \"registration\";\n        try{\n            $conn = new PDO( \"mysql:host=$host;dbname=$db\", $user, $pwd);\n            $conn->setAttribute( PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION );\n            $sql = \"CREATE TABLE registration_tbl(\n                        id INT NOT NULL AUTO_INCREMENT, \n                        PRIMARY KEY(id),\n                        name VARCHAR(30),\n                        email VARCHAR(30),\n                        date DATE)\";\n            $conn->query($sql);\n        }\n        catch(Exception $e){\n            die(print_r($e));\n        }\n        echo \"<h3>Table created.</h3>\";\n        ?>\n\n    > [AZURE.NOTE]\n    > 需要使用本地 MySQL 用户名和密码更新 <code>$user</code> 和 <code>$pwd</code> 的值。\n\n4. 打开 Web 浏览器并浏览到 [http://localhost/registration/createtable.php][localhost-createtable]。这将在数据库中创建 `registration_tbl` 表。\n\n5. 在文本编辑器或 IDE 中打开 **index.php** 文件，并为页面添加基本 HTML 和 CSS 代码（将在后续步骤中添加 PHP 代码）。\n\n        <html>\n        <head>\n        <Title>Registration Form</Title>\n        <style type=\"text/css\">\n            body { background-color: #fff; border-top: solid 10px #000;\n                color: #333; font-size: .85em; margin: 20; padding: 20;\n                font-family: \"Segoe UI\", Verdana, Helvetica, Sans-Serif;\n            }\n            h1, h2, h3,{ color: #000; margin-bottom: 0; padding-bottom: 0; }\n            h1 { font-size: 2em; }\n            h2 { font-size: 1.75em; }\n            h3 { font-size: 1.2em; }\n            table { margin-top: 0.75em; }\n            th { font-size: 1.2em; text-align: left; border: none; padding-left: 0; }\n            td { padding: 0.25em 2em 0.25em 0em; border: 0 none; }\n        </style>\n        </head>\n        <body>\n        <h1>Register here!</h1>\n        <p>Fill in your name and email address, then click <strong>Submit</strong> to register.</p>\n        <form method=\"post\" action=\"index.php\" enctype=\"multipart/form-data\" >\n              Name  <input type=\"text\" name=\"name\" id=\"name\"/></br>\n              Email <input type=\"text\" name=\"email\" id=\"email\"/></br>\n              <input type=\"submit\" name=\"submit\" value=\"Submit\" />\n        </form>\n        <?php\n\n        ?>\n        </body>\n        </html>\n\n6. 在 PHP 标记中，添加用于连接到数据库的 PHP 代码。\n\n        // DB connection info\n        $host = \"localhost\";\n        $user = \"user name\";\n        $pwd = \"password\";\n        $db = \"registration\";\n        // Connect to database.\n        try {\n            $conn = new PDO( \"mysql:host=$host;dbname=$db\", $user, $pwd);\n            $conn->setAttribute( PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION );\n        }\n        catch(Exception $e){\n            die(var_dump($e));\n        }\n\n    > [AZURE.NOTE]\n    > 同样，需要使用本地 MySQL 用户名和密码更新 <code>$user</code> 和 <code>$pwd</code> 的值。\n\n7. 在数据库连接代码后面添加用于将注册信息插入数据库的代码。\n\n        if(!empty($_POST)) {\n        try {\n            $name = $_POST['name'];\n            $email = $_POST['email'];\n            $date = date(\"Y-m-d\");\n            // Insert data\n            $sql_insert = \"INSERT INTO registration_tbl (name, email, date) \n                           VALUES (?,?,?)\";\n            $stmt = $conn->prepare($sql_insert);\n            $stmt->bindValue(1, $name);\n            $stmt->bindValue(2, $email);\n            $stmt->bindValue(3, $date);\n            $stmt->execute();\n        }\n        catch(Exception $e) {\n            die(var_dump($e));\n        }\n        echo \"<h3>Your're registered!</h3>\";\n        }\n\n8. 最后，在上述代码后面添加从数据库中检索数据的代码。\n\n        $sql_select = \"SELECT * FROM registration_tbl\";\n        $stmt = $conn->query($sql_select);\n        $registrants = $stmt->fetchAll(); \n        if(count($registrants) > 0) {\n            echo \"<h2>People who are registered:</h2>\";\n            echo \"<table>\";\n            echo \"<tr><th>Name</th>\";\n            echo \"<th>Email</th>\";\n            echo \"<th>Date</th></tr>\";\n            foreach($registrants as $registrant) {\n                echo \"<tr><td>\".$registrant['name'].\"</td>\";\n                echo \"<td>\".$registrant['email'].\"</td>\";\n                echo \"<td>\".$registrant['date'].\"</td></tr>\";\n            }\n            echo \"</table>\";\n        } else {\n            echo \"<h3>No one is currently registered.</h3>\";\n        }\n\n你现在可以浏览到 [http://localhost/registration/index.php][localhost-index] 来测试应用。\n\n##获取 MySQL 和 FTP 连接信息\n\n若要连接到正在 Azure 中运行的 MySQL 数据库，你将需要连接信息。若要获取 MySQL 连接信息，请按照以下步骤操作：\n\n1. 点击打开你的 MYSQL 服务器，进入“仪表板”页面，在“速览”下可以查看你的服务器地址以及端口。\n\n    ![获取数据库连接信息][connection-string-info]\n    \n2. 在“账户”页面可以查看各个账户名，也可以重置其密码。\n\n3. 在“数据库”页面可以查看这个服务器下的数据库。\n\n    于是 Data Source 为 tcp:<your MYSQL server name\\>.database.chinacloudapi.cn,<port\\>\n\n##发布应用\n\n在本地测试你的应用之后，你可以使用 FTP 将其发布到 Web 应用。但是，你首先需要更新应用程序中的数据库连接信息。使用之前获取的数据库连接信息（在“获取 MySQL 和 FTP 连接信息”部分中），使用适当的值在 `createdatabase.php` 和 `index.php` 文件中更新以下信息：\n\n    // DB connection info\n    $host = \"value of Data Source\";\n    $user = \"value of User Id\";\n    $pwd = \"value of Password\";\n    $db = \"value of Database\";\n\n现在你可使用 FTP 发布应用。\n\n1. 打开选择的 FTP 客户端。\n\n2. 将上文中记下的 `publishUrl` 属性中的*主机名部分*输入到 FTP 客户端。\n\n3. 将上面记下的 `userName` 和 `userPWD` 属性按原样输入到 FTP 客户端。\n\n4. 建立连接。\n\n连接后，您将能够根据需要上载和下载文件。确保将文件上载到根目录 `/site/wwwroot`。\n\n上载 `index.php` 和 `createtable.php` 之后，浏览到 **http://[site name].chinacloudsites.cn/createtable.php** 以创建用于应用程序的 MySQL 表，然后浏览到 **http://[site name].chinacloudsites.cn/index.php** 以开始使用应用程序。\n\n[go-to-dashboard]: ./media/web-sites-php-web-site-mysql-deploy-use-ftp/go_to_dashboard.png\n[reset-deployment-credentials]: ./media/web-sites-php-web-site-mysql-deploy-use-ftp/reset-deployment-credentials.png\n[portal-git-username-password]: ./media/web-sites-php-web-site-mysql-deploy-use-ftp/git-deployment-credentials.png\n[install-php]: http://www.php.net/manual/en/install.php\n[install-mysql]: http://dev.mysql.com/doc/refman/5.6/en/installing.html\n[pdo-mysql]: http://www.php.net/manual/en/ref.pdo-mysql.php\n[localhost-createtable]: http://localhost/tasklist/createtable.php\n[localhost-index]: http://localhost/tasklist/index.php\n[running-app]: ./media/web-sites-php-mysql-deploy-use-ftp/running_app_2.png\n[new-website]: ./media/web-sites-php-mysql-deploy-use-ftp/new_website2.jpg\n[custom-create]: ./media/web-sites-php-mysql-deploy-use-ftp/create_web_mysql.png\n[website-details]: ./media/web-sites-php-web-site-mysql-deploy-use-ftp/website_details.jpg\n[new-mysql-db]: ./media/web-sites-php-mysql-deploy-use-ftp/new_mysql_db.jpg\n[go-to-webapp]: ./media/web-sites-php-mysql-deploy-use-ftp/select_webapp.png\n[set-deployment-credentials]: ./media/web-sites-php-mysql-deploy-use-ftp/set_credentials.png\n[portal-ftp-username-password]: ./media/web-sites-php-mysql-deploy-use-ftp/save_credentials.png\n[resource-group]: ./media/web-sites-php-mysql-deploy-use-ftp/set_group.png\n[new-web-app]: ./media/web-sites-php-mysql-deploy-use-ftp/create_wa.png\n[select-database]: ./media/web-sites-php-mysql-deploy-use-ftp/select_database.png\n[select-properties]: ./media/web-sites-php-mysql-deploy-use-ftp/select_properties.png\n[note-properties]: ./media/web-sites-php-mysql-deploy-use-ftp/note-properties.png\n\n[connection-string-info]: ./media/web-sites-php-web-site-mysql-deploy-use-ftp/connection_string_info.png\n[management-portal]: https://manage.windowsazure.cn\n[download-publish-profile]: ./media/web-sites-php-mysql-deploy-use-ftp/download_publish_profile_3.png\n \n\n<!---HONumber=82-->"
}