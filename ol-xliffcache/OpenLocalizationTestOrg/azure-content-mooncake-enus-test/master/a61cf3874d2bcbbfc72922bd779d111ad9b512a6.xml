{
  "nodes": [
    {
      "content": "在 Azure 中使用 Flask 创建 Web 应用",
      "pos": [
        28,
        55
      ]
    },
    {
      "content": "本教程介绍在 Azure 上运行 Python Web 应用。",
      "pos": [
        75,
        106
      ]
    },
    {
      "content": "在 Azure 中使用 Flask 创建 Web 应用",
      "pos": [
        334,
        361
      ]
    },
    {
      "pos": [
        363,
        517
      ],
      "content": "本教程描述如何开始在 <bpt id=\"p1\">[</bpt>Azure Web 应用<ept id=\"p1\">](/documentation/services/web-sites/)</ept>中运行 Python。 Web 应用提供有限的免费托管和快速部署功能，现在，您可以使用 Python！ 随着您的应用增长，可以切换到付费托管，并且还可以与所有其他 Azure 服务集成。"
    },
    {
      "pos": [
        519,
        810
      ],
      "content": "您将使用 Flask web 框架创建应用程序（请参阅本教程针对 <bpt id=\"p1\">[</bpt>Django<ept id=\"p1\">](/documentation/articles/web-sites-python-create-deploy-django-app)</ept> 和 <bpt id=\"p2\">[</bpt>Bottle<ept id=\"p2\">](/documentation/articles/web-sites-python-create-deploy-bottle-app)</ept> 的备选版本。你将创建 Web 应用，设置 Git 部署以及在本地克隆存储库。然后将本地运行应用程序，将其更改、 提交和推送到 Azure。本教程演示如何从 Windows 或 Mac/Linux 执行此操作。"
    },
    {
      "content": "先决条件",
      "pos": [
        916,
        920
      ]
    },
    {
      "content": "Windows、 Mac 或 Linux",
      "pos": [
        924,
        944
      ]
    },
    {
      "content": "Python 2.7 或 3.4",
      "pos": [
        947,
        963
      ]
    },
    {
      "content": "setuptools, pip, virtualenv（仅限 Python 2.7）",
      "pos": [
        966,
        1008
      ]
    },
    {
      "content": "Git",
      "pos": [
        1011,
        1014
      ]
    },
    {
      "content": "Python Tools for Visual Studio - 注意：这是可选的",
      "pos": [
        1017,
        1058
      ]
    },
    {
      "pos": [
        1060,
        1089
      ],
      "content": "<bpt id=\"p1\">**</bpt>注意<ept id=\"p1\">**</ept>：Python 项目目前不支持 TFS 发布。"
    },
    {
      "content": "Windows",
      "pos": [
        1095,
        1102
      ]
    },
    {
      "pos": [
        1104,
        1325
      ],
      "content": "如果您还没有 Python 2.7 或 3.4 安装（32 位），我们建议使用 Web 平台安装程序来安装 <bpt id=\"p1\">[</bpt><ept id=\"p1\">Azure SDK for Python 2.7]</ept> 或 <bpt id=\"p2\">[</bpt><ept id=\"p2\">Azure SDK for Python 3.4]</ept>。这将安装 32 位版本的 Python、setuptools、pip、virtualenv 等（32 位 Python 是在 Azure 主机计算机上安装的）。或者，您可以从 <bpt id=\"p3\">[</bpt><ept id=\"p3\">python.org]</ept> 获取 Python。"
    },
    {
      "pos": [
        1327,
        1415
      ],
      "content": "对于 Git，我们建议 <bpt id=\"p1\">[</bpt><ept id=\"p1\">Git for Windows]</ept> 或 <bpt id=\"p2\">[</bpt><ept id=\"p2\">GitHub for Windows]</ept>。如果您使用 Visual Studio，可以使用集成的 Git 支持。"
    },
    {
      "pos": [
        1417,
        1586
      ],
      "content": "我们还建议你安装 <bpt id=\"p1\">[</bpt><ept id=\"p1\">Python Tools 2.2 for Visual Studio]</ept>。这是可选的，但是如果您有 <bpt id=\"p2\">[</bpt><ept id=\"p2\">Visual Studio]</ept>（包括免费 Visual Studio Community 2013 或 Visual Studio Express 2013 for Web），则这将为您提供很好的 Python IDE。"
    },
    {
      "content": "Mac/Linux",
      "pos": [
        1592,
        1601
      ]
    },
    {
      "content": "您应安装了 Python 和 Git ，但请确保您具有 Python 2.7 或 3.4。",
      "pos": [
        1603,
        1648
      ]
    },
    {
      "content": "在 Azure 门户中创建 Web 应用",
      "pos": [
        1654,
        1674
      ]
    },
    {
      "pos": [
        1676,
        1809
      ],
      "content": "创建您的应用的第一步是通过 <bpt id=\"p1\">[</bpt>Azure 门户<ept id=\"p1\">](https://manage.windowsazure.cn)</ept>创建 Web 应用。为此，你将需要登录到该门户，然后单击左下角的新建按钮。将出现一个窗口。单击“快速创建”，输入 URL，然后选择“创建 Web 应用”。"
    },
    {
      "pos": [
        1885,
        1949
      ],
      "content": "将快速设置 Web 应用。接下来，你要为通过 Git 进行发布提供相应支持。这一点可通过选择<bpt id=\"p1\">**</bpt>从源代码控制设置部署<ept id=\"p1\">**</ept>来完成。"
    },
    {
      "content": "从“设置部署”对话框中，向下滚动并选择“本地 Git”选项。单击向右箭头以继续。",
      "pos": [
        2025,
        2065
      ]
    },
    {
      "content": "在设置 Git 发布之后，你将立即看到通知你正在创建存储库的页面。在存储库就绪时，会将你转至“部署”选项卡。“部署”选项卡包括有关如何连接的说明。",
      "pos": [
        2141,
        2214
      ]
    },
    {
      "content": "在后续部分中，我们将遵循这些说明。",
      "pos": [
        2290,
        2307
      ]
    },
    {
      "content": "<ph id=\"ph1\">&lt;a name=\"application-overview\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>应用程序概述",
      "pos": [
        2314,
        2355
      ]
    },
    {
      "content": "Git 存储库内容",
      "pos": [
        2366,
        2375
      ]
    },
    {
      "content": "下面是您会在初始 Git 存储库找到的文件的概览，我们将在下一节中予以克隆。",
      "pos": [
        2377,
        2415
      ]
    },
    {
      "content": "应用程序的的主要来源。包含具有母版布局的 3 页（索引、关于、联系人）。静态内容和脚本包括启动、 jquery、 modernizr 和响应。",
      "pos": [
        2760,
        2831
      ]
    },
    {
      "content": "本地开发服务器支持。使用此选项以在本地运行应用程序。",
      "pos": [
        2852,
        2878
      ]
    },
    {
      "pos": [
        2934,
        2976
      ],
      "content": "用于 <bpt id=\"p1\">[</bpt><ept id=\"p1\">Python Tools for Visual Studio]</ept> 的项目文件。"
    },
    {
      "content": "虚拟环境的 IIS 代理和 PTVS 远程调试支持。",
      "pos": [
        3009,
        3035
      ]
    },
    {
      "content": "此应用程序所需的外部软件包。部署脚本将对在此文件中列出的包进行 pip 安装。",
      "pos": [
        3060,
        3099
      ]
    },
    {
      "content": "IIS 配置文件。部署脚本将使用适当的 web.x.y.config，并将其复制为 web.config。",
      "pos": [
        3143,
        3196
      ]
    },
    {
      "content": "可选文件 - 自定义部署",
      "pos": [
        3202,
        3214
      ]
    },
    {
      "content": "可选文件 - Python 运行时",
      "pos": [
        3335,
        3352
      ]
    },
    {
      "content": "服务器上的其他文件",
      "pos": [
        3467,
        3476
      ]
    },
    {
      "content": "某些文件存在于服务器上，但不会添加到 git 存储库。这些是由部署脚本创建的。",
      "pos": [
        3478,
        3517
      ]
    },
    {
      "content": "IIS 配置文件。每次部署中从 web.x.y.config 创建",
      "pos": [
        3536,
        3569
      ]
    },
    {
      "content": "Python 虚拟环境。如果在应用上尚不存在兼容的虚拟环境，请在部署期间创建。在 requirements.txt 中列出的软件包是 pip 安装的，但如果已安装软件包，pip 将跳过安装。",
      "pos": [
        3582,
        3677
      ]
    },
    {
      "content": "后续 3 节描述如何在 3 个不同的环境下继续进行 Web 应用开发：",
      "pos": [
        3679,
        3714
      ]
    },
    {
      "content": "Windows，具有 Python Tools for Visual Studio",
      "pos": [
        3718,
        3759
      ]
    },
    {
      "content": "Windows，具有命令行",
      "pos": [
        3762,
        3775
      ]
    },
    {
      "content": "Mac/Linux，具有命令行",
      "pos": [
        3778,
        3793
      ]
    },
    {
      "content": "Web 应用开发 - Windows - Python Tools for Visual Studio",
      "pos": [
        3799,
        3850
      ]
    },
    {
      "content": "克隆存储库",
      "pos": [
        3856,
        3861
      ]
    },
    {
      "pos": [
        3863,
        3993
      ],
      "content": "首先，使用 Azure 门户 Web 应用上提供的 URL 来克隆存储库。有关详细信息，请参阅<bpt id=\"p1\">[</bpt>在 Azure 中使用 GIT 进行连续部署<ept id=\"p1\">](/documentation/articles/web-sites-publish-source-control)</ept>。"
    },
    {
      "content": "打开包含在存储库根中的解决方案文件 (.sln) 。",
      "pos": [
        3995,
        4021
      ]
    },
    {
      "content": "创建虚拟环境",
      "pos": [
        4106,
        4112
      ]
    },
    {
      "pos": [
        4114,
        4167
      ],
      "content": "现在，我们将创建本地开发的虚拟环境。右键单击 <bpt id=\"p1\">**</bpt>Python 环境<ept id=\"p1\">**</ept>，选择<bpt id=\"p2\">**</bpt>添加虚拟环境...<ept id=\"p2\">**</ept>。"
    },
    {
      "pos": [
        4171,
        4187
      ],
      "content": "请确保环境的名称是 <ph id=\"ph1\">`env`</ph>。"
    },
    {
      "pos": [
        4191,
        4289
      ],
      "content": "选择基解释器。请确保使用的 Python 版本与 Web 应用所选的 Python 版本相同（在 runtime.txt 中或 Azure 门户中 Web 应用的<bpt id=\"p1\">**</bpt>应用程序设置<ept id=\"p1\">**</ept>边栏选项卡）。"
    },
    {
      "content": "请确保选中此选项以下载并安装软件包。",
      "pos": [
        4293,
        4311
      ]
    },
    {
      "content": "单击“创建”。这会创建虚拟环境，并安装 requirements.txt 中列出的依赖项。",
      "pos": [
        4396,
        4441
      ]
    },
    {
      "content": "使用开发服务器运行",
      "pos": [
        4447,
        4456
      ]
    },
    {
      "content": "按 F5 开始调试，您的 web 浏览器会自动打开到本地运行的页面。",
      "pos": [
        4458,
        4492
      ]
    },
    {
      "pos": [
        4575,
        4648
      ],
      "content": "您可以在源中设置断点，使用监视窗口等。请参阅 <bpt id=\"p1\">[</bpt><ept id=\"p1\">Python Tools for Visual Studio 文档]</ept>以了解有关各种功能的更多信息。"
    },
    {
      "content": "进行更改",
      "pos": [
        4654,
        4658
      ]
    },
    {
      "content": "现在您可以通过更改应用程序源和/或模板进行试验。",
      "pos": [
        4660,
        4684
      ]
    },
    {
      "content": "您测试您的更改后，将其提交到 Git 存储库：",
      "pos": [
        4686,
        4709
      ]
    },
    {
      "content": "安装多个软件包",
      "pos": [
        4792,
        4799
      ]
    },
    {
      "content": "您的应用程序可能具有除 Python 和 Flask 以外的依赖关系。",
      "pos": [
        4801,
        4836
      ]
    },
    {
      "pos": [
        4838,
        4893
      ],
      "content": "您可以使用 pip 安装其他软件包。要安装包，请右键单击虚拟环境，然后选择<bpt id=\"p1\">**</bpt>安装 Python 软件包<ept id=\"p1\">**</ept>。"
    },
    {
      "pos": [
        4895,
        4969
      ],
      "content": "例如，要安装 Azure SDK for Python（使您可以访问 Azure 存储、服务总线和其他 Azure 服务），请输入 <ph id=\"ph1\">`azure`</ph>："
    },
    {
      "pos": [
        5058,
        5116
      ],
      "content": "在虚拟环境上右键单击并选择<bpt id=\"p1\">**</bpt>生成 requirements.txt<ept id=\"p1\">**</ept> 以更新 requirements.txt。"
    },
    {
      "content": "然后，将 requirements.txt 的更改落实到 Git 存储库。",
      "pos": [
        5118,
        5155
      ]
    },
    {
      "content": "部署到 Azure",
      "pos": [
        5161,
        5170
      ]
    },
    {
      "pos": [
        5172,
        5207
      ],
      "content": "要触发部署操作，请单击<bpt id=\"p1\">**</bpt>同步<ept id=\"p1\">**</ept>或<bpt id=\"p2\">**</bpt>推送<ept id=\"p2\">**</ept>。同步执行推送和拉取。"
    },
    {
      "content": "首次部署将需要一些时间，因为它将创建虚拟环境、 安装包等。",
      "pos": [
        5282,
        5311
      ]
    },
    {
      "content": "Visual Studio 不会显示部署的进度。",
      "pos": [
        5313,
        5337
      ]
    },
    {
      "content": "浏览到 Azure URL 要查看您的更改。",
      "pos": [
        5339,
        5361
      ]
    },
    {
      "content": "Web 应用开发 - Windows - 命令行",
      "pos": [
        5367,
        5391
      ]
    },
    {
      "content": "克隆存储库",
      "pos": [
        5397,
        5402
      ]
    },
    {
      "pos": [
        5404,
        5546
      ],
      "content": "首先，使用在 Azure 门户中提供的 URL 来克隆存储库，并将 Azure 存储库添加为远程。有关详细信息，请参阅<bpt id=\"p1\">[</bpt>在 Azure 中使用 GIT 进行连续部署<ept id=\"p1\">](/documentation/articles/web-sites-publish-source-control)</ept>。"
    },
    {
      "content": "创建虚拟环境",
      "pos": [
        5636,
        5642
      ]
    },
    {
      "content": "我们将为开发目的创建新的虚拟环境 （不要将其添加到存储库）。Python 中的虚拟环境是可重定位，因此使用该应用程序的每个开发人员将在本地创建自己的环境。",
      "pos": [
        5644,
        5721
      ]
    },
    {
      "pos": [
        5723,
        5814
      ],
      "content": "请确保使用的 Python 版本与 Web 应用所选的 Python 版本相同（在 runtime.txt 中或 Azure 门户中 Web 应用的<bpt id=\"p1\">**</bpt>应用程序设置<ept id=\"p1\">**</ept>边栏选项卡）。"
    },
    {
      "content": "对于 Python 2.7：",
      "pos": [
        5816,
        5830
      ]
    },
    {
      "content": "对于 Python 3.4：",
      "pos": [
        5878,
        5892
      ]
    },
    {
      "content": "安装应用程序所需的任何外部软件包。可以使用该存储库的根处 requirements.txt 文件在虚拟环境中安装软件包：",
      "pos": [
        5934,
        5994
      ]
    },
    {
      "content": "使用开发服务器运行",
      "pos": [
        6049,
        6058
      ]
    },
    {
      "content": "您可以使用以下命令在开发服务器下启用应用程序：",
      "pos": [
        6060,
        6083
      ]
    },
    {
      "content": "控制台将显示服务器侦听的 URL 和端口：",
      "pos": [
        6122,
        6143
      ]
    },
    {
      "content": "然后，将 web 浏览器打开到该 URL。",
      "pos": [
        6228,
        6249
      ]
    },
    {
      "content": "进行更改",
      "pos": [
        6336,
        6340
      ]
    },
    {
      "content": "现在您可以通过更改应用程序源和/或模板进行试验。",
      "pos": [
        6342,
        6366
      ]
    },
    {
      "content": "您测试您的更改后，将其提交到 Git 存储库：",
      "pos": [
        6368,
        6391
      ]
    },
    {
      "content": "安装多个软件包",
      "pos": [
        6463,
        6470
      ]
    },
    {
      "content": "您的应用程序可能具有除 Python 和 Flask 以外的依赖关系。",
      "pos": [
        6472,
        6507
      ]
    },
    {
      "content": "您可以使用 pip 安装其他软件包。例如，要安装 Azure SDK for Python（使您可以访问 Azure 存储、 服务总线和其他 Azure 服务），请输入：",
      "pos": [
        6509,
        6594
      ]
    },
    {
      "content": "请确保更新 requirements.txt：",
      "pos": [
        6631,
        6654
      ]
    },
    {
      "content": "落实更改：",
      "pos": [
        6703,
        6708
      ]
    },
    {
      "content": "部署到 Azure",
      "pos": [
        6784,
        6793
      ]
    },
    {
      "content": "要触发部署，请将更改推送到 Azure：",
      "pos": [
        6795,
        6815
      ]
    },
    {
      "content": "您将看到部署脚本的输出，包括虚拟环境创建，安装软件包，创建 web.config。",
      "pos": [
        6844,
        6885
      ]
    },
    {
      "content": "浏览到 Azure URL 要查看您的更改。",
      "pos": [
        6887,
        6909
      ]
    },
    {
      "content": "Web 应用开发 - Mac/Linux - 命令行",
      "pos": [
        6915,
        6941
      ]
    },
    {
      "content": "克隆存储库",
      "pos": [
        6947,
        6952
      ]
    },
    {
      "pos": [
        6954,
        7096
      ],
      "content": "首先，使用在 Azure 门户中提供的 URL 来克隆存储库，并将 Azure 存储库添加为远程。有关详细信息，请参阅<bpt id=\"p1\">[</bpt>在 Azure 中使用 GIT 进行连续部署<ept id=\"p1\">](/documentation/articles/web-sites-publish-source-control)</ept>。"
    },
    {
      "content": "创建虚拟环境",
      "pos": [
        7186,
        7192
      ]
    },
    {
      "content": "我们将为开发目的创建新的虚拟环境 （不要将其添加到存储库）。Python 中的虚拟环境是可重定位，因此使用该应用程序的每个开发人员将在本地创建自己的环境。",
      "pos": [
        7194,
        7271
      ]
    },
    {
      "pos": [
        7273,
        7364
      ],
      "content": "请确保使用的 Python 版本与 Web 应用所选的 Python 版本相同（在 runtime.txt 中或 Azure 门户中 Web 应用的<bpt id=\"p1\">**</bpt>应用程序设置<ept id=\"p1\">**</ept>边栏选项卡）。"
    },
    {
      "content": "对于 Python 2.7：",
      "pos": [
        7366,
        7380
      ]
    },
    {
      "content": "对于 Python 3.4：",
      "pos": [
        7412,
        7426
      ]
    },
    {
      "content": "安装应用程序所需的任何外部软件包。可以使用该存储库的根处 requirements.txt 文件在虚拟环境中安装软件包：",
      "pos": [
        7452,
        7512
      ]
    },
    {
      "content": "使用开发服务器运行",
      "pos": [
        7563,
        7572
      ]
    },
    {
      "content": "您可以使用以下命令在开发服务器下启用应用程序：",
      "pos": [
        7574,
        7597
      ]
    },
    {
      "content": "控制台将显示服务器侦听的 URL 和端口：",
      "pos": [
        7632,
        7653
      ]
    },
    {
      "content": "然后，将 web 浏览器打开到该 URL。",
      "pos": [
        7734,
        7755
      ]
    },
    {
      "content": "进行更改",
      "pos": [
        7838,
        7842
      ]
    },
    {
      "content": "现在您可以通过更改应用程序源和/或模板进行试验。",
      "pos": [
        7844,
        7868
      ]
    },
    {
      "content": "您测试您的更改后，将其提交到 Git 存储库：",
      "pos": [
        7870,
        7893
      ]
    },
    {
      "content": "安装多个软件包",
      "pos": [
        7965,
        7972
      ]
    },
    {
      "content": "您的应用程序可能具有除 Python 和 Flask 以外的依赖关系。",
      "pos": [
        7974,
        8009
      ]
    },
    {
      "content": "您可以使用 pip 安装其他软件包。例如，要安装 Azure SDK for Python（使您可以访问 Azure 存储、 服务总线和其他 Azure 服务），请输入：",
      "pos": [
        8011,
        8096
      ]
    },
    {
      "content": "请确保更新 requirements.txt：",
      "pos": [
        8129,
        8152
      ]
    },
    {
      "content": "落实更改：",
      "pos": [
        8197,
        8202
      ]
    },
    {
      "content": "部署到 Azure",
      "pos": [
        8278,
        8287
      ]
    },
    {
      "content": "要触发部署，请将更改推送到 Azure：",
      "pos": [
        8289,
        8309
      ]
    },
    {
      "content": "您将看到部署脚本的输出，包括虚拟环境创建，安装软件包，创建 web.config。",
      "pos": [
        8338,
        8379
      ]
    },
    {
      "content": "浏览到 Azure URL 要查看您的更改。",
      "pos": [
        8381,
        8403
      ]
    },
    {
      "content": "故障排除 - 软件包安装",
      "pos": [
        8409,
        8421
      ]
    },
    {
      "pos": [
        8475,
        8616
      ],
      "content": "[WACOM.INCLUDE <bpt id=\"p1\">[</bpt>web-sites-python-troubleshooting-package-installation<ept id=\"p1\">](../includes/web-sites-python-troubleshooting-package-installation.md)</ept>]"
    },
    {
      "content": "故障排除 - 虚拟环境",
      "pos": [
        8622,
        8633
      ]
    },
    {
      "content": "后续步骤",
      "pos": [
        8780,
        8784
      ]
    },
    {
      "content": "请遵循下面链接以了解有关 Flask 和 Python Tools for Visual Studio 的更多信息：",
      "pos": [
        8786,
        8844
      ]
    },
    {
      "content": "Flask 文档",
      "pos": [
        8850,
        8858
      ]
    },
    {
      "content": "Python Tools for Visual Studio 文档",
      "pos": [
        8863,
        8896
      ]
    },
    {
      "content": "有关使用 Azure 表存储和 MongoDB 的信息：",
      "pos": [
        8899,
        8927
      ]
    },
    {
      "content": "具有 Python Tools for Visual Studio 的 Azure 上的 Flask 和 MongoDB",
      "pos": [
        8932,
        8992
      ]
    },
    {
      "content": "具有 Python Tools for Visual Studio 的 Azure 上的 Flask 和 Azure 表存储",
      "pos": [
        8997,
        9059
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"在 Azure 中使用 Flask 创建 Web 应用\" \n    description=\"本教程介绍在 Azure 上运行 Python Web 应用。\" \n    services=\"app-service\\web\" \n    documentationCenter=\"python\" \n    authors=\"huguesv\" \n    manager=\"wpickett\" \n    editor=\"\"/>\n\n<tags \n    ms.service=\"web-sites\" \n    ms.date=\"11/17/2015\"\n    wacn.date=\"01/21/2016\"/>\n\n\n\n\n# 在 Azure 中使用 Flask 创建 Web 应用\n\n本教程描述如何开始在 [Azure Web 应用](/documentation/services/web-sites/)中运行 Python。 Web 应用提供有限的免费托管和快速部署功能，现在，您可以使用 Python！ 随着您的应用增长，可以切换到付费托管，并且还可以与所有其他 Azure 服务集成。\n\n您将使用 Flask web 框架创建应用程序（请参阅本教程针对 [Django](/documentation/articles/web-sites-python-create-deploy-django-app) 和 [Bottle](/documentation/articles/web-sites-python-create-deploy-bottle-app) 的备选版本。你将创建 Web 应用，设置 Git 部署以及在本地克隆存储库。然后将本地运行应用程序，将其更改、 提交和推送到 Azure。本教程演示如何从 Windows 或 Mac/Linux 执行此操作。\n\n[AZURE.INCLUDE [create-account-and-websites-note](../includes/create-account-and-websites-note.md)]\n\n## 先决条件\n\n- Windows、 Mac 或 Linux\n- Python 2.7 或 3.4\n- setuptools, pip, virtualenv（仅限 Python 2.7）\n- Git\n- Python Tools for Visual Studio - 注意：这是可选的\n\n**注意**：Python 项目目前不支持 TFS 发布。\n\n### Windows\n\n如果您还没有 Python 2.7 或 3.4 安装（32 位），我们建议使用 Web 平台安装程序来安装 [Azure SDK for Python 2.7] 或 [Azure SDK for Python 3.4]。这将安装 32 位版本的 Python、setuptools、pip、virtualenv 等（32 位 Python 是在 Azure 主机计算机上安装的）。或者，您可以从 [python.org] 获取 Python。\n\n对于 Git，我们建议 [Git for Windows] 或 [GitHub for Windows]。如果您使用 Visual Studio，可以使用集成的 Git 支持。\n\n我们还建议你安装 [Python Tools 2.2 for Visual Studio]。这是可选的，但是如果您有 [Visual Studio]（包括免费 Visual Studio Community 2013 或 Visual Studio Express 2013 for Web），则这将为您提供很好的 Python IDE。\n\n### Mac/Linux\n\n您应安装了 Python 和 Git ，但请确保您具有 Python 2.7 或 3.4。\n\n\n## 在 Azure 门户中创建 Web 应用\n\n创建您的应用的第一步是通过 [Azure 门户](https://manage.windowsazure.cn)创建 Web 应用。为此，你将需要登录到该门户，然后单击左下角的新建按钮。将出现一个窗口。单击“快速创建”，输入 URL，然后选择“创建 Web 应用”。\n\n![](./media/web-sites-python-create-deploy-django-app/django-ws-003.png)\n\n将快速设置 Web 应用。接下来，你要为通过 Git 进行发布提供相应支持。这一点可通过选择**从源代码控制设置部署**来完成。\n\n![](./media/web-sites-python-create-deploy-django-app/django-ws-004.png)\n\n从“设置部署”对话框中，向下滚动并选择“本地 Git”选项。单击向右箭头以继续。\n\n![](./media/web-sites-python-create-deploy-django-app/django-ws-005.png)\n\n在设置 Git 发布之后，你将立即看到通知你正在创建存储库的页面。在存储库就绪时，会将你转至“部署”选项卡。“部署”选项卡包括有关如何连接的说明。\n\n![](./media/web-sites-python-create-deploy-django-app/django-ws-006.png)\n\n在后续部分中，我们将遵循这些说明。\n\n\n<h2><a name=\"application-overview\"></a>应用程序概述</h2>\n\n### Git 存储库内容\n\n下面是您会在初始 Git 存储库找到的文件的概览，我们将在下一节中予以克隆。\n\n    \\FlaskWebProject__init__.py\n    \\FlaskWebProject\\views.py\n    \\FlaskWebProject\\static\\content\\\n    \\FlaskWebProject\\static\\fonts\\\n    \\FlaskWebProject\\static\\scripts\\\n    \\FlaskWebProject\\templates\\about.html\n    \\FlaskWebProject\\templates\\contact.html\n    \\FlaskWebProject\\templates\\index.html\n    \\FlaskWebProject\\templates\\layout.html\n\n应用程序的的主要来源。包含具有母版布局的 3 页（索引、关于、联系人）。静态内容和脚本包括启动、 jquery、 modernizr 和响应。\n\n    \\runserver.py\n\n本地开发服务器支持。使用此选项以在本地运行应用程序。\n\n    \\FlaskWebProject.pyproj\n    \\FlaskWebProject.sln\n\n用于 [Python Tools for Visual Studio] 的项目文件。\n\n    \\ptvs_virtualenv_proxy.py\n\n虚拟环境的 IIS 代理和 PTVS 远程调试支持。\n\n    \\requirements.txt\n\n此应用程序所需的外部软件包。部署脚本将对在此文件中列出的包进行 pip 安装。\n \n    \\web.2.7.config\n    \\web.3.4.config\n\nIIS 配置文件。部署脚本将使用适当的 web.x.y.config，并将其复制为 web.config。\n\n### 可选文件 - 自定义部署\n\n[AZURE.INCLUDE [web-sites-python-customizing-deployment](../includes/web-sites-python-customizing-deployment.md)]\n\n### 可选文件 - Python 运行时\n\n[AZURE.INCLUDE [web-sites-python-customizing-runtime](../includes/web-sites-python-customizing-runtime.md)]\n\n### 服务器上的其他文件\n\n某些文件存在于服务器上，但不会添加到 git 存储库。这些是由部署脚本创建的。\n\n    \\web.config\n\nIIS 配置文件。每次部署中从 web.x.y.config 创建\n\n    \\env\\\n\nPython 虚拟环境。如果在应用上尚不存在兼容的虚拟环境，请在部署期间创建。在 requirements.txt 中列出的软件包是 pip 安装的，但如果已安装软件包，pip 将跳过安装。\n\n后续 3 节描述如何在 3 个不同的环境下继续进行 Web 应用开发：\n\n- Windows，具有 Python Tools for Visual Studio\n- Windows，具有命令行\n- Mac/Linux，具有命令行\n\n\n## Web 应用开发 - Windows - Python Tools for Visual Studio\n\n### 克隆存储库\n\n首先，使用 Azure 门户 Web 应用上提供的 URL 来克隆存储库。有关详细信息，请参阅[在 Azure 中使用 GIT 进行连续部署](/documentation/articles/web-sites-publish-source-control)。\n\n打开包含在存储库根中的解决方案文件 (.sln) 。\n\n![](./media/web-sites-python-create-deploy-flask-app/ptvs-solution-flask.png)\n\n### 创建虚拟环境\n\n现在，我们将创建本地开发的虚拟环境。右键单击 **Python 环境**，选择**添加虚拟环境...**。\n\n- 请确保环境的名称是 `env`。\n\n- 选择基解释器。请确保使用的 Python 版本与 Web 应用所选的 Python 版本相同（在 runtime.txt 中或 Azure 门户中 Web 应用的**应用程序设置**边栏选项卡）。\n\n- 请确保选中此选项以下载并安装软件包。\n\n![](./media/web-sites-python-create-deploy-flask-app/ptvs-add-virtual-env-27.png)\n\n单击“创建”。这会创建虚拟环境，并安装 requirements.txt 中列出的依赖项。\n\n### 使用开发服务器运行\n\n按 F5 开始调试，您的 web 浏览器会自动打开到本地运行的页面。\n\n![](./media/web-sites-python-create-deploy-flask-app/windows-browser-flask.png)\n\n您可以在源中设置断点，使用监视窗口等。请参阅 [Python Tools for Visual Studio 文档]以了解有关各种功能的更多信息。\n\n### 进行更改\n\n现在您可以通过更改应用程序源和/或模板进行试验。\n\n您测试您的更改后，将其提交到 Git 存储库：\n\n![](./media/web-sites-python-create-deploy-flask-app/ptvs-commit-flask.png)\n\n### 安装多个软件包\n\n您的应用程序可能具有除 Python 和 Flask 以外的依赖关系。\n\n您可以使用 pip 安装其他软件包。要安装包，请右键单击虚拟环境，然后选择**安装 Python 软件包**。\n\n例如，要安装 Azure SDK for Python（使您可以访问 Azure 存储、服务总线和其他 Azure 服务），请输入 `azure`：\n\n![](./media/web-sites-python-create-deploy-flask-app/ptvs-install-package-dialog.png)\n\n在虚拟环境上右键单击并选择**生成 requirements.txt** 以更新 requirements.txt。\n\n然后，将 requirements.txt 的更改落实到 Git 存储库。\n\n### 部署到 Azure\n\n要触发部署操作，请单击**同步**或**推送**。同步执行推送和拉取。\n\n![](./media/web-sites-python-create-deploy-flask-app/ptvs-git-push.png)\n\n首次部署将需要一些时间，因为它将创建虚拟环境、 安装包等。\n\nVisual Studio 不会显示部署的进度。\n\n浏览到 Azure URL 要查看您的更改。\n\n\n## Web 应用开发 - Windows - 命令行\n\n### 克隆存储库\n\n首先，使用在 Azure 门户中提供的 URL 来克隆存储库，并将 Azure 存储库添加为远程。有关详细信息，请参阅[在 Azure 中使用 GIT 进行连续部署](/documentation/articles/web-sites-publish-source-control)。\n\n    git clone <repo-url>\n    cd <repo-folder>\n    git remote add azure <repo-url> \n\n### 创建虚拟环境\n\n我们将为开发目的创建新的虚拟环境 （不要将其添加到存储库）。Python 中的虚拟环境是可重定位，因此使用该应用程序的每个开发人员将在本地创建自己的环境。\n\n请确保使用的 Python 版本与 Web 应用所选的 Python 版本相同（在 runtime.txt 中或 Azure 门户中 Web 应用的**应用程序设置**边栏选项卡）。\n\n对于 Python 2.7：\n\n    c:\\python27\\python.exe -m virtualenv env\n\n对于 Python 3.4：\n\n    c:\\python34\\python.exe -m venv env\n\n安装应用程序所需的任何外部软件包。可以使用该存储库的根处 requirements.txt 文件在虚拟环境中安装软件包：\n\n    env\\scripts\\pip install -r requirements.txt\n\n### 使用开发服务器运行\n\n您可以使用以下命令在开发服务器下启用应用程序：\n\n    env\\scripts\\python runserver.py\n\n控制台将显示服务器侦听的 URL 和端口：\n\n![](./media/web-sites-python-create-deploy-flask-app/windows-run-local-flask.png)\n\n然后，将 web 浏览器打开到该 URL。\n\n![](./media/web-sites-python-create-deploy-flask-app/windows-browser-flask.png)\n\n### 进行更改\n\n现在您可以通过更改应用程序源和/或模板进行试验。\n\n您测试您的更改后，将其提交到 Git 存储库：\n\n    git add <modified-file>\n    git commit -m \"<commit-comment>\"\n\n### 安装多个软件包\n\n您的应用程序可能具有除 Python 和 Flask 以外的依赖关系。\n\n您可以使用 pip 安装其他软件包。例如，要安装 Azure SDK for Python（使您可以访问 Azure 存储、 服务总线和其他 Azure 服务），请输入：\n\n    env\\scripts\\pip install azure\n\n请确保更新 requirements.txt：\n\n    env\\scripts\\pip freeze > requirements.txt\n\n落实更改：\n\n    git add requirements.txt\n    git commit -m \"Added azure package\"\n\n### 部署到 Azure\n\n要触发部署，请将更改推送到 Azure：\n\n    git push azure master\n\n您将看到部署脚本的输出，包括虚拟环境创建，安装软件包，创建 web.config。\n\n浏览到 Azure URL 要查看您的更改。\n\n\n## Web 应用开发 - Mac/Linux - 命令行\n\n### 克隆存储库\n\n首先，使用在 Azure 门户中提供的 URL 来克隆存储库，并将 Azure 存储库添加为远程。有关详细信息，请参阅[在 Azure 中使用 GIT 进行连续部署](/documentation/articles/web-sites-publish-source-control)。\n\n    git clone <repo-url>\n    cd <repo-folder>\n    git remote add azure <repo-url> \n\n### 创建虚拟环境\n\n我们将为开发目的创建新的虚拟环境 （不要将其添加到存储库）。Python 中的虚拟环境是可重定位，因此使用该应用程序的每个开发人员将在本地创建自己的环境。\n\n请确保使用的 Python 版本与 Web 应用所选的 Python 版本相同（在 runtime.txt 中或 Azure 门户中 Web 应用的**应用程序设置**边栏选项卡）。\n\n对于 Python 2.7：\n\n    python -m virtualenv env\n\n对于 Python 3.4：\n\n    python -m venv env\n\n安装应用程序所需的任何外部软件包。可以使用该存储库的根处 requirements.txt 文件在虚拟环境中安装软件包：\n\n    env/bin/pip install -r requirements.txt\n\n### 使用开发服务器运行\n\n您可以使用以下命令在开发服务器下启用应用程序：\n\n    env/bin/python runserver.py\n\n控制台将显示服务器侦听的 URL 和端口：\n\n![](./media/web-sites-python-create-deploy-flask-app/mac-run-local-flask.png)\n\n然后，将 web 浏览器打开到该 URL。\n\n![](./media/web-sites-python-create-deploy-flask-app/mac-browser-flask.png)\n\n### 进行更改\n\n现在您可以通过更改应用程序源和/或模板进行试验。\n\n您测试您的更改后，将其提交到 Git 存储库：\n\n    git add <modified-file>\n    git commit -m \"<commit-comment>\"\n\n### 安装多个软件包\n\n您的应用程序可能具有除 Python 和 Flask 以外的依赖关系。\n\n您可以使用 pip 安装其他软件包。例如，要安装 Azure SDK for Python（使您可以访问 Azure 存储、 服务总线和其他 Azure 服务），请输入：\n\n    env/bin/pip install azure\n\n请确保更新 requirements.txt：\n\n    env/bin/pip freeze > requirements.txt\n\n落实更改：\n\n    git add requirements.txt\n    git commit -m \"Added azure package\"\n\n### 部署到 Azure\n\n要触发部署，请将更改推送到 Azure：\n\n    git push azure master\n\n您将看到部署脚本的输出，包括虚拟环境创建，安装软件包，创建 web.config。\n\n浏览到 Azure URL 要查看您的更改。\n\n\n## 故障排除 - 软件包安装\n<a name=\"troubleshooting-package-installation\"></a>\n\n[WACOM.INCLUDE [web-sites-python-troubleshooting-package-installation](../includes/web-sites-python-troubleshooting-package-installation.md)]\n\n\n## 故障排除 - 虚拟环境\n\n[AZURE.INCLUDE [web-sites-python-troubleshooting-virtual-environment](../includes/web-sites-python-troubleshooting-virtual-environment.md)]\n\n\n## 后续步骤\n\n请遵循下面链接以了解有关 Flask 和 Python Tools for Visual Studio 的更多信息：\n \n- [Flask 文档]\n- [Python Tools for Visual Studio 文档]\n\n有关使用 Azure 表存储和 MongoDB 的信息：\n\n- [具有 Python Tools for Visual Studio 的 Azure 上的 Flask 和 MongoDB]\n- [具有 Python Tools for Visual Studio 的 Azure 上的 Flask 和 Azure 表存储]\n\n\n<!--Link references-->\n[具有 Python Tools for Visual Studio 的 Azure 上的 Flask 和 MongoDB]: https://github.com/microsoft/ptvs/wiki/Flask-and-MongoDB-on-Azure\n[具有 Python Tools for Visual Studio 的 Azure 上的 Flask 和 Azure 表存储]: /documentation/articles/web-sites-python-ptvs-flask-table-storage\n<!--External Link references-->\n[Azure SDK for Python 2.7]: http://go.microsoft.com/fwlink/?linkid=254281\n[Azure SDK for Python 3.4]: http://go.microsoft.com/fwlink/?linkid=516990\n[python.org]: http://www.python.org/\n[Git for Windows]: http://msysgit.github.io/\n[GitHub for Windows]: https://windows.github.com/\n[Python Tools for Visual Studio]: http://aka.ms/ptvs\n[Python Tools 2.2 for Visual Studio]: http://go.microsoft.com/fwlink/?LinkID=624025\n[Visual Studio]: http://www.visualstudio.com/\n[Python Tools for Visual Studio 文档]: http://aka.ms/ptvsdocs\n[Flask 文档]: http://flask.pocoo.org/\n\n<!---HONumber=76-->"
}