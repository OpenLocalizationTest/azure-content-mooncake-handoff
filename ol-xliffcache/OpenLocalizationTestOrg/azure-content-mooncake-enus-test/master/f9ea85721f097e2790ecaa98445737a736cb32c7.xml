{
  "nodes": [
    {
      "content": "Azure 存储可伸缩性和性能目标 |Azure",
      "pos": [
        27,
        51
      ]
    },
    {
      "content": "了解有关 Azure 存储帐户的可伸缩性和性能目标的信息，包括标准和高级存储账户的容量、请求速率以及入站和出站带宽。了解每个 Azure 存储服务中各分区的性能目标。",
      "pos": [
        70,
        153
      ]
    },
    {
      "content": "Azure 存储空间可伸缩性和性能目标",
      "pos": [
        353,
        372
      ]
    },
    {
      "content": "概述",
      "pos": [
        377,
        379
      ]
    },
    {
      "pos": [
        381,
        510
      ],
      "content": "本主题介绍 Azure 存储空间的可伸缩性和性能主题。有关其他 Azure 限制的摘要，请参阅 <bpt id=\"p1\">[</bpt>Azure 订阅和服务限制、配额与约束<ept id=\"p1\">](/documentation/articles/azure-subscription-service-limits)</ept>。"
    },
    {
      "pos": [
        513,
        795
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> 所有存储帐户都在新的扁平网络拓扑上运行，无论它们在何时创建，都支持下文概述的可伸缩性和性能目标。有关 Azure 存储的扁平网络体系结构和可伸缩性的详细信息，请参阅 <bpt id=\"p1\">[</bpt>Azure 存储空间：具有高度一致性的高可用云存储服务<ept id=\"p1\">](http://blogs.msdn.com/b/windowsazurestorage/archive/2011/11/20/windows-azure-storage-a-highly-available-cloud-storage-service-with-strong-consistency.aspx)</ept>。"
    },
    {
      "pos": [
        808,
        967
      ],
      "content": "<ph id=\"ph1\">[AZURE.IMPORTANT]</ph>以下所列的可伸缩性和性能目标为高端目标，但却是能够实现的。在任何情况下，你的存储帐户实现的请求速率和带宽取决于存储对象大小、使用的访问模式、应用程序执行的工作负荷类型。请务必测试你的服务，以确定其性能是否达到你的要求。如果可能，应避免流量速率突发峰值，并确保流量在各个分区上均匀分布。"
    },
    {
      "content": "当你的应用程序达到分区能够处理的工作负荷极限时，Azure 存储将开始返回错误代码 503（服务器忙）或错误代码 500（操作超时）响应。发生这种情况时，应用程序应使用指数退让策略进行重试。使用指数退让策略，可以减少分区上的负载，缓解该分区的流量高峰。",
      "pos": [
        970,
        1096
      ]
    },
    {
      "pos": [
        1098,
        1219
      ],
      "content": "如果您的应用程序的需求超过了单个存储帐户的可伸缩性目标值，您可以创建应用程序以使用多个存储帐户，并将数据对象分布到这些存储帐户中。请参阅<bpt id=\"p1\">[</bpt>存储定价详细信息<ept id=\"p1\">](/home/features/storage#price)</ept>，了解有关批量定价的信息。"
    },
    {
      "pos": [
        1224,
        1306
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"scalability-targets-for-standard-storage-accounts\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph> Blob、队列、表和文件的可伸缩性目标"
    },
    {
      "content": "虚拟机磁盘的可伸缩性目标",
      "pos": [
        1388,
        1400
      ]
    },
    {
      "pos": [
        1498,
        1571
      ],
      "content": "有关其他详细信息，请参阅<bpt id=\"p1\">[</bpt>虚拟机大小<ept id=\"p1\">](/documentation/articles/virtual-machines-size-specs)</ept>。"
    },
    {
      "content": "标准存储帐户",
      "pos": [
        1577,
        1583
      ]
    },
    {
      "pos": [
        1701,
        1769
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"scalability-targets-for-premium-storage-accounts\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph> 高级存储帐户"
    },
    {
      "content": "Azure 资源管理器的可伸缩性目标",
      "pos": [
        1885,
        1903
      ]
    },
    {
      "content": "Azure 存储中的分区",
      "pos": [
        2031,
        2043
      ]
    },
    {
      "content": "可容纳存储在 Azure 存储中的数据的每个对象（Blob、消息、实体和文件）都属于某个分区，可用分区键进行标识。分区决定了 Azure 存储如何在多个服务器之间实现 Blob、消息、实体和文件的负载平衡，以满足这些对象的流量需求。分区键在存储帐户内是唯一的，用于查找 Blob、消息或实体。",
      "pos": [
        2045,
        2191
      ]
    },
    {
      "pos": [
        2193,
        2285
      ],
      "content": "上面<bpt id=\"p1\">[</bpt>标准存储帐户的可伸缩性目标<ept id=\"p1\">](#scalability-targets-for-standard-storage-accounts)</ept>中所示的表列出了每项服务在单个分区的性能目标。"
    },
    {
      "content": "分区会对每个存储服务的负载平衡和可伸缩性产生以下影响：",
      "pos": [
        2287,
        2314
      ]
    },
    {
      "pos": [
        2318,
        2446
      ],
      "content": "<bpt id=\"p1\">**</bpt>Blob<ept id=\"p1\">**</ept>：Blob 的分区键是容器名称 + Blob 名称。这意味着每个 Blob 都有它自己的分区。因此，Blob 可以分布在很多服务器上，以横向扩展对它们的访问。虽然 Blob 可在 Blob 容器中进行逻辑分组，但这种分组不会对分区产生影响。"
    },
    {
      "pos": [
        2450,
        2503
      ],
      "content": "<bpt id=\"p1\">**</bpt>文件<ept id=\"p1\">**</ept>：文件的分区键是帐户名称 + 文件共享名称。这意味着一个文件共享中的所有文件也都位于单个分区。"
    },
    {
      "pos": [
        2507,
        2595
      ],
      "content": "<bpt id=\"p1\">**</bpt>消息<ept id=\"p1\">**</ept>：消息中的分区键是队列名称，因此一个队列中的所有消息都分组到单个分区中，由单个服务器提供服务。不同队列可以由不同服务器处理，无论存储帐户有多少队列，都可以平衡负载。"
    },
    {
      "pos": [
        2599,
        2660
      ],
      "content": "<bpt id=\"p1\">**</bpt>实体<ept id=\"p1\">**</ept>：实体的分区键是表名称 + 分区键，其中，分区键是实体所需的自定义的 <bpt id=\"p2\">**</bpt>PartitionKey<ept id=\"p2\">**</ept> 属性。"
    },
    {
      "content": "具有相同分区键值的所有实体都分组到同一分区，并存储在同一分区服务器上。在设计应用程序的过程中，了解这一点非常重要。将实体分布在多个分区中能够实现可伸缩性优势，而将实体分组到单个分区中则能够提供数据访问优势，你的应用程序应该平衡这两大优势。",
      "pos": [
        2666,
        2785
      ]
    },
    {
      "content": "将表中的一组实体分组到单个分区中的一大关键优势是能够对位于同一分区中的实体执行原子操作，因为一个分区存在于单个服务器上。因此如果您想要执行批处理操作，请考虑对具有相同分区键的实体进行分组。",
      "pos": [
        2791,
        2885
      ]
    },
    {
      "content": "另一方面，位于同一表中但属于不同分区的实体可在不同服务器之间实现负载平衡，因而可能获得具有更好伸缩性的大型表。",
      "pos": [
        2891,
        2946
      ]
    },
    {
      "content": "另请参阅",
      "pos": [
        2951,
        2955
      ]
    },
    {
      "content": "存储定价详细信息",
      "pos": [
        2960,
        2968
      ]
    },
    {
      "content": "Azure 订阅和服务限制、配额和约束",
      "pos": [
        3003,
        3022
      ]
    },
    {
      "content": "高级存储：适用于 Azure 虚拟机工作负荷的高性能存储",
      "pos": [
        3086,
        3114
      ]
    },
    {
      "content": "Azure 存储复制",
      "pos": [
        3183,
        3193
      ]
    },
    {
      "content": "Azure 存储性能和可伸缩性清单",
      "pos": [
        3242,
        3259
      ]
    },
    {
      "content": "Azure 存储：具有高度一致性的高可用云存储服务",
      "pos": [
        3319,
        3344
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"Azure 存储可伸缩性和性能目标 |Azure\"\n    description=\"了解有关 Azure 存储帐户的可伸缩性和性能目标的信息，包括标准和高级存储账户的容量、请求速率以及入站和出站带宽。了解每个 Azure 存储服务中各分区的性能目标。\"\n    services=\"storage\"\n    documentationCenter=\"na\"\n    authors=\"tamram\"\n    manager=\"na\"\n    editor=\"na\" />\n<tags \n    ms.service=\"storage\"\n   ms.date=\"12/04/2015\"\n    wacn.date=\"01/14/2016\" />\n\n# Azure 存储空间可伸缩性和性能目标\n\n## 概述\n\n本主题介绍 Azure 存储空间的可伸缩性和性能主题。有关其他 Azure 限制的摘要，请参阅 [Azure 订阅和服务限制、配额与约束](/documentation/articles/azure-subscription-service-limits)。\n\n>[AZURE.NOTE] 所有存储帐户都在新的扁平网络拓扑上运行，无论它们在何时创建，都支持下文概述的可伸缩性和性能目标。有关 Azure 存储的扁平网络体系结构和可伸缩性的详细信息，请参阅 [Azure 存储空间：具有高度一致性的高可用云存储服务](http://blogs.msdn.com/b/windowsazurestorage/archive/2011/11/20/windows-azure-storage-a-highly-available-cloud-storage-service-with-strong-consistency.aspx)。\n\n<!-- -->\n\n>[AZURE.IMPORTANT]以下所列的可伸缩性和性能目标为高端目标，但却是能够实现的。在任何情况下，你的存储帐户实现的请求速率和带宽取决于存储对象大小、使用的访问模式、应用程序执行的工作负荷类型。请务必测试你的服务，以确定其性能是否达到你的要求。如果可能，应避免流量速率突发峰值，并确保流量在各个分区上均匀分布。\n\n>当你的应用程序达到分区能够处理的工作负荷极限时，Azure 存储将开始返回错误代码 503（服务器忙）或错误代码 500（操作超时）响应。发生这种情况时，应用程序应使用指数退让策略进行重试。使用指数退让策略，可以减少分区上的负载，缓解该分区的流量高峰。\n\n如果您的应用程序的需求超过了单个存储帐户的可伸缩性目标值，您可以创建应用程序以使用多个存储帐户，并将数据对象分布到这些存储帐户中。请参阅[存储定价详细信息](/home/features/storage#price)，了解有关批量定价的信息。\n\n\n##<a id=\"scalability-targets-for-standard-storage-accounts\"></a> Blob、队列、表和文件的可伸缩性目标\n\n[AZURE.INCLUDE [azure-storage-limits](../includes/azure-storage-limits.md)]\n\n## 虚拟机磁盘的可伸缩性目标 \n\n[AZURE.INCLUDE [azure-storage-limits-vm-disks](../includes/azure-storage-limits-vm-disks.md)]\n\n有关其他详细信息，请参阅[虚拟机大小](/documentation/articles/virtual-machines-size-specs)。\n\n### 标准存储帐户\n\n[AZURE.INCLUDE [azure-storage-limits-vm-disks-standard](../includes/azure-storage-limits-vm-disks-standard.md)]\n\n###<a id=\"scalability-targets-for-premium-storage-accounts\"></a> 高级存储帐户\n\n[AZURE.INCLUDE [azure-storage-limits-vm-disks-premium](../includes/azure-storage-limits-vm-disks-premium.md)]\n\n## Azure 资源管理器的可伸缩性目标\n\n[AZURE.INCLUDE [azure-storage-limits-azure-resource-manager](../includes/azure-storage-limits-azure-resource-manager.md)]\n\n## Azure 存储中的分区\n\n可容纳存储在 Azure 存储中的数据的每个对象（Blob、消息、实体和文件）都属于某个分区，可用分区键进行标识。分区决定了 Azure 存储如何在多个服务器之间实现 Blob、消息、实体和文件的负载平衡，以满足这些对象的流量需求。分区键在存储帐户内是唯一的，用于查找 Blob、消息或实体。\n\n上面[标准存储帐户的可伸缩性目标](#scalability-targets-for-standard-storage-accounts)中所示的表列出了每项服务在单个分区的性能目标。\n\n分区会对每个存储服务的负载平衡和可伸缩性产生以下影响：\n\n- **Blob**：Blob 的分区键是容器名称 + Blob 名称。这意味着每个 Blob 都有它自己的分区。因此，Blob 可以分布在很多服务器上，以横向扩展对它们的访问。虽然 Blob 可在 Blob 容器中进行逻辑分组，但这种分组不会对分区产生影响。\n\n- **文件**：文件的分区键是帐户名称 + 文件共享名称。这意味着一个文件共享中的所有文件也都位于单个分区。\n\n- **消息**：消息中的分区键是队列名称，因此一个队列中的所有消息都分组到单个分区中，由单个服务器提供服务。不同队列可以由不同服务器处理，无论存储帐户有多少队列，都可以平衡负载。\n\n- **实体**：实体的分区键是表名称 + 分区键，其中，分区键是实体所需的自定义的 **PartitionKey** 属性。\n\n    具有相同分区键值的所有实体都分组到同一分区，并存储在同一分区服务器上。在设计应用程序的过程中，了解这一点非常重要。将实体分布在多个分区中能够实现可伸缩性优势，而将实体分组到单个分区中则能够提供数据访问优势，你的应用程序应该平衡这两大优势。\n\n    将表中的一组实体分组到单个分区中的一大关键优势是能够对位于同一分区中的实体执行原子操作，因为一个分区存在于单个服务器上。因此如果您想要执行批处理操作，请考虑对具有相同分区键的实体进行分组。\n\n    另一方面，位于同一表中但属于不同分区的实体可在不同服务器之间实现负载平衡，因而可能获得具有更好伸缩性的大型表。\n\n## 另请参阅\n\n- [存储定价详细信息](/home/features/storage#price)\n- [Azure 订阅和服务限制、配额和约束](/documentation/articles/azure-subscription-service-limits)\n- [高级存储：适用于 Azure 虚拟机工作负荷的高性能存储](/documentation/articles/storage-premium-storage-preview-portal)\n- [Azure 存储复制](/documentation/articles/storage-redundancy)\n- [Azure 存储性能和可伸缩性清单](/documentation/articles/storage-performance-checklist)\n- [Azure 存储：具有高度一致性的高可用云存储服务](http://blogs.msdn.com/b/windowsazurestorage/archive/2011/11/20/windows-azure-storage-a-highly-available-cloud-storage-service-with-strong-consistency.aspx)\n\n<!---HONumber=Mooncake_0104_2016-->"
}