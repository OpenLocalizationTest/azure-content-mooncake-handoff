<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f104e245c148c5cdb6c4d8991fb41878f1f0f377</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>在计算模拟器中本地分析云服务 | Azure</source>
          <target state="new">在计算模拟器中本地分析云服务 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>使用 Visual Studio 探查器调查云服务中的性能问题</source>
          <target state="new">使用 Visual Studio 探查器调查云服务中的性能问题</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>在 Azure 计算模拟器中使用 Visual Studio 探查器来本地测试云服务的性能</source>
          <target state="new">在 Azure 计算模拟器中使用 Visual Studio 探查器来本地测试云服务的性能</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>可通过各种工具和技术来测试云服务的性能。在将云服务发布到 Azure 后，可以让 Visual Studio 收集分析数据，然后在本地进行分析。也可以使用诊断来跟踪各种性能计数器，如<bpt id="p1">[</bpt>在 Azure 中使用性能计数器<ept id="p1">][2]</ept>中所述。此外，在将应用程序部署到云之前，您可能需要在计算模拟器中本地分析应用程序。</source>
          <target state="new">可通过各种工具和技术来测试云服务的性能。在将云服务发布到 Azure 后，可以让 Visual Studio 收集分析数据，然后在本地进行分析。也可以使用诊断来跟踪各种性能计数器，如<bpt id="p1">[</bpt>在 Azure 中使用性能计数器<ept id="p1">][2]</ept>中所述。此外，在将应用程序部署到云之前，您可能需要在计算模拟器中本地分析应用程序。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>本文包含了 CPU 采样分析方法，可在模拟器中本地执行该方法。CPU 采样是一种干预性不是很强的分析方法。探查器将按照指定的采样时间间隔拍摄调用堆栈的快照。将收集一段时间内的数据并将其显示在报告中。此分析方法倾向于指示在具有大量计算的应用程序中执行大多数 CPU 工作的位置。这使你能够侧重于应用程序在其上花费最多时间的“热路径”。</source>
          <target state="new">本文包含了 CPU 采样分析方法，可在模拟器中本地执行该方法。CPU 采样是一种干预性不是很强的分析方法。探查器将按照指定的采样时间间隔拍摄调用堆栈的快照。将收集一段时间内的数据并将其显示在报告中。此分析方法倾向于指示在具有大量计算的应用程序中执行大多数 CPU 工作的位置。这使你能够侧重于应用程序在其上花费最多时间的“热路径”。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>步骤 1：配置 Visual Studio 以进行分析</source>
          <target state="new">步骤 1：配置 Visual Studio 以进行分析</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>首先，提供了几个 Visual Studio 配置选项，这些选项在分析时可能会有用。若要使分析报告变得有意义，你将需要应用程序的符号（.pdb 文件）与系统库的符号。你将需要确保引用可用的符号服务器。为此，请在 Visual Studio 中的“工具”菜单上，依次选择“选项”、“调试”和“符号”。确保<bpt id="p1">**</bpt>符号文件 (.pdb) 位置<ept id="p1">**</ept>下方列出了 Microsoft 符号服务器。你也可参考 http://referencesource.microsoft.com/symbols，其上可能提供了其他符号文件。</source>
          <target state="new">首先，提供了几个 Visual Studio 配置选项，这些选项在分析时可能会有用。若要使分析报告变得有意义，你将需要应用程序的符号（.pdb 文件）与系统库的符号。你将需要确保引用可用的符号服务器。为此，请在 Visual Studio 中的“工具”菜单上，依次选择“选项”、“调试”和“符号”。确保<bpt id="p1">**</bpt>符号文件 (.pdb) 位置<ept id="p1">**</ept>下方列出了 Microsoft 符号服务器。你也可参考 http://referencesource.microsoft.com/symbols，其上可能提供了其他符号文件。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>如果需要，可通过设置“仅我的代码”来简化探查器生成的报告。通过启用“仅我的代码”，可简化函数调用堆栈，以便从报告中隐藏对库和 .NET Framework 的完全内部调用。在“工具”菜单上，选择“选项”。然后展开“性能工具”节点，并选择“常规”。选中“为探查器报告启用‘仅我的代码’”的复选框。</source>
          <target state="new">如果需要，可通过设置“仅我的代码”来简化探查器生成的报告。通过启用“仅我的代码”，可简化函数调用堆栈，以便从报告中隐藏对库和 .NET Framework 的完全内部调用。在“工具”菜单上，选择“选项”。然后展开“性能工具”节点，并选择“常规”。选中“为探查器报告启用‘仅我的代码’”的复选框。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>你可以在现有项目或新项目中使用这些说明。如果你创建新的项目来尝试下面描述的技术，请选择 C# <bpt id="p1">**</bpt>Azure 云服务<ept id="p1">**</ept>项目，并选择“Web 角色”和“辅助角色”。</source>
          <target state="new">你可以在现有项目或新项目中使用这些说明。如果你创建新的项目来尝试下面描述的技术，请选择 C# <bpt id="p1">**</bpt>Azure 云服务<ept id="p1">**</ept>项目，并选择“Web 角色”和“辅助角色”。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>为了进行演示，请将一些代码添加到项目中，这些代码将占用大量时间，从而演示某个明显的性能问题。例如，将以下代码添加到辅助角色项目：</source>
          <target state="new">为了进行演示，请将一些代码添加到项目中，这些代码将占用大量时间，从而演示某个明显的性能问题。例如，将以下代码添加到辅助角色项目：</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>在辅助角色的 RoleEntryPoint-derived 类中从 RunAsync 方法调用此代码。（忽略有关以同步方式运行方法的警告。）</source>
          <target state="new">在辅助角色的 RoleEntryPoint-derived 类中从 RunAsync 方法调用此代码。（忽略有关以同步方式运行方法的警告。）</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>本地生成并运行云服务且不进行调试 (Ctrl+F5)，并将解决方案配置设置为 <bpt id="p1">**</bpt>Release<ept id="p1">**</ept>。这将确保创建的所有文件和文件夹都用于本地运行应用程序，并确保启动所有仿真程序。从任务栏启动计算模拟器 UI，以验证辅助角色是否正在运行。</source>
          <target state="new">本地生成并运行云服务且不进行调试 (Ctrl+F5)，并将解决方案配置设置为 <bpt id="p1">**</bpt>Release<ept id="p1">**</ept>。这将确保创建的所有文件和文件夹都用于本地运行应用程序，并确保启动所有仿真程序。从任务栏启动计算模拟器 UI，以验证辅助角色是否正在运行。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>步骤 2：附加到进程</source>
          <target state="new">步骤 2：附加到进程</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>你必须将探查器附加到正在运行的进程，而不是通过从 Visual Studio 2010 IDE 中启动应用程序来分析该应用程序。</source>
          <target state="new">你必须将探查器附加到正在运行的进程，而不是通过从 Visual Studio 2010 IDE 中启动应用程序来分析该应用程序。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>若要将探查器附加到进程，请在“分析”菜单上选择“探查器”和“附加/分离”。</source>
          <target state="new">若要将探查器附加到进程，请在“分析”菜单上选择“探查器”和“附加/分离”。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>对于辅助角色，请查找 WaWorkerHost.exe 进程。</source>
          <target state="new">对于辅助角色，请查找 WaWorkerHost.exe 进程。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>如果项目文件夹位于网络驱动器上，则探查器将要求你提供其他位置来保存分析报告。</source>
          <target state="new">如果项目文件夹位于网络驱动器上，则探查器将要求你提供其他位置来保存分析报告。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>也可以通过附加到 WaIISHost.exe 来附加到 Web 角色。如果应用程序中有多个辅助角色进程，则需要使用 processID 将它们区分开来。可以通过访问 Process 对象以编程方式查询 processID。例如，如果将此代码添加到角色中 RoleEntryPoint 派生的类的 Run 方法，则可在计算模拟器 UI 中查看日志以了解要连接到的进程。</source>
          <target state="new">也可以通过附加到 WaIISHost.exe 来附加到 Web 角色。如果应用程序中有多个辅助角色进程，则需要使用 processID 将它们区分开来。可以通过访问 Process 对象以编程方式查询 processID。例如，如果将此代码添加到角色中 RoleEntryPoint 派生的类的 Run 方法，则可在计算模拟器 UI 中查看日志以了解要连接到的进程。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>若要查看日志，请启动计算模拟器 UI。</source>
          <target state="new">若要查看日志，请启动计算模拟器 UI。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>通过单击控制台窗口的标题栏，在计算模拟器 UI 中打开辅助角色日志控制台窗口。可以在日志中查看进程 ID。</source>
          <target state="new">通过单击控制台窗口的标题栏，在计算模拟器 UI 中打开辅助角色日志控制台窗口。可以在日志中查看进程 ID。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>完成附加后，请在应用程序的 UI 中执行这些步骤（如果需要）来复制方案。</source>
          <target state="new">完成附加后，请在应用程序的 UI 中执行这些步骤（如果需要）来复制方案。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>如果想要停止分析，请选择“停止分析”链接。</source>
          <target state="new">如果想要停止分析，请选择“停止分析”链接。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>步骤 3：查看性能报告</source>
          <target state="new">步骤 3：查看性能报告</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>这将显示应用程序的性能报告。</source>
          <target state="new">这将显示应用程序的性能报告。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>此时，探查器将停止执行，将数据保存到 .vsp 文件中，并显示一个展示对此数据的分析的报告。</source>
          <target state="new">此时，探查器将停止执行，将数据保存到 .vsp 文件中，并显示一个展示对此数据的分析的报告。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>如果你在热路径中看到 String.wstrcpy，请单击“仅我的代码”以将视图更改为仅显示用户代码。如果你看到 String.Concat，请尝试按“显示所有代码”按钮。</source>
          <target state="new">如果你在热路径中看到 String.wstrcpy，请单击“仅我的代码”以将视图更改为仅显示用户代码。如果你看到 String.Concat，请尝试按“显示所有代码”按钮。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>您将看到占用大部分执行时间的 Concatenate 方法和 String.Concat。</source>
          <target state="new">您将看到占用大部分执行时间的 Concatenate 方法和 String.Concat。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>如果添加了本文中的字符串串联代码，则此代码的任务列表中将显示一个警告。此外，还可能会显示一条警告，指示存在大量垃圾回收，这是由于创建和释放了大量字符串导致的。</source>
          <target state="new">如果添加了本文中的字符串串联代码，则此代码的任务列表中将显示一个警告。此外，还可能会显示一条警告，指示存在大量垃圾回收，这是由于创建和释放了大量字符串导致的。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>步骤 4：进行更改并比较性能</source>
          <target state="new">步骤 4：进行更改并比较性能</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>你也可在代码更改之前或之后比较性能。停止正在运行的进程，并编辑代码以将字符串串联操作替换为使用 StringBuilder：</source>
          <target state="new">你也可在代码更改之前或之后比较性能。停止正在运行的进程，并编辑代码以将字符串串联操作替换为使用 StringBuilder：</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>执行其他性能运行，然后比较性能。在性能资源管理器中，如果运行位于同一会话中，则只需选择两个报告，打开快捷菜单，并选择“比较性能报告”。若要与其他性能会话中的运行进行比较，请打开“分析”菜单，并选择“比较性能报告”。在显示的对话框中指定这两个文件。</source>
          <target state="new">执行其他性能运行，然后比较性能。在性能资源管理器中，如果运行位于同一会话中，则只需选择两个报告，打开快捷菜单，并选择“比较性能报告”。若要与其他性能会话中的运行进行比较，请打开“分析”菜单，并选择“比较性能报告”。在显示的对话框中指定这两个文件。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>报告将突出显示两个运行之间的差异。</source>
          <target state="new">报告将突出显示两个运行之间的差异。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>祝贺你！ 你已开始使用探查器。</source>
          <target state="new">祝贺你！ 你已开始使用探查器。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>故障排除</source>
          <target state="new">故障排除</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>请确保正在分析 Release 生成，并在不调试的情况下启动。</source>
          <target state="new">请确保正在分析 Release 生成，并在不调试的情况下启动。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>如果未在“探查器”菜单上启用“附加/分离”选项，请运行性能向导。</source>
          <target state="new">如果未在“探查器”菜单上启用“附加/分离”选项，请运行性能向导。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>使用计算模拟器 UI 来查看应用程序的状态。</source>
          <target state="new">使用计算模拟器 UI 来查看应用程序的状态。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>如果在模拟器中启动应用程序时或附加探查器时出现问题，请关闭并重新启动计算模拟器。如果这样做无法解决问题，请尝试重新启动。如果使用计算模拟器挂起或删除正在运行的部署，则会出现此问题。</source>
          <target state="new">如果在模拟器中启动应用程序时或附加探查器时出现问题，请关闭并重新启动计算模拟器。如果这样做无法解决问题，请尝试重新启动。如果使用计算模拟器挂起或删除正在运行的部署，则会出现此问题。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>如果您已从命令行使用任一分析命令（尤其是全局设置），请确保已调用 VSPerfClrEnv /globaloff 并已关闭 VsPerfMon.exe。</source>
          <target state="new">如果您已从命令行使用任一分析命令（尤其是全局设置），请确保已调用 VSPerfClrEnv /globaloff 并已关闭 VsPerfMon.exe。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>如果采样时显示了消息“PRF0025: 未收集数据”，请检查附加的进程是否有 CPU 活动。未执行任何计算工作的应用程序将无法生成任何采样数据。此外，在执行任何采样前可能会退出进程。查看以验证正在分析的角色的 Run 方法是否已终止。</source>
          <target state="new">如果采样时显示了消息“PRF0025: 未收集数据”，请检查附加的进程是否有 CPU 活动。未执行任何计算工作的应用程序将无法生成任何采样数据。此外，在执行任何采样前可能会退出进程。查看以验证正在分析的角色的 Run 方法是否已终止。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Visual Studio 探查器不支持在模拟器中检测 Azure 二进制文件，但若要测试内存分配，你可以在分析时选择该选项。此外，你可以选择并发分析，这将帮助你确定线程是否正在浪费时间竞争锁；也可以选择层交互分析，这将帮助你跟踪在应用程序的各个层之间（最常见的是数据层和辅助角色之间）进行交互时的性能问题。你可以查看应用程序生成的数据库查询并使用分析数据来改进对数据库的使用。有关层交互分析的信息，请参阅博客文章<bpt id="p1">[</bpt>演练：在 Visual Studio Team System 2010 中使用层交互探查器<ept id="p1">][3]</ept>。</source>
          <target state="new">Visual Studio 探查器不支持在模拟器中检测 Azure 二进制文件，但若要测试内存分配，你可以在分析时选择该选项。此外，你可以选择并发分析，这将帮助你确定线程是否正在浪费时间竞争锁；也可以选择层交互分析，这将帮助你跟踪在应用程序的各个层之间（最常见的是数据层和辅助角色之间）进行交互时的性能问题。你可以查看应用程序生成的数据库查询并使用分析数据来改进对数据库的使用。有关层交互分析的信息，请参阅博客文章<bpt id="p1">[</bpt>演练：在 Visual Studio Team System 2010 中使用层交互探查器<ept id="p1">][3]</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>