{
  "nodes": [
    {
      "content": "在 Mac OS 上使用 Python 连接到 SQL 数据库",
      "pos": [
        27,
        58
      ]
    },
    {
      "content": "演示了一个可用于从 Mac 连接到 Azure SQL 数据库的 Python 代码示例。该示例使用 pymssql 驱动程序。",
      "pos": [
        77,
        141
      ]
    },
    {
      "content": "在 Mac OS 上使用 Python 连接到 SQL 数据库",
      "pos": [
        360,
        391
      ]
    },
    {
      "content": "[AZURE.SELECTOR]",
      "pos": [
        396,
        412
      ]
    },
    {
      "content": "Node.js",
      "pos": [
        416,
        423
      ]
    },
    {
      "content": "Python",
      "pos": [
        492,
        498
      ]
    },
    {
      "content": "Ruby",
      "pos": [
        571,
        575
      ]
    },
    {
      "pos": [
        645,
        724
      ],
      "content": "本主题提供以 Python 编写的代码示例。该示例在 Mac 计算机上运行。该示例将使用 <bpt id=\"p1\">**</bpt>pymssql<ept id=\"p1\">**</ept> 驱动程序连接到 Azure SQL 数据库。"
    },
    {
      "content": "先决条件",
      "pos": [
        730,
        734
      ]
    },
    {
      "pos": [
        739,
        802
      ],
      "content": "<bpt id=\"p1\">[</bpt>Python 2.7.6<ept id=\"p1\">](https://www.python.org/download/releases/2.7.6)</ept>。"
    },
    {
      "content": "FreeTDS",
      "pos": [
        806,
        813
      ]
    },
    {
      "content": "Pymssql",
      "pos": [
        853,
        860
      ]
    },
    {
      "content": "安装所需的模块",
      "pos": [
        903,
        910
      ]
    },
    {
      "content": "打开终端并安装",
      "pos": [
        913,
        920
      ]
    },
    {
      "pos": [
        922,
        976
      ],
      "content": "<bpt id=\"p1\">**</bpt>1) Homebrew<ept id=\"p1\">**</ept>：从你的终端运行以下命令。这将在你的计算机上下载 Homebrew 包管理器。"
    },
    {
      "pos": [
        1073,
        1149
      ],
      "content": "<bpt id=\"p1\">**</bpt>2) FreeTDS<ept id=\"p1\">**</ept>：从你的终端运行以下命令。这将在你的计算机上下载 FreeTDS。要使 pymmsql 正常工作，必须安装 FreeTDS。"
    },
    {
      "pos": [
        1177,
        1224
      ],
      "content": "<bpt id=\"p1\">**</bpt>3) Pymmsql<ept id=\"p1\">**</ept>：从你的终端运行以下命令。这将在你的计算机上安装 pymmsql。"
    },
    {
      "content": "SQL 数据库",
      "pos": [
        1263,
        1270
      ]
    },
    {
      "pos": [
        1272,
        1412
      ],
      "content": "请参阅<bpt id=\"p1\">[</bpt>入门页<ept id=\"p1\">](/documentation/articles/sql-database-get-started)</ept>，以了解如何创建示例数据库。必须根据指南创建 <bpt id=\"p2\">**</bpt>AdventureWorks 数据库模板<ept id=\"p2\">**</ept>。下面所示的示例只适用于 <bpt id=\"p3\">**</bpt>AdventureWorks 架构<ept id=\"p3\">**</ept>。"
    },
    {
      "content": "步骤 1：获取连接详细信息",
      "pos": [
        1417,
        1430
      ]
    },
    {
      "content": "步骤 2：连接",
      "pos": [
        1594,
        1601
      ]
    },
    {
      "pos": [
        1603,
        1684
      ],
      "content": "<bpt id=\"p1\">[</bpt>Pymssql.connect<ept id=\"p1\">](http://pymssql.org/en/latest/ref/pymssql.html)</ept> 函数用于连接到 SQL 数据库。"
    },
    {
      "content": "步骤 3：执行查询",
      "pos": [
        1868,
        1877
      ]
    },
    {
      "pos": [
        1879,
        2112
      ],
      "content": "<bpt id=\"p1\">[</bpt>Cursor.execute<ept id=\"p1\">](http://pymssql.org/en/latest/ref/pymssql.html#pymssql.Cursor.execute)</ept> 函数可用于针对 SQL 数据库从查询中检索结果集。此函数实际上可接受任何查询，并返回可使用 <bpt id=\"p2\">[</bpt>cursor.fetchone()<ept id=\"p2\">](http://pymssql.org/en/latest/ref/pymssql.html#pymssql.Cursor.fetchone)</ept> 循环访问的结果集。"
    },
    {
      "content": "步骤 4：插入行",
      "pos": [
        2734,
        2742
      ]
    },
    {
      "pos": [
        2744,
        3000
      ],
      "content": "在本示例中，你将了解如何安全地执行 <bpt id=\"p1\">[</bpt>INSERT<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/ms174335.aspx)</ept> 语句，传递参数以保护应用程序免遭 <bpt id=\"p2\">[</bpt>SQL 注入<ept id=\"p2\">](https://technet.microsoft.com/zh-cn/library/ms161953(v=sql.105).aspx)</ept> 漏洞的危害，然后检索自动生成的<bpt id=\"p3\">[</bpt>主键<ept id=\"p3\">](https://msdn.microsoft.com/zh-cn/library/ms179610.aspx)</ept>值。"
    },
    {
      "content": "步骤 5：回退事务",
      "pos": [
        3542,
        3551
      ]
    },
    {
      "content": "此代码示例演示了你可以在其中执行以下操作的事务的用法：",
      "pos": [
        3554,
        3581
      ]
    },
    {
      "content": "-开始一个事务",
      "pos": [
        3584,
        3591
      ]
    },
    {
      "content": "-插入一行数据",
      "pos": [
        3593,
        3600
      ]
    },
    {
      "content": "-回滚事务以撤消插入",
      "pos": [
        3602,
        3612
      ]
    },
    {
      "content": "后续步骤",
      "pos": [
        4094,
        4098
      ]
    },
    {
      "pos": [
        4100,
        4144
      ],
      "content": "有关详细信息，请参阅 <bpt id=\"p1\">[</bpt>Python 开发人员中心<ept id=\"p1\">](/develop/python)</ept>。"
    }
  ],
  "content": "<properties\n    pageTitle=\"在 Mac OS 上使用 Python 连接到 SQL 数据库\"\n    description=\"演示了一个可用于从 Mac 连接到 Azure SQL 数据库的 Python 代码示例。该示例使用 pymssql 驱动程序。\"\n    services=\"sql-database\"\n    documentationCenter=\"\"\n    authors=\"meet-bhagdev\"\n    manager=\"jeffreyg\"\n    editor=\"\"/>\n\n\n<tags\n    ms.service=\"sql-database\"\n    ms.date=\"12/17/2015\"\n    wacn.date=\"01/29/2016\"/>\n\n\n# 在 Mac OS 上使用 Python 连接到 SQL 数据库\n\n\n> [AZURE.SELECTOR]\n- [Node.js](/documentation/articles/sql-database-develop-nodejs-simple-mac)\n- [Python](/documentation/articles/sql-database-develop-python-simple-mac-osx)\n- [Ruby](/documentation/articles/sql-database-develop-ruby-simple-mac-osx)\n\n\n本主题提供以 Python 编写的代码示例。该示例在 Mac 计算机上运行。该示例将使用 **pymssql** 驱动程序连接到 Azure SQL 数据库。\n\n\n## 先决条件\n\n\n- [Python 2.7.6](https://www.python.org/download/releases/2.7.6)。\n- [FreeTDS](https://github.com/brianb/FreeTDS)\n- [Pymssql](https://github.com/pymssql/pymssql)\n\n### 安装所需的模块\n\n\n打开终端并安装\n\n**1) Homebrew**：从你的终端运行以下命令。这将在你的计算机上下载 Homebrew 包管理器。\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n**2) FreeTDS**：从你的终端运行以下命令。这将在你的计算机上下载 FreeTDS。要使 pymmsql 正常工作，必须安装 FreeTDS。\n\n    brew install FreeTDS\n\n**3) Pymmsql**：从你的终端运行以下命令。这将在你的计算机上安装 pymmsql。\n\n    sudo -H pip install pymssql\n\n### SQL 数据库\n\n请参阅[入门页](/documentation/articles/sql-database-get-started)，以了解如何创建示例数据库。必须根据指南创建 **AdventureWorks 数据库模板**。下面所示的示例只适用于 **AdventureWorks 架构**。\n\n## 步骤 1：获取连接详细信息\n\n[AZURE.INCLUDE [sql-database-include-connection-string-details-20-portalshots](../includes/sql-database-include-connection-string-details-20-portalshots.md)]\n\n## 步骤 2：连接\n\n[Pymssql.connect](http://pymssql.org/en/latest/ref/pymssql.html) 函数用于连接到 SQL 数据库。\n\n    import pymssql\n    conn = pymssql.connect(server='yourserver.database.chinacloudapi.cn', user='yourusername@yourserver', password='yourpassword', database='AdventureWorks')\n\n\n## 步骤 3：执行查询\n\n[Cursor.execute](http://pymssql.org/en/latest/ref/pymssql.html#pymssql.Cursor.execute) 函数可用于针对 SQL 数据库从查询中检索结果集。此函数实际上可接受任何查询，并返回可使用 [cursor.fetchone()](http://pymssql.org/en/latest/ref/pymssql.html#pymssql.Cursor.fetchone) 循环访问的结果集。\n\n\n    import pymssql\n    conn = pymssql.connect(server='yourserver.database.chinacloudapi.cn', user='yourusername@yourserver', password='yourpassword', database='AdventureWorks')\n    cursor = conn.cursor()\n    cursor.execute('SELECT c.CustomerID, c.CompanyName,COUNT(soh.SalesOrderID) AS OrderCount FROM SalesLT.Customer AS c LEFT OUTER JOIN SalesLT.SalesOrderHeader AS soh ON c.CustomerID = soh.CustomerID GROUP BY c.CustomerID, c.CompanyName ORDER BY OrderCount DESC;')\n    row = cursor.fetchone()\n    while row:\n        print str(row[0]) + \" \" + str(row[1]) + \" \" + str(row[2])   \n        row = cursor.fetchone()\n\n\n## 步骤 4：插入行\n\n在本示例中，你将了解如何安全地执行 [INSERT](https://msdn.microsoft.com/zh-cn/library/ms174335.aspx) 语句，传递参数以保护应用程序免遭 [SQL 注入](https://technet.microsoft.com/zh-cn/library/ms161953(v=sql.105).aspx) 漏洞的危害，然后检索自动生成的[主键](https://msdn.microsoft.com/zh-cn/library/ms179610.aspx)值。\n\n\n\n    import pymssql\n    conn = pymssql.connect(server='yourserver.database.chinacloudapi.cn', user='yourusername@yourserver', password='yourpassword', database='AdventureWorks')\n    cursor = conn.cursor()\n    cursor.execute(\"INSERT SalesLT.Product (Name, ProductNumber, StandardCost, ListPrice, SellStartDate) OUTPUT INSERTED.ProductID VALUES ('SQL Server Express', 'SQLEXPRESS', 0, 0, CURRENT_TIMESTAMP)\")\n    row = cursor.fetchone()\n    while row:\n        print \"Inserted Product ID : \" +str(row[0])\n        row = cursor.fetchone()\n\n\n## 步骤 5：回退事务\n\n\n此代码示例演示了你可以在其中执行以下操作的事务的用法：\n\n\n-开始一个事务\n\n-插入一行数据\n\n-回滚事务以撤消插入\n\n\n    import pymssql\n    conn = pymssql.connect(server='yourserver.database.chinacloudapi.cn', user='yourusername@yourserver', password='yourpassword', database='AdventureWorks')\n    cursor = conn.cursor()\n    cursor.execute(\"BEGIN TRANSACTION\")\n    cursor.execute(\"INSERT SalesLT.Product (Name, ProductNumber, StandardCost, ListPrice, SellStartDate) OUTPUT INSERTED.ProductID VALUES ('SQL Server Express New', 'SQLEXPRESS New', 0, 0, CURRENT_TIMESTAMP)\")\n    cnxn.rollback()\n\n\n## 后续步骤\n\n有关详细信息，请参阅 [Python 开发人员中心](/develop/python)。\n\n<!---HONumber=Mooncake_0118_2016-->\n"
}