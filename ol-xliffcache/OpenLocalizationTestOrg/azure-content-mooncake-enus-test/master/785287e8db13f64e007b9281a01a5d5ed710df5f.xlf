<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">785287e8db13f64e007b9281a01a5d5ed710df5f</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>使用 .NET 的移动服务和 Azure Active Directory 中基于角色的访问控制（Windows 应用商店）| Azure</source>
          <target state="new">使用 .NET 的移动服务和 Azure Active Directory 中基于角色的访问控制（Windows 应用商店）| Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何使用 .NET 后端通过移动服务基于 Windows 应用商店应用程序中的 Azure Active Directory 角色控制访问。</source>
          <target state="new">了解如何使用 .NET 后端通过移动服务基于 Windows 应用商店应用程序中的 Azure Active Directory 角色控制访问。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>使用 JavaScript 的移动服务和 Azure Active Directory 中基于角色的访问控制</source>
          <target state="new">使用 JavaScript 的移动服务和 Azure Active Directory 中基于角色的访问控制</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;</source>
          <target state="new">&amp;nbsp;</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>概述</source>
          <target state="new">概述</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>基于角色的访问控制 (RBAC) 是对用户可充当的角色分配权限的做法。它会明确定义特定类别的用户可以或者不可以执行哪些操作。本教程将指导你了解如何将基本 RBAC 添加到 Azure 移动服务。</source>
          <target state="new">基于角色的访问控制 (RBAC) 是对用户可充当的角色分配权限的做法。它会明确定义特定类别的用户可以或者不可以执行哪些操作。本教程将指导你了解如何将基本 RBAC 添加到 Azure 移动服务。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>本教程将演示基于角色的访问控制，检查每个用户在 Azure Active Directory (AAD) 中定义的“销售”组的成员资格。访问检查将在 .NET 移动服务后端中使用 Azure Active Directory 的 <bpt id="p1">[</bpt><ept id="p1">Graph REST API]</ept> 来完成。只有属于“销售”组的用户才能查询数据。</source>
          <target state="new">本教程将演示基于角色的访问控制，检查每个用户在 Azure Active Directory (AAD) 中定义的“销售”组的成员资格。访问检查将在 .NET 移动服务后端中使用 Azure Active Directory 的 <bpt id="p1">[</bpt><ept id="p1">Graph REST API]</ept> 来完成。只有属于“销售”组的用户才能查询数据。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>本教程旨在扩充身份验证知识以加入授权实践。你应该先使用 Azure Active Directory 身份验证提供程序完成<bpt id="p1">[</bpt><ept id="p1">向应用程序添加身份验证]</ept>教程。本教程将继续更新<bpt id="p2">[</bpt><ept id="p2">向应用程序添加身份验证]</ept>教程中使用的 TodoItem 应用程序。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>本教程旨在扩充身份验证知识以加入授权实践。你应该先使用 Azure Active Directory 身份验证提供程序完成<bpt id="p1">[</bpt><ept id="p1">向应用程序添加身份验证]</ept>教程。本教程将继续更新<bpt id="p2">[</bpt><ept id="p2">向应用程序添加身份验证]</ept>教程中使用的 TodoItem 应用程序。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>先决条件</source>
          <target state="new">先决条件</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>本教程需要的内容如下：</source>
          <target state="new">本教程需要的内容如下：</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>在 Windows 8.1 上运行的 Visual Studio 2013。</source>
          <target state="new">在 Windows 8.1 上运行的 Visual Studio 2013。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>使用 Azure Active Directory 身份验证提供程序完成<bpt id="p1">[</bpt><ept id="p1">向应用程序添加身份验证]</ept>教程。</source>
          <target state="new">使用 Azure Active Directory 身份验证提供程序完成<bpt id="p1">[</bpt><ept id="p1">向应用程序添加身份验证]</ept>教程。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>为集成的应用程序生成密钥</source>
          <target state="new">为集成的应用程序生成密钥</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>在学习<bpt id="p1">[</bpt><ept id="p1">向应用程序添加身份验证]</ept>教程的过程中，你在完成<bpt id="p2">[</bpt><ept id="p2">注册以使用 Azure Active Directory 登录名]</ept>步骤时为集成的应用程序创建了注册。在本部分中，你将生成在使用该集成应用程序客户端 ID 读取目录信息时所用的密钥。</source>
          <target state="new">在学习<bpt id="p1">[</bpt><ept id="p1">向应用程序添加身份验证]</ept>教程的过程中，你在完成<bpt id="p2">[</bpt><ept id="p2">注册以使用 Azure Active Directory 登录名]</ept>步骤时为集成的应用程序创建了注册。在本部分中，你将生成在使用该集成应用程序客户端 ID 读取目录信息时所用的密钥。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>创建具有成员资格的销售组</source>
          <target state="new">创建具有成员资格的销售组</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>在移动服务上创建自定义授权属性</source>
          <target state="new">在移动服务上创建自定义授权属性</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>在本部分中，你将创建一个可用来针对移动服务操作执行访问权限检查的新自定义授权属性。该属性将基于传递给它的角色名称查找 Active Directory 组。然后，将基于该组的成员资格执行访问权限检查。</source>
          <target state="new">在本部分中，你将创建一个可用来针对移动服务操作执行访问权限检查的新自定义授权属性。该属性将基于传递给它的角色名称查找 Active Directory 组。然后，将基于该组的成员资格执行访问权限检查。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 中，右键单击移动服务 .NET 后端项目，然后单击“管理 NuGet 包”。</source>
          <target state="new">在 Visual Studio 中，右键单击移动服务 .NET 后端项目，然后单击“管理 NuGet 包”。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>在“NuGet Package Manager”对话框中的搜索条件内，输入 <bpt id="p1">**</bpt>ADAL<ept id="p1">**</ept> 以查找并安装移动服务的 <bpt id="p2">**</bpt>Active Directory 身份验证库<ept id="p2">**</ept>。最近我们已使用 3.3.205061641-alpha（预发行版）ADAL 包对本教程进行测试。</source>
          <target state="new">在“NuGet Package Manager”对话框中的搜索条件内，输入 <bpt id="p1">**</bpt>ADAL<ept id="p1">**</ept> 以查找并安装移动服务的 <bpt id="p2">**</bpt>Active Directory 身份验证库<ept id="p2">**</ept>。最近我们已使用 3.3.205061641-alpha（预发行版）ADAL 包对本教程进行测试。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 中，右键单击你的移动服务项目，然后依次单击“添加”和“新建文件夹”。将新文件夹命名为 <bpt id="p1">**</bpt>Utilities<ept id="p1">**</ept>。</source>
          <target state="new">在 Visual Studio 中，右键单击你的移动服务项目，然后依次单击“添加”和“新建文件夹”。将新文件夹命名为 <bpt id="p1">**</bpt>Utilities<ept id="p1">**</ept>。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 中，右键单击新的 <bpt id="p1">**</bpt>Utilities<ept id="p1">**</ept> 文件夹，并添加名为 <bpt id="p2">**</bpt>AuthorizeAadRole.cs<ept id="p2">**</ept> 的新类文件。</source>
          <target state="new">在 Visual Studio 中，右键单击新的 <bpt id="p1">**</bpt>Utilities<ept id="p1">**</ept> 文件夹，并添加名为 <bpt id="p2">**</bpt>AuthorizeAadRole.cs<ept id="p2">**</ept> 的新类文件。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>在 AuthorizeAadRole.cs 文件的顶部添加以下 <ph id="ph1">`using`</ph> 语句。</source>
          <target state="new">在 AuthorizeAadRole.cs 文件的顶部添加以下 <ph id="ph1">`using`</ph> 语句。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>在 AuthorizeAadRole.cs 中，将以下枚举类型添加到 Utilities 命名空间。在此示例中，我们只需处理 <bpt id="p1">**</bpt>Sales<ept id="p1">**</ept> 角色。其他各项只是你可能要使用的组的示例。</source>
          <target state="new">在 AuthorizeAadRole.cs 中，将以下枚举类型添加到 Utilities 命名空间。在此示例中，我们只需处理 <bpt id="p1">**</bpt>Sales<ept id="p1">**</ept> 角色。其他各项只是你可能要使用的组的示例。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>在 AuthorizeAadRole.cs 中，将以下 <ph id="ph1">`AuthorizeAadRole`</ph> 类定义添加到 Utilities 命名空间。</source>
          <target state="new">在 AuthorizeAadRole.cs 中，将以下 <ph id="ph1">`AuthorizeAadRole`</ph> 类定义添加到 Utilities 命名空间。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>在 AuthorizeAadRole.cs 中，按如下所示更新 <ph id="ph1">`AuthorizeAadRole`</ph> 类中的 <ph id="ph2">`InitGroupIds`</ph> 方法。此方法会创建一个字典，以将组 ID 映射到每个角色。</source>
          <target state="new">在 AuthorizeAadRole.cs 中，按如下所示更新 <ph id="ph1">`AuthorizeAadRole`</ph> 类中的 <ph id="ph2">`InitGroupIds`</ph> 方法。此方法会创建一个字典，以将组 ID 映射到每个角色。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>在 AuthorizeAadRole.cs 中，更新 <ph id="ph1">`AuthorizeAadRole`</ph> 类中的 <ph id="ph2">`GetAADToken`</ph> 方法。此方法使用存储在移动服务中的应用程序设置来获取从 ADAL 访问 AAD 的令牌。</source>
          <target state="new">在 AuthorizeAadRole.cs 中，更新 <ph id="ph1">`AuthorizeAadRole`</ph> 类中的 <ph id="ph2">`GetAADToken`</ph> 方法。此方法使用存储在移动服务中的应用程序设置来获取从 ADAL 访问 AAD 的令牌。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>默认情况下，ADAL for .NET 包含内存中令牌缓存，以帮助减轻 Active Directory 的额外网络流量。但是，你可以编写自己的缓存实现，或完全禁用缓存。有关详细信息，请参阅 <bpt id="p1">[</bpt><ept id="p1">ADAL for .NET]</ept>。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>默认情况下，ADAL for .NET 包含内存中令牌缓存，以帮助减轻 Active Directory 的额外网络流量。但是，你可以编写自己的缓存实现，或完全禁用缓存。有关详细信息，请参阅 <bpt id="p1">[</bpt><ept id="p1">ADAL for .NET]</ept>。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>在 AuthorizeAadRole.cs 中，更新 <ph id="ph1">`AuthorizeAadRole`</ph> 类中的 <ph id="ph2">`CheckMembership`</ph> 方法。此方法接收用户的对象 ID。然后，它使用 AAD Graph Rest API 来检查该对象 ID，以查看组的成员 ID 是否与 <ph id="ph3">`AuthorizeAadRole`</ph> 类中选择的角色相关联。</source>
          <target state="new">在 AuthorizeAadRole.cs 中，更新 <ph id="ph1">`AuthorizeAadRole`</ph> 类中的 <ph id="ph2">`CheckMembership`</ph> 方法。此方法接收用户的对象 ID。然后，它使用 AAD Graph Rest API 来检查该对象 ID，以查看组的成员 ID 是否与 <ph id="ph3">`AuthorizeAadRole`</ph> 类中选择的角色相关联。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>在 AuthorizeAadRole.cs 中，使用以下代码更新 <ph id="ph1">`AuthorizeAadRole`</ph> 类中的 <ph id="ph2">`OnAuthorization`</ph> 方法。此代码要求调用移动服务的用户已在 AAD 上完成身份验证。然后，此代码将获取用户的 AAD 对象 ID，检查与该角色对应的 Active Directory 组的成员资格。</source>
          <target state="new">在 AuthorizeAadRole.cs 中，使用以下代码更新 <ph id="ph1">`AuthorizeAadRole`</ph> 类中的 <ph id="ph2">`OnAuthorization`</ph> 方法。此代码要求调用移动服务的用户已在 AAD 上完成身份验证。然后，此代码将获取用户的 AAD 对象 ID，检查与该角色对应的 Active Directory 组的成员资格。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>你可以按名称查找 Active Directory 组。但是，在许多情况下，将组 ID 存储为移动服务应用程序设置是较好的做法。这是因为组名称很可能会更改，而 ID 会保持相同。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>你可以按名称查找 Active Directory 组。但是，在许多情况下，将组 ID 存储为移动服务应用程序设置是较好的做法。这是因为组名称很可能会更改，而 ID 会保持相同。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>保存对 AuthorizeAadRole.cs 所做的更改。</source>
          <target state="new">保存对 AuthorizeAadRole.cs 所做的更改。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>将基于角色的访问检查添加到数据库操作</source>
          <target state="new">将基于角色的访问检查添加到数据库操作</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 中，展开移动服务项目中的 <bpt id="p1">**</bpt>Controllers<ept id="p1">**</ept> 文件夹。打开 TodoItemController.cs。</source>
          <target state="new">在 Visual Studio 中，展开移动服务项目中的 <bpt id="p1">**</bpt>Controllers<ept id="p1">**</ept> 文件夹。打开 TodoItemController.cs。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>在 TodoItemController.cs 中，为包含自定义授权属性的 utilities 命名空间添加 <ph id="ph1">`using`</ph> 语句。</source>
          <target state="new">在 TodoItemController.cs 中，为包含自定义授权属性的 utilities 命名空间添加 <ph id="ph1">`using`</ph> 语句。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>在 TodoItemController.cs 中，可以根据检查访问权限的方式，将属性添加到控制器类或单个方法。如果你要让所有控制器操作根据相同的角色来检查访问权限，只需将属性添加到类。请按如下所示将属性添加到类，以测试本教程。</source>
          <target state="new">在 TodoItemController.cs 中，可以根据检查访问权限的方式，将属性添加到控制器类或单个方法。如果你要让所有控制器操作根据相同的角色来检查访问权限，只需将属性添加到类。请按如下所示将属性添加到类，以测试本教程。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>如果你只想要检查插入、更新和删除操作的访问权限，则应使用以下方式仅设置这些方法的属性。</source>
          <target state="new">如果你只想要检查插入、更新和删除操作的访问权限，则应使用以下方式仅设置这些方法的属性。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>保存 TodoItemController.cs 并生成移动服务，以验证是否没有语法错误。</source>
          <target state="new">保存 TodoItemController.cs 并生成移动服务，以验证是否没有语法错误。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>将移动服务发布到 Azure 帐户。</source>
          <target state="new">将移动服务发布到 Azure 帐户。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>测试客户端的访问</source>
          <target state="new">测试客户端的访问</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>