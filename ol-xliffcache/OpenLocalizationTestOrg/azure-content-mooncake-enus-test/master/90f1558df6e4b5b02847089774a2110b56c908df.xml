{
  "nodes": [
    {
      "content": "SQL In-Memory 入门 | Azure",
      "pos": [
        27,
        51
      ]
    },
    {
      "content": "SQL In-Memory 技术大幅提升了事务和分析工作负荷的性能。了解如何利用这些技术。",
      "pos": [
        70,
        115
      ]
    },
    {
      "content": "SQL 数据库中的 In-Memory（预览版）入门",
      "pos": [
        330,
        356
      ]
    },
    {
      "content": "在适当的情况下，In-Memory 功能可以大幅提升事务和分析工作负荷的性能。",
      "pos": [
        358,
        397
      ]
    },
    {
      "content": "本主题着重进行两个演示，一个适用于 In-Memory OLTP，另一个适用于 In-Memory Analytics。每个演示都有完整的步骤以及运行演示所需的代码。你可以：",
      "pos": [
        399,
        486
      ]
    },
    {
      "content": "使用代码来测试变体，以查看性能结果差异；或者",
      "pos": [
        490,
        512
      ]
    },
    {
      "content": "阅读代码来了解方案，以及了解如何创建和使用 In-Memory 对象。",
      "pos": [
        515,
        550
      ]
    },
    {
      "content": "In-Memory OLTP",
      "pos": [
        557,
        571
      ]
    },
    {
      "pos": [
        573,
        629
      ],
      "content": "In-Memory <bpt id=\"p1\">[</bpt>OLTP<ept id=\"p1\">](#install_oltp_manuallink)</ept>（联机事务处理）的功能如下："
    },
    {
      "content": "内存优化表。",
      "pos": [
        633,
        639
      ]
    },
    {
      "content": "本机编译的存储过程。",
      "pos": [
        642,
        652
      ]
    },
    {
      "content": "除了硬盘驱动器上的标准表示法以外，内存优化表本身在活动内存中有一种表示法。针对表的业务事务运行速度更快，因为这些事务只直接与活动内存中的表示法交互。",
      "pos": [
        655,
        729
      ]
    },
    {
      "content": "通过 In-Memory OLTP，根据工作负荷的具体情况，最高可以将事务吞吐量提高 30 倍。",
      "pos": [
        731,
        779
      ]
    },
    {
      "content": "如果本机编译的存储过程是作为传统解释的存储过程创建的，则在运行时，它们需要的计算机指令比原本需要的数量更少。我们已观察到，本机编译的持续时间是解释持续时间的 1/100。",
      "pos": [
        782,
        867
      ]
    },
    {
      "content": "In-Memory Analytics",
      "pos": [
        875,
        894
      ]
    },
    {
      "pos": [
        897,
        956
      ],
      "content": "In-Memory <bpt id=\"p1\">[</bpt>Analytics<ept id=\"p1\">](#install_analytics_manuallink)</ept> 的功能如下："
    },
    {
      "content": "列存储索引",
      "pos": [
        960,
        965
      ]
    },
    {
      "content": "列存储索引通过特殊的数据压缩来改善查询工作负荷性能。",
      "pos": [
        968,
        994
      ]
    },
    {
      "content": "在其他服务中，列存储索引将必要地经过内存优化。但是，Azure SQL 数据库中的列存储索引可与编制索引的传统表一起存在于硬盘驱动器上。",
      "pos": [
        996,
        1064
      ]
    },
    {
      "content": "实时分析",
      "pos": [
        1072,
        1076
      ]
    },
    {
      "pos": [
        1078,
        1179
      ],
      "content": "对于<bpt id=\"p1\">[</bpt>实时分析<ept id=\"p1\">](http://msdn.microsoft.com/zh-cn/library/dn817827.aspx)</ept>，你可以结合 In-Memory OLTP 和 Analytics 来获取："
    },
    {
      "content": "基于操作数据的实时业务见解。",
      "pos": [
        1183,
        1197
      ]
    },
    {
      "content": "可用性",
      "pos": [
        1205,
        1208
      ]
    },
    {
      "content": "GA（正式版）：",
      "pos": [
        1211,
        1219
      ]
    },
    {
      "pos": [
        1223,
        1293
      ],
      "content": "<bpt id=\"p1\">*</bpt>磁盘上<ept id=\"p1\">*</ept> 的<bpt id=\"p2\">[</bpt>列存储索引<ept id=\"p2\">](http://msdn.microsoft.com/zh-cn/library/dn817827.aspx)</ept>。"
    },
    {
      "content": "预览版：",
      "pos": [
        1296,
        1300
      ]
    },
    {
      "content": "In-Memory OLTP",
      "pos": [
        1304,
        1318
      ]
    },
    {
      "content": "具有内存优化列存储索引的 In-Memory Analytics",
      "pos": [
        1321,
        1353
      ]
    },
    {
      "content": "Real-Time Operational Analytics",
      "pos": [
        1356,
        1387
      ]
    },
    {
      "pos": [
        1390,
        1462
      ],
      "content": "<bpt id=\"p1\">[</bpt>本主题稍后<ept id=\"p1\">](#preview_considerations_for_in_memory)</ept>将介绍 In-Memory 功能在预览期的注意事项。"
    },
    {
      "pos": [
        1467,
        1585
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> 这些预览期功能仅适用于 <bpt id=\"p1\">[</bpt><bpt id=\"p2\">*</bpt>高级版<ept id=\"p2\">*</ept><ept id=\"p1\">](/documentation/articles/sql-database-service-tiers)</ept> Azure SQL 数据库，而不适用于标准或基本服务层上的数据库。"
    },
    {
      "content": "&amp;nbsp;",
      "pos": [
        1654,
        1660
      ]
    },
    {
      "content": "A.安装 In-Memory OLTP 示例",
      "pos": [
        1665,
        1687
      ]
    },
    {
      "pos": [
        1689,
        1814
      ],
      "content": "在 <bpt id=\"p1\">[</bpt>Azure 门户<ept id=\"p1\">](http://manage.windowsazure.cn)</ept>中按几下鼠标，即可创建 AdventureWorksLT [V12] 示例数据库。本部分中的步骤说明如何使用以下项目扩充 AdventureWorksLT 数据库："
    },
    {
      "content": "In-Memory 表。",
      "pos": [
        1818,
        1830
      ]
    },
    {
      "content": "本机编译的存储过程。",
      "pos": [
        1833,
        1843
      ]
    },
    {
      "content": "安装步骤",
      "pos": [
        1851,
        1855
      ]
    },
    {
      "pos": [
        1860,
        1962
      ],
      "content": "在 <bpt id=\"p1\">[</bpt>Azure 门户<ept id=\"p1\">](http://manage.windowsazure.cn)</ept>中，于 V12 服务器上创建一个高级数据库。将“源”设置为 AdventureWorksLT [V12] 示例数据库。"
    },
    {
      "pos": [
        1966,
        2050
      ],
      "content": "有关详细指示，请参阅<bpt id=\"p1\">[</bpt>创建你的第一个 Azure SQL 数据库<ept id=\"p1\">](/documentation/articles/sql-database-get-started)</ept>。"
    },
    {
      "pos": [
        2055,
        2163
      ],
      "content": "使用 SQL Server Management Studio <bpt id=\"p1\">[</bpt>(SSMS.exe)<ept id=\"p1\">](http://msdn.microsoft.com/zh-cn/library/mt238290.aspx)</ept> 连接到该数据库。"
    },
    {
      "pos": [
        2168,
        2329
      ],
      "content": "将 <bpt id=\"p1\">[</bpt>In-Memory OLTP Transact-SQL 脚本<ept id=\"p1\">](http://raw.githubusercontent.com/Azure/azure-sql-database-samples/master/T-SQL/In-Memory/sql_in-memory_oltp_sample.sql)</ept>复制到剪贴板。"
    },
    {
      "content": "T-SQL 脚本在步骤 1 创建的 AdventureWorksLT 示例数据库中创建所需的 In-Memory 对象。",
      "pos": [
        2333,
        2393
      ]
    },
    {
      "content": "将 T-SQL 脚本粘贴到 SSMS，然后执行该脚本。",
      "pos": [
        2398,
        2425
      ]
    },
    {
      "pos": [
        2429,
        2482
      ],
      "content": "重要的是 <ph id=\"ph1\">`MEMORY_OPTIMIZED = ON`</ph> 子句 CREATE TABLE 语句，如下所示："
    },
    {
      "content": "错误 40536",
      "pos": [
        2660,
        2668
      ]
    },
    {
      "content": "如果你在运行 T-SQL 脚本时收到错误 40536，请运行以下 T-SQL 脚本来验证数据库是否支持 In-Memory：",
      "pos": [
        2671,
        2733
      ]
    },
    {
      "pos": [
        2802,
        2842
      ],
      "content": "结果为 <bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> 表示不支持 In-Memory，而 1 表示支持。诊断问题："
    },
    {
      "content": "确保数据库是在 In-Memory OLTP 功能可用于预览版之后创建的。",
      "pos": [
        2846,
        2883
      ]
    },
    {
      "content": "确保数据库位于高级服务层。",
      "pos": [
        2886,
        2899
      ]
    },
    {
      "content": "关于创建的内存优化项",
      "pos": [
        2907,
        2917
      ]
    },
    {
      "pos": [
        2919,
        2938
      ],
      "content": "<bpt id=\"p1\">**</bpt>表<ept id=\"p1\">**</ept>：此示例包含以下内存优化表："
    },
    {
      "content": "SalesLT.Product\\_inmem",
      "pos": [
        2942,
        2964
      ]
    },
    {
      "content": "SalesLT.SalesOrderHeader\\_inmem",
      "pos": [
        2967,
        2998
      ]
    },
    {
      "content": "SalesLT.SalesOrderDetail\\_inmem",
      "pos": [
        3001,
        3032
      ]
    },
    {
      "content": "Demo.DemoSalesOrderHeaderSeed",
      "pos": [
        3035,
        3064
      ]
    },
    {
      "content": "Demo.DemoSalesOrderDetailSeed",
      "pos": [
        3067,
        3096
      ]
    },
    {
      "pos": [
        3099,
        3134
      ],
      "content": "可以通过 SSMS 中的<bpt id=\"p1\">**</bpt>对象资源管理器<ept id=\"p1\">**</ept>检查内存优化表，方法是："
    },
    {
      "content": "右键单击“表”&gt;“筛选器”&gt;“筛选器设置”&gt;“内存优化”等于 1。",
      "pos": [
        3138,
        3171
      ]
    },
    {
      "content": "或者可以查询目录视图，例如：",
      "pos": [
        3174,
        3188
      ]
    },
    {
      "pos": [
        3317,
        3382
      ],
      "content": "<bpt id=\"p1\">**</bpt>本机编译的存储过程<ept id=\"p1\">**</ept>：可以通过目录视图查询来检查 SalesLT.usp\\_InsertSalesOrder\\_inmem："
    },
    {
      "content": "&amp;nbsp;",
      "pos": [
        3526,
        3532
      ]
    },
    {
      "content": "运行示例 OLTP 工作负荷",
      "pos": [
        3537,
        3551
      ]
    },
    {
      "pos": [
        3553,
        3602
      ],
      "content": "以下两个 <bpt id=\"p1\">*</bpt>存储过程<ept id=\"p1\">*</ept> 的唯一差别在于，第一个过程使用内存优化表版本，而第二个过程使用普通磁盘表："
    },
    {
      "pos": [
        3606,
        3650
      ],
      "content": "SalesLT<bpt id=\"p1\">**</bpt>.<ept id=\"p1\">**</ept>usp\\_InsertSalesOrder<bpt id=\"p2\">**</bpt>\\_inmem<ept id=\"p2\">**</ept>"
    },
    {
      "pos": [
        3653,
        3698
      ],
      "content": "SalesLT<bpt id=\"p1\">**</bpt>.<ept id=\"p1\">**</ept>usp\\_InsertSalesOrder<bpt id=\"p2\">**</bpt>\\_ondisk<ept id=\"p2\">**</ept>"
    },
    {
      "pos": [
        3701,
        3771
      ],
      "content": "在本部分中，你将了解如何使用便利的 <bpt id=\"p1\">**</bpt>ostress.exe<ept id=\"p1\">**</ept> 实用程序在压力级别执行两个存储过程。可以比较完成两个压力回合所需的时间。"
    },
    {
      "content": "运行 ostress.exe 时，建议你将参数值传递到这两个存储过程：",
      "pos": [
        3774,
        3809
      ]
    },
    {
      "content": "运行大量的并发连接（例如使用 -n100）。",
      "pos": [
        3813,
        3835
      ]
    },
    {
      "content": "让每个连接循环数百次（例如使用 -r500）。",
      "pos": [
        3838,
        3861
      ]
    },
    {
      "content": "但是，建议你从较小的值（-n10 和 -r50）开始，以确保一切运行正常。",
      "pos": [
        3864,
        3901
      ]
    },
    {
      "content": "Ostress.exe 的脚本",
      "pos": [
        3908,
        3923
      ]
    },
    {
      "content": "本部分显示 ostress.exe 命令行中内嵌的 T-SQL 脚本。此脚本使用前面安装的 T-SQL 脚本所创建的项。",
      "pos": [
        3926,
        3986
      ]
    },
    {
      "pos": [
        3989,
        4023
      ],
      "content": "以下脚本将在以下内存优化<bpt id=\"p1\">*</bpt>表<ept id=\"p1\">*</ept>中插入包含 5 个细目的示例销售订单："
    },
    {
      "content": "SalesLT.SalesOrderHeader\\_inmem",
      "pos": [
        4027,
        4058
      ]
    },
    {
      "content": "SalesLT.SalesOrderDetail\\_inmem",
      "pos": [
        4061,
        4092
      ]
    },
    {
      "pos": [
        4668,
        4767
      ],
      "content": "若要创建上述适用于 ostress.exe 的 T-SQL 的 \\_ondisk 版本，只需将两处出现的 <bpt id=\"p1\">*</bpt>\\_inmem<ept id=\"p1\">*</ept> 子字符串替换为 <bpt id=\"p2\">*</bpt>\\_ondisk<ept id=\"p2\">*</ept>。这种替换将影响表和存储过程的名称。"
    },
    {
      "content": "安装 RML 实用程序和 ostress",
      "pos": [
        4774,
        4794
      ]
    },
    {
      "pos": [
        4797,
        4953
      ],
      "content": "最好规划在 Azure VM 上运行 ostress.exe。在 AdventureWorksLT 数据库所在的同一 Azure 地理区域中创建 <bpt id=\"p1\">[</bpt>Azure 虚拟机<ept id=\"p1\">](/documentation/services/virtual-machines)</ept>。但你可以改为在便携式计算机上运行 ostress.exe。"
    },
    {
      "content": "在 VM 或任何选择的主机上，安装包含 ostress.exe 的重放标记语言 (RML) 实用程序。",
      "pos": [
        4956,
        5007
      ]
    },
    {
      "pos": [
        5011,
        5111
      ],
      "content": "请参阅 <bpt id=\"p1\">[</bpt>In-Memory OLTP 的示例数据库<ept id=\"p1\">](http://msdn.microsoft.com/zh-cn/library/mt465764.aspx)</ept>中的 ostress.exe 介绍。"
    },
    {
      "pos": [
        5115,
        5198
      ],
      "content": "或参阅 <bpt id=\"p1\">[</bpt>In-Memory OLTP 的示例数据库<ept id=\"p1\">](http://msdn.microsoft.com/zh-cn/library/mt465764.aspx)</ept>。"
    },
    {
      "pos": [
        5202,
        5358
      ],
      "content": "或参阅<bpt id=\"p1\">[</bpt>有关安装 ostress.exe 的博客<ept id=\"p1\">](http://blogs.msdn.com/b/psssql/archive/2013/10/29/cumulative-update-2-to-the-rml-utilities-for-microsoft-sql-server-released.aspx)</ept>"
    },
    {
      "content": "首先运行 \\_inmem 压力工作负荷",
      "pos": [
        5663,
        5682
      ]
    },
    {
      "pos": [
        5685,
        5740
      ],
      "content": "可以使用 <bpt id=\"p1\">*</bpt>RML 命令提示符<ept id=\"p1\">*</ept>窗口来运行 ostress.exe 命令行。命令行参数将指示 ostress："
    },
    {
      "content": "同时运行 100 个连接 (-n100)。",
      "pos": [
        5744,
        5765
      ]
    },
    {
      "content": "每个连接运行 T-SQL 脚本 50 次 (-r50)。",
      "pos": [
        5768,
        5796
      ]
    },
    {
      "content": "若要运行上述 ostress.exe 命令行：",
      "pos": [
        6429,
        6452
      ]
    },
    {
      "content": "在 SSMS 中运行以下命令重置数据库数据内容，以删除前面运行的命令所插入的所有数据：",
      "pos": [
        6458,
        6501
      ]
    },
    {
      "content": "将上述 ostress.exe 命令行的文本复制到剪贴板。",
      "pos": [
        6542,
        6571
      ]
    },
    {
      "content": "将参数 -S -U -P -d 的",
      "pos": [
        6576,
        6593
      ]
    },
    {
      "content": "替换为正确的实数值。",
      "pos": [
        6609,
        6619
      ]
    },
    {
      "content": "在 RML Cmd 窗口中运行编辑后的命令行。",
      "pos": [
        6624,
        6647
      ]
    },
    {
      "content": "结果是一个持续时间",
      "pos": [
        6655,
        6664
      ]
    },
    {
      "content": "当 ostress.exe 完成时，它将在 RML 命令窗口中写入运行持续时间作为输出的最后一行。例如，一个较短的测试回合持续大约 1.5 分钟：",
      "pos": [
        6667,
        6740
      ]
    },
    {
      "content": "重置，编辑 \\_ondisk，然后重新运行",
      "pos": [
        6839,
        6860
      ]
    },
    {
      "content": "在获得 \\_inmem 运行结果之后，请针对 \\_ondisk 运行执行以下步骤：",
      "pos": [
        6863,
        6904
      ]
    },
    {
      "content": "在 SSMS 中运行以下命令重置数据库，以删除前面运行的命令所插入的所有数据：",
      "pos": [
        6910,
        6949
      ]
    },
    {
      "pos": [
        6990,
        7039
      ],
      "content": "编辑 ostress.exe 命令行，将所有的 <bpt id=\"p1\">*</bpt>\\_inmem<ept id=\"p1\">*</ept> 替换为 <bpt id=\"p2\">*</bpt>\\_ondisk<ept id=\"p2\">*</ept>。"
    },
    {
      "content": "再次重新运行 ostress.exe，并捕获持续时间结果。",
      "pos": [
        7044,
        7073
      ]
    },
    {
      "content": "再次重置数据库，以便可靠地删除大量测试数据。",
      "pos": [
        7078,
        7100
      ]
    },
    {
      "content": "预期比较结果",
      "pos": [
        7108,
        7114
      ]
    },
    {
      "pos": [
        7116,
        7195
      ],
      "content": "在与数据库相同的 Azure 区域的 Azure VM 上运行 ostress，In-Memory 测试已显示此简化工作负荷大约有 <bpt id=\"p1\">**</bpt>9 倍<ept id=\"p1\">**</ept>的性能改善。"
    },
    {
      "content": "添加转换成本机编译的存储过程时，性能可以获得更大改善。",
      "pos": [
        7198,
        7225
      ]
    },
    {
      "content": "B.安装 In-Memory Analytics 示例",
      "pos": [
        7231,
        7258
      ]
    },
    {
      "content": "在本部分中，你将比较使用列存储索引与常规索引时的 IO 和统计信息结果。",
      "pos": [
        7261,
        7297
      ]
    },
    {
      "content": "列存储索引与常规索引在逻辑上相同，但物理上却不同。列存储索引以非本机方式组织数据，以便大幅压缩数据。这可以明显提高性能。",
      "pos": [
        7300,
        7360
      ]
    },
    {
      "pos": [
        7363,
        7475
      ],
      "content": "通常，在对 OLTP 工作负荷进行实时分析时，最好是使用非群集列存储索引。有关详细信息，请参阅<bpt id=\"p1\">[</bpt>列存储索引介绍<ept id=\"p1\">](http://msdn.microsoft.com/zh-cn/library/gg492088.aspx)</ept>。"
    },
    {
      "content": "准备列存储分析测试",
      "pos": [
        7483,
        7492
      ]
    },
    {
      "content": "使用 Azure 门户基于示例创建全新的 AdventureWorksLT 数据库。",
      "pos": [
        7498,
        7540
      ]
    },
    {
      "content": "使用相同的名称。",
      "pos": [
        7544,
        7552
      ]
    },
    {
      "content": "选择任一高级服务层。",
      "pos": [
        7556,
        7566
      ]
    },
    {
      "pos": [
        7571,
        7741
      ],
      "content": "将 <bpt id=\"p1\">[</bpt>sql\\_in-memory\\_analytics\\_sample<ept id=\"p1\">](http://raw.githubusercontent.com/Azure/azure-sql-database-samples/master/T-SQL/In-Memory/sql_in-memory_analytics_sample.sql)</ept> 复制到剪贴板。"
    },
    {
      "content": "T-SQL 脚本在步骤 1 创建的 AdventureWorksLT 示例数据库中创建所需的 In-Memory 对象。",
      "pos": [
        7745,
        7805
      ]
    },
    {
      "content": "该脚本将创建维度表和两个事实表。每个事实表中填充了 350 万行。",
      "pos": [
        7809,
        7842
      ]
    },
    {
      "content": "该脚本可能需要 15 分钟才能完成。",
      "pos": [
        7846,
        7864
      ]
    },
    {
      "content": "将 T-SQL 脚本粘贴到 SSMS，然后执行该脚本。",
      "pos": [
        7869,
        7896
      ]
    },
    {
      "content": "重要的是 <bpt id=\"p1\">**</bpt>CREATE INDEX<ept id=\"p1\">**</ept> 语句中的 <bpt id=\"p2\">**</bpt>COLUMNSTORE<ept id=\"p2\">**</ept> 关键词，如下所示：",
      "pos": [
        7900,
        7952
      ]
    },
    {
      "content": "将 AdventureWorksLT 设置为兼容级别 130：",
      "pos": [
        8006,
        8037
      ]
    },
    {
      "content": "级别 130 并不与 In-Memory 功能直接相关。但级别 130 通常提供比级别 120 更快的查询性能。",
      "pos": [
        8110,
        8166
      ]
    },
    {
      "content": "关键表和列存储索引",
      "pos": [
        8174,
        8183
      ]
    },
    {
      "pos": [
        8188,
        8248
      ],
      "content": "dbo.FactResellerSalesXL\\_CCI 是具有群集<bpt id=\"p1\">**</bpt>列存储索引<ept id=\"p1\">**</ept>的表，已在<bpt id=\"p2\">*</bpt>数据<ept id=\"p2\">*</ept>级别进一步压缩。"
    },
    {
      "pos": [
        8252,
        8317
      ],
      "content": "dbo.FactResellerSalesXL\\_PageCompressed 是具有等效常规群集索引的表，只在<bpt id=\"p1\">*</bpt>页面<ept id=\"p1\">*</ept>级别压缩。"
    },
    {
      "content": "用于比较列存储索引的关键查询",
      "pos": [
        8325,
        8339
      ]
    },
    {
      "pos": [
        8342,
        8556
      ],
      "content": "<bpt id=\"p1\">[</bpt>此处<ept id=\"p1\">](http://raw.githubusercontent.com/Azure/azure-sql-database-samples/master/T-SQL/In-Memory/clustered_columnstore_sample_queries.sql)</ept>提供了你可以运行的用于查看性能改进情况的几种 T-SQL 查询类型。在 T-SQL 脚本的步骤 2 中，有一对直接相关的查询。这两个查询只是在一行上有所不同："
    },
    {
      "pos": [
        8642,
        8684
      ],
      "content": "群集列存储索引位于 FactResellerSalesXL<bpt id=\"p1\">**</bpt>\\_CCI<ept id=\"p1\">**</ept> 表上。"
    },
    {
      "content": "以下 T-SQL 脚本摘录列出了每个表查询的 IO 和 TIME 统计信息。",
      "pos": [
        8686,
        8724
      ]
    },
    {
      "content": "In-Memory OLTP 预览版注意事项",
      "pos": [
        11270,
        11292
      ]
    },
    {
      "pos": [
        11295,
        11480
      ],
      "content": "Azure SQL 数据库中的 In-Memory OLTP 功能将在 <bpt id=\"p1\">[</bpt>2015 年 10 月 28 日推出预览版<ept id=\"p1\">](http://azure.microsoft.com/updates/public-preview-in-memory-oltp-and-real-time-operational-analytics-for-azure-sql-database)</ept>。"
    },
    {
      "content": "在正式版 (GA) 发布前的预览期间，只有下述数据库支持 In-Memory OLTP：",
      "pos": [
        11483,
        11527
      ]
    },
    {
      "pos": [
        11531,
        11545
      ],
      "content": "使用<bpt id=\"p1\">*</bpt>高级<ept id=\"p1\">*</ept>服务层的数据库。"
    },
    {
      "content": "在 In-Memory OLTP 功能生效后创建的数据库。",
      "pos": [
        11549,
        11578
      ]
    },
    {
      "content": "如果从 In-Memory OLTP 功能生效前创建的数据库还原，则新的数据库无法支持 In-memory OLTP。",
      "pos": [
        11582,
        11641
      ]
    },
    {
      "pos": [
        11644,
        11734
      ],
      "content": "如有疑问，始终可以通过运行以下 T-SQL SELECT 来确定数据库是否支持 In-memory OLTP。结果为 <bpt id=\"p1\">**</bpt>1<ept id=\"p1\">**</ept> 表示数据库确实支持 In-Memory OLTP："
    },
    {
      "pos": [
        11802,
        11867
      ],
      "content": "如果查询返回 <bpt id=\"p1\">**</bpt>1<ept id=\"p1\">**</ept>，则表示此数据库支持 In-Memory OLTP，以及基于此数据库创建的任何数据库副本和数据库还原版本。"
    },
    {
      "content": "只允许高级层对象",
      "pos": [
        11875,
        11883
      ]
    },
    {
      "content": "如果数据库包含以下任何种类的 In-Memory OLTP 对象或类型，则不支持将数据库的服务层从高级降级为基本或标准。若要降级数据库，必须先删除以下对象：",
      "pos": [
        11886,
        11964
      ]
    },
    {
      "content": "内存优化表",
      "pos": [
        11968,
        11973
      ]
    },
    {
      "content": "内存优化表类型",
      "pos": [
        11976,
        11983
      ]
    },
    {
      "content": "本机编译的模块",
      "pos": [
        11986,
        11993
      ]
    },
    {
      "content": "其他关系",
      "pos": [
        12001,
        12005
      ]
    },
    {
      "content": "在预览期不支持将 In-Memory OLTP 功能用于弹性池中的数据库，但将来可能支持这种做法：",
      "pos": [
        12010,
        12059
      ]
    },
    {
      "content": "不支持将 In-Memory OLTP 与 SQL 数据仓库配合使用。",
      "pos": [
        12063,
        12098
      ]
    },
    {
      "content": "SQL 数据仓库支持 In-Memory Analytics 的列存储索引功能。",
      "pos": [
        12102,
        12142
      ]
    },
    {
      "content": "在预览期，“查询存储”不会捕获本机编译模块内的查询，但将来可能会这样做。",
      "pos": [
        12146,
        12182
      ]
    },
    {
      "content": "In-Memory OLTP 不支持某些 TRANSACT-SQL 功能。此限制适用于 Microsoft SQL Server 和 Azure SQL 数据库。有关详细信息，请参阅：",
      "pos": [
        12186,
        12278
      ]
    },
    {
      "content": "内存中 OLTP 的 Transact-SQL 支持",
      "pos": [
        12283,
        12309
      ]
    },
    {
      "content": "In-Memory OLTP 不支持的 Transact-SQL 构造",
      "pos": [
        12370,
        12405
      ]
    },
    {
      "content": "后续步骤",
      "pos": [
        12467,
        12471
      ]
    },
    {
      "pos": [
        12476,
        12581
      ],
      "content": "尝试<bpt id=\"p1\">[</bpt>在现有的 Azure SQL 应用程序中使用 In-Memory OLTP<ept id=\"p1\">](/documentation/articles/sql-database-in-memory-oltp-migration)</ept>。"
    },
    {
      "content": "其他资源",
      "pos": [
        12587,
        12591
      ]
    },
    {
      "content": "深入信息",
      "pos": [
        12598,
        12602
      ]
    },
    {
      "content": "了解适用于 Microsoft SQL Server 和 Azure SQL 数据库的 In-Memory OLTP",
      "pos": [
        12607,
        12665
      ]
    },
    {
      "content": "在 MSDN 上了解 Real-Time Operational Analytics",
      "pos": [
        12726,
        12768
      ]
    },
    {
      "pos": [
        12828,
        12951
      ],
      "content": "<bpt id=\"p1\">[</bpt>有关常用工作负荷模式和迁移注意事项<ept id=\"p1\">](http://msdn.microsoft.com/zh-cn/library/dn673538.aspx)</ept>的白皮书，其中描述了 In-Memory OLTP 往往能够在其中提供显著性能改善的工作负荷模式。"
    },
    {
      "content": "应用程序设计",
      "pos": [
        12958,
        12964
      ]
    },
    {
      "content": "In-Memory OLTP（内存中优化）",
      "pos": [
        12969,
        12990
      ]
    },
    {
      "content": "在现有的 Azure SQL 应用程序中使用 In-Memory OLTP。",
      "pos": [
        13051,
        13089
      ]
    },
    {
      "content": "工具",
      "pos": [
        13160,
        13162
      ]
    },
    {
      "pos": [
        13166,
        13263
      ],
      "content": "<bpt id=\"p1\">[</bpt>SQL Server Data Tools 预览版 (SSDT)<ept id=\"p1\">](http://msdn.microsoft.com/zh-cn/library/mt204009.aspx)</ept> 最新每月版本。"
    },
    {
      "content": "适用于 SQL Server 的重放标记语言 (RML) 实用程序介绍",
      "pos": [
        13268,
        13303
      ]
    },
    {
      "pos": [
        13354,
        13448
      ],
      "content": "<bpt id=\"p1\">[</bpt>监视内存中存储<ept id=\"p1\">](/documentation/articles/sql-database-in-memory-oltp-monitoring)</ept>（适用于 In-Memory OLTP）。"
    }
  ],
  "content": "<properties\n    pageTitle=\"SQL In-Memory 入门 | Azure\"\n    description=\"SQL In-Memory 技术大幅提升了事务和分析工作负荷的性能。了解如何利用这些技术。\"\n    services=\"sql-database\"\n    documentationCenter=\"\"\n    authors=\"jodebrui\"\n    manager=\"jeffreyg\"\n    editor=\"\"/>\n\n\n<tags\n    ms.service=\"sql-database\"\n    ms.date=\"12/11/2015\"\n    wacn.date=\"01/29/2016\"/>\n\n\n# SQL 数据库中的 In-Memory（预览版）入门\n\n在适当的情况下，In-Memory 功能可以大幅提升事务和分析工作负荷的性能。\n\n本主题着重进行两个演示，一个适用于 In-Memory OLTP，另一个适用于 In-Memory Analytics。每个演示都有完整的步骤以及运行演示所需的代码。你可以：\n\n- 使用代码来测试变体，以查看性能结果差异；或者\n- 阅读代码来了解方案，以及了解如何创建和使用 In-Memory 对象。\n\n#### In-Memory OLTP\n\nIn-Memory [OLTP](#install_oltp_manuallink)（联机事务处理）的功能如下：\n\n- 内存优化表。\n- 本机编译的存储过程。\n\n\n除了硬盘驱动器上的标准表示法以外，内存优化表本身在活动内存中有一种表示法。针对表的业务事务运行速度更快，因为这些事务只直接与活动内存中的表示法交互。\n\n通过 In-Memory OLTP，根据工作负荷的具体情况，最高可以将事务吞吐量提高 30 倍。\n\n\n如果本机编译的存储过程是作为传统解释的存储过程创建的，则在运行时，它们需要的计算机指令比原本需要的数量更少。我们已观察到，本机编译的持续时间是解释持续时间的 1/100。\n\n\n#### In-Memory Analytics \n\nIn-Memory [Analytics](#install_analytics_manuallink) 的功能如下：\n\n- 列存储索引\n\n\n列存储索引通过特殊的数据压缩来改善查询工作负荷性能。\n\n在其他服务中，列存储索引将必要地经过内存优化。但是，Azure SQL 数据库中的列存储索引可与编制索引的传统表一起存在于硬盘驱动器上。\n\n\n#### 实时分析\n\n对于[实时分析](http://msdn.microsoft.com/zh-cn/library/dn817827.aspx)，你可以结合 In-Memory OLTP 和 Analytics 来获取：\n\n- 基于操作数据的实时业务见解。\n\n\n#### 可用性\n\n\nGA（正式版）：\n\n- *磁盘上* 的[列存储索引](http://msdn.microsoft.com/zh-cn/library/dn817827.aspx)。\n\n\n预览版：\n\n- In-Memory OLTP\n- 具有内存优化列存储索引的 In-Memory Analytics\n- Real-Time Operational Analytics\n\n\n[本主题稍后](#preview_considerations_for_in_memory)将介绍 In-Memory 功能在预览期的注意事项。\n\n\n> [AZURE.NOTE] 这些预览期功能仅适用于 [*高级版*](/documentation/articles/sql-database-service-tiers) Azure SQL 数据库，而不适用于标准或基本服务层上的数据库。\n\n\n\n<a id=\"install_oltp_manuallink\" name=\"install_oltp_manuallink\">\n\n&nbsp;\n\n## A.安装 In-Memory OLTP 示例\n\n在 [Azure 门户](http://manage.windowsazure.cn)中按几下鼠标，即可创建 AdventureWorksLT [V12] 示例数据库。本部分中的步骤说明如何使用以下项目扩充 AdventureWorksLT 数据库：\n\n- In-Memory 表。\n- 本机编译的存储过程。\n\n\n#### 安装步骤\n\n1. 在 [Azure 门户](http://manage.windowsazure.cn)中，于 V12 服务器上创建一个高级数据库。将“源”设置为 AdventureWorksLT [V12] 示例数据库。\n - 有关详细指示，请参阅[创建你的第一个 Azure SQL 数据库](/documentation/articles/sql-database-get-started)。\n\n2. 使用 SQL Server Management Studio [(SSMS.exe)](http://msdn.microsoft.com/zh-cn/library/mt238290.aspx) 连接到该数据库。\n\n3. 将 [In-Memory OLTP Transact-SQL 脚本](http://raw.githubusercontent.com/Azure/azure-sql-database-samples/master/T-SQL/In-Memory/sql_in-memory_oltp_sample.sql)复制到剪贴板。\n - T-SQL 脚本在步骤 1 创建的 AdventureWorksLT 示例数据库中创建所需的 In-Memory 对象。\n\n4. 将 T-SQL 脚本粘贴到 SSMS，然后执行该脚本。\n - 重要的是 `MEMORY_OPTIMIZED = ON` 子句 CREATE TABLE 语句，如下所示：\n\n\n```\nCREATE TABLE [SalesLT].[SalesOrderHeader_inmem](\n    [SalesOrderID] int IDENTITY NOT NULL PRIMARY KEY NONCLUSTERED ...,\n    ...\n) WITH (MEMORY_OPTIMIZED = ON);\n```\n\n\n#### 错误 40536\n\n\n如果你在运行 T-SQL 脚本时收到错误 40536，请运行以下 T-SQL 脚本来验证数据库是否支持 In-Memory：\n\n\n```\nSELECT DatabasePropertyEx(DB_Name(), 'IsXTPSupported');\n```\n\n\n结果为 **0** 表示不支持 In-Memory，而 1 表示支持。诊断问题：\n\n- 确保数据库是在 In-Memory OLTP 功能可用于预览版之后创建的。\n- 确保数据库位于高级服务层。\n\n\n#### 关于创建的内存优化项\n\n**表**：此示例包含以下内存优化表：\n\n- SalesLT.Product\\_inmem\n- SalesLT.SalesOrderHeader\\_inmem\n- SalesLT.SalesOrderDetail\\_inmem\n- Demo.DemoSalesOrderHeaderSeed\n- Demo.DemoSalesOrderDetailSeed\n\n\n可以通过 SSMS 中的**对象资源管理器**检查内存优化表，方法是：\n\n- 右键单击“表”>“筛选器”>“筛选器设置”>“内存优化”等于 1。\n\n\n或者可以查询目录视图，例如：\n\n\n```\nSELECT is_memory_optimized, name, type_desc, durability_desc\n    FROM sys.tables\n    WHERE is_memory_optimized = 1;\n```\n\n\n**本机编译的存储过程**：可以通过目录视图查询来检查 SalesLT.usp\\_InsertSalesOrder\\_inmem：\n\n\n```\nSELECT uses_native_compilation, OBJECT_NAME(object_id), definition\n    FROM sys.sql_modules\n    WHERE uses_native_compilation = 1;\n```\n\n\n&nbsp;\n\n## 运行示例 OLTP 工作负荷\n\n以下两个 *存储过程* 的唯一差别在于，第一个过程使用内存优化表版本，而第二个过程使用普通磁盘表：\n\n- SalesLT**.**usp\\_InsertSalesOrder**\\_inmem**\n- SalesLT**.**usp\\_InsertSalesOrder**\\_ondisk**\n\n\n在本部分中，你将了解如何使用便利的 **ostress.exe** 实用程序在压力级别执行两个存储过程。可以比较完成两个压力回合所需的时间。\n\n\n运行 ostress.exe 时，建议你将参数值传递到这两个存储过程：\n\n- 运行大量的并发连接（例如使用 -n100）。\n- 让每个连接循环数百次（例如使用 -r500）。\n\n\n但是，建议你从较小的值（-n10 和 -r50）开始，以确保一切运行正常。\n\n\n### Ostress.exe 的脚本\n\n\n本部分显示 ostress.exe 命令行中内嵌的 T-SQL 脚本。此脚本使用前面安装的 T-SQL 脚本所创建的项。\n\n\n以下脚本将在以下内存优化*表*中插入包含 5 个细目的示例销售订单：\n\n- SalesLT.SalesOrderHeader\\_inmem\n- SalesLT.SalesOrderDetail\\_inmem\n\n\n```\nDECLARE\n    @i int = 0,\n    @od SalesLT.SalesOrderDetailType_inmem,\n    @SalesOrderID int,\n    @DueDate datetime2 = sysdatetime(),\n    @CustomerID int = rand() * 8000,\n    @BillToAddressID int = rand() * 10000,\n    @ShipToAddressID int = rand() * 10000;\n    \nINSERT INTO @od\n    SELECT OrderQty, ProductID\n    FROM Demo.DemoSalesOrderDetailSeed\n    WHERE OrderID= cast((rand()*60) as int);\n    \nWHILE (@i < 20)\nbegin;\n    EXECUTE SalesLT.usp_InsertSalesOrder_inmem @SalesOrderID OUTPUT,\n        @DueDate, @CustomerID, @BillToAddressID, @ShipToAddressID, @od;\nend\n```\n\n\n若要创建上述适用于 ostress.exe 的 T-SQL 的 \\_ondisk 版本，只需将两处出现的 *\\_inmem* 子字符串替换为 *\\_ondisk*。这种替换将影响表和存储过程的名称。\n\n\n### 安装 RML 实用程序和 ostress\n\n\n最好规划在 Azure VM 上运行 ostress.exe。在 AdventureWorksLT 数据库所在的同一 Azure 地理区域中创建 [Azure 虚拟机](/documentation/services/virtual-machines)。但你可以改为在便携式计算机上运行 ostress.exe。\n\n\n在 VM 或任何选择的主机上，安装包含 ostress.exe 的重放标记语言 (RML) 实用程序。\n\n- 请参阅 [In-Memory OLTP 的示例数据库](http://msdn.microsoft.com/zh-cn/library/mt465764.aspx)中的 ostress.exe 介绍。\n - 或参阅 [In-Memory OLTP 的示例数据库](http://msdn.microsoft.com/zh-cn/library/mt465764.aspx)。\n - 或参阅[有关安装 ostress.exe 的博客](http://blogs.msdn.com/b/psssql/archive/2013/10/29/cumulative-update-2-to-the-rml-utilities-for-microsoft-sql-server-released.aspx)\n\n\n\n<!--\ndn511655.aspx is for SQL 2014,\n[Extensions to AdventureWorks to Demonstrate In-Memory OLTP]\n(http://msdn.microsoft.com/zh-cn/library/dn511655&#x28;v=sql.120&#x29;.aspx)\n\nwhereas for SQL 2016+\n[Sample Database for In-Memory OLTP]\n(http://msdn.microsoft.com/zh-cn/library/mt465764.aspx)\n-->\n\n\n\n### 首先运行 \\_inmem 压力工作负荷\n\n\n可以使用 *RML 命令提示符*窗口来运行 ostress.exe 命令行。命令行参数将指示 ostress：\n\n- 同时运行 100 个连接 (-n100)。\n- 每个连接运行 T-SQL 脚本 50 次 (-r50)。\n\n\n```\nostress.exe -n100 -r50 -S<servername>.database.chinacloudapi.cn -U<login> -P<password> -d<database> -q -Q\"DECLARE @i int = 0, @od SalesLT.SalesOrderDetailType_inmem, @SalesOrderID int, @DueDate datetime2 = sysdatetime(), @CustomerID int = rand() * 8000, @BillToAddressID int = rand() * 10000, @ShipToAddressID int = rand()* 10000; INSERT INTO @od SELECT OrderQty, ProductID FROM Demo.DemoSalesOrderDetailSeed WHERE OrderID= cast((rand()*60) as int); WHILE (@i < 20) begin; EXECUTE SalesLT.usp_InsertSalesOrder_inmem @SalesOrderID OUTPUT, @DueDate, @CustomerID, @BillToAddressID, @ShipToAddressID, @od; set @i += 1; end\"\n```\n\n\n若要运行上述 ostress.exe 命令行：\n\n\n1. 在 SSMS 中运行以下命令重置数据库数据内容，以删除前面运行的命令所插入的所有数据：\n```\nEXECUTE Demo.usp_DemoReset;\n```\n\n2. 将上述 ostress.exe 命令行的文本复制到剪贴板。\n\n3. 将参数 -S -U -P -d 的 <placeholders> 替换为正确的实数值。\n\n4. 在 RML Cmd 窗口中运行编辑后的命令行。\n\n\n#### 结果是一个持续时间\n\n\n当 ostress.exe 完成时，它将在 RML 命令窗口中写入运行持续时间作为输出的最后一行。例如，一个较短的测试回合持续大约 1.5 分钟：\n\n`11/12/15 00:35:00.873 [0x000030A8] OSTRESS exiting normally, elapsed time: 00:01:31.867`\n\n\n#### 重置，编辑 \\_ondisk，然后重新运行\n\n\n在获得 \\_inmem 运行结果之后，请针对 \\_ondisk 运行执行以下步骤：\n\n\n1. 在 SSMS 中运行以下命令重置数据库，以删除前面运行的命令所插入的所有数据：\n```\nEXECUTE Demo.usp_DemoReset;\n```\n\n2. 编辑 ostress.exe 命令行，将所有的 *\\_inmem* 替换为 *\\_ondisk*。\n\n3. 再次重新运行 ostress.exe，并捕获持续时间结果。\n\n4. 再次重置数据库，以便可靠地删除大量测试数据。\n\n\n#### 预期比较结果\n\n在与数据库相同的 Azure 区域的 Azure VM 上运行 ostress，In-Memory 测试已显示此简化工作负荷大约有 **9 倍**的性能改善。\n\n\n添加转换成本机编译的存储过程时，性能可以获得更大改善。\n\n\n## B.安装 In-Memory Analytics 示例\n\n\n在本部分中，你将比较使用列存储索引与常规索引时的 IO 和统计信息结果。\n\n\n列存储索引与常规索引在逻辑上相同，但物理上却不同。列存储索引以非本机方式组织数据，以便大幅压缩数据。这可以明显提高性能。\n\n\n通常，在对 OLTP 工作负荷进行实时分析时，最好是使用非群集列存储索引。有关详细信息，请参阅[列存储索引介绍](http://msdn.microsoft.com/zh-cn/library/gg492088.aspx)。\n\n\n\n### 准备列存储分析测试\n\n\n1. 使用 Azure 门户基于示例创建全新的 AdventureWorksLT 数据库。\n - 使用相同的名称。\n - 选择任一高级服务层。\n\n2. 将 [sql\\_in-memory\\_analytics\\_sample](http://raw.githubusercontent.com/Azure/azure-sql-database-samples/master/T-SQL/In-Memory/sql_in-memory_analytics_sample.sql) 复制到剪贴板。\n - T-SQL 脚本在步骤 1 创建的 AdventureWorksLT 示例数据库中创建所需的 In-Memory 对象。\n - 该脚本将创建维度表和两个事实表。每个事实表中填充了 350 万行。\n - 该脚本可能需要 15 分钟才能完成。\n\n3. 将 T-SQL 脚本粘贴到 SSMS，然后执行该脚本。\n - 重要的是 **CREATE INDEX** 语句中的 **COLUMNSTORE** 关键词，如下所示：<br/>`CREATE NONCLUSTERED COLUMNSTORE INDEX ...;`\n\n4. 将 AdventureWorksLT 设置为兼容级别 130：<br/>`ALTER DATABASE AdventureworksLT SET compatibility_level = 130;`\n - 级别 130 并不与 In-Memory 功能直接相关。但级别 130 通常提供比级别 120 更快的查询性能。\n\n\n#### 关键表和列存储索引\n\n\n- dbo.FactResellerSalesXL\\_CCI 是具有群集**列存储索引**的表，已在*数据*级别进一步压缩。\n\n- dbo.FactResellerSalesXL\\_PageCompressed 是具有等效常规群集索引的表，只在*页面*级别压缩。\n\n\n#### 用于比较列存储索引的关键查询\n\n\n[此处](http://raw.githubusercontent.com/Azure/azure-sql-database-samples/master/T-SQL/In-Memory/clustered_columnstore_sample_queries.sql)提供了你可以运行的用于查看性能改进情况的几种 T-SQL 查询类型。在 T-SQL 脚本的步骤 2 中，有一对直接相关的查询。这两个查询只是在一行上有所不同：\n\n\n- `FROM FactResellerSalesXL_PageCompressed a`\n- `FROM FactResellerSalesXL_CCI a`\n\n\n群集列存储索引位于 FactResellerSalesXL**\\_CCI** 表上。\n\n以下 T-SQL 脚本摘录列出了每个表查询的 IO 和 TIME 统计信息。\n\n\n```\n/*********************************************************************\nStep 2 -- Overview\n-- Page Compressed BTree table v/s Columnstore table performance differences\n-- Enable actual Query Plan in order to see Plan differences when Executing\n*/\n-- Ensure Database is in 130 compatibility mode\nALTER DATABASE AdventureworksLT SET compatibility_level = 130\nGO\n\n-- Execute a typical query that joins the Fact Table with dimension tables\n-- Note this query will run on the Page Compressed table, Note down the time\nSET STATISTICS IO ON\nSET STATISTICS TIME ON\nGO\n\nSELECT c.Year\n    ,e.ProductCategoryKey\n    ,FirstName + ' ' + LastName AS FullName\n    ,count(SalesOrderNumber) AS NumSales\n    ,sum(SalesAmount) AS TotalSalesAmt\n    ,Avg(SalesAmount) AS AvgSalesAmt\n    ,count(DISTINCT SalesOrderNumber) AS NumOrders\n    ,count(DISTINCT a.CustomerKey) AS CountCustomers\nFROM FactResellerSalesXL_PageCompressed a\nINNER JOIN DimProduct b ON b.ProductKey = a.ProductKey\nINNER JOIN DimCustomer d ON d.CustomerKey = a.CustomerKey\nInner JOIN DimProductSubCategory e on e.ProductSubcategoryKey = b.ProductSubcategoryKey\nINNER JOIN DimDate c ON c.DateKey = a.OrderDateKey\nWHERE e.ProductCategoryKey =2\n    AND c.FullDateAlternateKey BETWEEN '1/1/2014' AND '1/1/2015'\nGROUP BY e.ProductCategoryKey,c.Year,d.CustomerKey,d.FirstName,d.LastName\nGO\nSET STATISTICS IO OFF\nSET STATISTICS TIME OFF\nGO\n\n\n-- This is the same Prior query on a table with a Clustered Columnstore index CCI \n-- The comparison numbers are even more dramatic the larger the table is, this is a 11 million row table only.\nSET STATISTICS IO ON\nSET STATISTICS TIME ON\nGO\nSELECT c.Year\n    ,e.ProductCategoryKey\n    ,FirstName + ' ' + LastName AS FullName\n    ,count(SalesOrderNumber) AS NumSales\n    ,sum(SalesAmount) AS TotalSalesAmt\n    ,Avg(SalesAmount) AS AvgSalesAmt\n    ,count(DISTINCT SalesOrderNumber) AS NumOrders\n    ,count(DISTINCT a.CustomerKey) AS CountCustomers\nFROM FactResellerSalesXL_CCI a\nINNER JOIN DimProduct b ON b.ProductKey = a.ProductKey\nINNER JOIN DimCustomer d ON d.CustomerKey = a.CustomerKey\nInner JOIN DimProductSubCategory e on e.ProductSubcategoryKey = b.ProductSubcategoryKey\nINNER JOIN DimDate c ON c.DateKey = a.OrderDateKey\nWHERE e.ProductCategoryKey =2\n    AND c.FullDateAlternateKey BETWEEN '1/1/2014' AND '1/1/2015'\nGROUP BY e.ProductCategoryKey,c.Year,d.CustomerKey,d.FirstName,d.LastName\nGO\n\nSET STATISTICS IO OFF\nSET STATISTICS TIME OFF\nGO\n```\n\n\n\n<a id=\"preview_considerations_for_in_memory\" name=\"preview_considerations_for_in_memory\"></a>\n\n\n## In-Memory OLTP 预览版注意事项\n\n\nAzure SQL 数据库中的 In-Memory OLTP 功能将在 [2015 年 10 月 28 日推出预览版](http://azure.microsoft.com/updates/public-preview-in-memory-oltp-and-real-time-operational-analytics-for-azure-sql-database)。\n\n\n在正式版 (GA) 发布前的预览期间，只有下述数据库支持 In-Memory OLTP：\n\n- 使用*高级*服务层的数据库。\n\n- 在 In-Memory OLTP 功能生效后创建的数据库。\n - 如果从 In-Memory OLTP 功能生效前创建的数据库还原，则新的数据库无法支持 In-memory OLTP。\n\n\n如有疑问，始终可以通过运行以下 T-SQL SELECT 来确定数据库是否支持 In-memory OLTP。结果为 **1** 表示数据库确实支持 In-Memory OLTP：\n\n```\nSELECT DatabasePropertyEx(DB_NAME(), 'IsXTPSupported');\n```\n\n\n如果查询返回 **1**，则表示此数据库支持 In-Memory OLTP，以及基于此数据库创建的任何数据库副本和数据库还原版本。\n\n\n#### 只允许高级层对象\n\n\n如果数据库包含以下任何种类的 In-Memory OLTP 对象或类型，则不支持将数据库的服务层从高级降级为基本或标准。若要降级数据库，必须先删除以下对象：\n\n- 内存优化表\n- 内存优化表类型\n- 本机编译的模块\n\n\n#### 其他关系\n\n\n- 在预览期不支持将 In-Memory OLTP 功能用于弹性池中的数据库，但将来可能支持这种做法：\n\n- 不支持将 In-Memory OLTP 与 SQL 数据仓库配合使用。\n - SQL 数据仓库支持 In-Memory Analytics 的列存储索引功能。\n\n- 在预览期，“查询存储”不会捕获本机编译模块内的查询，但将来可能会这样做。\n\n- In-Memory OLTP 不支持某些 TRANSACT-SQL 功能。此限制适用于 Microsoft SQL Server 和 Azure SQL 数据库。有关详细信息，请参阅：\n - [内存中 OLTP 的 Transact-SQL 支持](http://msdn.microsoft.com/zh-cn/library/dn133180.aspx)\n - [In-Memory OLTP 不支持的 Transact-SQL 构造](http://msdn.microsoft.com/zh-cn/library/dn246937.aspx)\n\n\n## 后续步骤\n\n\n- 尝试[在现有的 Azure SQL 应用程序中使用 In-Memory OLTP](/documentation/articles/sql-database-in-memory-oltp-migration)。\n\n\n## 其他资源\n\n#### 深入信息\n\n- [了解适用于 Microsoft SQL Server 和 Azure SQL 数据库的 In-Memory OLTP](http://msdn.microsoft.com/zh-cn/library/dn133186.aspx)\n\n- [在 MSDN 上了解 Real-Time Operational Analytics](http://msdn.microsoft.com/zh-cn/library/dn817827.aspx)\n\n- [有关常用工作负荷模式和迁移注意事项](http://msdn.microsoft.com/zh-cn/library/dn673538.aspx)的白皮书，其中描述了 In-Memory OLTP 往往能够在其中提供显著性能改善的工作负荷模式。\n\n#### 应用程序设计\n\n- [In-Memory OLTP（内存中优化）](http://msdn.microsoft.com/zh-cn/library/dn133186.aspx)\n\n- [在现有的 Azure SQL 应用程序中使用 In-Memory OLTP。](/documentation/articles/sql-database-in-memory-oltp-migration)\n\n#### 工具\n\n- [SQL Server Data Tools 预览版 (SSDT)](http://msdn.microsoft.com/zh-cn/library/mt204009.aspx) 最新每月版本。\n\n- [适用于 SQL Server 的重放标记语言 (RML) 实用程序介绍](http://support.microsoft.com/zh-cn/kb/944837)\n\n- [监视内存中存储](/documentation/articles/sql-database-in-memory-oltp-monitoring)（适用于 In-Memory OLTP）。\n\n<!---HONumber=Mooncake_0118_2016-->\n"
}