{
  "nodes": [
    {
      "content": "通过 Java 使用事件中心入门 | Azure",
      "pos": [
        27,
        51
      ]
    },
    {
      "content": "遵循本教程开始使用 Azure 事件中心，以通过 Java 发送事件，并使用 EventProcessorHost 通过 C# 接收事件。",
      "pos": [
        70,
        139
      ]
    },
    {
      "content": "事件中心入门",
      "pos": [
        347,
        353
      ]
    },
    {
      "content": "介绍",
      "pos": [
        459,
        461
      ]
    },
    {
      "content": "事件中心是一个具备高度可伸缩性的引入系统，每秒可收入大量事件，从而使应用程序能够处理和分析你连接的设备和应用程序所产生的海量数据。将数据采集到事件中心后，你可以使用任何实时分析提供程序或存储群集来转换和存储数据。",
      "pos": [
        463,
        569
      ]
    },
    {
      "pos": [
        571,
        592
      ],
      "content": "有关详细信息，请参阅<bpt id=\"p1\">[</bpt>事件中心概述<ept id=\"p1\">][]</ept>。"
    },
    {
      "pos": [
        594,
        662
      ],
      "content": "本教程介绍如何使用以 Java 编写的控制台应用程序将消息引入事件中心，以及如何使用 C# <bpt id=\"p1\">[</bpt>事件处理程序主机<ept id=\"p1\">][]</ept>库并行检索这些消息。"
    },
    {
      "content": "若要完成本教程，你需要以下各项：",
      "pos": [
        664,
        680
      ]
    },
    {
      "content": "Java 开发环境。对于本教程，我们将采用 Eclipse。",
      "pos": [
        684,
        714
      ]
    },
    {
      "content": "Microsoft Visual Studio Express for Windows",
      "pos": [
        718,
        761
      ]
    },
    {
      "content": "有效的 Azure 帐户。",
      "pos": [
        765,
        778
      ]
    },
    {
      "content": "如果你没有帐户，只需花费几分钟就能创建一个免费试用帐户。有关详细信息，请参阅 <ph id=\"ph1\">&lt;a href=\"/zh-cn/pricing/1rmb-trial/\" target=\"_blank\"&gt;</ph>Azure 试用<ph id=\"ph2\">&lt;/a&gt;</ph>。",
      "pos": [
        783,
        888
      ]
    },
    {
      "content": "创建事件中心",
      "pos": [
        893,
        899
      ]
    },
    {
      "pos": [
        904,
        935
      ],
      "content": "登录到 <bpt id=\"p1\">[</bpt><ept id=\"p1\">Azure 管理门户]</ept>，然后单击屏幕底部的“新建”。"
    },
    {
      "content": "依次单击“App Service”、“服务总线”、“事件中心”、“快速创建”。",
      "pos": [
        940,
        979
      ]
    },
    {
      "content": "为你的事件中心键入名称，选择所需区域，然后单击“创建新事件中心”。",
      "pos": [
        996,
        1029
      ]
    },
    {
      "pos": [
        1046,
        1079
      ],
      "content": "单击你刚创建的命名空间（通常为 <bpt id=\"p1\">**</bpt><bpt id=\"p2\">*</bpt>事件中心名称<ept id=\"p2\">*</ept>-ns<ept id=\"p1\">**</ept>）。"
    },
    {
      "content": "单击页面顶部的“事件中心”选项卡，然后单击你刚创建的事件中心。",
      "pos": [
        1096,
        1127
      ]
    },
    {
      "content": "单击页面顶部的“配置”选项卡，添加具有“发送”权限的名为“SendRule”的规则，添加另一具有“管理、发送、侦听”权限的名为“ReceiveRule”的规则，然后单击“保存”。",
      "pos": [
        1144,
        1233
      ]
    },
    {
      "pos": [
        1250,
        1279
      ],
      "content": "在同一页上，记下为 <bpt id=\"p1\">**</bpt>SendRule<ept id=\"p1\">**</ept> 生成的密钥。"
    },
    {
      "content": "单击页面顶部的“仪表板”选项卡，然后单击“连接信息”。记下两个连接字符串。",
      "pos": [
        1297,
        1334
      ]
    },
    {
      "content": "现在，你的事件中心就创建好了，你已经有了收发事件所需的连接字符串。",
      "pos": [
        1348,
        1381
      ]
    },
    {
      "content": "运行应用程序",
      "pos": [
        1645,
        1651
      ]
    },
    {
      "content": "现在，你已准备就绪，可以运行应用程序了。",
      "pos": [
        1653,
        1673
      ]
    },
    {
      "pos": [
        1679,
        1731
      ],
      "content": "从 Visual Studio 中运行 <bpt id=\"p1\">**</bpt>Receiver<ept id=\"p1\">**</ept> 项目，然后等待它为所有分区启动接收方。"
    },
    {
      "pos": [
        1750,
        1803
      ],
      "content": "运行 <bpt id=\"p1\">**</bpt>Sender<ept id=\"p1\">**</ept> 项目，在控制台窗口中按 <bpt id=\"p2\">**</bpt>Enter<ept id=\"p2\">**</ept>，然后会看到事件出现在接收方窗口中。"
    },
    {
      "content": "后续步骤",
      "pos": [
        1821,
        1825
      ]
    },
    {
      "content": "现在，你已生成了一个可以创建事件中心以及发送和接收数据的有效应用程序，接下来请继续学习以下方案：",
      "pos": [
        1827,
        1875
      ]
    },
    {
      "pos": [
        1879,
        1899
      ],
      "content": "<bpt id=\"p1\">[</bpt>使用事件中心的完整示例应用程序<ept id=\"p1\">][]</ept>。"
    },
    {
      "pos": [
        1902,
        1921
      ],
      "content": "<bpt id=\"p1\">[</bpt>使用事件中心扩大事件处理<ept id=\"p1\">][]</ept>示例。"
    },
    {
      "pos": [
        1924,
        1946
      ],
      "content": "使用服务总线队列的<bpt id=\"p1\">[</bpt>队列消息解决方案<ept id=\"p1\">][]</ept>。"
    },
    {
      "pos": [
        1948,
        1989
      ],
      "content": "有关详细信息，请参阅 <bpt id=\"p1\">[</bpt>Java 开发人员中心<ept id=\"p1\">](/develop/java/)</ept>。"
    }
  ],
  "content": "<properties\n    pageTitle=\"通过 Java 使用事件中心入门 | Azure\"\n    description=\"遵循本教程开始使用 Azure 事件中心，以通过 Java 发送事件，并使用 EventProcessorHost 通过 C# 接收事件。\"\n    services=\"event-hubs\"\n    documentationCenter=\"\"\n    authors=\"fsautomata\"\n    manager=\"timlt\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"event-hubs\"\n    ms.date=\"11/05/2015\"\n    wacn.date=\"12/17/2015\"/>\n\n# 事件中心入门\n\n[AZURE.INCLUDE [service-bus-selector-get-started](../includes/service-bus-selector-get-started.md)]\n\n## 介绍\n\n事件中心是一个具备高度可伸缩性的引入系统，每秒可收入大量事件，从而使应用程序能够处理和分析你连接的设备和应用程序所产生的海量数据。将数据采集到事件中心后，你可以使用任何实时分析提供程序或存储群集来转换和存储数据。\n\n有关详细信息，请参阅[事件中心概述][]。\n\n本教程介绍如何使用以 Java 编写的控制台应用程序将消息引入事件中心，以及如何使用 C# [事件处理程序主机][]库并行检索这些消息。\n\n若要完成本教程，你需要以下各项：\n\n+ Java 开发环境。对于本教程，我们将采用 Eclipse。\n\n+ Microsoft Visual Studio Express for Windows\n\n+ 有效的 Azure 帐户。<br/>如果你没有帐户，只需花费几分钟就能创建一个免费试用帐户。有关详细信息，请参阅 <a href=\"/zh-cn/pricing/1rmb-trial/\" target=\"_blank\">Azure 试用</a>。\n\n## 创建事件中心\n\n1. 登录到 [Azure 管理门户]，然后单击屏幕底部的“新建”。\n\n2. 依次单击“App Service”、“服务总线”、“事件中心”、“快速创建”。\n\n    ![][1]\n\n3. 为你的事件中心键入名称，选择所需区域，然后单击“创建新事件中心”。\n\n    ![][2]\n\n4. 单击你刚创建的命名空间（通常为 ***事件中心名称*-ns**）。\n\n    ![][3]\n\n5. 单击页面顶部的“事件中心”选项卡，然后单击你刚创建的事件中心。\n\n    ![][4]\n\n6. 单击页面顶部的“配置”选项卡，添加具有“发送”权限的名为“SendRule”的规则，添加另一具有“管理、发送、侦听”权限的名为“ReceiveRule”的规则，然后单击“保存”。\n\n    ![][5]\n\n7. 在同一页上，记下为 **SendRule** 生成的密钥。\n\n    ![][6b]\n\n8. 单击页面顶部的“仪表板”选项卡，然后单击“连接信息”。记下两个连接字符串。\n\n    ![][6]\n\n现在，你的事件中心就创建好了，你已经有了收发事件所需的连接字符串。\n\n[AZURE.INCLUDE [service-bus-event-hubs-get-started-send-java](../includes/service-bus-event-hubs-get-started-send-java.md)]\n\n\n[AZURE.INCLUDE [service-bus-event-hubs-get-started-receive-ephcs](../includes/service-bus-event-hubs-get-started-receive-ephcs.md)]\n\n## 运行应用程序\n\n现在，你已准备就绪，可以运行应用程序了。\n\n1.  从 Visual Studio 中运行 **Receiver** 项目，然后等待它为所有分区启动接收方。\n\n    ![][21]\n\n2.  运行 **Sender** 项目，在控制台窗口中按 **Enter**，然后会看到事件出现在接收方窗口中。\n\n    ![][22]\n\n## 后续步骤\n\n现在，你已生成了一个可以创建事件中心以及发送和接收数据的有效应用程序，接下来请继续学习以下方案：\n\n- [使用事件中心的完整示例应用程序][]。\n- [使用事件中心扩大事件处理][]示例。\n- 使用服务总线队列的[队列消息解决方案][]。\n\n有关详细信息，请参阅 [Java 开发人员中心](/develop/java/)。\n\n<!-- Images. -->\n[1]: ./media/event-hubs-java-ephcs-getstarted/create-event-hub1.png\n[2]: ./media/event-hubs-java-ephcs-getstarted/create-event-hub2.png\n[3]: ./media/event-hubs-java-ephcs-getstarted/create-event-hub3.png\n[4]: ./media/event-hubs-java-ephcs-getstarted/create-event-hub4.png\n[5]: ./media/event-hubs-java-ephcs-getstarted/create-event-hub5.png\n[6]: ./media/event-hubs-java-ephcs-getstarted/create-event-hub6.png\n[6b]: ./media/event-hubs-java-ephcs-getstarted/create-event-hub6b.png\n\n\n[21]: ./media/event-hubs-java-ephcs-getstarted/run-csharp-ephcs1.png\n[22]: ./media/event-hubs-java-ephcs-getstarted/run-csharp-ephcs2.png\n\n<!-- Links -->\n[Azure 管理门户]: https://manage.windowsazure.cn/\n[事件处理程序主机]: https://www.nuget.org/packages/Microsoft.Azure.ServiceBus.EventProcessorHost\n[事件中心概述]: /documentation/articles/event-hubs-overview\n[使用事件中心的完整示例应用程序]: https://code.msdn.microsoft.com/windowsazure/Service-Bus-Event-Hub-286fd097\n[使用事件中心扩大事件处理]: https://code.msdn.microsoft.com/windowsazure/Service-Bus-Event-Hub-45f43fc3\n[队列消息解决方案]: /documentation/articles/service-bus-dotnet-multi-tier-app-using-service-bus-queues\n \n\n<!---HONumber=Mooncake_1207_2015-->"
}