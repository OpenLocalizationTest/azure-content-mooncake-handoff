{
  "nodes": [
    {
      "content": "在客户端上插入广告",
      "pos": [
        28,
        37
      ]
    },
    {
      "content": "本主题说明如何在客户端上插入广告。",
      "pos": [
        57,
        74
      ]
    },
    {
      "content": "在客户端上插入广告",
      "pos": [
        293,
        302
      ]
    },
    {
      "content": "此主题涵盖有关如何在客户端上插入多种类型的广告的信息。",
      "pos": [
        304,
        331
      ]
    },
    {
      "pos": [
        333,
        458
      ],
      "content": "有关在实时流式处理视频中隐藏式字幕和广告支持的详细信息，请参阅<bpt id=\"p1\">[</bpt>支持的隐藏式字幕和广告插入标准<ept id=\"p1\">](/documentation/articles/media-services-manage-channels-overview#cc_and_ads)</ept>。"
    },
    {
      "pos": [
        461,
        501
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> Azure Media Player 目前不支持广告。"
    },
    {
      "pos": [
        505,
        547
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"insert_ads_into_media\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>向媒体中插入广告"
    },
    {
      "content": "Azure 媒体服务通过“Windows 媒体平台：播放器框架”提供广告插入支持。附带广告支持的播放器框架在 Windows 8、Silverlight、Windows Phone 8 和 iOS 设备上均可用。每个播放器框架均包含显示如何实现播放器应用程序的示例代码。可插入 media:list 中的广告有三种。",
      "pos": [
        549,
        707
      ]
    },
    {
      "pos": [
        711,
        731
      ],
      "content": "<bpt id=\"p1\">**</bpt>线性<ept id=\"p1\">**</ept> - 暂停主视频的全帧广告。"
    },
    {
      "pos": [
        734,
        782
      ],
      "content": "<bpt id=\"p1\">**</bpt>非线性<ept id=\"p1\">**</ept> - 播放主视频时显示的叠加式广告，通常为放置在播放器内的一个徽标或其他静态图像。"
    },
    {
      "pos": [
        785,
        806
      ],
      "content": "<bpt id=\"p1\">**</bpt>伴随<ept id=\"p1\">**</ept> - 在播放器之外显示的广告。"
    },
    {
      "content": "广告可置于主视频时间线中的任何一个时间点。你必须告知播放器何时播放广告以及播放哪些广告。完成该操作需使用一组标准的基于 XML 的文件：视频广告服务模板 (VAST)、数字视频多广告播放列表 (VMAP)、媒体抽象排序模板 (MAST) 和数字视频播放器广告接口定义 (VPAID)。VAST 文件用于指定要显示哪些广告。VMAP 文件用于指定何时播放各种广告并且包含 VAST XML。MAST 文件是对包含 VAST XML 的广告进行排序的另一种方法。VPAID 文件用于定义视频播放器与广告或广告服务器之间的接口。",
      "pos": [
        808,
        1069
      ]
    },
    {
      "content": "每个播放器框架的工作方式不同，且都将被各自的主题所涵盖。本主题将介绍用来插入广告的基本机制。视频播放器应用程序从广告服务器请求广告。广告服务器可以通过多种方式进行响应：",
      "pos": [
        1071,
        1155
      ]
    },
    {
      "content": "返回一个 VAST 文件",
      "pos": [
        1159,
        1171
      ]
    },
    {
      "content": "返回一个 VMAP 文件 （使用嵌入的 VAST)",
      "pos": [
        1174,
        1199
      ]
    },
    {
      "content": "返回一个 MAST 文件 （使用嵌入的 VAST)",
      "pos": [
        1202,
        1227
      ]
    },
    {
      "content": "返回一个含有 VPAID 广告的 VAST 文件",
      "pos": [
        1230,
        1254
      ]
    },
    {
      "content": "使用视频广告服务模板 (VAST) 文件",
      "pos": [
        1261,
        1281
      ]
    },
    {
      "content": "VAST 文件指定要显示的广告。以下 XML 是线性广告 VAST 文件的示例：",
      "pos": [
        1283,
        1323
      ]
    },
    {
      "pos": [
        3644,
        4109
      ],
      "content": "通过 <bpt id=\"p1\">**</bpt><ph id=\"ph1\">&lt;Linear&gt;</ph><ept id=\"p1\">**</ept> 元素描述线性广告。它指定广告的持续时间、跟踪事件、点击行为、点击跟踪和许多 <bpt id=\"p2\">**</bpt><ph id=\"ph2\">&lt;MediaFile&gt;</ph><ept id=\"p2\">**</ept> 元素。在 <bpt id=\"p3\">**</bpt><ph id=\"ph3\">&lt;TrackingEvents&gt;</ph><ept id=\"p3\">**</ept> 元素内指定跟踪事件，并允许广告服务器跟踪在观看广告时发生的各种事件。在这种情况下将跟踪开始、中点、完成和展开事件。于显示广告时发生开始事件。已观看至少 50% 的广告时间线时发生中点事件。广告结束时发生完成事件。用户将视频播放器展开为全屏时发生展开事件。“点击”是使用 <bpt id=\"p4\">**</bpt><ph id=\"ph4\">&lt;ClickThrough&gt;</ph><ept id=\"p4\">**</ept> 元素在 <bpt id=\"p5\">**</bpt><ph id=\"ph5\">&lt;VideoClicks&gt;</ph><ept id=\"p5\">**</ept> 元素内指定的，指定用户点击广告时要显示的资源的 URI。“点击跟踪”是在 <bpt id=\"p6\">**</bpt><ph id=\"ph6\">&lt;ClickTracking&gt;</ph><ept id=\"p6\">**</ept> 元素中指定的，也在 <bpt id=\"p7\">**</bpt><ph id=\"ph7\">&lt;VideoClicks&gt;</ph><ept id=\"p7\">**</ept> 元素中指定，指定用户点击广告时要请求的播放器的跟踪资源。<bpt id=\"p8\">**</bpt><ph id=\"ph8\">&lt;MediaFile&gt;</ph><ept id=\"p8\">**</ept> 元素指定有关广告特定编码的信息。如果存在多个 <bpt id=\"p9\">**</bpt><ph id=\"ph9\">&lt;MediaFile&gt;</ph><ept id=\"p9\">**</ept> 元素，则视频播放器可以选择适用于该平台的最佳编码。"
    },
    {
      "content": "可以按指定顺序显示线性广告。若要执行此操作，请向 VAST 文件添加其他",
      "pos": [
        4111,
        4147
      ]
    },
    {
      "content": "元素，并使用 sequence 属性指定顺序。以下示例对此进行了说明：",
      "pos": [
        4153,
        4188
      ]
    },
    {
      "content": "非线性广告也是在",
      "pos": [
        5703,
        5711
      ]
    },
    {
      "content": "元素中指定的。以下示例演示描述非线性广告的",
      "pos": [
        5723,
        5744
      ]
    },
    {
      "content": "元素。",
      "pos": [
        5756,
        5759
      ]
    },
    {
      "pos": [
        6453,
        6678
      ],
      "content": "<bpt id=\"p1\">**</bpt><ph id=\"ph1\">&lt;NonLinearAds&gt;</ph><ept id=\"p1\">**</ept> 元素可以包含一个或多个 <bpt id=\"p2\">**</bpt><ph id=\"ph2\">&lt;NonLinear&gt;</ph><ept id=\"p2\">**</ept> 元素，其中每一个均可描述一个非线性广告。<bpt id=\"p3\">**</bpt><ph id=\"ph3\">&lt;NonLinear&gt;</ph><ept id=\"p3\">**</ept> 元素指定非线性广告的资源。资源可以是 <bpt id=\"p4\">**</bpt><ph id=\"ph4\">&lt;StaticResouce&gt;</ph><ept id=\"p4\">**</ept>、<bpt id=\"p5\">**</bpt><ph id=\"ph5\">&lt;IFrameResource&gt;</ph><ept id=\"p5\">**</ept> 或 <bpt id=\"p6\">**</bpt><ph id=\"ph6\">&lt;HTMLResouce&gt;</ph><ept id=\"p6\">**</ept>。<bpt id=\"p7\">**</bpt><ph id=\"ph7\">&lt;StaticResource&gt;</ph><ept id=\"p7\">**</ept> 描述非 HTML 资源，并定义指定资源显示方式的 creativeType 属性："
    },
    {
      "pos": [
        6680,
        6738
      ],
      "content": "Image/gif、image/jpeg、image/png - 资源显示在 HTML <bpt id=\"p1\">**</bpt><ph id=\"ph1\">&lt;img&gt;</ph><ept id=\"p1\">**</ept> 标记中。"
    },
    {
      "pos": [
        6740,
        6791
      ],
      "content": "Application/x-javascript - 资源显示在 HTML &lt;<bpt id=\"p1\">**</bpt>脚本<ept id=\"p1\">**</ept>&gt; 标记中。"
    },
    {
      "content": "Application/x-shockwave-flash – 资源显示在 Flash Player 中。",
      "pos": [
        6793,
        6846
      ]
    },
    {
      "pos": [
        6848,
        7142
      ],
      "content": "<bpt id=\"p1\">**</bpt><ph id=\"ph1\">&lt;IFrameResource&gt;</ph><ept id=\"p1\">**</ept> 描述可以在 IFrame 中显示的 HTML 资源。<bpt id=\"p2\">**</bpt><ph id=\"ph2\">&lt;HTMLResource&gt;</ph><ept id=\"p2\">**</ept> 描述可以插入网页中的一段 HTML 代码。<bpt id=\"p3\">**</bpt><ph id=\"ph3\">&lt;TrackingEvents&gt;</ph><ept id=\"p3\">**</ept> 指定跟踪事件以及事件发生时要请求的 URI。在此示例中，跟踪了 acceptInvitation 事件和折叠事件。有关 <bpt id=\"p4\">**</bpt><ph id=\"ph4\">&lt;NonLinearAds&gt;</ph><ept id=\"p4\">**</ept> 元素及其子元素的详细信息，请参阅 IAB.NET/VAST。请注意，<bpt id=\"p5\">**</bpt><ph id=\"ph5\">&lt;TrackingEvents&gt;</ph><ept id=\"p5\">**</ept> 元素位于 <bpt id=\"p6\">**</bpt><ph id=\"ph6\">&lt;NonLinearAds&gt;</ph><ept id=\"p6\">**</ept> 元素内，而不是 <bpt id=\"p7\">**</bpt><ph id=\"ph7\">&lt;NonLinear&gt;</ph><ept id=\"p7\">**</ept> 元素内。"
    },
    {
      "content": "在",
      "pos": [
        7144,
        7145
      ]
    },
    {
      "content": "元素内定义伴随广告。",
      "pos": [
        7161,
        7171
      ]
    },
    {
      "content": "元素可以包含一个或多个",
      "pos": [
        7186,
        7197
      ]
    },
    {
      "content": "元素。每个",
      "pos": [
        7210,
        7215
      ]
    },
    {
      "content": "元素均描述一个伴随广告，并且可以包含以与非线性广告相同的方式定义的",
      "pos": [
        7228,
        7261
      ]
    },
    {
      "content": "或",
      "pos": [
        7295,
        7296
      ]
    },
    {
      "content": "。VAST 文件可以包含多个伴随广告，播放器应用程序可以选择最适合显示的广告。有关 VAST 的详细信息，请参阅 <bpt id=\"p1\">[</bpt>VAST 3.0<ept id=\"p1\">](http://www.iab.net/media/file/VASTv3.0.pdf)</ept>。",
      "pos": [
        7311,
        7423
      ]
    },
    {
      "content": "使用数字视频多广告播放列表 (VMAP) 文件",
      "pos": [
        7428,
        7451
      ]
    },
    {
      "content": "VMAP 文件使你能够指定发生广告中断的时间、每次中断的时长、可在中断期间显示的广告数以及可在中断期间显示的广告类型。以下是定义单次广告中断的示例 VMAP 文件：",
      "pos": [
        7453,
        7535
      ]
    },
    {
      "content": "VMAP 文件以",
      "pos": [
        10636,
        10644
      ]
    },
    {
      "content": "元素开头，该元素包含一个或多个",
      "pos": [
        10652,
        10667
      ]
    },
    {
      "content": "元素，每一个均定义一个广告中断。每一个广告中断均指定一个中断类型、中断 ID 和时间偏移量。BreakType 属性指定可在中断期间播放的广告类型：线性广告、非线性广告或显示广告。显示广告映射到 VAST 伴随广告。可以在逗号（不含空格）分隔的列表中指定多个广告类型。BreakID 是广告的可选标识符。TimeOffset 指定显示广告的时间。可以通过以下方式之一进行指定：",
      "pos": [
        10678,
        10866
      ]
    },
    {
      "content": "时间 - 采用 hh:mm:ss 或 hh:mm:ss.mmm 格式，其中 .mmm 为毫秒。此属性的值指定从视频时间线开始到广告中断开始的一段时间。",
      "pos": [
        10871,
        10946
      ]
    },
    {
      "content": "百分比 - 采用 n% 格式，其中 n 为播放广告前要播放的视频时间线所占的百分比",
      "pos": [
        10950,
        10991
      ]
    },
    {
      "content": "开始/结束 - 指定应在播放视频之前或之后显示广告",
      "pos": [
        10995,
        11020
      ]
    },
    {
      "content": "位置 - 指定广告中断的计时未知时（例如，实时流式处理过程中）的广告中断顺序。采用 #n 格式指定每次广告中断的顺序，其中 n 为整数 1 或更大整数。1 表示应在第一个机会时播放广告，2 表示应在第二个机会时播放广告，以此类推。",
      "pos": [
        11024,
        11139
      ]
    },
    {
      "pos": [
        11141,
        11208
      ],
      "content": "在 &lt;<bpt id=\"p1\">**</bpt>AdBreak<ept id=\"p1\">**</ept>&gt; 元素中可以有一个 &lt;<bpt id=\"p2\">**</bpt>AdSource<ept id=\"p2\">**</ept>&gt; 元素。&lt;<bpt id=\"p3\">**</bpt>AdSource<ept id=\"p3\">**</ept>&gt; 元素包含以下属性："
    },
    {
      "content": "Id - 指定广告源的标识符",
      "pos": [
        11213,
        11227
      ]
    },
    {
      "content": "allowMultipleAds – 一个布尔值，指定是否可以在广告中断期间显示多个广告",
      "pos": [
        11231,
        11275
      ]
    },
    {
      "content": "followRedirects – 一个可选布尔值，指定视频播放器是否应遵循广告响应中的重定向",
      "pos": [
        11279,
        11326
      ]
    },
    {
      "pos": [
        11328,
        11378
      ],
      "content": "&lt;<bpt id=\"p1\">**</bpt>AdSource<ept id=\"p1\">**</ept>&gt; 元素为播放器提供线内广告响应或对广告响应的引用。它可包含以下元素之一："
    },
    {
      "content": "表示 VMAP 文件中嵌入了一个 VAST 广告响应",
      "pos": [
        11395,
        11421
      ]
    },
    {
      "content": "引用另一个系统中的广告响应的 URI",
      "pos": [
        11435,
        11453
      ]
    },
    {
      "content": "表示非 VAST 响应的任意字符串",
      "pos": [
        11471,
        11488
      ]
    },
    {
      "content": "在此示例中，线内广告响应是使用包含 VAST 广告响应的",
      "pos": [
        11490,
        11518
      ]
    },
    {
      "content": "元素指定的。有关其他元素的详细信息，请参阅 <bpt id=\"p1\">[</bpt>VMAP<ept id=\"p1\">](http://www.iab.net/guidelines/508676/digitalvideo/vsuite/vmap)</ept>。",
      "pos": [
        11532,
        11624
      ]
    },
    {
      "pos": [
        11626,
        11809
      ],
      "content": "&lt;<bpt id=\"p1\">**</bpt>AdBreak<ept id=\"p1\">**</ept>&gt; 元素还可以包含一个 &lt;<bpt id=\"p2\">**</bpt>TrackingEvents<ept id=\"p2\">**</ept>&gt; 元素。&lt;<bpt id=\"p3\">**</bpt>TrackingEvents<ept id=\"p3\">**</ept>&gt; 元素允许跟踪广告中断的开始或结束，或广告中断期间是否发生了错误。&lt;<bpt id=\"p4\">**</bpt>TrackingEvents<ept id=\"p4\">**</ept>&gt; 元素包含一个或多个 &lt;<bpt id=\"p5\">**</bpt>Tracking<ept id=\"p5\">**</ept>&gt; 元素，其中每一个均指定一个跟踪事件和一个跟踪 URI。可能的跟踪事件是："
    },
    {
      "content": "breakStart - 跟踪广告中断的开始",
      "pos": [
        11814,
        11836
      ]
    },
    {
      "content": "breakEnd - 跟踪广告中断的完成",
      "pos": [
        11840,
        11860
      ]
    },
    {
      "content": "error - 跟踪广告中断期间发生的错误",
      "pos": [
        11864,
        11885
      ]
    },
    {
      "content": "以下示例演示指定跟踪事件的 VMAP 文件",
      "pos": [
        11887,
        11908
      ]
    },
    {
      "pos": [
        12688,
        12752
      ],
      "content": "有关 &lt;<bpt id=\"p1\">**</bpt>TrackingEvents<ept id=\"p1\">**</ept>&gt; 元素及其子元素的详细信息，请参阅 http://iab.org/VMAP.pdf"
    },
    {
      "content": "使用媒体摘要排序模板 (MAST) 文件",
      "pos": [
        12757,
        12777
      ]
    },
    {
      "content": "MAST 文件允许指定定义何时显示广告的触发器。以下是一个示例 MAST 文件，它包含前置式广告、中置式广告和后置式广告的触发器。",
      "pos": [
        12779,
        12844
      ]
    },
    {
      "content": "MAST 文件以 <bpt id=\"p1\">**</bpt><ph id=\"ph1\">&lt;MAST&gt;</ph><ept id=\"p1\">**</ept> 元素开头，该元素包含一个 <bpt id=\"p2\">**</bpt><ph id=\"ph2\">&lt;triggers&gt;</ph><ept id=\"p2\">**</ept> 元素。",
      "pos": [
        14511,
        14562
      ]
    },
    {
      "content": "元素包含一个或多个 <bpt id=\"p1\">**</bpt><ph id=\"ph1\">&lt;trigger&gt;</ph><ept id=\"p1\">**</ept> 定义应何时播放广告的元素。",
      "pos": [
        14573,
        14610
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt><ph id=\"ph1\">&lt;trigger&gt;</ph><ept id=\"p1\">**</ept> 元素包含一个 <bpt id=\"p2\">**</bpt><ph id=\"ph2\">&lt;startConditions&gt;</ph><ept id=\"p2\">**</ept> 元素，后者指定应开始播放广告的时间。<bpt id=\"p3\">**</bpt><ph id=\"ph3\">&lt;startConditions&gt;</ph><ept id=\"p3\">**</ept> 元素包含一个或多个",
      "pos": [
        14612,
        14704
      ]
    },
    {
      "content": "元素。当每个",
      "pos": [
        14717,
        14723
      ]
    },
    {
      "content": "评估结果为 true 时，将启动或撤销一个触发器，具体取决于",
      "pos": [
        14736,
        14766
      ]
    },
    {
      "content": "是否分别包含在 <bpt id=\"p1\">**</bpt>&lt; startConditions<ept id=\"p1\">**</ept>&gt; 或 <bpt id=\"p2\">**</bpt><ph id=\"ph1\">&lt;endConditions&gt;</ph><ept id=\"p2\">**</ept> 元素中。有多个",
      "pos": [
        14779,
        14839
      ]
    },
    {
      "content": "元素时，将它们视为隐式 OR，任何评估结果为 true 的条件均将导致触发器启动。",
      "pos": [
        14852,
        14893
      ]
    },
    {
      "content": "元素可以嵌套。预设了子",
      "pos": [
        14905,
        14916
      ]
    },
    {
      "content": "元素时，将它们视为隐式 AND；若要启动触发器，则所有条件的评估结果必须都为 true。",
      "pos": [
        14929,
        14973
      ]
    },
    {
      "content": "元素包含定义条件的以下属性：",
      "pos": [
        14985,
        14999
      ]
    },
    {
      "pos": [
        15004,
        15029
      ],
      "content": "<bpt id=\"p1\">**</bpt>type<ept id=\"p1\">**</ept> – 指定的条件、事件或属性的类型"
    },
    {
      "pos": [
        15033,
        15062
      ],
      "content": "<bpt id=\"p1\">**</bpt>name<ept id=\"p1\">**</ept> – 要在评估过程中使用的属性或事件的名称"
    },
    {
      "pos": [
        15066,
        15091
      ],
      "content": "<bpt id=\"p1\">**</bpt>value<ept id=\"p1\">**</ept> – 将针对其进行评估的属性的值"
    },
    {
      "pos": [
        15095,
        15183
      ],
      "content": "<bpt id=\"p1\">**</bpt>operator<ept id=\"p1\">**</ept> – 要在评估期间使用的操作符：EQ（等于）、NEQ（不等于）、GTR（大于）、GEQ（大于或等于）、LT（小于）、LEQ（小于或等于）、MOD（取模）"
    },
    {
      "content": "<bpt id=\"p1\">**</bpt><ph id=\"ph1\">&lt;endConditions&gt;</ph><ept id=\"p1\">**</ept> 也包含",
      "pos": [
        15185,
        15208
      ]
    },
    {
      "content": "元素。当某个条件的评估结果为 true 时，重置触发器。",
      "pos": [
        15221,
        15249
      ]
    },
    {
      "content": "元素也包含",
      "pos": [
        15259,
        15264
      ]
    },
    {
      "content": "元素，后者包含一个或多个",
      "pos": [
        15275,
        15287
      ]
    },
    {
      "content": "元素。",
      "pos": [
        15297,
        15300
      ]
    },
    {
      "content": "元素定义广告响应的 URI 和广告响应的类型。在此示例中为 VAST 响应给定了一个 URI。",
      "pos": [
        15309,
        15356
      ]
    },
    {
      "content": "使用视频播放器广告接口定义 (VPAID)",
      "pos": [
        15684,
        15705
      ]
    },
    {
      "content": "VPAID 是用于使可执行广告单元能够与视频播放器进行通信的 API。这可实现高度交互的广告体验。用户可以与广告交互；广告可以对查看者采取的操作做出响应。例如，广告可能会显示允许用户查看详细信息或更长时间版广告的按钮。视频播放器必须支持 VPAID API 且可执行广告必须实现该 API。当播放机从广告服务器请求广告时，服务器可能使用包含 VPAID 广告的 VAST 响应进行响应。",
      "pos": [
        15707,
        15900
      ]
    },
    {
      "content": "在必须于运行时环境（例如 Adobe Flash™ 或可以在 Web 浏览器中执行的 JavaScript）中执行的代码中创建可执行广告。当广告服务器返回包含 VPAID 广告的 VAST 响应时，",
      "pos": [
        15902,
        16001
      ]
    },
    {
      "content": "元素中 apiFramework 属性的值必须为“VPAID”。此属性指定所含广告为 VPAID 可执行广告。类型属性必须设置为可执行文件（如“application/x-shockwave-flash”或“application/x-javascript”）的 MIME 类型。以下 XML 代码片段演示包含 VPAID 可执行广告的 VAST 响应中的",
      "pos": [
        16013,
        16191
      ]
    },
    {
      "content": "元素。",
      "pos": [
        16204,
        16207
      ]
    },
    {
      "content": "可以使用 VAST 响应中",
      "pos": [
        16476,
        16489
      ]
    },
    {
      "content": "或",
      "pos": [
        16499,
        16500
      ]
    },
    {
      "content": "元素内的",
      "pos": [
        16513,
        16517
      ]
    },
    {
      "content": "元素来初始化可执行广告。有关",
      "pos": [
        16533,
        16547
      ]
    },
    {
      "content": "元素的详细信息，请参阅 <bpt id=\"p1\">[</bpt>VAST 3.0<ept id=\"p1\">](http://www.iab.net/media/file/VASTv3.0.pdf)</ept>。有关 VPAID API 的详细信息，请参阅 <bpt id=\"p2\">[</bpt>VPAID 2.0<ept id=\"p2\">](http://www.iab.net/media/file/VPAID_2.0_Final_04-10-2012.pdf)</ept>。",
      "pos": [
        16563,
        16727
      ]
    },
    {
      "content": "实现带有支持广告的 Windows 或 Windows Phone 8 播放器",
      "pos": [
        16731,
        16770
      ]
    },
    {
      "pos": [
        16772,
        16969
      ],
      "content": "Microsoft Media Platform：适用于 Windows 8 和 Windows Phone 8 的播放器框架包含示例应用程序集合，这些示例应用程序向你展示如何使用该框架实现视频播放器应用程序。可以从<bpt id=\"p1\">[</bpt>适用于 Windows 8 和 Windows Phone 8 的播放器框架<ept id=\"p1\">](https://playerframework.codeplex.com)</ept>下载播放器框架和示例。"
    },
    {
      "content": "打开 Microsoft.PlayerFramework.Xaml.Samples 解决方案时，将看到项目中的多个文件夹。Advertising 文件夹包含与创建具有广告支持的视频播放器相关的示例代码。Advertising 文件夹中有多个 XAML/cs 文件，每一个均显示如何以不同的方式插入广告。以下列表对每个文件进行描述：",
      "pos": [
        16971,
        17136
      ]
    },
    {
      "content": "AdPodPage.xaml 演示如何显示广告荚。",
      "pos": [
        17140,
        17165
      ]
    },
    {
      "content": "AdSchedulingPage.xaml 演示如何安排广告。",
      "pos": [
        17168,
        17199
      ]
    },
    {
      "content": "FreeWheelPage.xaml 演示如何使用 FreeWheel 插件来安排广告。",
      "pos": [
        17202,
        17246
      ]
    },
    {
      "content": "MastPage.xaml 演示如何使用 MAST 文件来安排广告。",
      "pos": [
        17249,
        17283
      ]
    },
    {
      "content": "ProgrammaticAdPage.xaml 演示如何以编程方式将广告安排到视频中。",
      "pos": [
        17286,
        17329
      ]
    },
    {
      "content": "ScheduleClipPage.xaml 演示如何在无 VAST 文件的情况下安排广告。",
      "pos": [
        17332,
        17377
      ]
    },
    {
      "content": "VastLinearCompanionPage.xaml 演示如何插入线性广告和伴随广告。",
      "pos": [
        17380,
        17425
      ]
    },
    {
      "content": "VastNonLinearPage.xaml 演示如何插入非线性广告。",
      "pos": [
        17428,
        17463
      ]
    },
    {
      "content": "VmapPage.xaml 演示如何使用 VMAP 文件来指定广告。",
      "pos": [
        17466,
        17500
      ]
    },
    {
      "content": "每一个示例均使用由播放器框架定义的 MediaPlayer 类。大多数示例都使用为不同广告响应格式添加支持的插件。ProgrammaticAdPage 示例以编程方式与 MediaPlayer 实例交互。",
      "pos": [
        17502,
        17604
      ]
    },
    {
      "content": "AdPodPage 示例",
      "pos": [
        17609,
        17621
      ]
    },
    {
      "content": "此示例使用 AdSchedulerPlugin 来定义何时显示广告。在此示例中，安排于 5 秒后播放中置式广告。广告荚（按顺序播放的一组广告）是在从广告服务器返回的 VAST 文件中指定的。在",
      "pos": [
        17623,
        17719
      ]
    },
    {
      "content": "元素中指定 VAST 文件的 URI。",
      "pos": [
        17737,
        17756
      ]
    },
    {
      "pos": [
        18571,
        18759
      ],
      "content": "有关 AdSchedulerPlugin 的详细信息，请参阅 <bpt id=\"p1\">[</bpt>Windows 8 和 Windows Phone 8 上的播放器框架中的广告<ept id=\"p1\">](http://playerframework.codeplex.com/wikipage?title=Advertising&amp;referringTitle=Windows%208%20Player%20Documentation)</ept>"
    },
    {
      "content": "AdSchedulingPage",
      "pos": [
        18764,
        18780
      ]
    },
    {
      "content": "此示例还使用 AdSchedulerPlugin。它会安排三种广告：前置式广告、中置式广告和后置式广告。在",
      "pos": [
        18782,
        18835
      ]
    },
    {
      "content": "元素中指定每种广告的 VAST 文件的 URI。",
      "pos": [
        18853,
        18877
      ]
    },
    {
      "content": "FreeWheelPage",
      "pos": [
        20596,
        20609
      ]
    },
    {
      "content": "此示例使用 FreeWheelPlugin，它指定一个指定 URL 的源属性，该 URL 指向一个 SmartXML 文件，该文件指定广告内容和广告安排信息。",
      "pos": [
        20611,
        20690
      ]
    },
    {
      "content": "MastPage",
      "pos": [
        21100,
        21108
      ]
    },
    {
      "content": "此示例使用允许使用 MAST 文件的 MastSchedulerPlugin。源属性指定 MAST 文件的位置。",
      "pos": [
        21110,
        21166
      ]
    },
    {
      "content": "ProgrammaticAdPage",
      "pos": [
        21576,
        21594
      ]
    },
    {
      "content": "此示例以编程方式与 MediaPlayer 交互。ProgrammaticAdPage.xaml 文件实例化 MediaPlayer：",
      "pos": [
        21596,
        21663
      ]
    },
    {
      "content": "ProgrammaticAdPage.xaml.cs 文件创建 AdHandlerPlugin，添加 TimelineMarker 以指定何时显示广告，然后为 MarkerReached 事件添加处理程序，该程序加载指定指向 VAST 文件的 URI 的 RemoteAdSource，然后播放广告。",
      "pos": [
        21781,
        21931
      ]
    },
    {
      "content": "ScheduleClipPage",
      "pos": [
        23265,
        23281
      ]
    },
    {
      "content": "此示例使用 AdSchedulerPlugin 通过指定包含广告的 .wmv 文件安排中置式广告。",
      "pos": [
        23283,
        23332
      ]
    },
    {
      "content": "VastLinearCompanionPage",
      "pos": [
        24533,
        24556
      ]
    },
    {
      "content": "此示例阐释如何使用 AdSchedulerPlugin 来安排中置式线性广告和伴随广告。",
      "pos": [
        24558,
        24602
      ]
    },
    {
      "content": "元素指定 VAST 文件的位置。",
      "pos": [
        24619,
        24635
      ]
    },
    {
      "content": "VastLinearNonLinearPage",
      "pos": [
        25582,
        25605
      ]
    },
    {
      "content": "此示例使用 AdSchedulerPlugin 来安排线性广告和非线性广告。使用",
      "pos": [
        25607,
        25647
      ]
    },
    {
      "content": "元素来指定 VAST 文件位置。",
      "pos": [
        25665,
        25681
      ]
    },
    {
      "content": "VMAPPage",
      "pos": [
        26637,
        26645
      ]
    },
    {
      "content": "此示例使用 VmapSchedulerPlugin，以便使用 VMAP 文件安排广告。在",
      "pos": [
        26647,
        26691
      ]
    },
    {
      "content": "元素的源属性中指定指向 VMAP 文件的 URI。",
      "pos": [
        26714,
        26739
      ]
    },
    {
      "content": "实现带有广告支持的 iOS 视频播放器",
      "pos": [
        27147,
        27166
      ]
    },
    {
      "pos": [
        27169,
        27499
      ],
      "content": "Microsoft Media Platform：适用于 iOS 的播放器框架包含示例应用程序集合，这些示例应用程序向你展示如何使用该框架实现视频播放器应用程序。可以从 <bpt id=\"p1\">[</bpt>Azure 媒体播放器框架<ept id=\"p1\">](https://github.com/Azure/azure-media-player-framework)</ept>下载播放器框架和示例。GitHub 页面具有指向 Wiki（含有关播放器框架的其他信息）的链接和播放器示例简介：<bpt id=\"p2\">[</bpt>Azure 媒体播放器 Wiki<ept id=\"p2\">](https://github.com/Azure/azure-media-player-framework/wiki/How-to-use-Azure-media-player-framework)</ept>。"
    },
    {
      "content": "使用 VMAP 安排广告",
      "pos": [
        27505,
        27517
      ]
    },
    {
      "content": "以下示例演示如何使用 VMAP 文件安排广告。",
      "pos": [
        27519,
        27542
      ]
    },
    {
      "content": "使用 VAST 安排广告",
      "pos": [
        28160,
        28172
      ]
    },
    {
      "content": "以下示例演示如何安排后期绑定 VAST 广告。",
      "pos": [
        28174,
        28197
      ]
    },
    {
      "content": "以下示例演示如何安排早期绑定 VAST 广告。",
      "pos": [
        29249,
        29272
      ]
    },
    {
      "content": "//Example:4 Schedule an early binding VAST ad",
      "pos": [
        29277,
        29322
      ]
    },
    {
      "content": "//Download the VAST file",
      "pos": [
        29327,
        29351
      ]
    },
    {
      "content": "if (![framework.adResolver downloadManifest:&amp;manifest withURL:[NSURL URLWithString:@\"http://portalvhdsq3m25bf47d15c.blob.core.chinacloudapi.cn/vast/PlayerTestVAST.xml\"]])",
      "pos": [
        29356,
        29526
      ]
    },
    {
      "content": "{",
      "pos": [
        29531,
        29532
      ]
    },
    {
      "content": "[self logFrameworkError];",
      "pos": [
        29541,
        29566
      ]
    },
    {
      "content": "}",
      "pos": [
        29571,
        29572
      ]
    },
    {
      "content": "else",
      "pos": [
        29577,
        29581
      ]
    },
    {
      "content": "{ adLinearTime.startTime = 7;",
      "pos": [
        29590,
        29619
      ]
    },
    {
      "content": "adLinearTime.duration = 0;",
      "pos": [
        29628,
        29654
      ]
    },
    {
      "content": "以下示例演示如何使用粗剪编辑 (RCE) 插入广告",
      "pos": [
        30210,
        30235
      ]
    },
    {
      "content": "以下示例演示如何安排广告荚。",
      "pos": [
        30844,
        30858
      ]
    },
    {
      "content": "以下示例演示如何安排非粘性中置式广告。不管查看器执行了什么查找，非粘性广告均仅播放一次。",
      "pos": [
        32045,
        32089
      ]
    },
    {
      "content": "以下示例演示如何安排粘性中置式广告。每当到达时间线上指定时间点时就会显示粘性广告。",
      "pos": [
        33170,
        33211
      ]
    },
    {
      "content": "以下示例演示如何安排后置式广告。",
      "pos": [
        34223,
        34239
      ]
    },
    {
      "content": "以下示例演示如何安排前置式广告。",
      "pos": [
        35088,
        35104
      ]
    },
    {
      "content": "以下示例演示如何安排中置叠加式广告。",
      "pos": [
        36006,
        36024
      ]
    },
    {
      "content": "另请参阅",
      "pos": [
        37205,
        37209
      ]
    },
    {
      "content": "开发视频播放器应用程序",
      "pos": [
        37212,
        37223
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"在客户端上插入广告\" \n    description=\"本主题说明如何在客户端上插入广告。\" \n    services=\"media-services\" \n    documentationCenter=\"\" \n    authors=\"juliako\" \n    manager=\"dwrede\" \n    editor=\"\"/>\n\n<tags\n    ms.service=\"media-services\"\n    ms.date=\"02/03/2016\"\n    wacn.date=\"03/17/2016\"/>\n\n\n#在客户端上插入广告\n\n此主题涵盖有关如何在客户端上插入多种类型的广告的信息。\n\n有关在实时流式处理视频中隐藏式字幕和广告支持的详细信息，请参阅[支持的隐藏式字幕和广告插入标准](/documentation/articles/media-services-manage-channels-overview#cc_and_ads)。\n\n>[AZURE.NOTE] Azure Media Player 目前不支持广告。\n\n##<a id=\"insert_ads_into_media\"></a>向媒体中插入广告\n\nAzure 媒体服务通过“Windows 媒体平台：播放器框架”提供广告插入支持。附带广告支持的播放器框架在 Windows 8、Silverlight、Windows Phone 8 和 iOS 设备上均可用。每个播放器框架均包含显示如何实现播放器应用程序的示例代码。可插入 media:list 中的广告有三种。\n\n- **线性** - 暂停主视频的全帧广告。\n- **非线性** - 播放主视频时显示的叠加式广告，通常为放置在播放器内的一个徽标或其他静态图像。\n- **伴随** - 在播放器之外显示的广告。\n\n广告可置于主视频时间线中的任何一个时间点。你必须告知播放器何时播放广告以及播放哪些广告。完成该操作需使用一组标准的基于 XML 的文件：视频广告服务模板 (VAST)、数字视频多广告播放列表 (VMAP)、媒体抽象排序模板 (MAST) 和数字视频播放器广告接口定义 (VPAID)。VAST 文件用于指定要显示哪些广告。VMAP 文件用于指定何时播放各种广告并且包含 VAST XML。MAST 文件是对包含 VAST XML 的广告进行排序的另一种方法。VPAID 文件用于定义视频播放器与广告或广告服务器之间的接口。\n\n每个播放器框架的工作方式不同，且都将被各自的主题所涵盖。本主题将介绍用来插入广告的基本机制。视频播放器应用程序从广告服务器请求广告。广告服务器可以通过多种方式进行响应：\n\n- 返回一个 VAST 文件\n- 返回一个 VMAP 文件 （使用嵌入的 VAST)\n- 返回一个 MAST 文件 （使用嵌入的 VAST)\n- 返回一个含有 VPAID 广告的 VAST 文件\n\n \n###使用视频广告服务模板 (VAST) 文件\n\nVAST 文件指定要显示的广告。以下 XML 是线性广告 VAST 文件的示例：\n    \n    <VAST version=\"2.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"oxml.xsd\">\n      <Ad id=\"115571748\">\n        <InLine>\n          <AdSystem version=\"2.0 alpha\">Atlas</AdSystem>\n          <AdTitle>Unknown</AdTitle>\n          <Description>Unknown</Description>\n          <Survey></Survey>\n          <Error></Error>\n          <Impression id=\"Atlas\"><![CDATA[http://www.myserver.com/tracking-resource]]></Impression>\n          <Creatives>\n            <Creative id=\"video\" sequence=\"0\" AdID=\"\">\n              <Linear>\n                <Duration>00:00:32</Duration>\n                <TrackingEvents>\n                  <Tracking event=\"start\"><![CDATA[http://www.myserver.com/start-tracking-resource]]></Tracking>\n                  <Tracking event=\"midpoint\"><![CDATA[http://www.myserver.com/midpoint-tracking-resource]]></Tracking>\n                  <Tracking event=\"complete\"><![CDATA http://www.myserver.com/complete-tracking-resource]]></Tracking>\n                  <Tracking event=\"expand\"><![CDATA[http://www.myserver.com/expand-tracking-resource]]></Tracking>\n                </TrackingEvents>\n                <VideoClicks>\n                  <ClickThrough id=\"Atlas Redirect\"><![CDATA[http://www.myserver.com/click-resource]]></ClickThrough>\n                  <ClickTracking id=\"Spare\"></ClickTracking>\n                </VideoClicks>\n                <MediaFiles>\n                  <MediaFile apiFramework=\"Windows Media\" id=\"windows_progressive_200\" maintainAspectRatio=\"true\" scaleable=\"true\"  delivery=\"progressive\" bitrate=\"200\" width=\"400\" height=\"300\" type=\"video/x-ms-wmv\">\n                    <![CDATA[http://www.myserver.com/media/myad_200_4x3.wmv]]>\n                  </MediaFile>\n                  <MediaFile apiFramework=\"Windows Media\" id=\"windows_progressive_300\" maintainAspectRatio=\"true\" scaleable=\"true\"  delivery=\"progressive\" bitrate=\"300\" width=\"400\" height=\"300\" type=\"video/x-ms-wmv\">\n                    <![CDATA[http://www.myserver.com/media/myad_300_4x3.wmv]]>\n                  </MediaFile>\n                </MediaFiles>\n              </Linear>\n            </Creative>\n          </Creatives>\n          <Extensions>\n            <Extension type=\"Atlas\">\n            </Extension>\n          </Extensions>\n        </InLine>\n      </Ad>\n    </VAST>\n    \n通过 **<Linear>** 元素描述线性广告。它指定广告的持续时间、跟踪事件、点击行为、点击跟踪和许多 **<MediaFile>** 元素。在 **<TrackingEvents>** 元素内指定跟踪事件，并允许广告服务器跟踪在观看广告时发生的各种事件。在这种情况下将跟踪开始、中点、完成和展开事件。于显示广告时发生开始事件。已观看至少 50% 的广告时间线时发生中点事件。广告结束时发生完成事件。用户将视频播放器展开为全屏时发生展开事件。“点击”是使用 **<ClickThrough>** 元素在 **<VideoClicks>** 元素内指定的，指定用户点击广告时要显示的资源的 URI。“点击跟踪”是在 **<ClickTracking>** 元素中指定的，也在 **<VideoClicks>** 元素中指定，指定用户点击广告时要请求的播放器的跟踪资源。**<MediaFile>** 元素指定有关广告特定编码的信息。如果存在多个 **<MediaFile>** 元素，则视频播放器可以选择适用于该平台的最佳编码。\n\n可以按指定顺序显示线性广告。若要执行此操作，请向 VAST 文件添加其他 <Ad> 元素，并使用 sequence 属性指定顺序。以下示例对此进行了说明：\n    \n    <VAST version=\"2.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"oxml.xsd\">\n      <Ad id=\"1\" sequence=\"0\">\n        <InLine>\n          <AdSystem version=\"2.0 alpha\">Atlas</AdSystem>\n          <AdTitle>Unknown</AdTitle>\n          <Description>Unknown</Description>\n          <Survey></Survey>\n          <Error></Error>\n          <Impression id=\"Atlas\"><![CDATA[http://myserver.com/Impression/Ad1trackingResouce]]></Impression>\n          <Creatives>\n            <Creative id=\"video\" sequence=\"0\" AdID=\"\">\n              <Linear>\n                <Duration>00:00:32</Duration>\n                <MediaFiles>\n                  <!-- ... -->\n                </MediaFiles>\n              </Linear>\n            </Creative>\n          </Creatives>\n        </InLine>\n      </Ad>\n      <Ad id=\"2\" sequence=\"1\">\n        <InLine>\n          <AdSystem version=\"2.0 alpha\">Atlas</AdSystem>\n          <AdTitle>Unknown</AdTitle>\n          <Description>Unknown</Description>\n          <Survey></Survey>\n          <Error></Error>\n          <Impression id=\"Atlas\"><![CDATA[http://myserver.com/Impression/Ad2trackingResouce]]></Impression>\n          <Creatives>\n            <Creative id=\"video\" sequence=\"0\" AdID=\"\">\n              <Linear>\n                <Duration>00:00:30</Duration>\n                <MediaFiles>\n                  <!-- ... -->\n                </MediaFiles>\n              </Linear>\n            </Creative>\n          </Creatives>\n        </InLine>\n      </Ad>\n    </VAST>\n    \n非线性广告也是在 <Creative> 元素中指定的。以下示例演示描述非线性广告的 <Creative> 元素。\n\n    <Creative id=\"video\" sequence=\"1\" AdID=\"\">\n      <NonLinearAds>\n        <NonLinear width=\"216\" height=\"121\" minSuggestedDuration=\"00:00:15\">\n          <StaticResource creativeType=\"image/png\"><![CDATA[http://myserver/images/image.png]]></StaticResource>\n          <StaticResource creativeType=\"image/jpg\"><![CDATA[http://myserver/images/image.jpg]]></StaticResource>\n        </NonLinear>\n        <TrackingEvents>\n             <Tracking event=\"acceptInvitation\"><![CDATA[http://myserver/tracking/trackingID]></Tracking>\n             <Tracking event=\"collapse\"><![CDATA[http://myserver/tracking/trackingID2]]></Tracking>\n         </TrackingEvents>\n       </NonLinearAds>\n    </Creative>\n\n \n**<NonLinearAds>** 元素可以包含一个或多个 **<NonLinear>** 元素，其中每一个均可描述一个非线性广告。**<NonLinear>** 元素指定非线性广告的资源。资源可以是 **<StaticResouce>**、**<IFrameResource>** 或 **<HTMLResouce>**。**<StaticResource>** 描述非 HTML 资源，并定义指定资源显示方式的 creativeType 属性：\n\nImage/gif、image/jpeg、image/png - 资源显示在 HTML **<img>** 标记中。\n\nApplication/x-javascript - 资源显示在 HTML <**脚本**> 标记中。\n\nApplication/x-shockwave-flash – 资源显示在 Flash Player 中。\n\n**<IFrameResource>** 描述可以在 IFrame 中显示的 HTML 资源。**<HTMLResource>** 描述可以插入网页中的一段 HTML 代码。**<TrackingEvents>** 指定跟踪事件以及事件发生时要请求的 URI。在此示例中，跟踪了 acceptInvitation 事件和折叠事件。有关 **<NonLinearAds>** 元素及其子元素的详细信息，请参阅 IAB.NET/VAST。请注意，**<TrackingEvents>** 元素位于 **<NonLinearAds>** 元素内，而不是 **<NonLinear>** 元素内。\n\n在 <CompanionAds> 元素内定义伴随广告。<CompanionAds> 元素可以包含一个或多个 <Companion> 元素。每个 <Companion> 元素均描述一个伴随广告，并且可以包含以与非线性广告相同的方式定义的 <StaticResource><IFrameResource> 或 <HTMLResource>。VAST 文件可以包含多个伴随广告，播放器应用程序可以选择最适合显示的广告。有关 VAST 的详细信息，请参阅 [VAST 3.0](http://www.iab.net/media/file/VASTv3.0.pdf)。\n\n###使用数字视频多广告播放列表 (VMAP) 文件\n\nVMAP 文件使你能够指定发生广告中断的时间、每次中断的时长、可在中断期间显示的广告数以及可在中断期间显示的广告类型。以下是定义单次广告中断的示例 VMAP 文件：\n    \n    <vmap:VMAP xmlns:vmap=\"http://www.iab.net/vmap-1.0\" version=\"1.0\">\n      <vmap:AdBreak breakType=\"linear\" breakId=\"mypre\" timeOffset=\"start\">\n        <vmap:AdSource allowMultipleAds=\"true\" followRedirects=\"true\" id=\"1\">\n          <vmap:VASTData>\n            <VAST version=\"2.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"oxml.xsd\">\n              <Ad id=\"115571748\">\n                <InLine>\n                  <AdSystem version=\"2.0 alpha\">Atlas</AdSystem>\n                  <AdTitle>Unknown</AdTitle>\n                  <Description>Unknown</Description>\n                  <Survey></Survey>\n                  <Error></Error>\n                  <Impression id=\"Atlas\"><![CDATA[http://view.atdmt.com/000/sview/115571748/direct;ai.201582527;vt.2/01/634364885739970673]]></Impression>\n                  <Creatives>\n                    <Creative id=\"video\" sequence=\"0\" AdID=\"\">\n                      <Linear>\n                        <Duration>00:00:32</Duration>\n                        <MediaFiles>\n                          <MediaFile apiFramework=\"Windows Media\" id=\"windows_progressive_200\" maintainAspectRatio=\"true\" scaleable=\"true\"  delivery=\"progressive\" bitrate=\"200\" width=\"400\" height=\"300\" type=\"video/x-ms-wmv\">\n                            <![CDATA[http://smf.blob.core.chinacloudapi.cn/samples/ads/media/XBOX_HD_DEMO_700_1_000_200_4x3.wmv]]>\n                          </MediaFile>\n                          <MediaFile apiFramework=\"Windows Media\" id=\"windows_progressive_300\" maintainAspectRatio=\"true\" scaleable=\"true\"  delivery=\"progressive\" bitrate=\"300\" width=\"400\" height=\"300\" type=\"video/x-ms-wmv\">\n                            <![CDATA[http://smf.blob.core.chinacloudapi.cn/samples/ads/media/XBOX_HD_DEMO_700_2_000_300_4x3.wmv]]>\n                          </MediaFile>\n                          <MediaFile apiFramework=\"Windows Media\" id=\"windows_progressive_500\" maintainAspectRatio=\"true\" scaleable=\"true\"  delivery=\"progressive\" bitrate=\"500\" width=\"400\" height=\"300\" type=\"video/x-ms-wmv\">\n                            <![CDATA[http://smf.blob.core.chinacloudapi.cn/samples/ads/media/XBOX_HD_DEMO_700_1_000_500_4x3.wmv]]>\n                          </MediaFile>\n                          <MediaFile apiFramework=\"Windows Media\" id=\"windows_progressive_700\" maintainAspectRatio=\"true\" scaleable=\"true\" delivery=\"progressive\" bitrate=\"700\" width=\"400\" height=\"300\" type=\"video/x-ms-wmv\">\n                            <![CDATA[http://smf.blob.core.chinacloudapi.cn/samples/ads/media/XBOX_HD_DEMO_700_2_000_700_4x3.wmv]]>\n                          </MediaFile>\n                        </MediaFiles>\n                      </Linear>\n                    </Creative>\n                  </Creatives>\n                </InLine>\n              </Ad>\n            </VAST>\n          </vmap:VASTData>\n        </vmap:AdSource>\n        <vmap:TrackingEvents>\n          <vmap:Tracking event=\"breakStart\">\n            http://MyServer.com/breakstart.gif\n          </vmap:Tracking>\n        </vmap:TrackingEvents>\n      </vmap:AdBreak>\n    </vmap:VMAP>\n     \nVMAP 文件以 <VMAP> 元素开头，该元素包含一个或多个 <AdBreak> 元素，每一个均定义一个广告中断。每一个广告中断均指定一个中断类型、中断 ID 和时间偏移量。BreakType 属性指定可在中断期间播放的广告类型：线性广告、非线性广告或显示广告。显示广告映射到 VAST 伴随广告。可以在逗号（不含空格）分隔的列表中指定多个广告类型。BreakID 是广告的可选标识符。TimeOffset 指定显示广告的时间。可以通过以下方式之一进行指定：\n\n1. 时间 - 采用 hh:mm:ss 或 hh:mm:ss.mmm 格式，其中 .mmm 为毫秒。此属性的值指定从视频时间线开始到广告中断开始的一段时间。\n1. 百分比 - 采用 n% 格式，其中 n 为播放广告前要播放的视频时间线所占的百分比\n1. 开始/结束 - 指定应在播放视频之前或之后显示广告\n1. 位置 - 指定广告中断的计时未知时（例如，实时流式处理过程中）的广告中断顺序。采用 #n 格式指定每次广告中断的顺序，其中 n 为整数 1 或更大整数。1 表示应在第一个机会时播放广告，2 表示应在第二个机会时播放广告，以此类推。\n\n在 <**AdBreak**> 元素中可以有一个 <**AdSource**> 元素。<**AdSource**> 元素包含以下属性：\n\n1. Id - 指定广告源的标识符\n1. allowMultipleAds – 一个布尔值，指定是否可以在广告中断期间显示多个广告\n1. followRedirects – 一个可选布尔值，指定视频播放器是否应遵循广告响应中的重定向\n\n<**AdSource**> 元素为播放器提供线内广告响应或对广告响应的引用。它可包含以下元素之一：\n\n- <VASTAdData> 表示 VMAP 文件中嵌入了一个 VAST 广告响应\n- <AdTagURI> 引用另一个系统中的广告响应的 URI\n- <CustomAdData> 表示非 VAST 响应的任意字符串\n\n在此示例中，线内广告响应是使用包含 VAST 广告响应的 <VASTAdData> 元素指定的。有关其他元素的详细信息，请参阅 [VMAP](http://www.iab.net/guidelines/508676/digitalvideo/vsuite/vmap)。\n\n<**AdBreak**> 元素还可以包含一个 <**TrackingEvents**> 元素。<**TrackingEvents**> 元素允许跟踪广告中断的开始或结束，或广告中断期间是否发生了错误。<**TrackingEvents**> 元素包含一个或多个 <**Tracking**> 元素，其中每一个均指定一个跟踪事件和一个跟踪 URI。可能的跟踪事件是：\n\n1. breakStart - 跟踪广告中断的开始\n1. breakEnd - 跟踪广告中断的完成\n1. error - 跟踪广告中断期间发生的错误\n\n以下示例演示指定跟踪事件的 VMAP 文件\n\n    <vmap:VMAP xmlns:vmap=\"http://www.iab.net/vmap-1.0\" version=\"1.0\">\n      <vmap:AdBreak breakType=\"linear\" breakId=\"mypre\" timeOffset=\"start\">\n        <vmap:AdSource allowMultipleAds=\"true\" followRedirects=\"true\" id=\"1\">\n          <vmap:VASTData>\n            <!--Inline VAST -->\n          </vmap:VASTData>\n        </vmap:AdSource>\n        <vmap:TrackingEvents>\n          <vmap:Tracking event=\"breakStart\">\n            http://MyServer.com/breakstart.gif\n          </vmap:Tracking>\n          <vmap:Tracking event=\"breakend\">\n            http://MyServer.com/breakend.gif\n          </vmap:Tracking>\n          <vmap:Tracking event=\"error\">\n            http://MyServer.com/error.gif\n          </vmap:Tracking>\n        </vmap:TrackingEvents>\n      </vmap:AdBreak>\n    </vmap:VMAP>\n\n有关 <**TrackingEvents**> 元素及其子元素的详细信息，请参阅 http://iab.org/VMAP.pdf\n\n###使用媒体摘要排序模板 (MAST) 文件\n\nMAST 文件允许指定定义何时显示广告的触发器。以下是一个示例 MAST 文件，它包含前置式广告、中置式广告和后置式广告的触发器。\n\n    <MAST xsi:schemaLocation=\"http://openvideoplayer.sf.net/mast http://openvideoplayer.sf.net/mast/mast.xsd\" xmlns=\"http://openvideoplayer.sf.net/mast\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n      <triggers>\n        <trigger id=\"preroll\" description=\"preroll every item\"  >\n          <startConditions>\n            <condition type=\"event\" name=\"OnItemStart\" />\n          </startConditions>\n          <sources>\n            <source uri=\"http://smf.blob.core.chinacloudapi.cn/samples/win8/ads/vast_linear.xml\" format=\"vast\">\n              <sources />\n            </source>\n          </sources>\n        </trigger>\n    \n        <trigger id=\"midroll\" description=\"midroll at 15 sec.\"  >\n          <startConditions>\n            <condition type=\"property\" name=\"Position\" value=\"00:00:15.0\" operator=\"GEQ\" />\n          </startConditions>\n          <endConditions>\n            <condition type=\"event\" name=\"OnItemEnd\"/>\n            <!--This 'resets' the trigger for the next clip-->\n          </endConditions>\n          <sources>\n            <source uri=\"http://smf.blob.core.chinacloudapi.cn/samples/win8/ads/vast_linear.xml\" format=\"vast\">\n              <sources />\n            </source>\n          </sources>\n        </trigger>\n    \n        <trigger id=\"postroll\" description=\"postroll\"  >\n          <startConditions>\n            <condition type=\"event\" name=\"OnItemEnd\"/>\n          </startConditions>\n          <sources>\n            <source uri=\"http://smf.blob.core.chinacloudapi.cn/samples/win8/ads/vast_linear.xml\" format=\"vast\">\n              <sources />\n            </source>\n          </sources>\n        </trigger>\n      </triggers>\n    </MAST>\n\n \n\nMAST 文件以 **<MAST>** 元素开头，该元素包含一个 **<triggers>** 元素。<triggers> 元素包含一个或多个 **<trigger>** 定义应何时播放广告的元素。\n\n**<trigger>** 元素包含一个 **<startConditions>** 元素，后者指定应开始播放广告的时间。**<startConditions>** 元素包含一个或多个 <condition> 元素。当每个 <condition> 评估结果为 true 时，将启动或撤销一个触发器，具体取决于 <condition> 是否分别包含在 **< startConditions**> 或 **<endConditions>** 元素中。有多个 <condition> 元素时，将它们视为隐式 OR，任何评估结果为 true 的条件均将导致触发器启动。<condition> 元素可以嵌套。预设了子 <condition> 元素时，将它们视为隐式 AND；若要启动触发器，则所有条件的评估结果必须都为 true。<condition> 元素包含定义条件的以下属性：\n\n1. **type** – 指定的条件、事件或属性的类型\n1. **name** – 要在评估过程中使用的属性或事件的名称\n1. **value** – 将针对其进行评估的属性的值\n1. **operator** – 要在评估期间使用的操作符：EQ（等于）、NEQ（不等于）、GTR（大于）、GEQ（大于或等于）、LT（小于）、LEQ（小于或等于）、MOD（取模）\n\n**<endConditions>** 也包含 <condition> 元素。当某个条件的评估结果为 true 时，重置触发器。<trigger> 元素也包含 <sources> 元素，后者包含一个或多个 <source> 元素。<source> 元素定义广告响应的 URI 和广告响应的类型。在此示例中为 VAST 响应给定了一个 URI。\n\n\n    <trigger id=\"postroll\" description=\"postroll\"  >\n      <startConditions>\n        <condition/>\n      </startConditions>\n      <sources>\n        <source uri=\"http://smf.blob.core.chinacloudapi.cn/samples/win8/ads/vast_linear.xml\" format=\"vast\">\n          <sources />\n        </source>\n      </sources>\n    </trigger>\n \n\n###使用视频播放器广告接口定义 (VPAID)\n\nVPAID 是用于使可执行广告单元能够与视频播放器进行通信的 API。这可实现高度交互的广告体验。用户可以与广告交互；广告可以对查看者采取的操作做出响应。例如，广告可能会显示允许用户查看详细信息或更长时间版广告的按钮。视频播放器必须支持 VPAID API 且可执行广告必须实现该 API。当播放机从广告服务器请求广告时，服务器可能使用包含 VPAID 广告的 VAST 响应进行响应。\n\n在必须于运行时环境（例如 Adobe Flash™ 或可以在 Web 浏览器中执行的 JavaScript）中执行的代码中创建可执行广告。当广告服务器返回包含 VPAID 广告的 VAST 响应时，<MediaFile> 元素中 apiFramework 属性的值必须为“VPAID”。此属性指定所含广告为 VPAID 可执行广告。类型属性必须设置为可执行文件（如“application/x-shockwave-flash”或“application/x-javascript”）的 MIME 类型。以下 XML 代码片段演示包含 VPAID 可执行广告的 VAST 响应中的 <MediaFile> 元素。\n\n    \n    <MediaFiles>\n       <MediaFile id=\"1\" delivery=\"progressive\" type=”application/x-shockwaveflash”\n                  width=”640” height=”480” apiFramework=”VPAID”>\n           <!-- CDATA wrapped URI to executable ad -->\n       </MediaFile>\n    </MediaFiles>\n \n\n可以使用 VAST 响应中 <Linear> 或 <NonLinear> 元素内的 <AdParameters> 元素来初始化可执行广告。有关 <AdParameters> 元素的详细信息，请参阅 [VAST 3.0](http://www.iab.net/media/file/VASTv3.0.pdf)。有关 VPAID API 的详细信息，请参阅 [VPAID 2.0](http://www.iab.net/media/file/VPAID_2.0_Final_04-10-2012.pdf)。\n\n##实现带有支持广告的 Windows 或 Windows Phone 8 播放器\n\nMicrosoft Media Platform：适用于 Windows 8 和 Windows Phone 8 的播放器框架包含示例应用程序集合，这些示例应用程序向你展示如何使用该框架实现视频播放器应用程序。可以从[适用于 Windows 8 和 Windows Phone 8 的播放器框架](https://playerframework.codeplex.com)下载播放器框架和示例。\n\n打开 Microsoft.PlayerFramework.Xaml.Samples 解决方案时，将看到项目中的多个文件夹。Advertising 文件夹包含与创建具有广告支持的视频播放器相关的示例代码。Advertising 文件夹中有多个 XAML/cs 文件，每一个均显示如何以不同的方式插入广告。以下列表对每个文件进行描述：\n\n- AdPodPage.xaml 演示如何显示广告荚。\n- AdSchedulingPage.xaml 演示如何安排广告。\n- FreeWheelPage.xaml 演示如何使用 FreeWheel 插件来安排广告。\n- MastPage.xaml 演示如何使用 MAST 文件来安排广告。\n- ProgrammaticAdPage.xaml 演示如何以编程方式将广告安排到视频中。\n- ScheduleClipPage.xaml 演示如何在无 VAST 文件的情况下安排广告。\n- VastLinearCompanionPage.xaml 演示如何插入线性广告和伴随广告。\n- VastNonLinearPage.xaml 演示如何插入非线性广告。\n- VmapPage.xaml 演示如何使用 VMAP 文件来指定广告。\n\n每一个示例均使用由播放器框架定义的 MediaPlayer 类。大多数示例都使用为不同广告响应格式添加支持的插件。ProgrammaticAdPage 示例以编程方式与 MediaPlayer 实例交互。\n\n###AdPodPage 示例\n\n此示例使用 AdSchedulerPlugin 来定义何时显示广告。在此示例中，安排于 5 秒后播放中置式广告。广告荚（按顺序播放的一组广告）是在从广告服务器返回的 VAST 文件中指定的。在 <RemoteAdSource> 元素中指定 VAST 文件的 URI。\n\n    <mmppf:MediaPlayer x:Name=\"player\" Source=\"http://smf.blob.core.chinacloudapi.cn/samples/videos/bigbuck.mp4\">\n    \n        <mmppf:MediaPlayer.Plugins>\n            <ads:AdSchedulerPlugin>\n                <ads:AdSchedulerPlugin.Advertisements>\n    \n                    <ads:MidrollAdvertisement Time=\"00:00:05\">\n                        <ads:MidrollAdvertisement.Source>\n                            <ads:RemoteAdSource Uri=\"http://smf.blob.core.chinacloudapi.cn/samples/win8/ads/vast_adpod.xml\" Type=\"vast\"/>\n                        </ads:MidrollAdvertisement.Source>\n                    </ads:MidrollAdvertisement>\n    \n                </ads:AdSchedulerPlugin.Advertisements>\n            </ads:AdSchedulerPlugin>\n            <ads:AdHandlerPlugin/>\n        </mmppf:MediaPlayer.Plugins>\n    </mmppf:MediaPlayer>\n\n有关 AdSchedulerPlugin 的详细信息，请参阅 [Windows 8 和 Windows Phone 8 上的播放器框架中的广告](http://playerframework.codeplex.com/wikipage?title=Advertising&referringTitle=Windows%208%20Player%20Documentation)\n\n###AdSchedulingPage\n\n此示例还使用 AdSchedulerPlugin。它会安排三种广告：前置式广告、中置式广告和后置式广告。在 <RemoteAdSource> 元素中指定每种广告的 VAST 文件的 URI。\n    \n    <mmppf:MediaPlayer x:Name=\"player\" Source=\"http://smf.blob.core.chinacloudapi.cn/samples/videos/bigbuck.mp4\">\n                <mmppf:MediaPlayer.Plugins>\n                    <ads:AdSchedulerPlugin>\n                        <ads:AdSchedulerPlugin.Advertisements>\n    \n                            <ads:PrerollAdvertisement>\n                                <ads:PrerollAdvertisement.Source>\n                                    <ads:RemoteAdSource Uri=\"http://smf.blob.core.chinacloudapi.cn/samples/win8/ads/vast_linear.xml\" Type=\"vast\"/>\n                                </ads:PrerollAdvertisement.Source>\n                            </ads:PrerollAdvertisement>\n    \n                            <ads:MidrollAdvertisement Time=\"00:00:15\">\n                                <ads:MidrollAdvertisement.Source>\n                                    <ads:RemoteAdSource Uri=\"http://smf.blob.core.chinacloudapi.cn/samples/win8/ads/vast_linear.xml\" Type=\"vast\"/>\n                                </ads:MidrollAdvertisement.Source>\n                            </ads:MidrollAdvertisement>\n    \n                            <ads:PostrollAdvertisement>\n                                <ads:PostrollAdvertisement.Source>\n                                    <ads:RemoteAdSource Uri=\"http://smf.blob.core.chinacloudapi.cn/samples/win8/ads/vast_linear.xml\" Type=\"vast\"/>\n                                </ads:PostrollAdvertisement.Source>\n                            </ads:PostrollAdvertisement>\n    \n                        </ads:AdSchedulerPlugin.Advertisements>\n                    </ads:AdSchedulerPlugin>\n                    <ads:AdHandlerPlugin/>\n                </mmppf:MediaPlayer.Plugins>\n            </mmppf:MediaPlayer>\n\n\n###FreeWheelPage\n\n此示例使用 FreeWheelPlugin，它指定一个指定 URL 的源属性，该 URL 指向一个 SmartXML 文件，该文件指定广告内容和广告安排信息。\n    \n    <mmppf:MediaPlayer x:Name=\"player\" Source=\"http://smf.blob.core.chinacloudapi.cn/samples/videos/bigbuck.mp4\">\n                <mmppf:MediaPlayer.Plugins>\n                    <ads:FreeWheelPlugin Source=\"http://smf.blob.core.chinacloudapi.cn/samples/win8/ads/freewheel.xml\"/>\n                    <ads:AdHandlerPlugin/>\n                </mmppf:MediaPlayer.Plugins>\n            </mmppf:MediaPlayer>\n\n###MastPage\n\n此示例使用允许使用 MAST 文件的 MastSchedulerPlugin。源属性指定 MAST 文件的位置。\n    \n    <mmppf:MediaPlayer x:Name=\"player\" Source=\"http://smf.blob.core.chinacloudapi.cn/samples/videos/bigbuck.mp4\">\n                <mmppf:MediaPlayer.Plugins>\n                    <ads:MastSchedulerPlugin Source=\"http://smf.blob.core.chinacloudapi.cn/samples/win8/ads/mast.xml\" />\n                    <ads:AdHandlerPlugin/>\n                </mmppf:MediaPlayer.Plugins>\n            </mmppf:MediaPlayer>\n\n###ProgrammaticAdPage\n\n此示例以编程方式与 MediaPlayer 交互。ProgrammaticAdPage.xaml 文件实例化 MediaPlayer：\n\n    <mmppf:MediaPlayer x:Name=\"player\" Source=\"http://smf.blob.core.chinacloudapi.cn/samples/videos/bigbuck.mp4\"/>\n\nProgrammaticAdPage.xaml.cs 文件创建 AdHandlerPlugin，添加 TimelineMarker 以指定何时显示广告，然后为 MarkerReached 事件添加处理程序，该程序加载指定指向 VAST 文件的 URI 的 RemoteAdSource，然后播放广告。\n    \n    public sealed partial class ProgrammaticAdPage : Microsoft.PlayerFramework.Samples.Common.LayoutAwarePage\n        {\n            AdHandlerPlugin adHandler;\n    \n            public ProgrammaticAdPage()\n            {\n                this.InitializeComponent();\n                adHandler = new AdHandlerPlugin();\n                player.Plugins.Add(new AdHandlerPlugin());\n                player.Markers.Add(new TimelineMarker() { Time = TimeSpan.FromSeconds(5), Type = \"myAd\" });\n                player.MarkerReached += pf_MarkerReached;\n            }\n    \n            async void pf_MarkerReached(object sender, TimelineMarkerRoutedEventArgs e)\n            {\n                if (e.Marker.Type == \"myAd\")\n                {\n                    var adSource = new RemoteAdSource() { Type = VastAdPayloadHandler.AdType, Uri = new Uri(\"http://smf.blob.core.chinacloudapi.cn/samples/win8/ads/vast_linear.xml\") };\n                    //var adSource = new AdSource() { Type = DocumentAdPayloadHandler.AdType, Payload = SampleAdDocument };\n                    var progress = new Progress<AdStatus>();\n                    try\n                    {\n                        await player.PlayAd(adSource, progress, CancellationToken.None);\n                    }\n                    catch { /* ignore */ }\n                }\n            }\n\n###ScheduleClipPage\n\n此示例使用 AdSchedulerPlugin 通过指定包含广告的 .wmv 文件安排中置式广告。\n    \n    <mmppf:MediaPlayer x:Name=\"player\" Source=\"http://smf.chinacloudapp.cn/html5/media/bigbuck.mp4\">\n                <mmppf:MediaPlayer.Plugins>\n                    <ads:AdSchedulerPlugin>\n                        <ads:AdSchedulerPlugin.Advertisements>\n    \n                            <ads:MidrollAdvertisement Time=\"00:00:05\">\n                                <ads:MidrollAdvertisement.Source>\n                                    <ads:AdSource Type=\"clip\">\n                                        <ads:AdSource.Payload>\n                                            <ads:ClipAdPayload MediaSource=\"http://smf.blob.core.chinacloudapi.cn/samples/ads/media/XBOX_HD_DEMO_700_2_000_700_4x3.wmv\" MimeType=\"video/x-ms-wmv\" />\n                                        </ads:AdSource.Payload>\n                                    </ads:AdSource>\n                                </ads:MidrollAdvertisement.Source>\n                            </ads:MidrollAdvertisement>\n    \n                        </ads:AdSchedulerPlugin.Advertisements>\n                    </ads:AdSchedulerPlugin>\n                    <ads:AdHandlerPlugin/>\n                </mmppf:MediaPlayer.Plugins>\n            </mmppf:MediaPlayer>\n\n###VastLinearCompanionPage\n\n此示例阐释如何使用 AdSchedulerPlugin 来安排中置式线性广告和伴随广告。<RemoteAdSource> 元素指定 VAST 文件的位置。\n    \n    <mmppf:MediaPlayer Grid.Row=\"1\"  x:Name=\"player\" Source=\"http://smf.blob.core.chinacloudapi.cn/samples/videos/bigbuck.mp4\">\n                <mmppf:MediaPlayer.Plugins>\n                    <ads:AdSchedulerPlugin>\n                        <ads:AdSchedulerPlugin.Advertisements>\n    \n                            <ads:MidrollAdvertisement Time=\"00:00:05\">\n                                <ads:MidrollAdvertisement.Source>\n                                    <ads:RemoteAdSource Uri=\"http://smf.blob.core.chinacloudapi.cn/samples/win8/ads/vast_linear_companions.xml\" Type=\"vast\"/>\n                                </ads:MidrollAdvertisement.Source>\n                            </ads:MidrollAdvertisement>\n    \n                        </ads:AdSchedulerPlugin.Advertisements>\n                    </ads:AdSchedulerPlugin>\n                    <ads:AdHandlerPlugin/>\n                </mmppf:MediaPlayer.Plugins>\n            </mmppf:MediaPlayer>\n\n###VastLinearNonLinearPage\n\n此示例使用 AdSchedulerPlugin 来安排线性广告和非线性广告。使用 <RemoteAdSource> 元素来指定 VAST 文件位置。\n    \n    <mmppf:MediaPlayer x:Name=\"player\" Source=\"http://smf.blob.core.chinacloudapi.cn/samples/videos/bigbuck.mp4\">\n                <mmppf:MediaPlayer.Plugins>\n                    <ads:AdSchedulerPlugin>\n                        <ads:AdSchedulerPlugin.Advertisements>\n    \n                            <ads:MidrollAdvertisement Time=\"00:00:05\">\n                                <ads:MidrollAdvertisement.Source>\n                                    <ads:RemoteAdSource Uri=\"http://smf.blob.core.chinacloudapi.cn/samples/win8/ads/vast_linear_nonlinear.xml\" Type=\"vast\"/>\n                                </ads:MidrollAdvertisement.Source>\n                            </ads:MidrollAdvertisement>\n                            \n                        </ads:AdSchedulerPlugin.Advertisements>\n                    </ads:AdSchedulerPlugin>\n                    <ads:AdHandlerPlugin/>\n                </mmppf:MediaPlayer.Plugins>\n            </mmppf:MediaPlayer>\n\n###VMAPPage\n\n此示例使用 VmapSchedulerPlugin，以便使用 VMAP 文件安排广告。在 <VmapSchedulerPlugin> 元素的源属性中指定指向 VMAP 文件的 URI。\n    \n    <mmppf:MediaPlayer x:Name=\"player\" Source=\"http://smf.blob.core.chinacloudapi.cn/samples/videos/bigbuck.mp4\">\n                <mmppf:MediaPlayer.Plugins>\n                    <ads:VmapSchedulerPlugin Source=\"http://smf.blob.core.chinacloudapi.cn/samples/win8/ads/vmap.xml\"/>\n                    <ads:AdHandlerPlugin/>\n                </mmppf:MediaPlayer.Plugins>\n            </mmppf:MediaPlayer>\n\n##实现带有广告支持的 iOS 视频播放器\n\n\nMicrosoft Media Platform：适用于 iOS 的播放器框架包含示例应用程序集合，这些示例应用程序向你展示如何使用该框架实现视频播放器应用程序。可以从 [Azure 媒体播放器框架](https://github.com/Azure/azure-media-player-framework)下载播放器框架和示例。GitHub 页面具有指向 Wiki（含有关播放器框架的其他信息）的链接和播放器示例简介：[Azure 媒体播放器 Wiki](https://github.com/Azure/azure-media-player-framework/wiki/How-to-use-Azure-media-player-framework)。\n\n\n###使用 VMAP 安排广告\n\n以下示例演示如何使用 VMAP 文件安排广告。\n\n    // How to schedule an Ad using VMAP.\n    //First download the VMAP manifest\n    \n    if (![framework.adResolver downloadManifest:&manifest withURL:[NSURL URLWithString:@\"http://portalvhdsq3m25bf47d15c.blob.core.chinacloudapi.cn/vast/PlayerTestVMAP.xml\"]])\n            {\n                [self logFrameworkError];\n            }\n            else\n            {\n                // Schedule a list of ads using the downloaded VMAP manifest\n                if (![framework scheduleVMAPWithManifest:manifest])\n                {\n                    [self logFrameworkError];\n                }          \n            }\n\n###使用 VAST 安排广告\n\n以下示例演示如何安排后期绑定 VAST 广告。\n    \n    //Example:3 How to schedule a late binding VAST ad.\n    // set the start time for the ad\n    adLinearTime.startTime = 13;\n    adLinearTime.duration = 0;\n    // Specify the URI of the VAST file\n    NSString *vastAd1=@\"http://portalvhdsq3m25bf47d15c.blob.core.chinacloudapi.cn/vast/PlayerTestVAST.xml\";\n    // Create an AdInfo object\n     AdInfo *vastAdInfo1 = [[[AdInfo alloc] init] autorelease];\n    // set URL to VAST file\n    vastAdInfo1.clipURL = [NSURL URLWithString:vastAd1];\n    // set running time of ad\n    vastAdInfo1.mediaTime = [[[MediaTime alloc] init] autorelease];\n    vastAdInfo1.mediaTime.clipBeginMediaTime = 0;\n    vastAdInfo1.mediaTime.clipEndMediaTime = 10;\n    vastAdInfo1.policy = @\"policy for late binding VAST\";\n    // specify ad type\n    vastAdInfo1.type = AdType_Midroll;\n    vastAdInfo1.appendTo=-1;\n    adIndex = 0;\n    // schedule ad\n    if (![framework scheduleClip:vastAdInfo1 atTime:adLinearTime forType:PlaylistEntryType_VAST andGetClipId:&adIndex])\n    {\n        [self logFrameworkError];\n    }\n         \n   以下示例演示如何安排早期绑定 VAST 广告。\n    //Example:4 Schedule an early binding VAST ad\n    //Download the VAST file\n    if (![framework.adResolver downloadManifest:&manifest withURL:[NSURL URLWithString:@\"http://portalvhdsq3m25bf47d15c.blob.core.chinacloudapi.cn/vast/PlayerTestVAST.xml\"]])\n    {\n        [self logFrameworkError];\n    }\n    else\n        { adLinearTime.startTime = 7;\n        adLinearTime.duration = 0;\n        \n        // Create AdInfo instance\n        AdInfo *vastAdInfo2 = [[[AdInfo alloc] init] autorelease];\n        vastAdInfo2.mediaTime = [[[MediaTime alloc] init] autorelease];\n        vastAdInfo2.policy = @\"policy for early binding VAST\";\n        // specify ad type\n        vastAdInfo2.type = AdType_Midroll;\n        vastAdInfo2.appendTo=-1;\n        // schedule ad\n        if (![framework scheduleVASTClip:vastAdInfo2 withManifest:manifest atTime:adLinearTime andGetClipId:&adIndex])\n        {\n            [self logFrameworkError];\n        }\n    }\n\n以下示例演示如何使用粗剪编辑 (RCE) 插入广告\n\n    //Example:1 How to use RCE.\n    // specify manifest for ad content\n    NSString *secondContent=@\"http://wamsblureg001orig-hs.chinacloudapp.cn/6651424c-a9d1-419b-895c-6993f0f48a26/The%20making%20of%20Microsoft%20Surface-m3u8-aapl.ism/Manifest(format=m3u8-aapl)\";\n    \n    // specify ad length\n    mediaTime.currentPlaybackPosition = 0;\n    mediaTime.clipBeginMediaTime = 0;\n    mediaTime.clipEndMediaTime = 80;\n    // append ad content\n    if (![framework appendContentClip:[NSURL URLWithString:secondContent] withMediaTime:mediaTime andGetClipId:&clipId])\n    {\n        [self logFrameworkError];\n    }\n\n以下示例演示如何安排广告荚。\n\n    //Example:5 Schedule an ad Pod.\n    // Set start time for ad\n    adLinearTime.startTime = 23;\n    adLinearTime.duration = 0;\n    \n    // Specify URL to content\n    NSString *adpodSt1=@\"https://portalvhdsq3m25bf47d15c.blob.core.chinacloudapi.cn/asset-e47b43fd-05dc-4587-ac87-5916439ad07f/Windows%208_%20Cliffjumpers.mp4?st=2012-11-28T16%3A31%3A57Z&se=2014-11-28T16%3A31%3A57Z&sr=c&si=2a6dbb1e-f906-4187-a3d3-7e517192cbd0&sig=qrXYZBekqlbbYKqwovxzaVZNLv9cgyINgMazSCbdrfU%3D\";\n    // Create an AdInfo instance\n    AdInfo *adpodInfo1 = [[[AdInfo alloc] init] autorelease];\n    // set URI to ad content\n    adpodInfo1.clipURL = [NSURL URLWithString:adpodSt1];\n    // Set ad running time\n    adpodInfo1.mediaTime = [[[MediaTime alloc] init] autorelease];\n    adpodInfo1.mediaTime.clipBeginMediaTime = 0;\n    adpodInfo1.mediaTime.clipEndMediaTime = 17;\n    adpodInfo1.policy = @\"policy for ad pod 1\";\n    // Set ad type\n    adpodInfo1.type = AdType_Midroll;\n    adpodInfo1.appendTo=-1;\n    adIndex = 0;\n    // Schedule ad\n    if (![framework scheduleClip:adpodInfo1 atTime:adLinearTime forType:PlaylistEntryType_Media andGetClipId:&adIndex])\n    {\n        [self logFrameworkError];\n    }\n\n以下示例演示如何安排非粘性中置式广告。不管查看器执行了什么查找，非粘性广告均仅播放一次。\n    \n    //Example:6 Schedule a single non sticky mid roll Ad\n    // specify URL to content\n    NSString *oneTimeAd=@\"http://wamsblureg001orig-hs.chinacloudapp.cn/5389c0c5-340f-48d7-90bc-0aab664e5f02/Windows%208_%20You%20and%20Me%20Together-m3u8-aapl.ism/Manifest(format=m3u8-aapl)\";\n    \n    // create an AdInfo instance\n    AdInfo *oneTimeInfo = [[[AdInfo alloc] init] autorelease];\n    // set URL of ad\n    oneTimeInfo.clipURL = [NSURL URLWithString:oneTimeAd];\n    oneTimeInfo.mediaTime = [[[MediaTime alloc] init] autorelease];\n    oneTimeInfo.mediaTime.clipBeginMediaTime = 0;\n    oneTimeInfo.mediaTime.clipEndMediaTime = -1;\n    oneTimeInfo.policy = @\"policy for one-time ad\";\n    // set ad start time\n    adLinearTime.startTime = 43;\n    adLinearTime.duration = 0;\n    // set ad type\n    oneTimeInfo.type = AdType_Midroll;\n    // non sticky ad\n    oneTimeInfo.deleteAfterPlayed = YES;\n    // schedule ad\n    if (![framework scheduleClip:oneTimeInfo atTime:adLinearTime forType:PlaylistEntryType_Media andGetClipId:&adIndex])\n    {\n        [self logFrameworkError];\n    }\n\n以下示例演示如何安排粘性中置式广告。每当到达时间线上指定时间点时就会显示粘性广告。\n\n    //Example:7 Schedule a single sticky mid roll Ad\n    NSString *stickyAd=@\"http://wamsblureg001orig-hs.chinacloudapp.cn/2e4e7d1f-b72a-4994-a406-810c796fc4fc/The%20Surface%20Movement-m3u8-aapl.ism/Manifest(format=m3u8-aapl)\";\n    // create AdInfo instance\n    AdInfo *stickyAdInfo = [[[AdInfo alloc] init] autorelease];\n    // set URI to ad\n    stickyAdInfo.clipURL = [NSURL URLWithString:stickyAd];\n    stickyAdInfo.mediaTime = [[[MediaTime alloc] init] autorelease];\n    stickyAdInfo.mediaTime.clipBeginMediaTime = 0;\n    stickyAdInfo.mediaTime.clipEndMediaTime = 15;\n    stickyAdInfo.policy = @\"policy for sticky mid-roll ad\";\n    // set ad start time\n    adLinearTime.startTime = 64;\n    adLinearTime.duration = 0;\n    // set ad type\n    stickyAdInfo.type = AdType_Midroll;\n    stickyAdInfo.deleteAfterPlayed = NO;\n    // schedule ad\n    if (![framework scheduleClip:stickyAdInfo atTime:adLinearTime forType:PlaylistEntryType_Media andGetClipId:&adIndex])\n    {\n        [self logFrameworkError];\n    }\n\n\n以下示例演示如何安排后置式广告。\n\n    //Example:8 Schedule Post Roll Ad\n    NSString *postAdURLString=@\"http://wamsblureg001orig-hs.chinacloudapp.cn/aa152d7f-3c54-487b-ba07-a58e0e33280b/wp-m3u8-aapl.ism/Manifest(format=m3u8-aapl)\";\n    // create AdInfo instance\n    AdInfo *postAdInfo = [[[AdInfo alloc] init] autorelease];\n    postAdInfo.clipURL = [NSURL URLWithString:postAdURLString];\n    postAdInfo.mediaTime = [[[MediaTime alloc] init] autorelease];\n    postAdInfo.mediaTime.clipBeginMediaTime = 0;\n    // set ad length\n    postAdInfo.mediaTime.clipEndMediaTime = 45;\n    postAdInfo.policy = @\"policy for post-roll ad\";\n    // set ad type\n    postAdInfo.type = AdType_Postroll;\n    adLinearTime.duration = 0;\n    if (![framework scheduleClip:postAdInfo atTime:adLinearTime forType:PlaylistEntryType_Media andGetClipId:&adIndex])\n    {\n        [self logFrameworkError];\n    }\n\n以下示例演示如何安排前置式广告。\n    \n    //Example:9 Schedule Pre Roll Ad\n    NSString *adURLString = @\"http://wamsblureg001orig-hs.chinacloudapp.cn/2e4e7d1f-b72a-4994-a406-810c796fc4fc/The%20Surface%20Movement-m3u8-aapl.ism/Manifest(format=m3u8-aapl)\";\n    AdInfo *adInfo = [[[AdInfo alloc] init] autorelease];\n    adInfo.clipURL = [NSURL URLWithString:adURLString];\n    adInfo.mediaTime = [[[MediaTime alloc] init] autorelease];\n    adInfo.mediaTime.currentPlaybackPosition = 0;\n    adInfo.mediaTime.clipBeginMediaTime = 40; //You could play a portion of an Ad. Yeh!\n    adInfo.mediaTime.clipEndMediaTime = 59;\n    adInfo.policy = @\"policy for pre-roll ad\";\n    adInfo.appendTo = -1;\n    adInfo.type = AdType_Preroll;\n    adLinearTime.duration = 0;\n    // schedule ad\n    if (![framework scheduleClip:adInfo atTime:adLinearTime forType:PlaylistEntryType_Media andGetClipId:&adIndex])\n    {\n        [self logFrameworkError];\n    }\n\n以下示例演示如何安排中置叠加式广告。\n    \n    // Example10: Schedule a Mid Roll overlay Ad\n    NSString *adURLString = @\"https://portalvhdsq3m25bf47d15c.blob.core.chinacloudapi.cn/asset-e47b43fd-05dc-4587-ac87-5916439ad07f/Windows%208_%20Cliffjumpers.mp4?st=2012-11-28T16%3A31%3A57Z&se=2014-11-28T16%3A31%3A57Z&sr=c&si=2a6dbb1e-f906-4187-a3d3-7e517192cbd0&sig=qrXYZBekqlbbYKqwovxzaVZNLv9cgyINgMazSCbdrfU%3D\";\n    //Create AdInfo instance\n    AdInfo *adInfo = [[[AdInfo alloc] init] autorelease];\n    adInfo.clipURL = [NSURL URLWithString:adURLString];\n    adInfo.mediaTime = [[[MediaTime alloc] init] autorelease];\n    adInfo.mediaTime.currentPlaybackPosition = 0;\n    adInfo.mediaTime.clipBeginMediaTime = 0;\n    // specify ad length\n    adInfo.mediaTime.clipEndMediaTime = 20;\n    adInfo.policy = @\"policy for mid-roll overlay ad\";\n    adInfo.appendTo = -1;\n    // specify ad type\n    adInfo.type = AdType_Midroll;\n    // specify ad start time & duration\n    adLinearTime.startTime = 300;\n    adLinearTime.duration = 20;\n    // schedule ad            if (![framework scheduleClip:adInfo atTime:adLinearTime forType:PlaylistEntryType_Media andGetClipId:&adIndex])\n    {\n        [self logFrameworkError];\n    }\n\n\n \n##另请参阅\n\n[开发视频播放器应用程序](/documentation/articles/media-services-develop-video-players)\n\n<!---HONumber=Mooncake_0307_2016-->"
}