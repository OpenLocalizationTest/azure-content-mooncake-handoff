{
  "nodes": [
    {
      "content": "Cordova 移动服务项目（Visual Studio 连接服务）入门 | Microsoft Azure",
      "pos": [
        27,
        81
      ]
    },
    {
      "content": "描述使用 Visual Studio 连接服务将 Cordova 项目连接到 Azure 移动服务后可以执行的前几个步骤。",
      "pos": [
        100,
        161
      ]
    },
    {
      "content": "移动服务入门（Cordova 项目）",
      "pos": [
        378,
        396
      ]
    },
    {
      "content": "前几个步骤",
      "pos": [
        500,
        505
      ]
    },
    {
      "content": "为了跟踪这些代码，您需要首先执行的步骤取决于您连接的移动服务类型。",
      "pos": [
        506,
        539
      ]
    },
    {
      "pos": [
        543,
        675
      ],
      "content": "对于 JavaScript 后端移动服务，需创建一个名为“TodoItem”表。创建表的方法：在服务器资源管理器中的 Azure node 下定位移动服务，右键单击该移动服务的 Node 打开上下文菜单，然后选择<bpt id=\"p1\">**</bpt>创建表<ept id=\"p1\">**</ept>。输入“TodoItem”作为表名称。"
    },
    {
      "pos": [
        679,
        825
      ],
      "content": "如果你使用的是 .NET 后端移动服务，那么 Visual Studio 为你创建的默认项目模板中已经有一个 TodoItem 表，但你需要将其发布到 Azure。发布方法：在解决方案资源管理器中打开移动服务项目的上下文菜单，然后选择<bpt id=\"p1\">**</bpt>发布 Web<ept id=\"p1\">**</ept>。接受默认设置，然后选择<bpt id=\"p2\">**</bpt>发布<ept id=\"p2\">**</ept>。"
    },
    {
      "content": "创建对表的引用",
      "pos": [
        831,
        838
      ]
    },
    {
      "content": "以下代码将获取对表（包含 TodoItem 数据）的引用，您可以将该引用用于后续操作以便读取和更新数据表。在您创建移动服务时，将自动创建 TodoItem 表。",
      "pos": [
        840,
        920
      ]
    },
    {
      "content": "var todoTable = mobileServiceClient.getTable('TodoItem');",
      "pos": [
        922,
        979
      ]
    },
    {
      "pos": [
        981,
        1105
      ],
      "content": "要使这些示例工作，表的权限必须设置为<bpt id=\"p1\">**</bpt>具有应用程序密钥的任何人<ept id=\"p1\">**</ept>。稍后，您可以设置身份验证。请参阅<bpt id=\"p2\">[</bpt>身份验证入门<ept id=\"p2\">](/documentation/articles/mobile-services-html-get-started-users)</ept>。"
    },
    {
      "content": "向表中添加项",
      "pos": [
        1109,
        1115
      ]
    },
    {
      "pos": [
        1117,
        1261
      ],
      "content": "将新的项目插入数据表。ID（类型字符串的 GUID）将自动创建为新行的主密钥。对返回的 <bpt id=\"p1\">[</bpt>Promise<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/dn802826.aspx)</ept> 对象调用 <bpt id=\"p2\">**</bpt>done<ept id=\"p2\">**</ept> 方法以获取插入对象的副本并处理任何错误。"
    },
    {
      "content": "读取或查询表",
      "pos": [
        1546,
        1552
      ]
    },
    {
      "content": "以下代码将查询表以获取所有项目，按文本字段排序。您可以添加代码以处理 success 处理程序中的查询结果。在此情况下，将更新这些项目的本地数组。",
      "pos": [
        1554,
        1627
      ]
    },
    {
      "content": "您可以使用 where 方法来修改查询。下面是筛选出已完成项目的示例。",
      "pos": [
        1751,
        1786
      ]
    },
    {
      "pos": [
        1971,
        2058
      ],
      "content": "有关您可以使用的查询的更多示例，请参阅<bpt id=\"p1\">[</bpt>查询<ept id=\"p1\">](http://msdn.microsoft.com/zh-cn/library/azure/jj613353.aspx)</ept>对象。"
    },
    {
      "content": "更新表项",
      "pos": [
        2062,
        2066
      ]
    },
    {
      "pos": [
        2068,
        2207
      ],
      "content": "更新数据表中的行。在此代码中，当移动服务响应时，将从列表中删除项目。对返回的 <bpt id=\"p1\">[</bpt>Promise<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/dn802826.aspx)</ept> 对象调用 <bpt id=\"p2\">**</bpt>done<ept id=\"p2\">**</ept> 方法以获取插入对象的副本并处理任何错误。"
    },
    {
      "content": "删除表项",
      "pos": [
        2377,
        2381
      ]
    },
    {
      "pos": [
        2383,
        2510
      ],
      "content": "使用 <bpt id=\"p1\">**</bpt>del<ept id=\"p1\">**</ept> 方法删除数据表中的行。对返回的 <bpt id=\"p2\">[</bpt>Promise<ept id=\"p2\">](https://msdn.microsoft.com/zh-cn/library/dn802826.aspx)</ept> 对象调用 <bpt id=\"p3\">**</bpt>done<ept id=\"p3\">**</ept> 方法以获取插入对象的副本并处理任何错误。"
    },
    {
      "content": "详细了解移动服务",
      "pos": [
        2623,
        2631
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"Cordova 移动服务项目（Visual Studio 连接服务）入门 | Microsoft Azure\"\n    description=\"描述使用 Visual Studio 连接服务将 Cordova 项目连接到 Azure 移动服务后可以执行的前几个步骤。\"\n    services=\"mobile-services\"\n    documentationCenter=\"\"\n    authors=\"mlhoop\"\n    manager=\"douge\"\n    editor=\"\"/>\n\n<tags \n    ms.service=\"mobile-services\" \n    ms.date=\"01/05/2016\"\n    wacn.date=\"03/21/2016\"/>\n\n#  移动服务入门（Cordova 项目）\n\n[AZURE.INCLUDE [mobile-service-note-mobile-apps](../includes/mobile-services-note-mobile-apps.md)]\n\n##前几个步骤\n为了跟踪这些代码，您需要首先执行的步骤取决于您连接的移动服务类型。\n\n- 对于 JavaScript 后端移动服务，需创建一个名为“TodoItem”表。创建表的方法：在服务器资源管理器中的 Azure node 下定位移动服务，右键单击该移动服务的 Node 打开上下文菜单，然后选择**创建表**。输入“TodoItem”作为表名称。\n\n- 如果你使用的是 .NET 后端移动服务，那么 Visual Studio 为你创建的默认项目模板中已经有一个 TodoItem 表，但你需要将其发布到 Azure。发布方法：在解决方案资源管理器中打开移动服务项目的上下文菜单，然后选择**发布 Web**。接受默认设置，然后选择**发布**。\n\n\n\n##创建对表的引用\n\n以下代码将获取对表（包含 TodoItem 数据）的引用，您可以将该引用用于后续操作以便读取和更新数据表。在您创建移动服务时，将自动创建 TodoItem 表。\n\nvar todoTable = mobileServiceClient.getTable('TodoItem');\n\n要使这些示例工作，表的权限必须设置为**具有应用程序密钥的任何人**。稍后，您可以设置身份验证。请参阅[身份验证入门](/documentation/articles/mobile-services-html-get-started-users)。\n\n##向表中添加项\n\n将新的项目插入数据表。ID（类型字符串的 GUID）将自动创建为新行的主密钥。对返回的 [Promise](https://msdn.microsoft.com/zh-cn/library/dn802826.aspx) 对象调用 **done** 方法以获取插入对象的副本并处理任何错误。\n\n    function TodoItem(text) {\n        this.text = text;\n        this.complete = false;\n    }\n    \n    var items = new Array();\n    var insertTodoItem = function (todoItem) {\n        todoTable.insert(todoItem).done(function (item) {\n            items.push(item)\n        });\n    };\n\n##读取或查询表\n\n以下代码将查询表以获取所有项目，按文本字段排序。您可以添加代码以处理 success 处理程序中的查询结果。在此情况下，将更新这些项目的本地数组。\n\n    todoTable.orderBy('text')\n        .read().done(function (results) {\n            items = results.slice();\n        });\n\n您可以使用 where 方法来修改查询。下面是筛选出已完成项目的示例。\n\n    todoTable.where(function () {\n            return (this.complete === false);\n        })\n        .read().done(function (results) {\n            items = results.slice();\n        });\n\n有关您可以使用的查询的更多示例，请参阅[查询](http://msdn.microsoft.com/zh-cn/library/azure/jj613353.aspx)对象。\n\n##更新表项\n\n更新数据表中的行。在此代码中，当移动服务响应时，将从列表中删除项目。对返回的 [Promise](https://msdn.microsoft.com/zh-cn/library/dn802826.aspx) 对象调用 **done** 方法以获取插入对象的副本并处理任何错误。\n\n    todoTable.update(todoItem).done(function (item) {\n        // Update a local collection of items.\n        items.splice(items.indexOf(todoItem), 1, item);\n    });\n\n##删除表项\n\n使用 **del** 方法删除数据表中的行。对返回的 [Promise](https://msdn.microsoft.com/zh-cn/library/dn802826.aspx) 对象调用 **done** 方法以获取插入对象的副本并处理任何错误。\n\n    todoTable.del(todoItem).done(function (item) {\n        items.splice(items.indexOf(todoItem), 1);\n    });\n\n[详细了解移动服务](/documentation/services/mobile-services)\n\n<!---HONumber=Mooncake_0215_2016-->"
}