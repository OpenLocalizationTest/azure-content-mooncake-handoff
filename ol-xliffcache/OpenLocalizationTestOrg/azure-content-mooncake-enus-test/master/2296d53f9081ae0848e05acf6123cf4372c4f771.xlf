<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2296d53f9081ae0848e05acf6123cf4372c4f771</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>SQL 数据仓库中的事务 | Azure</source>
          <target state="new">SQL 数据仓库中的事务 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>有关在开发解决方案时实现 Azure SQL 数据仓库中的事务的技巧。</source>
          <target state="new">有关在开发解决方案时实现 Azure SQL 数据仓库中的事务的技巧。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>SQL 数据仓库中的事务</source>
          <target state="new">SQL 数据仓库中的事务</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>如你所料，SQL 数据仓库为所有事务属性提供支持。但是，为了确保 SQL 数据仓库的性能维持在一定的程度，相比于 SQL Server，其某些功能会受到限制。本文将突出两者的差异，并列出其他信息。</source>
          <target state="new">如你所料，SQL 数据仓库为所有事务属性提供支持。但是，为了确保 SQL 数据仓库的性能维持在一定的程度，相比于 SQL Server，其某些功能会受到限制。本文将突出两者的差异，并列出其他信息。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>事务隔离级别</source>
          <target state="new">事务隔离级别</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SQL 数据仓库实现 ACID 事务。但是，事务支持的隔离仅限于 <ph id="ph1">`READ UNCOMMITTED`</ph>，这无法更改。你可以实现许多编码方法，以避免脏读数据（如果你对此有所考虑的话）。大多数流行方法利用 CTAS 和表分区切换（通常称为滑动窗口模式），以防止用户查询仍正准备的数据。预先筛选数据的视图也是常用的方法。</source>
          <target state="new">SQL 数据仓库实现 ACID 事务。但是，事务支持的隔离仅限于 <ph id="ph1">`READ UNCOMMITTED`</ph>，这无法更改。你可以实现许多编码方法，以避免脏读数据（如果你对此有所考虑的话）。大多数流行方法利用 CTAS 和表分区切换（通常称为滑动窗口模式），以防止用户查询仍正准备的数据。预先筛选数据的视图也是常用的方法。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>事务状态</source>
          <target state="new">事务状态</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>SQL 数据仓库使用 XACT\_STATE() 函数（采用值 -2）来报告失败的事务。这表示事务已失败并标记为仅可回滚</source>
          <target state="new">SQL 数据仓库使用 XACT\_STATE() 函数（采用值 -2）来报告失败的事务。这表示事务已失败并标记为仅可回滚</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>XACT\_STATE 函数使用 -2 表示失败的事务，以代表 SQL Server 中不同的行为。SQL Server 使用值 -1 来代表无法提交的事务。SQL Server 可以容忍事务内的某些错误，而无需将其标记为无法提交。例如，SELECT 1/0 导致错误，但不强制事务进入无法提交状态。SQL Server 还允许读取无法提交的事务。但是，在 SQLDW 中，情况并非如此。如果 SQLDW 事务内发生错误，它就会自动进入 -2 状态：包括 SELECT 1/0 错误。因此，必须查看应用程序代码是否使用 XACT\_STATE()。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>XACT\_STATE 函数使用 -2 表示失败的事务，以代表 SQL Server 中不同的行为。SQL Server 使用值 -1 来代表无法提交的事务。SQL Server 可以容忍事务内的某些错误，而无需将其标记为无法提交。例如，SELECT 1/0 导致错误，但不强制事务进入无法提交状态。SQL Server 还允许读取无法提交的事务。但是，在 SQLDW 中，情况并非如此。如果 SQLDW 事务内发生错误，它就会自动进入 -2 状态：包括 SELECT 1/0 错误。因此，必须查看应用程序代码是否使用 XACT\_STATE()。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>在 SQL Server 中，你可能会看到如下所示的代码片段：</source>
          <target state="new">在 SQL Server 中，你可能会看到如下所示的代码片段：</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>请注意，<ph id="ph1">`SELECT`</ph> 语句出现在 <ph id="ph2">`ROLLBACK`</ph> 语句的前面。另外请注意，<ph id="ph3">`@xact`</ph> 变量的设置使用 DECLARE 而非 <ph id="ph4">`SELECT`</ph>。</source>
          <target state="new">请注意，<ph id="ph1">`SELECT`</ph> 语句出现在 <ph id="ph2">`ROLLBACK`</ph> 语句的前面。另外请注意，<ph id="ph3">`@xact`</ph> 变量的设置使用 DECLARE 而非 <ph id="ph4">`SELECT`</ph>。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>在 SQL 数据仓库中，代码需如下所示：</source>
          <target state="new">在 SQL 数据仓库中，代码需如下所示：</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>请注意，事务的回滚必须发生于在 <ph id="ph1">`CATCH`</ph> 块中读取错误信息之前。</source>
          <target state="new">请注意，事务的回滚必须发生于在 <ph id="ph1">`CATCH`</ph> 块中读取错误信息之前。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Error\_Line() 函数</source>
          <target state="new">Error\_Line() 函数</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>另外值得注意的是，SQL 数据仓库不实现或支持 ERROR\_LINE() 函数。如果你的代码中包含此函数，需要将它删除才能符合 SQL 数据仓库的要求。请在代码中使用查询标签，而不是实现等效的功能。有关此功能的详细信息，请参阅 [查询标签] 一文。</source>
          <target state="new">另外值得注意的是，SQL 数据仓库不实现或支持 ERROR\_LINE() 函数。如果你的代码中包含此函数，需要将它删除才能符合 SQL 数据仓库的要求。请在代码中使用查询标签，而不是实现等效的功能。有关此功能的详细信息，请参阅 [查询标签] 一文。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>使用 THROW 和 RAISERROR</source>
          <target state="new">使用 THROW 和 RAISERROR</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>THROW 是在 SQL 数据仓库中引发异常的新式做法，但也支持 RAISERROR。不过，有些值得注意的差异。</source>
          <target state="new">THROW 是在 SQL 数据仓库中引发异常的新式做法，但也支持 RAISERROR。不过，有些值得注意的差异。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>对于 THROW，用户定义的错误消息数目不能在 100,000 - 150,000 的范围内</source>
          <target state="new">对于 THROW，用户定义的错误消息数目不能在 100,000 - 150,000 的范围内</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>RAISERROR 错误消息固定为 50,000</source>
          <target state="new">RAISERROR 错误消息固定为 50,000</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>不支持 sys.messages</source>
          <target state="new">不支持 sys.messages</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>限制</source>
          <target state="new">限制</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>SQL 数据仓库有一些与事务相关的其他限制。</source>
          <target state="new">SQL 数据仓库有一些与事务相关的其他限制。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>这些限制如下：</source>
          <target state="new">这些限制如下：</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>无分布式事务</source>
          <target state="new">无分布式事务</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>不允许嵌套事务</source>
          <target state="new">不允许嵌套事务</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>不允许保存点</source>
          <target state="new">不允许保存点</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>有关更多开发技巧，请参阅<bpt id="p1">[</bpt>开发概述<ept id="p1">][]</ept>。</source>
          <target state="new">有关更多开发技巧，请参阅<bpt id="p1">[</bpt>开发概述<ept id="p1">][]</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>