{
  "nodes": [
    {
      "content": "指定 Node.js 版本",
      "pos": [
        27,
        40
      ]
    },
    {
      "content": "了解如何指定 Azure 网站和云服务使用的 Node.js 版本",
      "pos": [
        59,
        92
      ]
    },
    {
      "content": "在 Azure 应用程序中指定 Node.js 版本",
      "pos": [
        296,
        322
      ]
    },
    {
      "content": "托管 Node.js 应用程序时，您可能希望确保您的应用程序使用特定版本的 Node.js。有几种方法可为托管在 Azure 上的应用程序完成此操作。",
      "pos": [
        324,
        399
      ]
    },
    {
      "content": "默认版本",
      "pos": [
        403,
        407
      ]
    },
    {
      "content": "由 Azure 提供的 Node.js 版本会不断更新。除非另行指定，否则将使用最新可用版本。",
      "pos": [
        409,
        456
      ]
    },
    {
      "pos": [
        460,
        584
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>如果你在 Azure 云服务（Web 角色或辅助角色）中托管应用程序，并且这是你首次部署应用程序，Azure 将尝试使用你在部署环境中所安装的 Node.js 的版本（如果该版本与 Azure 中提供的默认版本之一相匹配）。"
    },
    {
      "content": "使用 package.json 进行版本控制",
      "pos": [
        588,
        610
      ]
    },
    {
      "pos": [
        612,
        666
      ],
      "content": "可通过将以下内容添加到你的 <bpt id=\"p1\">**</bpt>package.json<ept id=\"p1\">**</ept> 文件中来指定要使用的 Node.js 的版本："
    },
    {
      "pos": [
        700,
        742
      ],
      "content": "其中，<bpt id=\"p1\">*</bpt>version<ept id=\"p1\">*</ept> 是要使用的特定版本号。你可以为版本指定更复杂的条件，例如："
    },
    {
      "content": "由于 0.6.22 不是托管环境中提供的版本之一，将改为使用 0.8 系列中的最高版本 - 0.8.4。",
      "pos": [
        787,
        839
      ]
    },
    {
      "content": "使用应用设置对网站进行版本控制",
      "pos": [
        843,
        858
      ]
    },
    {
      "content": "如果你在网站中托管应用程序，则可以将环境变量 <bpt id=\"p1\">**</bpt>WEBSITE\\_NODE\\_DEFAULT\\_VERSION<ept id=\"p1\">**</ept> 设置为所需版本。",
      "pos": [
        859,
        926
      ]
    },
    {
      "content": "使用 PowerShell 对云服务进行版本控制",
      "pos": [
        930,
        954
      ]
    },
    {
      "pos": [
        956,
        1076
      ],
      "content": "如果你在云服务中托管应用程序，并且使用 Azure PowerShell 部署该应用程序，则可使用 <bpt id=\"p1\">**</bpt>Set-AzureServiceProjectRole<ept id=\"p1\">**</ept> PowerShell cmdlet 替代默认的 Node.js 版本。例如："
    },
    {
      "pos": [
        1131,
        1215
      ],
      "content": "请注意，上述语句中的参数区分大小写。通过检查角色的 <bpt id=\"p1\">**</bpt>package.json<ept id=\"p1\">**</ept> 中的 <bpt id=\"p2\">**</bpt>engines<ept id=\"p2\">**</ept> 属性可以验证是否已选择正确的 Node.js 版本。"
    },
    {
      "pos": [
        1217,
        1324
      ],
      "content": "你还可使用 <bpt id=\"p1\">**</bpt>Get-AzureServiceProjectRoleRuntime<ept id=\"p1\">**</ept> 检索托管为云服务的应用程序可用的 Node.js 版本的列表。始终确认你的项目所依赖的 Node.js 版本是否在此列表中。"
    },
    {
      "content": "对 Azure 网站使用自定义版本",
      "pos": [
        1328,
        1345
      ]
    },
    {
      "pos": [
        1347,
        1483
      ],
      "content": "虽然 Azure 提供了 Node.js 的几个默认版本，但你可能希望使用并非默认提供的版本。如果你的应用程序托管为 Azure 网站，则可以使用 <bpt id=\"p1\">**</bpt>iisnode.yml<ept id=\"p1\">**</ept> 文件完成此操作。以下步骤演练了对 Azure 网站使用自定义版本的 Node.Js 的过程："
    },
    {
      "pos": [
        1488,
        1547
      ],
      "content": "创建一个新目录，然后在该目录中创建 <bpt id=\"p1\">**</bpt>server.js<ept id=\"p1\">**</ept> 文件。<bpt id=\"p2\">**</bpt>server.js<ept id=\"p2\">**</ept> 文件应包含以下内容："
    },
    {
      "content": "这将显示在您浏览网站时使用的 Node.js 版本。",
      "pos": [
        1832,
        1858
      ]
    },
    {
      "pos": [
        1863,
        1953
      ],
      "content": "创建一个新网站并记录该网站的名称。例如，以下命令使用 <bpt id=\"p1\">[</bpt><ept id=\"p1\">Azure 命令行工具]</ept>创建一个名为 <bpt id=\"p2\">**</bpt>mywebsite<ept id=\"p2\">**</ept> 的新 Azure 网站，然后为该网站启用 Git 存储库。"
    },
    {
      "pos": [
        2001,
        2052
      ],
      "content": "创建一个名为 <bpt id=\"p1\">**</bpt>bin<ept id=\"p1\">**</ept> 的新目录，将其作为包含 <bpt id=\"p2\">**</bpt>server.js<ept id=\"p2\">**</ept> 文件的目录的子目录。"
    },
    {
      "pos": [
        2057,
        2130
      ],
      "content": "下载要用于你的应用程序的特定版本的 <bpt id=\"p1\">**</bpt>node.exe<ept id=\"p1\">**</ept>（Windows 版本）。例如，以下命令使用 <bpt id=\"p2\">**</bpt>curl<ept id=\"p2\">**</ept> 下载版本 0.8.1："
    },
    {
      "pos": [
        2192,
        2231
      ],
      "content": "将 <bpt id=\"p1\">**</bpt>node.exe<ept id=\"p1\">**</ept> 文件保存到先前创建的 <bpt id=\"p2\">**</bpt>bin<ept id=\"p2\">**</ept> 文件夹中。"
    },
    {
      "pos": [
        2236,
        2313
      ],
      "content": "在 <bpt id=\"p1\">**</bpt>server.js<ept id=\"p1\">**</ept> 文件所在的目录中创建 <bpt id=\"p2\">**</bpt>iisnode.yml<ept id=\"p2\">**</ept> 文件，然后将以下内容添加到 <bpt id=\"p3\">**</bpt>iisnode.yml<ept id=\"p3\">**</ept> 文件中："
    },
    {
      "pos": [
        2388,
        2438
      ],
      "content": "将你的应用程序发布到 Azure 网站后，你的项目中的 <bpt id=\"p1\">**</bpt>node.exe<ept id=\"p1\">**</ept> 文件将位于此路径。"
    },
    {
      "content": "发布应用程序。例如，由于我在前面创建了一个带 --git 参数的新网站，因此以下命令会将应用程序文件添加到我的本地 Git 存储库，然后将它们推送到网站存储库：",
      "pos": [
        2443,
        2523
      ]
    },
    {
      "content": "发布应用程序后，在浏览器中打开该网站。您应看到一则指示“Hello from Azure running node version: v0.8.1”的消息。",
      "pos": [
        2622,
        2700
      ]
    },
    {
      "content": "后续步骤",
      "pos": [
        2704,
        2708
      ]
    },
    {
      "pos": [
        2710,
        2804
      ],
      "content": "了解如何指定应用程序使用的 Node.js 版本后，请学习<bpt id=\"p1\">[</bpt><ept id=\"p1\">如何使用模块]</ept>、<bpt id=\"p2\">[</bpt><ept id=\"p2\">生成和部署 Node.js 网站]</ept>以及<bpt id=\"p3\">[</bpt><ept id=\"p3\">如何使用适用于 Mac 和 Linux 的 Azure 命令行工具]</ept>。"
    },
    {
      "pos": [
        2806,
        2852
      ],
      "content": "有关详细信息，请参阅 <bpt id=\"p1\">[</bpt>Node.js 开发人员中心<ept id=\"p1\">](/develop/nodejs/)</ept>。"
    }
  ],
  "content": "<properties\n    pageTitle=\"指定 Node.js 版本\"\n    description=\"了解如何指定 Azure 网站和云服务使用的 Node.js 版本\"\n    services=\"\"\n    documentationCenter=\"nodejs\"\n    authors=\"rmcmurray\"\n    manager=\"wpickett\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"multiple\"\n    ms.date=\"11/20/2015\"\n    wacn.date=\"01/29/2016\"/>\n\n# 在 Azure 应用程序中指定 Node.js 版本\n\n托管 Node.js 应用程序时，您可能希望确保您的应用程序使用特定版本的 Node.js。有几种方法可为托管在 Azure 上的应用程序完成此操作。\n\n##默认版本\n\n由 Azure 提供的 Node.js 版本会不断更新。除非另行指定，否则将使用最新可用版本。\n\n> [AZURE.NOTE]如果你在 Azure 云服务（Web 角色或辅助角色）中托管应用程序，并且这是你首次部署应用程序，Azure 将尝试使用你在部署环境中所安装的 Node.js 的版本（如果该版本与 Azure 中提供的默认版本之一相匹配）。\n\n##使用 package.json 进行版本控制\n\n可通过将以下内容添加到你的 **package.json** 文件中来指定要使用的 Node.js 的版本：\n\n    \"engines\":{\"node\":version}\n\n其中，*version* 是要使用的特定版本号。你可以为版本指定更复杂的条件，例如：\n\n    \"engines\":{\"node\": \"0.6.22 || 0.8.x\"}\n\n由于 0.6.22 不是托管环境中提供的版本之一，将改为使用 0.8 系列中的最高版本 - 0.8.4。\n\n##使用应用设置对网站进行版本控制\n如果你在网站中托管应用程序，则可以将环境变量 **WEBSITE\\_NODE\\_DEFAULT\\_VERSION** 设置为所需版本。\n\n##使用 PowerShell 对云服务进行版本控制\n\n如果你在云服务中托管应用程序，并且使用 Azure PowerShell 部署该应用程序，则可使用 **Set-AzureServiceProjectRole** PowerShell cmdlet 替代默认的 Node.js 版本。例如：\n\n    Set-AzureServiceProjectRole WebRole1 Node 0.8.4\n\n请注意，上述语句中的参数区分大小写。通过检查角色的 **package.json** 中的 **engines** 属性可以验证是否已选择正确的 Node.js 版本。\n\n你还可使用 **Get-AzureServiceProjectRoleRuntime** 检索托管为云服务的应用程序可用的 Node.js 版本的列表。始终确认你的项目所依赖的 Node.js 版本是否在此列表中。\n\n##对 Azure 网站使用自定义版本\n\n虽然 Azure 提供了 Node.js 的几个默认版本，但你可能希望使用并非默认提供的版本。如果你的应用程序托管为 Azure 网站，则可以使用 **iisnode.yml** 文件完成此操作。以下步骤演练了对 Azure 网站使用自定义版本的 Node.Js 的过程：\n\n1. 创建一个新目录，然后在该目录中创建 **server.js** 文件。**server.js** 文件应包含以下内容：\n\n        var http = require('http');\n        http.createServer(function(req,res) {\n          res.writeHead(200, {'Content-Type': 'text/html'});\n          res.end('Hello from Azure running node version: ' + process.version + '</br>');\n        }).listen(process.env.PORT || 3000);\n\n    这将显示在您浏览网站时使用的 Node.js 版本。\n\n2. 创建一个新网站并记录该网站的名称。例如，以下命令使用 [Azure 命令行工具]创建一个名为 **mywebsite** 的新 Azure 网站，然后为该网站启用 Git 存储库。\n\n        azure site create mywebsite --git\n\n3. 创建一个名为 **bin** 的新目录，将其作为包含 **server.js** 文件的目录的子目录。\n\n4. 下载要用于你的应用程序的特定版本的 **node.exe**（Windows 版本）。例如，以下命令使用 **curl** 下载版本 0.8.1：\n\n        curl -O http://nodejs.org/dist/v0.8.1/node.exe\n\n    将 **node.exe** 文件保存到先前创建的 **bin** 文件夹中。\n\n5. 在 **server.js** 文件所在的目录中创建 **iisnode.yml** 文件，然后将以下内容添加到 **iisnode.yml** 文件中：\n\n        nodeProcessCommandLine: \"D:\\home\\site\\wwwroot\\bin\\node.exe\"\n\n    将你的应用程序发布到 Azure 网站后，你的项目中的 **node.exe** 文件将位于此路径。\n\n6. 发布应用程序。例如，由于我在前面创建了一个带 --git 参数的新网站，因此以下命令会将应用程序文件添加到我的本地 Git 存储库，然后将它们推送到网站存储库：\n\n        git add .\n        git commit -m \"testing node v0.8.1\"\n        git push azure master\n\n    发布应用程序后，在浏览器中打开该网站。您应看到一则指示“Hello from Azure running node version: v0.8.1”的消息。\n\n##后续步骤\n\n了解如何指定应用程序使用的 Node.js 版本后，请学习[如何使用模块]、[生成和部署 Node.js 网站]以及[如何使用适用于 Mac 和 Linux 的 Azure 命令行工具]。\n\n有关详细信息，请参阅 [Node.js 开发人员中心](/develop/nodejs/)。\n\n[如何使用适用于 Mac 和 Linux 的 Azure 命令行工具]: /documentation/articles/xplat-cli-install\n[Azure 命令行工具]: /documentation/articles/xplat-cli-install\n[如何使用模块]: /documentation/articles/nodejs-use-node-modules-azure-apps\n[生成和部署 Node.js 网站]: /documentation/articles/web-sites-nodejs-develop-deploy-mac\n\n<!---HONumber=Mooncake_0118_2016-->"
}