{
  "nodes": [
    {
      "content": "路由和标记表达式",
      "pos": [
        27,
        35
      ]
    },
    {
      "content": "本主题介绍 Azure 通知中心的路由和标记表达式。",
      "pos": [
        54,
        80
      ]
    },
    {
      "content": "路由和标记表达式",
      "pos": [
        306,
        314
      ]
    },
    {
      "content": "概述",
      "pos": [
        318,
        320
      ]
    },
    {
      "content": "通过通知中心发送推送通知时，使用标记表达式可以定向到特定的设备集或更具体的注册。",
      "pos": [
        322,
        362
      ]
    },
    {
      "content": "定向到特定注册",
      "pos": [
        368,
        375
      ]
    },
    {
      "pos": [
        377,
        576
      ],
      "content": "定向到特定注册的唯一方法是将这些注册与标记相关联，然后定向到这些标记。如<bpt id=\"p1\">[</bpt>注册管理<ept id=\"p1\">](/documentation/articles/notification-hubs-registration-management.md)</ept>中所述，应用要接收推送通知，必须在通知中心内注册设备句柄。在通知中心内创建注册后，应用程序后端便可向它发送推送通知。应用程序后端可以通过以下方式选择要将特定通知定向到的注册："
    },
    {
      "pos": [
        581,
        605
      ],
      "content": "<bpt id=\"p1\">**</bpt>广播<ept id=\"p1\">**</ept>：通知中心内的所有注册均将收到通知。"
    },
    {
      "pos": [
        609,
        633
      ],
      "content": "<bpt id=\"p1\">**</bpt>标记<ept id=\"p1\">**</ept>：包含指定标记的所有注册将收到通知。"
    },
    {
      "pos": [
        637,
        669
      ],
      "content": "<bpt id=\"p1\">**</bpt>标记表达式<ept id=\"p1\">**</ept>：其标记集匹配指定表达式的所有注册将收到通知。"
    },
    {
      "content": "标记",
      "pos": [
        674,
        676
      ]
    },
    {
      "content": "标记可以是任意字符串，最多 120 个字符，可以包含字母数字和以下非字母数字字符：“\\_”、“@”、“#”、“.”、“:”、“-”。以下示例显示了一个应用程序，你可以从中接收有关特定乐队的 toast 通知。在此方案中，路由通知的一种简便方法是使用代表不同乐队的标记（如下图所示）为注册添加标签。",
      "pos": [
        678,
        826
      ]
    },
    {
      "pos": [
        911,
        964
      ],
      "content": "在此图中，标记为 <bpt id=\"p1\">**</bpt>Beatles<ept id=\"p1\">**</ept> 的消息仅传送到使用标记 <bpt id=\"p2\">**</bpt>Beatles<ept id=\"p2\">**</ept> 注册的平板电脑。"
    },
    {
      "pos": [
        966,
        1059
      ],
      "content": "有关针对标记创建注册的详细信息，请参阅<bpt id=\"p1\">[</bpt>注册管理<ept id=\"p1\">](/documentation/articles/notification-hubs-registration-management)</ept>。"
    },
    {
      "pos": [
        1061,
        1286
      ],
      "content": "你可以使用 <bpt id=\"p1\">[</bpt>Azure 通知中心<ept id=\"p1\">](https://www.nuget.org/packages/Microsoft.Azure.NotificationHubs/)</ept> SDK 中 <ph id=\"ph1\">`Microsoft.Azure.NotificationHubs.NotificationHubClient`</ph> 类的 send notifications 方法将通知发送到标记。你还可以使用 Node.js 或推送通知 REST API。下面是使用 SDK 的示例。"
    },
    {
      "content": "标记不必进行预配，并且可以参考多个特定于应用的概念。例如，此示例应用程序的用户可以对乐队发表评论，并且不仅想要接收有关其喜爱乐队的评论的 toast，而且想要接收来自其好友的所有评论（不管他们在对哪个乐队发表评论）的 toast。下图显示了此方案的示例：",
      "pos": [
        1951,
        2078
      ]
    },
    {
      "content": "在此图中，Alice 对于 Beatles 的更新感兴趣，而 Bob 对于 Wailers 的更新感兴趣。Bob 还对 Charlie 的评论感兴趣，而 Charlie 对 Wailers 感兴趣。当发送有关 Charlie 对 Beatles 的评论的通知时，Alice 和 Bob 都将收到它。",
      "pos": [
        2166,
        2315
      ]
    },
    {
      "content": "虽然你可以在标记中对多个关注进行编码（例如，“band\\_Beatles”或“follows\\_Chanrlie”），但标记只是简单的字符串，并不是具有值的属性。只有存在或缺少特定标记时，才会匹配某一注册。",
      "pos": [
        2317,
        2420
      ]
    },
    {
      "pos": [
        2422,
        2540
      ],
      "content": "有关如何使用标记发送到相关组的完整分步教程，请参阅<bpt id=\"p1\">[</bpt>突发新闻<ept id=\"p1\">](/documentation/articles/notification-hubs-windows-store-dotnet-send-breaking-news.md)</ept>。"
    },
    {
      "content": "使用标记定向到用户",
      "pos": [
        2546,
        2555
      ]
    },
    {
      "content": "使用标记的另一种方法就是标识特定用户的所有设备。可以使用包含用户 ID 的标记来标记注册，如下图所示：",
      "pos": [
        2557,
        2608
      ]
    },
    {
      "content": "在此图中，标记为 uid:Alice 的消息将传到标记为 uid:Alice 的所有注册，也即 Alice 的所有设备。",
      "pos": [
        2695,
        2755
      ]
    },
    {
      "content": "标记表达式",
      "pos": [
        2760,
        2765
      ]
    },
    {
      "content": "存在这样的情况：通知必须定向到一个注册集，该注册集不由单个标记标识，而是由标记上的布尔表达式进行标识。",
      "pos": [
        2767,
        2818
      ]
    },
    {
      "content": "考虑这样一个体育应用程序，它将向波士顿的所有用户发送有关红袜队和红雀队之间的比赛的提醒。如果客户端应用注册了有关感兴趣的球队和位置的标记，则通知应定向到波士顿中对红袜队或红雀队感兴趣的所有用户。此条件可以用以下布尔表达式表示：",
      "pos": [
        2820,
        2933
      ]
    },
    {
      "content": "标记表达式可以包含所有布尔运算符，如 AND (&amp;&amp;)、OR (||) 和 NOT (!)。标记表达式还可以包含括号。标记表达式在只包含 OR 的情况下限制为 20 个标记；否则限制为 6 个标记。",
      "pos": [
        3082,
        3181
      ]
    },
    {
      "content": "下面是通过 SDK 使用标记表达式发送通知的示例。",
      "pos": [
        3183,
        3208
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"路由和标记表达式\"\n    description=\"本主题介绍 Azure 通知中心的路由和标记表达式。\"\n    services=\"notification-hubs\"\n    documentationCenter=\".net\"\n    authors=\"wesmc7777\"\n    manager=\"dwrede\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"notification-hubs\"\n    ms.date=\"11/25/2015\"\n    wacn.date=\"01/14/2016\"/>\n\n# 路由和标记表达式\n\n##概述\n\n通过通知中心发送推送通知时，使用标记表达式可以定向到特定的设备集或更具体的注册。\n\n\n## 定向到特定注册\n\n定向到特定注册的唯一方法是将这些注册与标记相关联，然后定向到这些标记。如[注册管理](/documentation/articles/notification-hubs-registration-management.md)中所述，应用要接收推送通知，必须在通知中心内注册设备句柄。在通知中心内创建注册后，应用程序后端便可向它发送推送通知。应用程序后端可以通过以下方式选择要将特定通知定向到的注册：\n\n1. **广播**：通知中心内的所有注册均将收到通知。\n2. **标记**：包含指定标记的所有注册将收到通知。\n3. **标记表达式**：其标记集匹配指定表达式的所有注册将收到通知。\n\n## 标记\n\n标记可以是任意字符串，最多 120 个字符，可以包含字母数字和以下非字母数字字符：“\\_”、“@”、“#”、“.”、“:”、“-”。以下示例显示了一个应用程序，你可以从中接收有关特定乐队的 toast 通知。在此方案中，路由通知的一种简便方法是使用代表不同乐队的标记（如下图所示）为注册添加标签。\n\n![](./media/notification-hubs-routing-tag-expressions/notification-hubs-tags.png)\n\n在此图中，标记为 **Beatles** 的消息仅传送到使用标记 **Beatles** 注册的平板电脑。\n\n有关针对标记创建注册的详细信息，请参阅[注册管理](/documentation/articles/notification-hubs-registration-management)。\n\n你可以使用 [Azure 通知中心](https://www.nuget.org/packages/Microsoft.Azure.NotificationHubs/) SDK 中 `Microsoft.Azure.NotificationHubs.NotificationHubClient` 类的 send notifications 方法将通知发送到标记。你还可以使用 Node.js 或推送通知 REST API。下面是使用 SDK 的示例。\n\n\n    Microsoft.Azure.NotificationHubs.NotificationOutcome outcome = null;\n\n    // Windows 8.1 / Windows Phone 8.1\n    var toast = @\"<toast><visual><binding template=\"\"ToastText01\"\"><text id=\"\"1\"\">\" +\n    \"You requested a Beatles notification</text></binding></visual></toast>\";\n    outcome = await Notifications.Instance.Hub.SendWindowsNativeNotificationAsync(toast, \"Beatles);\n\n    // Windows 10\n    toast = @\"<toast><visual><binding template=\"\"ToastGeneric\"\"><text id=\"\"1\"\">\" +\n    \"You requested a Wailers notification</text></binding></visual></toast>\";\n    outcome = await Notifications.Instance.Hub.SendWindowsNativeNotificationAsync(toast, \"Wailers\");\n\n\n\n\n标记不必进行预配，并且可以参考多个特定于应用的概念。例如，此示例应用程序的用户可以对乐队发表评论，并且不仅想要接收有关其喜爱乐队的评论的 toast，而且想要接收来自其好友的所有评论（不管他们在对哪个乐队发表评论）的 toast。下图显示了此方案的示例：\n\n\n\n![](./media/notification-hubs-routing-tag-expressions/notification-hubs-tags2.png)\n\n在此图中，Alice 对于 Beatles 的更新感兴趣，而 Bob 对于 Wailers 的更新感兴趣。Bob 还对 Charlie 的评论感兴趣，而 Charlie 对 Wailers 感兴趣。当发送有关 Charlie 对 Beatles 的评论的通知时，Alice 和 Bob 都将收到它。\n\n虽然你可以在标记中对多个关注进行编码（例如，“band\\_Beatles”或“follows\\_Chanrlie”），但标记只是简单的字符串，并不是具有值的属性。只有存在或缺少特定标记时，才会匹配某一注册。\n\n有关如何使用标记发送到相关组的完整分步教程，请参阅[突发新闻](/documentation/articles/notification-hubs-windows-store-dotnet-send-breaking-news.md)。\n\n\n## 使用标记定向到用户\n\n使用标记的另一种方法就是标识特定用户的所有设备。可以使用包含用户 ID 的标记来标记注册，如下图所示：\n\n\n![](./media/notification-hubs-routing-tag-expressions/notification-hubs-tags3.png)\n\n在此图中，标记为 uid:Alice 的消息将传到标记为 uid:Alice 的所有注册，也即 Alice 的所有设备。\n\n\n##标记表达式\n\n存在这样的情况：通知必须定向到一个注册集，该注册集不由单个标记标识，而是由标记上的布尔表达式进行标识。\n\n考虑这样一个体育应用程序，它将向波士顿的所有用户发送有关红袜队和红雀队之间的比赛的提醒。如果客户端应用注册了有关感兴趣的球队和位置的标记，则通知应定向到波士顿中对红袜队或红雀队感兴趣的所有用户。此条件可以用以下布尔表达式表示：\n\n    (follows_RedSox || follows_Cardinals) && location_Boston\n\n\n![](./media/notification-hubs-routing-tag-expressions/notification-hubs-tags4.png)\n\n标记表达式可以包含所有布尔运算符，如 AND (&&)、OR (||) 和 NOT (!)。标记表达式还可以包含括号。标记表达式在只包含 OR 的情况下限制为 20 个标记；否则限制为 6 个标记。\n\n下面是通过 SDK 使用标记表达式发送通知的示例。\n\n\n    Microsoft.Azure.NotificationHubs.NotificationOutcome outcome = null;\n\n    String userTag = \"(location_Boston && !follows_Cardinals)\"; \n\n    // Windows 8.1 / Windows Phone 8.1\n    var toast = @\"<toast><visual><binding template=\"\"ToastText01\"\"><text id=\"\"1\"\">\" +\n    \"You want info on the Red Socks</text></binding></visual></toast>\";\n    outcome = await Notifications.Instance.Hub.SendWindowsNativeNotificationAsync(toast, userTag);\n\n    // Windows 10\n    toast = @\"<toast><visual><binding template=\"\"ToastGeneric\"\"><text id=\"\"1\"\">\" +\n    \"You want info on the Red Socks</text></binding></visual></toast>\";\n    outcome = await Notifications.Instance.Hub.SendWindowsNativeNotificationAsync(toast, userTag);\n\n<!---HONumber=Mooncake_0104_2016-->"
}