{
  "nodes": [
    {
      "content": "如何使用 Azure 媒体编码器对资产进行编码",
      "pos": [
        28,
        51
      ]
    },
    {
      "content": "了解如何使用 Azure 媒体编码器为媒体服务上的媒体内容编码。代码示例使用 REST API。",
      "pos": [
        71,
        119
      ]
    },
    {
      "content": "如何使用 Azure 媒体编码器对资产进行编码",
      "pos": [
        340,
        363
      ]
    },
    {
      "content": "[AZURE.SELECTOR]",
      "pos": [
        368,
        384
      ]
    },
    {
      "content": ".NET",
      "pos": [
        388,
        392
      ]
    },
    {
      "content": "REST",
      "pos": [
        457,
        461
      ]
    },
    {
      "content": "Portal",
      "pos": [
        524,
        530
      ]
    },
    {
      "content": "概述",
      "pos": [
        597,
        599
      ]
    },
    {
      "content": "要通过 Internet 传送数字视频，你必须对媒体进行压缩。数字视频文件相当大，可能因过大而无法通过 Internet 传送或者无法在你客户的设备上正常显示。编码是压缩视频和音频以便你的客户能够查看媒体的过程。",
      "pos": [
        600,
        706
      ]
    },
    {
      "pos": [
        708,
        1042
      ],
      "content": "编码作业是媒体服务中最常见的处理操作之一。可通过创建编码作业将媒体文件从一种编码转换为另一种编码。进行编码时，可以使用媒体服务内置的媒体编码器。你也可以使用媒体服务合作伙伴提供的编码器；可通过 Azure 应用商店获取第三方编码器。可以使用为编码器定义的预设字符串或预设配置文件来指定编码任务的详细信息。若要查看可用预设的类型，请参阅 <bpt id=\"p1\">[</bpt>Azure 媒体服务的任务预设<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/azure/dn619392.aspx)</ept>。如果你使用了第三方编码器，则应<bpt id=\"p2\">[</bpt>验证你的文件<ept id=\"p2\">](https://msdn.microsoft.com/zh-cn/library/azure/dn750842.aspx)</ept>。"
    },
    {
      "content": "每个作业可以有一个或多个任务，具体因要完成的处理类型而异。REST API 允许你通过以下两种方式之一创建作业及相关任务：",
      "pos": [
        1045,
        1106
      ]
    },
    {
      "content": "可按以下两种方式以内联形式定义任务：通过作业实体上的任务导航属性，或",
      "pos": [
        1110,
        1144
      ]
    },
    {
      "content": "通过 OData 批处理。",
      "pos": [
        1148,
        1161
      ]
    },
    {
      "pos": [
        1166,
        1425
      ],
      "content": "建议始终将夹层文件编码为自适应比特率 MP4 集，然后使用<bpt id=\"p1\">[</bpt>动态打包<ept id=\"p1\">](/documentation/articles/media-services-dynamic-packaging-overview)</ept>将该集转换为所需的格式。若要利用动态打包，首先必须获取你计划从中传送内容的流式处理终结点的至少一个点播流单元。有关详细信息，请参阅<bpt id=\"p2\">[</bpt>如何缩放媒体服务<ept id=\"p2\">](/documentation/articles/media-services-manage-origins#scale_streaming_endpoints)</ept>。"
    },
    {
      "pos": [
        1427,
        1553
      ],
      "content": "如果你的输出资产已经过存储加密，则必须配置资产传送策略。有关详细信息，请参阅<bpt id=\"p1\">[</bpt>配置资产传送策略<ept id=\"p1\">](/documentation/articles/media-services-rest-configure-asset-delivery-policy)</ept>。"
    },
    {
      "pos": [
        1557,
        1686
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>在开始引用媒体处理器之前，请确认你的媒体处理器 ID 准确无误。有关详细信息，请参阅<bpt id=\"p1\">[</bpt>获取媒体处理器<ept id=\"p1\">](/documentation/articles/media-services-rest-get-media-processor)</ept>。"
    },
    {
      "content": "创建包含单个编码任务的作业",
      "pos": [
        1690,
        1703
      ]
    },
    {
      "pos": [
        1707,
        1745
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>使用媒体服务 REST API 时，需注意以下事项："
    },
    {
      "pos": [
        1749,
        1872
      ],
      "content": "访问媒体服务中的实体时，必须在 HTTP 请求中设置特定标头字段和值。有关详细信息，请参阅<bpt id=\"p1\">[</bpt>媒体服务 REST API 开发的设置<ept id=\"p1\">](/documentation/articles/media-services-rest-how-to-use)</ept>。"
    },
    {
      "pos": [
        1875,
        2057
      ],
      "content": "在成功连接到 https://media.chinacloudapi.cn 之后，你将接收到指定另一个媒体服务 URI 的 301 重定向。必须按<bpt id=\"p1\">[</bpt>使用 REST API 连接到媒体服务<ept id=\"p1\">](/documentation/articles/media-services-rest-connect_programmatically)</ept>中所述对新的 URI 执行后续调用。"
    },
    {
      "pos": [
        2060,
        2245
      ],
      "content": "以下示例说明了如何使用一个任务集来创建和发布一个作业，从而以特定分辨率和质量来编码某个视频。使用 Azure 媒体编码器编码时，可以使用<bpt id=\"p1\">[</bpt>此处<ept id=\"p1\">](https://github.com/AzureMediaServicesSamples/Encoding-Presets/tree/master/VoD/Azure%20Media%20Encoder)</ept>指定的任务配置预设。"
    },
    {
      "content": "请求：",
      "pos": [
        2251,
        2254
      ]
    },
    {
      "content": "响应：",
      "pos": [
        3110,
        3113
      ]
    },
    {
      "content": "设置输出资产的名称",
      "pos": [
        3160,
        3169
      ]
    },
    {
      "content": "以下示例说明了如何设置 assetName 属性：",
      "pos": [
        3171,
        3196
      ]
    },
    {
      "content": "注意事项",
      "pos": [
        3408,
        3412
      ]
    },
    {
      "content": "TaskBody 属性必须使用文本 XML 来定义将由任务使用的输入资产或输出资产的数量。任务主题包含 XML 的 XML 架构定义。",
      "pos": [
        3416,
        3483
      ]
    },
    {
      "content": "在 TaskBody 定义中，必须将",
      "pos": [
        3486,
        3504
      ]
    },
    {
      "content": "和",
      "pos": [
        3518,
        3519
      ]
    },
    {
      "content": "的每个内部值设置为 JobInputAsset(value) 或 JobOutputAsset(value)。",
      "pos": [
        3534,
        3589
      ]
    },
    {
      "content": "一个任务可以有多个输出资产。作为作业任务的输出，一个 JobOutputAsset(x) 只能使用一次。",
      "pos": [
        3592,
        3644
      ]
    },
    {
      "content": "可以将 JobInputAsset 或 JobOutputAsset 指定为某任务的输入资产。",
      "pos": [
        3647,
        3694
      ]
    },
    {
      "content": "任务不得构成循环。",
      "pos": [
        3697,
        3706
      ]
    },
    {
      "content": "传递给 JobInputAsset 或 JobOutputAsset 的 value 参数代表资产的索引值。实际资产在作业实体定义的 InputMediaAssets 和 OutputMediaAssets 导航属性中定义。",
      "pos": [
        3709,
        3821
      ]
    },
    {
      "content": "由于媒体服务基于 OData v3，因此 InputMediaAssets 和 OutputMediaAssets 导航属性集合中的单个资产将通过“\\_\\_metadata : uri”名称-值对。",
      "pos": [
        3825,
        3924
      ]
    },
    {
      "content": "InputMediaAssets 将映射到已在媒体服务中创建的一个或多个资产。OutputMediaAssets 由系统创建。它们不引用现有资产。",
      "pos": [
        3927,
        4000
      ]
    },
    {
      "content": "OutputMediaAssets 可以使用 assetName 属性来命名。如果该属性不存在，则 OutputMediaAsset 的名称将为",
      "pos": [
        4003,
        4075
      ]
    },
    {
      "content": "元素的任意内部文本值，并以作业名称值或作业 ID 值（在没有定义名称属性的情况下）为后缀。例如，如果将 assetName 的值设置为“Sample”，则会将 OutputMediaAsset 名称属性设置为“Sample”。但是，如果未设置 assetName 的值，但已将作业名称设置为“NewJob”，则 OutputMediaAsset 名称将为“JobOutputAsset(value)\\_NewJob”。",
      "pos": [
        4090,
        4299
      ]
    },
    {
      "content": "创建包含连锁任务的作业",
      "pos": [
        4304,
        4315
      ]
    },
    {
      "pos": [
        4317,
        4492
      ],
      "content": "在许多应用程序方案中，开发人员希望创建一系列处理任务。在媒体服务中，可以创建一系列连锁任务。每个任务执行不同的处理步骤，并且可以使用不同的媒体处理器。连锁任务可以将资产从一个任务转给另一个任务，从而对资产执行线性序列的任务。但是，在作业中执行的任务不需要处于序列中。创建连锁任务时，连锁 **ITask **对象在单个 <bpt id=\"p1\">**</bpt>IJob<ept id=\"p1\">**</ept> 对象中创建。"
    },
    {
      "pos": [
        4495,
        4555
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>每个作业当前有 30 个任务的限制。如果需要链接超过 30 个的任务，请创建多个作业以包含任务。"
    },
    {
      "content": "注意事项",
      "pos": [
        5910,
        5914
      ]
    },
    {
      "content": "若要启用任务链，必须满足以下条件：",
      "pos": [
        5916,
        5933
      ]
    },
    {
      "content": "作业必须至少具有两个任务。",
      "pos": [
        5937,
        5950
      ]
    },
    {
      "content": "必须至少有一个任务的输入是作业中另一个任务的输出。",
      "pos": [
        5953,
        5978
      ]
    },
    {
      "content": "使用 OData 批处理",
      "pos": [
        5983,
        5995
      ]
    },
    {
      "pos": [
        5998,
        6132
      ],
      "content": "以下示例演示如何使用 OData 批处理来创建作业和任务。有关批处理的信息，请参阅<bpt id=\"p1\">[</bpt>开放数据协议 (OData) 批处理<ept id=\"p1\">](http://www.odata.org/documentation/odata-version-3-0/batch-processing/)</ept>。"
    },
    {
      "content": "使用 JobTemplate 创建作业",
      "pos": [
        8353,
        8372
      ]
    },
    {
      "content": "使用一组常用任务处理多个资产时，JobTemplate 可用于指定默认任务预设、任务顺序等。",
      "pos": [
        8375,
        8421
      ]
    },
    {
      "content": "以下示例演示如何使用以内联方式定义的 TaskTemplate 创建 JobTemplate。TaskTemplate 将 Azure 媒体编码器用作 MediaProcessor 来编码资产文件；但是，也可使用其他 Mediaprocessor。",
      "pos": [
        8423,
        8547
      ]
    },
    {
      "pos": [
        9467,
        9647
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>与其他媒体服务实体不同的是，必须为每个 TaskTemplate 定义一个新的 GUID 标识符并将其放入请求正文中的 taskTemplateId 和 ID 属性中。内容标识方案必须遵循“标识 Azure 媒体服务实体”中所述的方案。此外，不能更新 JobTemplate。而必须创建一个具有已更新的更改的新 JobTemplate。"
    },
    {
      "content": "如果成功，将返回以下响应：",
      "pos": [
        9651,
        9664
      ]
    },
    {
      "content": "以下示例演示如何创建引用 JobTemplate Id 的作业：",
      "pos": [
        9712,
        9744
      ]
    },
    {
      "content": "如果成功，将返回以下响应：",
      "pos": [
        10313,
        10326
      ]
    },
    {
      "content": "后续步骤",
      "pos": [
        10378,
        10382
      ]
    },
    {
      "content": "了解如何创建一个对资产进行编码的作业后，请转到<bpt id=\"p1\">[</bpt>如何使用媒体服务检查作业进度<ept id=\"p1\">](/documentation/articles/media-services-rest-check-job-progress)</ept>主题。",
      "pos": [
        10383,
        10489
      ]
    },
    {
      "content": "另请参阅",
      "pos": [
        10494,
        10498
      ]
    },
    {
      "content": "获取媒体处理器",
      "pos": [
        10501,
        10508
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"如何使用 Azure 媒体编码器对资产进行编码\" \n    description=\"了解如何使用 Azure 媒体编码器为媒体服务上的媒体内容编码。代码示例使用 REST API。\" \n    services=\"media-services\" \n    documentationCenter=\"\" \n    authors=\"Juliako\" \n    manager=\"dwrede\" \n    editor=\"\"/>\n\n<tags \n    ms.service=\"media-services\" \n    ms.date=\"09/07/2015\"\n    wacn.date=\"11/02/2015\"/>\n\n\n#如何使用 Azure 媒体编码器对资产进行编码\n\n\n> [AZURE.SELECTOR]\n- [.NET](/documentation/articles/media-services-dotnet-encode-asset)\n- [REST](/documentation/articles/media-services-rest-encode-asset)\n- [Portal](/documentation/articles/media-services-manage-content#encode)\n\n##概述\n要通过 Internet 传送数字视频，你必须对媒体进行压缩。数字视频文件相当大，可能因过大而无法通过 Internet 传送或者无法在你客户的设备上正常显示。编码是压缩视频和音频以便你的客户能够查看媒体的过程。\n\n编码作业是媒体服务中最常见的处理操作之一。可通过创建编码作业将媒体文件从一种编码转换为另一种编码。进行编码时，可以使用媒体服务内置的媒体编码器。你也可以使用媒体服务合作伙伴提供的编码器；可通过 Azure 应用商店获取第三方编码器。可以使用为编码器定义的预设字符串或预设配置文件来指定编码任务的详细信息。若要查看可用预设的类型，请参阅 [Azure 媒体服务的任务预设](https://msdn.microsoft.com/zh-cn/library/azure/dn619392.aspx)。如果你使用了第三方编码器，则应[验证你的文件](https://msdn.microsoft.com/zh-cn/library/azure/dn750842.aspx)。\n\n\n每个作业可以有一个或多个任务，具体因要完成的处理类型而异。REST API 允许你通过以下两种方式之一创建作业及相关任务：\n\n- 可按以下两种方式以内联形式定义任务：通过作业实体上的任务导航属性，或 \n- 通过 OData 批处理。\n  \n\n建议始终将夹层文件编码为自适应比特率 MP4 集，然后使用[动态打包](/documentation/articles/media-services-dynamic-packaging-overview)将该集转换为所需的格式。若要利用动态打包，首先必须获取你计划从中传送内容的流式处理终结点的至少一个点播流单元。有关详细信息，请参阅[如何缩放媒体服务](/documentation/articles/media-services-manage-origins#scale_streaming_endpoints)。\n\n如果你的输出资产已经过存储加密，则必须配置资产传送策略。有关详细信息，请参阅[配置资产传送策略](/documentation/articles/media-services-rest-configure-asset-delivery-policy)。\n\n\n>[AZURE.NOTE]在开始引用媒体处理器之前，请确认你的媒体处理器 ID 准确无误。有关详细信息，请参阅[获取媒体处理器](/documentation/articles/media-services-rest-get-media-processor)。\n\n##创建包含单个编码任务的作业 \n\n>[AZURE.NOTE]使用媒体服务 REST API 时，需注意以下事项：\n>\n>访问媒体服务中的实体时，必须在 HTTP 请求中设置特定标头字段和值。有关详细信息，请参阅[媒体服务 REST API 开发的设置](/documentation/articles/media-services-rest-how-to-use)。\n\n>在成功连接到 https://media.chinacloudapi.cn 之后，你将接收到指定另一个媒体服务 URI 的 301 重定向。必须按[使用 REST API 连接到媒体服务](/documentation/articles/media-services-rest-connect_programmatically)中所述对新的 URI 执行后续调用。\n\n\n以下示例说明了如何使用一个任务集来创建和发布一个作业，从而以特定分辨率和质量来编码某个视频。使用 Azure 媒体编码器编码时，可以使用[此处](https://github.com/AzureMediaServicesSamples/Encoding-Presets/tree/master/VoD/Azure%20Media%20Encoder)指定的任务配置预设。\n    \n请求：\n\n    POST https://media.chinacloudapi.cn/API/Jobs HTTP/1.1\n    Content-Type: application/json;odata=verbose\n    Accept: application/json;odata=verbose\n    DataServiceVersion: 3.0\n    MaxDataServiceVersion: 3.0\n    x-ms-version: 2.11\n    Authorization: Bearer <token value>\n    x-ms-client-request-id: 00000000-0000-0000-0000-000000000000\n    Host: media.chinacloudapi.cn\n\n    \n    {\"Name\" : \"NewTestJob\", \"InputMediaAssets\" : [{\"__metadata\" : {\"uri\" : \"https://media.chinacloudapi.cn/api/Assets('nb%3Acid%3AUUID%3Aaab7f15b-3136-4ddf-9962-e9ecb28fb9d2')\"}}],  \"Tasks\" : [{\"Configuration\" : \"H264 Broadband 720p\", \"MediaProcessorId\" : \"nb:mpid:UUID:70bdc2c3-ebf4-42a9-8542-5afc1e55d217\",  \"TaskBody\" : \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><taskBody><inputAsset>JobInputAsset(0)</inputAsset><outputAsset>JobOutputAsset(0)</outputAsset></taskBody>\"}]}\n\n响应：\n    \n    HTTP/1.1 201 Created\n\n    . . . \n\n###设置输出资产的名称\n\n以下示例说明了如何设置 assetName 属性：\n\n    { \"TaskBody\" : \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><taskBody><inputAsset>JobInputAsset(0)</inputAsset><outputAsset assetName=\\\"CustomOutputAssetName\\\">JobOutputAsset(0)</outputAsset></taskBody>\"}\n\n##注意事项\n\n- TaskBody 属性必须使用文本 XML 来定义将由任务使用的输入资产或输出资产的数量。任务主题包含 XML 的 XML 架构定义。\n- 在 TaskBody 定义中，必须将 <inputAsset> 和 <outputAsset> 的每个内部值设置为 JobInputAsset(value) 或 JobOutputAsset(value)。\n- 一个任务可以有多个输出资产。作为作业任务的输出，一个 JobOutputAsset(x) 只能使用一次。\n- 可以将 JobInputAsset 或 JobOutputAsset 指定为某任务的输入资产。\n- 任务不得构成循环。\n- 传递给 JobInputAsset 或 JobOutputAsset 的 value 参数代表资产的索引值。实际资产在作业实体定义的 InputMediaAssets 和 OutputMediaAssets 导航属性中定义。 \n- 由于媒体服务基于 OData v3，因此 InputMediaAssets 和 OutputMediaAssets 导航属性集合中的单个资产将通过“\\_\\_metadata : uri”名称-值对。\n- InputMediaAssets 将映射到已在媒体服务中创建的一个或多个资产。OutputMediaAssets 由系统创建。它们不引用现有资产。\n- OutputMediaAssets 可以使用 assetName 属性来命名。如果该属性不存在，则 OutputMediaAsset 的名称将为 <outputAsset> 元素的任意内部文本值，并以作业名称值或作业 ID 值（在没有定义名称属性的情况下）为后缀。例如，如果将 assetName 的值设置为“Sample”，则会将 OutputMediaAsset 名称属性设置为“Sample”。但是，如果未设置 assetName 的值，但已将作业名称设置为“NewJob”，则 OutputMediaAsset 名称将为“JobOutputAsset(value)\\_NewJob”。\n\n\n##创建包含连锁任务的作业\n\n在许多应用程序方案中，开发人员希望创建一系列处理任务。在媒体服务中，可以创建一系列连锁任务。每个任务执行不同的处理步骤，并且可以使用不同的媒体处理器。连锁任务可以将资产从一个任务转给另一个任务，从而对资产执行线性序列的任务。但是，在作业中执行的任务不需要处于序列中。创建连锁任务时，连锁 **ITask **对象在单个 **IJob** 对象中创建。\n\n>[AZURE.NOTE]每个作业当前有 30 个任务的限制。如果需要链接超过 30 个的任务，请创建多个作业以包含任务。\n\n\n    POST https://media.chinacloudapi.cn/api/Jobs HTTP/1.1\n    Content-Type: application/json;odata=verbose\n    Accept: application/json;odata=verbose\n    DataServiceVersion: 3.0\n    MaxDataServiceVersion: 3.0\n    x-ms-version: 2.11\n    Authorization: Bearer <token value>\n    x-ms-client-request-id: 00000000-0000-0000-0000-000000000000\n\n    {  \n       \"Name\":\"NewTestJob\",\n       \"InputMediaAssets\":[  \n          {  \n             \"__metadata\":{  \n                \"uri\":\"https://testrest.chinacloudapp.cn/api/Assets('nb%3Acid%3AUUID%3A910ffdc1-2e25-4b17-8a42-61ffd4b8914c')\"\n             }\n          }\n       ],\n       \"Tasks\":[  \n          {  \n             \"Configuration\":\"H264 Adaptive Bitrate MP4 Set 720p\",\n             \"MediaProcessorId\":\"nb:mpid:UUID:1b1da727-93ae-4e46-a8a1-268828765609\",\n             \"TaskBody\":\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><taskBody><inputAsset>JobInputAsset(0)</inputAsset><outputAsset>JobOutputAsset(0)</outputAsset></taskBody>\"\n          },\n          {  \n             \"Configuration\":\"H264 Smooth Streaming 720p\",\n             \"MediaProcessorId\":\"nb:mpid:UUID:1b1da727-93ae-4e46-a8a1-268828765609\",\n             \"TaskBody\":\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-16\\\"?><taskBody><inputAsset>JobOutputAsset(0)</inputAsset><outputAsset>JobOutputAsset(1)</outputAsset></taskBody>\"\n          }\n       ]\n    }\n\n\n###注意事项\n\n若要启用任务链，必须满足以下条件：\n\n- 作业必须至少具有两个任务。\n- 必须至少有一个任务的输入是作业中另一个任务的输出。\n\n## 使用 OData 批处理 \n\n以下示例演示如何使用 OData 批处理来创建作业和任务。有关批处理的信息，请参阅[开放数据协议 (OData) 批处理](http://www.odata.org/documentation/odata-version-3-0/batch-processing/)。\n \n    POST https://media.chinacloudapi.cn/api/$batch HTTP/1.1\n    DataServiceVersion: 1.0;NetFx\n    MaxDataServiceVersion: 3.0;NetFx\n    Content-Type: multipart/mixed; boundary=batch_a01a5ec4-ba0f-4536-84b5-66c5a5a6d34e\n    Accept: multipart/mixed\n    Accept-Charset: UTF-8\n    Authorization: Bearer <token>\n    x-ms-version: 2.11\n    x-ms-client-request-id: 00000000-0000-0000-0000-000000000000\n    Host: media.chinacloudapi.cn\n    \n    \n    --batch_a01a5ec4-ba0f-4536-84b5-66c5a5a6d34e\n    Content-Type: multipart/mixed; boundary=changeset_122fb0a4-cd80-4958-820f-346309967e4d\n    \n    --changeset_122fb0a4-cd80-4958-820f-346309967e4d\n    Content-Type: application/http\n    Content-Transfer-Encoding: binary\n    \n    POST https://media.chinacloudapi.cn/api/Jobs HTTP/1.1\n    Content-ID: 1\n    Content-Type: application/json\n    Accept: application/json\n    DataServiceVersion: 3.0\n    MaxDataServiceVersion: 3.0\n    Accept-Charset: UTF-8\n    Authorization: Bearer <token>\n    x-ms-version: 2.11\n    x-ms-client-request-id: 00000000-0000-0000-0000-000000000000\n    \n    {\"Name\" : \"NewTestJob\", \"InputMediaAssets@odata.bind\":[\"https://media.chinacloudapi.cn/api/Assets('nb%3Acid%3AUUID%3A2a22445d-1500-80c6-4b34-f1e5190d33c6')\"]}\n    \n    --changeset_122fb0a4-cd80-4958-820f-346309967e4d\n    Content-Type: application/http\n    Content-Transfer-Encoding: binary\n    \n    POST https://media.chinacloudapi.cn/api/$1/Tasks HTTP/1.1\n    Content-ID: 2\n    Content-Type: application/json;odata=verbose\n    Accept: application/json;odata=verbose\n    DataServiceVersion: 3.0\n    MaxDataServiceVersion: 3.0\n    Accept-Charset: UTF-8\n    Authorization: Bearer <token>\n    x-ms-version: 2.11\n    x-ms-client-request-id: 00000000-0000-0000-0000-000000000000\n    \n    {  \n       \"Configuration\":\"H264 Adaptive Bitrate MP4 Set 720p\",\n       \"MediaProcessorId\":\"nb:mpid:UUID:1b1da727-93ae-4e46-a8a1-268828765609\",\n       \"TaskBody\":\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><taskBody><inputAsset>JobInputAsset(0)</inputAsset><outputAsset assetName=\\\"Custom output name\\\">JobOutputAsset(0)</outputAsset></taskBody>\"\n    }\n\n    --changeset_122fb0a4-cd80-4958-820f-346309967e4d--\n    --batch_a01a5ec4-ba0f-4536-84b5-66c5a5a6d34e--\n \n\n\n## 使用 JobTemplate 创建作业\n\n\n使用一组常用任务处理多个资产时，JobTemplate 可用于指定默认任务预设、任务顺序等。\n\n以下示例演示如何使用以内联方式定义的 TaskTemplate 创建 JobTemplate。TaskTemplate 将 Azure 媒体编码器用作 MediaProcessor 来编码资产文件；但是，也可使用其他 Mediaprocessor。\n\n\n    POST https://media.chinacloudapi.cn/API/JobTemplates HTTP/1.1\n    Content-Type: application/json;odata=verbose\n    Accept: application/json;odata=verbose\n    DataServiceVersion: 3.0\n    MaxDataServiceVersion: 3.0\n    x-ms-version: 2.11\n    Authorization: Bearer <token value>\n    Host: media.chinacloudapi.cn\n\n    \n    {\"Name\" : \"NewJobTemplate25\", \"JobTemplateBody\" : \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><jobTemplate><taskBody taskTemplateId=\\\"nb:ttid:UUID:071370A3-E63E-4E81-A099-AD66BCAC3789\\\"><inputAsset>JobInputAsset(0)</inputAsset><outputAsset>JobOutputAsset(0)</outputAsset></taskBody></jobTemplate>\", \"TaskTemplates\" : [{\"Id\" : \"nb:ttid:UUID:071370A3-E63E-4E81-A099-AD66BCAC3789\", \"Configuration\" : \"H264 Smooth Streaming 720p\", \"MediaProcessorId\" : \"nb:mpid:UUID:2e7aa8f3-4961-4e0c-b4db-0e0439e524f5\", \"Name\" : \"SampleTaskTemplate2\", \"NumberofInputAssets\" : 1, \"NumberofOutputAssets\" : 1}] }\n \n\n>[AZURE.NOTE]与其他媒体服务实体不同的是，必须为每个 TaskTemplate 定义一个新的 GUID 标识符并将其放入请求正文中的 taskTemplateId 和 ID 属性中。内容标识方案必须遵循“标识 Azure 媒体服务实体”中所述的方案。此外，不能更新 JobTemplate。而必须创建一个具有已更新的更改的新 JobTemplate。\n \n\n如果成功，将返回以下响应：\n    \n    HTTP/1.1 201 Created\n    \n    . . .\n\n\n以下示例演示如何创建引用 JobTemplate Id 的作业：\n\n    POST https://media.chinacloudapi.cn/API/Jobs HTTP/1.1\n    Content-Type: application/json;odata=verbose\n    Accept: application/json;odata=verbose\n    DataServiceVersion: 3.0\n    MaxDataServiceVersion: 3.0\n    x-ms-version: 2.11\n    Authorization: Bearer <token value>\n    Host: media.chinacloudapi.cn\n\n    \n    {\"Name\" : \"NewTestJob\", \"InputMediaAssets\" : [{\"__metadata\" : {\"uri\" : \"https://media.chinacloudapi.cn/api/Assets('nb%3Acid%3AUUID%3A3f1fe4a2-68f5-4190-9557-cd45beccef92')\"}}], \"TemplateId\" : \"nb:jtid:UUID:15e6e5e6-ac85-084e-9dc2-db3645fbf0aa\"}\n     \n\n如果成功，将返回以下响应：\n    \n    HTTP/1.1 201 Created\n    \n    . . . \n\n\n\n##后续步骤\n了解如何创建一个对资产进行编码的作业后，请转到[如何使用媒体服务检查作业进度](/documentation/articles/media-services-rest-check-job-progress)主题。\n\n\n##另请参阅\n\n[获取媒体处理器](/documentation/articles/media-services-rest-get-media-processor)\n\n<!---HONumber=76-->"
}