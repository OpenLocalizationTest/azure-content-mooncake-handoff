{
  "nodes": [
    {
      "content": "SQL 数据仓库中的并发性和工作负荷管理 | Winodws Azure",
      "pos": [
        26,
        62
      ]
    },
    {
      "content": "在开发解决方案之前，了解 SQL 数据仓库中的并发性和工作负荷管理。",
      "pos": [
        80,
        114
      ]
    },
    {
      "content": "SQL 数据仓库中的并发性和工作负荷管理",
      "pos": [
        351,
        371
      ]
    },
    {
      "content": "若要在大型 SQL 数据仓库提供可预测的性能，请实施所需的机制来管理工作负荷并发性和计算资源分配。",
      "pos": [
        372,
        421
      ]
    },
    {
      "content": "本文将介绍并发性和工作负荷管理的概念；说明如何实现这两种功能，以及如何在数据仓库中控制它们。",
      "pos": [
        423,
        469
      ]
    },
    {
      "content": "并发",
      "pos": [
        474,
        476
      ]
    },
    {
      "pos": [
        477,
        521
      ],
      "content": "请务必了解 SQL 数据仓库中的并发性由两个概念控制：<bpt id=\"p1\">**</bpt>并发查询<ept id=\"p1\">**</ept>和<bpt id=\"p2\">**</bpt>并发槽<ept id=\"p2\">**</ept>。"
    },
    {
      "pos": [
        523,
        631
      ],
      "content": "并发查询相当于在同一时间执行的查询数目。SQL 数据仓库支持高达 32 个<bpt id=\"p1\">**</bpt>并发查询<ept id=\"p1\">**</ept>。无论是串行查询（单线程）还是并行查询（多线程），每个查询执行都视为单一查询。这是固定的上限，可应用到所有服务级别和所有查询。"
    },
    {
      "pos": [
        633,
        736
      ],
      "content": "并发槽是更为动态的概念，相对于数据仓库的数据仓库单位 (DWU) 服务等级目标。增加分配给 SQL 数据仓库的 DWU 数目时，就会分配更多的计算资源。但是，增加 DWU 也会增加可用<bpt id=\"p1\">**</bpt>并发槽<ept id=\"p1\">**</ept>的数目。"
    },
    {
      "content": "一般来说，每个并发执行的查询都会使用一个或多个并发槽。确切的插槽数目取决于三个因素：",
      "pos": [
        738,
        780
      ]
    },
    {
      "content": "SQL 数据仓库的 DWU 设置",
      "pos": [
        785,
        801
      ]
    },
    {
      "pos": [
        805,
        817
      ],
      "content": "用户所属的<bpt id=\"p1\">**</bpt>资源类<ept id=\"p1\">**</ept>"
    },
    {
      "content": "查询或操作是否由并发槽模型控制",
      "pos": [
        821,
        836
      ]
    },
    {
      "pos": [
        841,
        984
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>值得注意的是，不是每个查询都由并发槽查询规则所控制。但大多数用户查询都是如此。某些查询和操作完全不使用任何并发槽。这些查询和操作仍然受限于并发查询限制，这就是为什么要同时描述这两个规则。有关详细信息，请参阅下面的<bpt id=\"p1\">[</bpt>资源类例外情况<ept id=\"p1\">](#exceptions)</ept>部分。"
    },
    {
      "content": "下表描述了并发查询和并发槽的限制；其中假设查询受资源控制。",
      "pos": [
        986,
        1015
      ]
    },
    {
      "content": "并发槽使用量",
      "pos": [
        1569,
        1575
      ]
    },
    {
      "content": "DW100",
      "pos": [
        1578,
        1583
      ]
    },
    {
      "content": "DW200",
      "pos": [
        1586,
        1591
      ]
    },
    {
      "content": "DW300",
      "pos": [
        1594,
        1599
      ]
    },
    {
      "content": "DW400",
      "pos": [
        1602,
        1607
      ]
    },
    {
      "content": "DW500",
      "pos": [
        1610,
        1615
      ]
    },
    {
      "content": "DW600",
      "pos": [
        1618,
        1623
      ]
    },
    {
      "content": "DW1000",
      "pos": [
        1626,
        1632
      ]
    },
    {
      "content": "DW1200",
      "pos": [
        1635,
        1641
      ]
    },
    {
      "content": "DW1500",
      "pos": [
        1644,
        1650
      ]
    },
    {
      "content": "DW2000",
      "pos": [
        1653,
        1659
      ]
    },
    {
      "content": "并发查询数上限",
      "pos": [
        1782,
        1789
      ]
    },
    {
      "content": "32",
      "pos": [
        1792,
        1794
      ]
    },
    {
      "content": "32",
      "pos": [
        1797,
        1799
      ]
    },
    {
      "content": "32",
      "pos": [
        1802,
        1804
      ]
    },
    {
      "content": "32",
      "pos": [
        1807,
        1809
      ]
    },
    {
      "content": "32",
      "pos": [
        1812,
        1814
      ]
    },
    {
      "content": "32",
      "pos": [
        1817,
        1819
      ]
    },
    {
      "content": "32",
      "pos": [
        1822,
        1824
      ]
    },
    {
      "content": "32",
      "pos": [
        1827,
        1829
      ]
    },
    {
      "content": "32",
      "pos": [
        1832,
        1834
      ]
    },
    {
      "content": "32",
      "pos": [
        1837,
        1839
      ]
    },
    {
      "content": "并发槽数上限",
      "pos": [
        1845,
        1851
      ]
    },
    {
      "content": "4",
      "pos": [
        1854,
        1855
      ]
    },
    {
      "content": "8",
      "pos": [
        1858,
        1859
      ]
    },
    {
      "content": "12",
      "pos": [
        1862,
        1864
      ]
    },
    {
      "content": "16",
      "pos": [
        1867,
        1869
      ]
    },
    {
      "content": "20",
      "pos": [
        1872,
        1874
      ]
    },
    {
      "content": "24",
      "pos": [
        1877,
        1879
      ]
    },
    {
      "content": "40",
      "pos": [
        1882,
        1884
      ]
    },
    {
      "content": "48",
      "pos": [
        1887,
        1889
      ]
    },
    {
      "content": "60",
      "pos": [
        1892,
        1894
      ]
    },
    {
      "content": "80",
      "pos": [
        1897,
        1899
      ]
    },
    {
      "content": "SQL 数据仓库查询工作负荷必须保持在这些阈值范围内。如果有 32 个以上的并发查询，或超过并发槽的数目，查询将排入队列，直到可以满足两个阈值。",
      "pos": [
        1903,
        1975
      ]
    },
    {
      "content": "工作负荷管理",
      "pos": [
        1980,
        1986
      ]
    },
    {
      "pos": [
        1988,
        2036
      ],
      "content": "SQL 数据仓库以<bpt id=\"p1\">**</bpt>数据库角色<ept id=\"p1\">**</ept>的形式公开四个不同的资源类，作为其工作负荷管理实现的一部分。"
    },
    {
      "content": "这些角色为：",
      "pos": [
        2038,
        2044
      ]
    },
    {
      "content": "smallrc",
      "pos": [
        2048,
        2055
      ]
    },
    {
      "content": "mediumrc",
      "pos": [
        2058,
        2066
      ]
    },
    {
      "content": "largerc",
      "pos": [
        2069,
        2076
      ]
    },
    {
      "content": "xlargerc",
      "pos": [
        2079,
        2087
      ]
    },
    {
      "content": "资源类是 SQL 数据仓库工作负荷管理中不可或缺的一部分。它们控制分配给查询的计算资源。",
      "pos": [
        2089,
        2133
      ]
    },
    {
      "content": "默认情况下，每个用户都是小型资源类 - smallrc 的成员。但是，任何用户都可以添加到一个或多个较高的资源类。一般而言，SQL 数据仓库将采用最高的角色成员资格来执行查询。将用户添加到较高的资源类会增加该用户的资源，但也会消耗更多的并发槽；这可能会限制并发性。这是因为，将多个资源分配给一个查询时，系统需要限制其他查询所使用的资源。天下没有免费的午餐。",
      "pos": [
        2135,
        2313
      ]
    },
    {
      "content": "较高资源类控制的最重要资源就是内存。大多数有意义大小的数据仓库表都使用群集列存储索引。这通常会提供数据仓库工作负荷的最佳性能，而维护工作负荷是一项内存密集型操作。使用较高的资源类通常相当有助于索引重建等数据管理操作。",
      "pos": [
        2315,
        2423
      ]
    },
    {
      "content": "SQL 数据仓库已通过使用数据库角色来实现资源类。若要成为较高资源类的成员并增加内存和优先级，只需要将数据库用户添加到前面所述的某个角色/资源类。",
      "pos": [
        2425,
        2498
      ]
    },
    {
      "content": "资源类成员资格",
      "pos": [
        2504,
        2511
      ]
    },
    {
      "pos": [
        2513,
        2709
      ],
      "content": "你可以使用 <ph id=\"ph1\">`sp_addrolemember`</ph> 和 <ph id=\"ph2\">`sp_droprolemember`</ph> 过程将自己添加为工作负荷管理数据库角色，或者删除自己的这种角色。请注意，需要 <ph id=\"ph3\">`ALTER ROLE`</ph> 权限才能执行此操作。不能使用 ALTER ROLE DDL 语法。必须使用上述存储过程。本文末尾的 [管理用户)[#managing-users] 部分提供了有关如何创建登录名和用户的完整示例。"
    },
    {
      "pos": [
        2713,
        2783
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>相比于在工作负荷管理组内外添加用户，更方便的做法通常是通过永久分配给较高资源类的独立登录名/用户来启动更密集的操作。"
    },
    {
      "content": "内存分配",
      "pos": [
        2789,
        2793
      ]
    },
    {
      "content": "下表详细说明了每个查询可用的内存增量；取决于应用到执行查询的用户的资源类：",
      "pos": [
        2795,
        2832
      ]
    },
    {
      "content": "可用内存（每个 dist）",
      "pos": [
        4662,
        4675
      ]
    },
    {
      "content": "DW100",
      "pos": [
        4678,
        4683
      ]
    },
    {
      "content": "DW200",
      "pos": [
        4686,
        4691
      ]
    },
    {
      "content": "DW300",
      "pos": [
        4694,
        4699
      ]
    },
    {
      "content": "DW400",
      "pos": [
        4702,
        4707
      ]
    },
    {
      "content": "DW500",
      "pos": [
        4710,
        4715
      ]
    },
    {
      "content": "DW600",
      "pos": [
        4718,
        4723
      ]
    },
    {
      "content": "DW1000",
      "pos": [
        4726,
        4732
      ]
    },
    {
      "content": "DW1200",
      "pos": [
        4735,
        4741
      ]
    },
    {
      "content": "DW1500",
      "pos": [
        4744,
        4750
      ]
    },
    {
      "content": "DW2000",
      "pos": [
        4753,
        4759
      ]
    },
    {
      "content": "smallrc(default) (s)",
      "pos": [
        4893,
        4913
      ]
    },
    {
      "content": "100 MB",
      "pos": [
        4916,
        4922
      ]
    },
    {
      "content": "100 MB",
      "pos": [
        4925,
        4931
      ]
    },
    {
      "content": "100 MB",
      "pos": [
        4934,
        4940
      ]
    },
    {
      "content": "100 MB",
      "pos": [
        4943,
        4949
      ]
    },
    {
      "content": "100 MB",
      "pos": [
        4952,
        4958
      ]
    },
    {
      "content": "100 MB",
      "pos": [
        4961,
        4967
      ]
    },
    {
      "content": "100 MB",
      "pos": [
        4970,
        4976
      ]
    },
    {
      "content": "100 MB",
      "pos": [
        4979,
        4985
      ]
    },
    {
      "content": "100 MB",
      "pos": [
        4988,
        4994
      ]
    },
    {
      "content": "100 MB",
      "pos": [
        4997,
        5003
      ]
    },
    {
      "content": "mediumrc (m)",
      "pos": [
        5008,
        5020
      ]
    },
    {
      "content": "100 MB",
      "pos": [
        5023,
        5029
      ]
    },
    {
      "content": "200 MB",
      "pos": [
        5032,
        5038
      ]
    },
    {
      "content": "200 MB",
      "pos": [
        5041,
        5047
      ]
    },
    {
      "content": "400 MB",
      "pos": [
        5050,
        5056
      ]
    },
    {
      "content": "400 MB",
      "pos": [
        5059,
        5065
      ]
    },
    {
      "content": "400 MB",
      "pos": [
        5068,
        5074
      ]
    },
    {
      "content": "800 MB",
      "pos": [
        5077,
        5083
      ]
    },
    {
      "content": "800 MB",
      "pos": [
        5086,
        5092
      ]
    },
    {
      "content": "800 MB",
      "pos": [
        5095,
        5101
      ]
    },
    {
      "content": "1600 MB",
      "pos": [
        5104,
        5111
      ]
    },
    {
      "content": "largerc (l)",
      "pos": [
        5116,
        5127
      ]
    },
    {
      "content": "200 MB",
      "pos": [
        5130,
        5136
      ]
    },
    {
      "content": "400 MB",
      "pos": [
        5139,
        5145
      ]
    },
    {
      "content": "400 MB",
      "pos": [
        5148,
        5154
      ]
    },
    {
      "content": "800 MB",
      "pos": [
        5157,
        5163
      ]
    },
    {
      "content": "800 MB",
      "pos": [
        5166,
        5172
      ]
    },
    {
      "content": "800 MB",
      "pos": [
        5175,
        5181
      ]
    },
    {
      "content": "1600 MB",
      "pos": [
        5184,
        5191
      ]
    },
    {
      "content": "1600 MB",
      "pos": [
        5194,
        5201
      ]
    },
    {
      "content": "1600 MB",
      "pos": [
        5204,
        5211
      ]
    },
    {
      "content": "3200 MB",
      "pos": [
        5214,
        5221
      ]
    },
    {
      "content": "xlargerc (xl)",
      "pos": [
        5226,
        5239
      ]
    },
    {
      "content": "400 MB",
      "pos": [
        5242,
        5248
      ]
    },
    {
      "content": "800 MB",
      "pos": [
        5251,
        5257
      ]
    },
    {
      "content": "800 MB",
      "pos": [
        5260,
        5266
      ]
    },
    {
      "content": "1600 MB",
      "pos": [
        5269,
        5276
      ]
    },
    {
      "content": "1600 MB",
      "pos": [
        5279,
        5286
      ]
    },
    {
      "content": "1600 MB",
      "pos": [
        5289,
        5296
      ]
    },
    {
      "content": "3200 MB",
      "pos": [
        5299,
        5306
      ]
    },
    {
      "content": "3200 MB",
      "pos": [
        5309,
        5316
      ]
    },
    {
      "content": "3200 MB",
      "pos": [
        5319,
        5326
      ]
    },
    {
      "content": "6400 MB",
      "pos": [
        5329,
        5336
      ]
    },
    {
      "content": "并发槽使用量",
      "pos": [
        5344,
        5350
      ]
    },
    {
      "content": "此外，如上所述，分配给用户的资源类越高，并发槽的使用量就越大。下表描述了查询在给定资源类中的并发槽使用量。",
      "pos": [
        5352,
        5405
      ]
    },
    {
      "content": "使用量",
      "pos": [
        6482,
        6485
      ]
    },
    {
      "content": "DW100",
      "pos": [
        6488,
        6493
      ]
    },
    {
      "content": "DW200",
      "pos": [
        6496,
        6501
      ]
    },
    {
      "content": "DW300",
      "pos": [
        6504,
        6509
      ]
    },
    {
      "content": "DW400",
      "pos": [
        6512,
        6517
      ]
    },
    {
      "content": "DW500",
      "pos": [
        6520,
        6525
      ]
    },
    {
      "content": "DW600",
      "pos": [
        6528,
        6533
      ]
    },
    {
      "content": "DW1000",
      "pos": [
        6536,
        6542
      ]
    },
    {
      "content": "DW1200",
      "pos": [
        6545,
        6551
      ]
    },
    {
      "content": "DW1500",
      "pos": [
        6554,
        6560
      ]
    },
    {
      "content": "DW2000",
      "pos": [
        6563,
        6569
      ]
    },
    {
      "content": "并发查询数上限",
      "pos": [
        6691,
        6698
      ]
    },
    {
      "content": "32",
      "pos": [
        6701,
        6703
      ]
    },
    {
      "content": "32",
      "pos": [
        6706,
        6708
      ]
    },
    {
      "content": "32",
      "pos": [
        6711,
        6713
      ]
    },
    {
      "content": "32",
      "pos": [
        6716,
        6718
      ]
    },
    {
      "content": "32",
      "pos": [
        6721,
        6723
      ]
    },
    {
      "content": "32",
      "pos": [
        6726,
        6728
      ]
    },
    {
      "content": "32",
      "pos": [
        6731,
        6733
      ]
    },
    {
      "content": "32",
      "pos": [
        6736,
        6738
      ]
    },
    {
      "content": "32",
      "pos": [
        6741,
        6743
      ]
    },
    {
      "content": "32",
      "pos": [
        6746,
        6748
      ]
    },
    {
      "content": "并发槽数上限",
      "pos": [
        6753,
        6759
      ]
    },
    {
      "content": "4",
      "pos": [
        6762,
        6763
      ]
    },
    {
      "content": "8",
      "pos": [
        6766,
        6767
      ]
    },
    {
      "content": "12",
      "pos": [
        6770,
        6772
      ]
    },
    {
      "content": "16",
      "pos": [
        6775,
        6777
      ]
    },
    {
      "content": "20",
      "pos": [
        6780,
        6782
      ]
    },
    {
      "content": "24",
      "pos": [
        6785,
        6787
      ]
    },
    {
      "content": "40",
      "pos": [
        6790,
        6792
      ]
    },
    {
      "content": "48",
      "pos": [
        6795,
        6797
      ]
    },
    {
      "content": "60",
      "pos": [
        6800,
        6802
      ]
    },
    {
      "content": "80",
      "pos": [
        6805,
        6807
      ]
    },
    {
      "content": "smallrc(default) (s)",
      "pos": [
        6812,
        6832
      ]
    },
    {
      "content": "1",
      "pos": [
        6835,
        6836
      ]
    },
    {
      "content": "1",
      "pos": [
        6839,
        6840
      ]
    },
    {
      "content": "1",
      "pos": [
        6843,
        6844
      ]
    },
    {
      "content": "1",
      "pos": [
        6847,
        6848
      ]
    },
    {
      "content": "1",
      "pos": [
        6851,
        6852
      ]
    },
    {
      "content": "1",
      "pos": [
        6855,
        6856
      ]
    },
    {
      "content": "1",
      "pos": [
        6859,
        6860
      ]
    },
    {
      "content": "1",
      "pos": [
        6863,
        6864
      ]
    },
    {
      "content": "1",
      "pos": [
        6867,
        6868
      ]
    },
    {
      "content": "1",
      "pos": [
        6871,
        6872
      ]
    },
    {
      "content": "mediumrc (m)",
      "pos": [
        6877,
        6889
      ]
    },
    {
      "content": "1",
      "pos": [
        6892,
        6893
      ]
    },
    {
      "content": "2",
      "pos": [
        6896,
        6897
      ]
    },
    {
      "content": "2",
      "pos": [
        6900,
        6901
      ]
    },
    {
      "content": "4",
      "pos": [
        6904,
        6905
      ]
    },
    {
      "content": "4",
      "pos": [
        6908,
        6909
      ]
    },
    {
      "content": "4",
      "pos": [
        6912,
        6913
      ]
    },
    {
      "content": "8",
      "pos": [
        6916,
        6917
      ]
    },
    {
      "content": "8",
      "pos": [
        6920,
        6921
      ]
    },
    {
      "content": "8",
      "pos": [
        6924,
        6925
      ]
    },
    {
      "content": "16",
      "pos": [
        6928,
        6930
      ]
    },
    {
      "content": "largerc (l)",
      "pos": [
        6935,
        6946
      ]
    },
    {
      "content": "2",
      "pos": [
        6949,
        6950
      ]
    },
    {
      "content": "4",
      "pos": [
        6953,
        6954
      ]
    },
    {
      "content": "4",
      "pos": [
        6957,
        6958
      ]
    },
    {
      "content": "8",
      "pos": [
        6961,
        6962
      ]
    },
    {
      "content": "8",
      "pos": [
        6965,
        6966
      ]
    },
    {
      "content": "8",
      "pos": [
        6969,
        6970
      ]
    },
    {
      "content": "16",
      "pos": [
        6973,
        6975
      ]
    },
    {
      "content": "16",
      "pos": [
        6978,
        6980
      ]
    },
    {
      "content": "16",
      "pos": [
        6983,
        6985
      ]
    },
    {
      "content": "32",
      "pos": [
        6988,
        6990
      ]
    },
    {
      "content": "xlargerc (xl)",
      "pos": [
        6995,
        7008
      ]
    },
    {
      "content": "4",
      "pos": [
        7011,
        7012
      ]
    },
    {
      "content": "8",
      "pos": [
        7015,
        7016
      ]
    },
    {
      "content": "8",
      "pos": [
        7019,
        7020
      ]
    },
    {
      "content": "16",
      "pos": [
        7023,
        7025
      ]
    },
    {
      "content": "16",
      "pos": [
        7028,
        7030
      ]
    },
    {
      "content": "16",
      "pos": [
        7033,
        7035
      ]
    },
    {
      "content": "32",
      "pos": [
        7038,
        7040
      ]
    },
    {
      "content": "32",
      "pos": [
        7043,
        7045
      ]
    },
    {
      "content": "32",
      "pos": [
        7048,
        7050
      ]
    },
    {
      "content": "64",
      "pos": [
        7053,
        7055
      ]
    },
    {
      "content": "异常",
      "pos": [
        7063,
        7065
      ]
    },
    {
      "pos": [
        7067,
        7284
      ],
      "content": "更高资源类的成员资格有时不改变分配给查询或操作的资源。这通常发生于执行操作所需的资源不足。在这些情况下，始终使用默认或小型资源类 (smallrc)，而不考虑分配给用户的资源类。例如，<ph id=\"ph1\">`CREATE LOGIN`</ph> 始终在 smallrc 中运行。执行此操作所需的资源非常少，因此没有必要将查询纳入并发槽模型中。预先分配大量存储给此操作是一种浪费。从并发槽模型中排除 <ph id=\"ph2\">`CREATE LOGIN`</ph> 能够大大提高 SQL 数据仓库的效率。"
    },
    {
      "content": "下面是资源类控制的语句和操作列表：",
      "pos": [
        7286,
        7303
      ]
    },
    {
      "content": "INSERT-SELECT",
      "pos": [
        7307,
        7320
      ]
    },
    {
      "content": "UPDATE",
      "pos": [
        7323,
        7329
      ]
    },
    {
      "content": "删除",
      "pos": [
        7332,
        7334
      ]
    },
    {
      "content": "SELECT（查询用户表时）",
      "pos": [
        7337,
        7351
      ]
    },
    {
      "content": "ALTER INDEX REBUILD",
      "pos": [
        7354,
        7373
      ]
    },
    {
      "content": "ALTER INDEX REORGANIZE",
      "pos": [
        7376,
        7398
      ]
    },
    {
      "content": "ALTER TABLE REBUILD",
      "pos": [
        7401,
        7420
      ]
    },
    {
      "content": "CREATE INDEX",
      "pos": [
        7423,
        7435
      ]
    },
    {
      "content": "CREATE CLUSTERED COLUMNSTORE INDEX",
      "pos": [
        7438,
        7472
      ]
    },
    {
      "content": "CREATE TABLE AS SELECT",
      "pos": [
        7475,
        7497
      ]
    },
    {
      "content": "数据加载",
      "pos": [
        7501,
        7505
      ]
    },
    {
      "content": "数据移动服务 (DMS) 执行的数据移动操作",
      "pos": [
        7509,
        7531
      ]
    },
    {
      "pos": [
        7533,
        7548
      ],
      "content": "以下语句<bpt id=\"p1\">**</bpt>不<ept id=\"p1\">**</ept>接受资源类："
    },
    {
      "content": "CREATE TABLE",
      "pos": [
        7552,
        7564
      ]
    },
    {
      "content": "ALTER TABLE ...SWITCH PARTITION",
      "pos": [
        7567,
        7598
      ]
    },
    {
      "content": "ALTER TABLE ...SPLIT PARTITION",
      "pos": [
        7602,
        7632
      ]
    },
    {
      "content": "ALTER TABLE ...MERGE PARTITION",
      "pos": [
        7636,
        7666
      ]
    },
    {
      "content": "DROP TABLE",
      "pos": [
        7670,
        7680
      ]
    },
    {
      "content": "ALTER INDEX DISABLE",
      "pos": [
        7683,
        7702
      ]
    },
    {
      "content": "DROP INDEX",
      "pos": [
        7705,
        7715
      ]
    },
    {
      "content": "CREATE STATISTICS",
      "pos": [
        7718,
        7735
      ]
    },
    {
      "content": "UPDATE STATISTICS",
      "pos": [
        7738,
        7755
      ]
    },
    {
      "content": "DROP STATISTICS",
      "pos": [
        7758,
        7773
      ]
    },
    {
      "content": "TRUNCATE TABLE",
      "pos": [
        7776,
        7790
      ]
    },
    {
      "content": "ALTER AUTHORIZATION",
      "pos": [
        7793,
        7812
      ]
    },
    {
      "content": "CREATE LOGIN",
      "pos": [
        7815,
        7827
      ]
    },
    {
      "content": "CREATE USER",
      "pos": [
        7830,
        7841
      ]
    },
    {
      "content": "ALTER USER",
      "pos": [
        7844,
        7854
      ]
    },
    {
      "content": "DROP USER",
      "pos": [
        7857,
        7866
      ]
    },
    {
      "content": "CREATE PROCEDURE",
      "pos": [
        7869,
        7885
      ]
    },
    {
      "content": "ALTER PROCEDURE",
      "pos": [
        7888,
        7903
      ]
    },
    {
      "content": "DROP PROCEDURE",
      "pos": [
        7906,
        7920
      ]
    },
    {
      "content": "CREATE VIEW",
      "pos": [
        7923,
        7934
      ]
    },
    {
      "content": "DROP VIEW",
      "pos": [
        7937,
        7946
      ]
    },
    {
      "content": "INSERT VALUES",
      "pos": [
        7949,
        7962
      ]
    },
    {
      "content": "SELECT（从系统视图和 DMV）",
      "pos": [
        7965,
        7983
      ]
    },
    {
      "content": "EXPLAIN",
      "pos": [
        7986,
        7993
      ]
    },
    {
      "content": "DBCC",
      "pos": [
        7996,
        8000
      ]
    },
    {
      "pos": [
        8158,
        8219
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>值得强调的是，只针对动态管理检视和目录检视执行的 <ph id=\"ph2\">`SELECT`</ph> 查询<bpt id=\"p1\">**</bpt>不是<ept id=\"p1\">**</ept>由资源类控制。"
    },
    {
      "content": "请务必记住，大多数用户查询很可能由资源类控制。一般而言，活动的查询工作负荷必须落在并发查询和并发槽阈值内，除非已被平台专门排除。最终用户无法选择从并发槽模型中排除查询。超出任何一个阈值后，查询将开始排队。排队的查询将依次根据优先顺序和提交时间予以解决。",
      "pos": [
        8221,
        8347
      ]
    },
    {
      "content": "内部",
      "pos": [
        8353,
        8355
      ]
    },
    {
      "content": "在 SQL 数据仓库的工作负荷管理幕后，情况有点复杂。资源类动态映射到资源调控器内的一组常规工作负荷管理组。使用的组取决于仓库的 DWU 值。但是，SQL 数据仓库总共使用八个工作负荷组。它们具有以下特点：",
      "pos": [
        8358,
        8461
      ]
    },
    {
      "content": "SloDWGroupC00",
      "pos": [
        8465,
        8478
      ]
    },
    {
      "content": "SloDWGroupC01",
      "pos": [
        8481,
        8494
      ]
    },
    {
      "content": "SloDWGroupC02",
      "pos": [
        8497,
        8510
      ]
    },
    {
      "content": "SloDWGroupC03",
      "pos": [
        8513,
        8526
      ]
    },
    {
      "content": "SloDWGroupC04",
      "pos": [
        8529,
        8542
      ]
    },
    {
      "content": "SloDWGroupC05",
      "pos": [
        8545,
        8558
      ]
    },
    {
      "content": "SloDWGroupC06",
      "pos": [
        8561,
        8574
      ]
    },
    {
      "content": "SloDWGroupC07",
      "pos": [
        8577,
        8590
      ]
    },
    {
      "content": "这 8 个组映射到并发槽使用量",
      "pos": [
        8592,
        8607
      ]
    },
    {
      "content": "工作负荷组",
      "pos": [
        8611,
        8616
      ]
    },
    {
      "content": "并发槽映射",
      "pos": [
        8619,
        8624
      ]
    },
    {
      "content": "优先级映射",
      "pos": [
        8627,
        8632
      ]
    },
    {
      "content": "SloDWGroupC00",
      "pos": [
        8702,
        8715
      ]
    },
    {
      "content": "1",
      "pos": [
        8718,
        8719
      ]
    },
    {
      "content": "中型",
      "pos": [
        8722,
        8724
      ]
    },
    {
      "content": "SloDWGroupC01",
      "pos": [
        8729,
        8742
      ]
    },
    {
      "content": "2",
      "pos": [
        8745,
        8746
      ]
    },
    {
      "content": "中型",
      "pos": [
        8749,
        8751
      ]
    },
    {
      "content": "SloDWGroupC02",
      "pos": [
        8756,
        8769
      ]
    },
    {
      "content": "4",
      "pos": [
        8772,
        8773
      ]
    },
    {
      "content": "中型",
      "pos": [
        8776,
        8778
      ]
    },
    {
      "content": "SloDWGroupC03",
      "pos": [
        8783,
        8796
      ]
    },
    {
      "content": "8",
      "pos": [
        8799,
        8800
      ]
    },
    {
      "content": "中型",
      "pos": [
        8803,
        8805
      ]
    },
    {
      "content": "SloDWGroupC04",
      "pos": [
        8810,
        8823
      ]
    },
    {
      "content": "16",
      "pos": [
        8826,
        8828
      ]
    },
    {
      "content": "高",
      "pos": [
        8831,
        8832
      ]
    },
    {
      "content": "SloDWGroupC05",
      "pos": [
        8837,
        8850
      ]
    },
    {
      "content": "32",
      "pos": [
        8853,
        8855
      ]
    },
    {
      "content": "高",
      "pos": [
        8858,
        8859
      ]
    },
    {
      "content": "SloDWGroupC06",
      "pos": [
        8864,
        8877
      ]
    },
    {
      "content": "64",
      "pos": [
        8880,
        8882
      ]
    },
    {
      "content": "高",
      "pos": [
        8885,
        8886
      ]
    },
    {
      "content": "SloDWGroupC07",
      "pos": [
        8891,
        8904
      ]
    },
    {
      "content": "128",
      "pos": [
        8907,
        8910
      ]
    },
    {
      "content": "高",
      "pos": [
        8913,
        8914
      ]
    },
    {
      "content": "因此，举例来说，如果 DW500 是 SQL 数据仓库当前的 DWU 设置，则活动的工作负荷组将映射到资源类，如下所示：",
      "pos": [
        8918,
        8978
      ]
    },
    {
      "content": "资源类",
      "pos": [
        8982,
        8985
      ]
    },
    {
      "content": "工作负荷组",
      "pos": [
        8988,
        8993
      ]
    },
    {
      "content": "使用的并发槽数",
      "pos": [
        8996,
        9003
      ]
    },
    {
      "content": "重要性",
      "pos": [
        9006,
        9009
      ]
    },
    {
      "content": "smallrc",
      "pos": [
        9090,
        9097
      ]
    },
    {
      "content": "SloDWGroupC00",
      "pos": [
        9100,
        9113
      ]
    },
    {
      "content": "1",
      "pos": [
        9116,
        9117
      ]
    },
    {
      "content": "中型",
      "pos": [
        9120,
        9122
      ]
    },
    {
      "content": "mediumrc",
      "pos": [
        9127,
        9135
      ]
    },
    {
      "content": "SloDWGroupC02",
      "pos": [
        9138,
        9151
      ]
    },
    {
      "content": "4",
      "pos": [
        9154,
        9155
      ]
    },
    {
      "content": "中型",
      "pos": [
        9158,
        9160
      ]
    },
    {
      "content": "largerc",
      "pos": [
        9165,
        9172
      ]
    },
    {
      "content": "SloDWGroupC03",
      "pos": [
        9175,
        9188
      ]
    },
    {
      "content": "8",
      "pos": [
        9191,
        9192
      ]
    },
    {
      "content": "中型",
      "pos": [
        9195,
        9197
      ]
    },
    {
      "content": "xlargerc",
      "pos": [
        9202,
        9210
      ]
    },
    {
      "content": "SloDWGroupC04",
      "pos": [
        9213,
        9226
      ]
    },
    {
      "content": "16",
      "pos": [
        9229,
        9231
      ]
    },
    {
      "content": "高",
      "pos": [
        9234,
        9235
      ]
    },
    {
      "content": "若要从资源调控器的立场查看详细信息中内存资源分配的差异，请使用以下查询：",
      "pos": [
        9239,
        9275
      ]
    },
    {
      "pos": [
        11245,
        11291
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>上述查询还可以在故障排除时用来分析工作负荷组的活动使用量和历史使用量"
    },
    {
      "content": "工作负荷管理示例",
      "pos": [
        11296,
        11304
      ]
    },
    {
      "content": "本部分提供其他一些示例来说明如何管理用户和检测正在排队的查询。",
      "pos": [
        11306,
        11337
      ]
    },
    {
      "content": "管理用户",
      "pos": [
        11343,
        11347
      ]
    },
    {
      "content": "若要向某个用户授予对 SQL 数据仓库的访问权限，该用户首先需要一个登录名。",
      "pos": [
        11349,
        11387
      ]
    },
    {
      "content": "与 SQL 数据仓库的 master 数据库建立连接，然后执行以下命令：",
      "pos": [
        11389,
        11425
      ]
    },
    {
      "pos": [
        11531,
        11790
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>最好为你在 master 数据库中的登录名创建用户，以便能够同时使用 Azure SQL 数据库和 SQL 数据仓库。此级别有两个可用的服务器角色，需要登录才能在 master 数据库中拥有用户以授予成员资格。这些角色为 <ph id=\"ph2\">`Loginmanager`</ph> 和 <ph id=\"ph3\">`dbmanager`</ph>。在 Azure SQL 数据库和 SQL 数据仓库中，这些角色授予管理登录以及创建数据库的权限。这与 SQL Server 有所不同。有关详细信息，请参阅<bpt id=\"p1\">[</bpt><ept id=\"p1\">在 Azure SQL 数据库中管理数据库和登录名]</ept>一文。"
    },
    {
      "content": "创建登录名后，需要添加用户帐户。",
      "pos": [
        11792,
        11808
      ]
    },
    {
      "content": "与 SQL 数据仓库数据库建立连接，然后执行以下命令：",
      "pos": [
        11810,
        11837
      ]
    },
    {
      "pos": [
        11890,
        11984
      ],
      "content": "完成之后，必须向用户授予权限。以下示例授予对 SQL 数据仓库数据库的 <ph id=\"ph1\">`CONTROL`</ph> 权限。数据库级别的 <ph id=\"ph2\">`CONTROL`</ph> 相当于 SQL Server 中的 db\\_owner。"
    },
    {
      "content": "若要查看工作负荷管理角色，请使用以下查询：",
      "pos": [
        12043,
        12064
      ]
    },
    {
      "content": "若要将用户添加到增加工作负荷管理角色，请使用以下查询：",
      "pos": [
        12236,
        12263
      ]
    },
    {
      "content": "若要从工作负荷管理角色中删除用户，请使用以下查询：",
      "pos": [
        12321,
        12346
      ]
    },
    {
      "pos": [
        12407,
        12437
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>无法从 smallrc 中删除用户。"
    },
    {
      "content": "若要查看哪些用户是给定角色的成员，请使用以下查询：",
      "pos": [
        12439,
        12464
      ]
    },
    {
      "content": "排队的查询检测",
      "pos": [
        12835,
        12842
      ]
    },
    {
      "pos": [
        12843,
        12897
      ],
      "content": "若要识别保留在并发队列中的查询，始终可以引用 <ph id=\"ph1\">`sys.dm_pdw_exec_requests`</ph> DMV。"
    },
    {
      "content": "SQL 数据仓库提供特定的等待类型来度量并发性。",
      "pos": [
        13413,
        13437
      ]
    },
    {
      "content": "它们具有以下特点：",
      "pos": [
        13439,
        13448
      ]
    },
    {
      "content": "LocalQueriesConcurrencyResourceType",
      "pos": [
        13453,
        13488
      ]
    },
    {
      "content": "UserConcurrencyResourceType",
      "pos": [
        13491,
        13518
      ]
    },
    {
      "content": "DmsConcurrencyResourceType",
      "pos": [
        13521,
        13547
      ]
    },
    {
      "content": "BackupConcurrencyResourceType",
      "pos": [
        13550,
        13579
      ]
    },
    {
      "pos": [
        13581,
        13671
      ],
      "content": "LocalQueriesConcurrencyResourceType 引用并发槽框架外部的查询。DMV 查询和 <ph id=\"ph1\">`SELECT @@VERSION`</ph> 等系统函数是本地查询的示例。"
    },
    {
      "content": "UserConcurrencyResourceType 引用并发槽框架内部的查询。针对最终用户表的查询代表使用此资源类型的示例。",
      "pos": [
        13673,
        13737
      ]
    },
    {
      "content": "DmsConcurrencyResourceType 引用数据移动操作生成的等待。",
      "pos": [
        13739,
        13780
      ]
    },
    {
      "content": "备份数据库时，可以看到 BackupConcurrencyResourceType。此资源类型的最大值为 1。如果同时请求了多个备份，其他备份将会排队。",
      "pos": [
        13782,
        13858
      ]
    },
    {
      "pos": [
        13861,
        13913
      ],
      "content": "若要分析当前排队的查询以确定请求正在等待哪些资源，请引用 <ph id=\"ph1\">`sys.dm_pdw_waits`</ph> DMV。"
    },
    {
      "pos": [
        15221,
        15338
      ],
      "content": "若只要查看给定查询使用的资源等待，可以引用 <ph id=\"ph1\">`sys.dm_pdw_resource_waits`</ph> DMV。资源等待时间只度量等待提供资源的时间，与信号等待时间相反，后者是基础 SQL Server 将查询调度到 CPU 所需的时间。"
    },
    {
      "pos": [
        15821,
        15874
      ],
      "content": "最后，SQL 数据仓库提供 <ph id=\"ph1\">`sys.dm_pdw_wait_stats`</ph> DMV 用于分析等待历史趋势。"
    },
    {
      "content": "后续步骤",
      "pos": [
        16094,
        16098
      ]
    },
    {
      "pos": [
        16099,
        16120
      ],
      "content": "有关更多开发技巧，请参阅<bpt id=\"p1\">[</bpt>开发概述<ept id=\"p1\">][]</ept>。"
    }
  ],
  "content": "<properties\n   pageTitle=\"SQL 数据仓库中的并发性和工作负荷管理 | Winodws Azure\"\n   description=\"在开发解决方案之前，了解 SQL 数据仓库中的并发性和工作负荷管理。\"\n   services=\"sql-data-warehouse\"\n   documentationCenter=\"NA\"\n   authors=\"jrowlandjones\"\n   manager=\"barbkess\"\n   editor=\"jrowlandjones\"/>\n\n<tags\n   ms.service=\"sql-data-warehouse\"\n   ms.date=\"09/22/2015\"\n   wacn.date=\"01/20/2016\"/>\n\n# SQL 数据仓库中的并发性和工作负荷管理\n若要在大型 SQL 数据仓库提供可预测的性能，请实施所需的机制来管理工作负荷并发性和计算资源分配。\n\n本文将介绍并发性和工作负荷管理的概念；说明如何实现这两种功能，以及如何在数据仓库中控制它们。\n\n## 并发\n请务必了解 SQL 数据仓库中的并发性由两个概念控制：**并发查询**和**并发槽**。\n\n并发查询相当于在同一时间执行的查询数目。SQL 数据仓库支持高达 32 个**并发查询**。无论是串行查询（单线程）还是并行查询（多线程），每个查询执行都视为单一查询。这是固定的上限，可应用到所有服务级别和所有查询。\n\n并发槽是更为动态的概念，相对于数据仓库的数据仓库单位 (DWU) 服务等级目标。增加分配给 SQL 数据仓库的 DWU 数目时，就会分配更多的计算资源。但是，增加 DWU 也会增加可用**并发槽**的数目。\n\n一般来说，每个并发执行的查询都会使用一个或多个并发槽。确切的插槽数目取决于三个因素：\n\n1. SQL 数据仓库的 DWU 设置\n2. 用户所属的**资源类**\n3. 查询或操作是否由并发槽模型控制 \n\n> [AZURE.NOTE]值得注意的是，不是每个查询都由并发槽查询规则所控制。但大多数用户查询都是如此。某些查询和操作完全不使用任何并发槽。这些查询和操作仍然受限于并发查询限制，这就是为什么要同时描述这两个规则。有关详细信息，请参阅下面的[资源类例外情况](#exceptions)部分。\n\n下表描述了并发查询和并发槽的限制；其中假设查询受资源控制。\n\n<!--\n| Concurrency Slot Consumption | DW100 | DW200 | DW300 | DW400 | DW500 | DW600 | DW1000 | DW1200 | DW1500 | DW2000 | DW3000 | DW6000 |\n| :--------------------------- | :---- | :---- | :---- | :---- | :---- | :---- | :----- | :----- | :----- | :----- | :----- | :----- |\n| Max Concurrent Queries       | 32    | 32    | 32    | 32    | 32    | 32    | 32     | 32     | 32     | 32     | 32     | 32     |\n| Max Concurrency Slots        | 4     | 8     | 12    | 16    | 20    | 24    | 40     | 48     | 60     | 80     | 120    | 240    |\n-->\n\n| 并发槽使用量 | DW100 | DW200 | DW300 | DW400 | DW500 | DW600 | DW1000 | DW1200 | DW1500 | DW2000 |\n| :--------------------------- | :---- | :---- | :---- | :---- | :---- | :---- | :----- | :----- | :----- | :----- | \n| 并发查询数上限 | 32 | 32 | 32 | 32 | 32 | 32 | 32 | 32 | 32 | 32 | \n| 并发槽数上限 | 4 | 8 | 12 | 16 | 20 | 24 | 40 | 48 | 60 | 80 |\n\nSQL 数据仓库查询工作负荷必须保持在这些阈值范围内。如果有 32 个以上的并发查询，或超过并发槽的数目，查询将排入队列，直到可以满足两个阈值。\n\n## 工作负荷管理\n\nSQL 数据仓库以**数据库角色**的形式公开四个不同的资源类，作为其工作负荷管理实现的一部分。\n\n这些角色为：\n\n- smallrc\n- mediumrc\n- largerc\n- xlargerc\n\n资源类是 SQL 数据仓库工作负荷管理中不可或缺的一部分。它们控制分配给查询的计算资源。\n\n默认情况下，每个用户都是小型资源类 - smallrc 的成员。但是，任何用户都可以添加到一个或多个较高的资源类。一般而言，SQL 数据仓库将采用最高的角色成员资格来执行查询。将用户添加到较高的资源类会增加该用户的资源，但也会消耗更多的并发槽；这可能会限制并发性。这是因为，将多个资源分配给一个查询时，系统需要限制其他查询所使用的资源。天下没有免费的午餐。\n\n较高资源类控制的最重要资源就是内存。大多数有意义大小的数据仓库表都使用群集列存储索引。这通常会提供数据仓库工作负荷的最佳性能，而维护工作负荷是一项内存密集型操作。使用较高的资源类通常相当有助于索引重建等数据管理操作。\n\nSQL 数据仓库已通过使用数据库角色来实现资源类。若要成为较高资源类的成员并增加内存和优先级，只需要将数据库用户添加到前面所述的某个角色/资源类。\n\n### 资源类成员资格\n\n你可以使用 `sp_addrolemember` 和 `sp_droprolemember` 过程将自己添加为工作负荷管理数据库角色，或者删除自己的这种角色。请注意，需要 `ALTER ROLE` 权限才能执行此操作。不能使用 ALTER ROLE DDL 语法。必须使用上述存储过程。本文末尾的 [管理用户)[#managing-users] 部分提供了有关如何创建登录名和用户的完整示例。\n\n> [AZURE.NOTE]相比于在工作负荷管理组内外添加用户，更方便的做法通常是通过永久分配给较高资源类的独立登录名/用户来启动更密集的操作。\n\n### 内存分配\n\n下表详细说明了每个查询可用的内存增量；取决于应用到执行查询的用户的资源类：\n\n<!--\n| Memory Available (per dist) | Priority | DW100  | DW200  | DW300  | DW400   | DW500   | DW600   | DW1000  | DW1200  | DW1500  | DW2000  | DW3000  | DW6000   |\n| :-------------------------- | :------- | :----  | :----- | :----- | :------ | :------ | :------ | :------ | :------ | :------ | :------ | :------ | :------- |\n| smallrc(default) (s)        | Medium   | 100 MB | 100 MB | 100 MB | 100  MB | 100 MB  | 100 MB  | 100 MB  | 100 MB  | 100 MB  | 100 MB  | 100  MB | 100   MB |\n| mediumrc (m)                | Medium   | 100 MB | 200 MB | 200 MB | 400  MB | 400 MB  | 400 MB  | 800 MB  | 800 MB  | 800 MB  | 1600 MB | 1600 MB | 3200  MB |\n| largerc (l)                 | High     | 200 MB | 400 MB | 400 MB | 800  MB | 800 MB  | 800 MB  | 1600 MB | 1600 MB | 1600 MB | 3200 MB | 3200 MB | 6400  MB |\n| xlargerc (xl)               | High     | 400 MB | 800 MB | 800 MB | 1600 MB | 1600 MB | 1600 MB | 3200 MB | 3200 MB | 3200 MB | 6400 MB | 6400 MB | 12800 MB |\n-->\n\n<!--\n| Memory Available (per dist) | Priority | DW100  | DW200  | DW300  | DW400   | DW500   | DW600   | DW1000  | DW1200  | DW1500  | DW2000  |\n| :-------------------------- | :------- | :----  | :----- | :----- | :------ | :------ | :------ | :------ | :------ | :------ | :------ |\n| smallrc(default) (s)        | Medium   | 100 MB | 100 MB | 100 MB | 100  MB | 100 MB  | 100 MB  | 100 MB  | 100 MB  | 100 MB  | 100 MB  |\n| mediumrc (m)                | Medium   | 100 MB | 200 MB | 200 MB | 400  MB | 400 MB  | 400 MB  | 800 MB  | 800 MB  | 800 MB  | 1600 MB |\n| largerc (l)                 | High     | 200 MB | 400 MB | 400 MB | 800  MB | 800 MB  | 800 MB  | 1600 MB | 1600 MB | 1600 MB | 3200 MB |\n| xlargerc (xl)               | High     | 400 MB | 800 MB | 800 MB | 1600 MB | 1600 MB | 1600 MB | 3200 MB | 3200 MB | 3200 MB | 6400 MB |\n-->\n\n| 可用内存（每个 dist） | DW100 | DW200 | DW300 | DW400 | DW500 | DW600 | DW1000 | DW1200 | DW1500 | DW2000 |\n| :-------------------------- | :----  | :----- | :----- | :------ | :------ | :------ | :------ | :------ | :------ | :------ |\n| smallrc(default) (s) | 100 MB | 100 MB | 100 MB | 100 MB | 100 MB | 100 MB | 100 MB | 100 MB | 100 MB | 100 MB |\n| mediumrc (m) | 100 MB | 200 MB | 200 MB | 400 MB | 400 MB | 400 MB | 800 MB | 800 MB | 800 MB | 1600 MB |\n| largerc (l) | 200 MB | 400 MB | 400 MB | 800 MB | 800 MB | 800 MB | 1600 MB | 1600 MB | 1600 MB | 3200 MB |\n| xlargerc (xl) | 400 MB | 800 MB | 800 MB | 1600 MB | 1600 MB | 1600 MB | 3200 MB | 3200 MB | 3200 MB | 6400 MB |\n\n### 并发槽使用量\n\n此外，如上所述，分配给用户的资源类越高，并发槽的使用量就越大。下表描述了查询在给定资源类中的并发槽使用量。\n\n<!--\n| Consumption | DW100 | DW200 | DW300 | DW400 | DW500 | DW600 | DW1000 | DW1200 | DW1500 | DW2000 | DW3000 | DW6000 |\n| :--------------------------- | :---- | :---- | :---- | :---- | :---- | :---- | :----- | :----- | :----- | :----- | :----- | :----- |\n| Max Concurrent Queries       | 32    | 32    | 32    | 32    | 32    | 32    | 32     | 32     | 32     | 32     | 32     | 32     |\n| Max Concurrency Slots        | 4     | 8     | 12    | 16    | 20    | 24    | 40     | 48     | 60     | 80     | 120    | 240    |\n| smallrc(default) (s)         | 1     | 1     | 1     | 1     | 1     | 1     | 1      | 1      | 1      | 1      | 1      | 1      |\n| mediumrc (m)                 | 1     | 2     | 2     | 4     | 4     | 4     | 8      | 8      | 8      | 16     | 16     | 32     |\n| largerc (l)                  | 2     | 4     | 4     | 8     | 8     | 8     | 16     | 16     | 16     | 32     | 32     | 64     |\n| xlargerc (xl)                | 4     | 8     | 8     | 16    | 16    | 16    | 32     | 32     | 32     | 64     | 64     | 128    |\n-->\n\n| 使用量 | DW100 | DW200 | DW300 | DW400 | DW500 | DW600 | DW1000 | DW1200 | DW1500 | DW2000 |\n| :--------------------------- | :---- | :---- | :---- | :---- | :---- | :---- | :----- | :----- | :----- | :----- |\n| 并发查询数上限 | 32 | 32 | 32 | 32 | 32 | 32 | 32 | 32 | 32 | 32 |\n| 并发槽数上限 | 4 | 8 | 12 | 16 | 20 | 24 | 40 | 48 | 60 | 80 |\n| smallrc(default) (s) | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 |\n| mediumrc (m) | 1 | 2 | 2 | 4 | 4 | 4 | 8 | 8 | 8 | 16 |\n| largerc (l) | 2 | 4 | 4 | 8 | 8 | 8 | 16 | 16 | 16 | 32 |\n| xlargerc (xl) | 4 | 8 | 8 | 16 | 16 | 16 | 32 | 32 | 32 | 64 |\n\n### 异常\n\n更高资源类的成员资格有时不改变分配给查询或操作的资源。这通常发生于执行操作所需的资源不足。在这些情况下，始终使用默认或小型资源类 (smallrc)，而不考虑分配给用户的资源类。例如，`CREATE LOGIN` 始终在 smallrc 中运行。执行此操作所需的资源非常少，因此没有必要将查询纳入并发槽模型中。预先分配大量存储给此操作是一种浪费。从并发槽模型中排除 `CREATE LOGIN` 能够大大提高 SQL 数据仓库的效率。\n\n下面是资源类控制的语句和操作列表：\n\n- INSERT-SELECT\n- UPDATE\n- 删除\n- SELECT（查询用户表时）\n- ALTER INDEX REBUILD\n- ALTER INDEX REORGANIZE\n- ALTER TABLE REBUILD\n- CREATE INDEX\n- CREATE CLUSTERED COLUMNSTORE INDEX\n- CREATE TABLE AS SELECT \n- 数据加载 \n- 数据移动服务 (DMS) 执行的数据移动操作\n\n以下语句**不**接受资源类：\n\n- CREATE TABLE\n- ALTER TABLE ...SWITCH PARTITION \n- ALTER TABLE ...SPLIT PARTITION \n- ALTER TABLE ...MERGE PARTITION \n- DROP TABLE\n- ALTER INDEX DISABLE\n- DROP INDEX\n- CREATE STATISTICS\n- UPDATE STATISTICS\n- DROP STATISTICS\n- TRUNCATE TABLE\n- ALTER AUTHORIZATION\n- CREATE LOGIN\n- CREATE USER\n- ALTER USER\n- DROP USER\n- CREATE PROCEDURE\n- ALTER PROCEDURE\n- DROP PROCEDURE\n- CREATE VIEW\n- DROP VIEW\n- INSERT VALUES\n- SELECT（从系统视图和 DMV）\n- EXPLAIN\n- DBCC\n\n<!--\nRemoved as these two are not confirmed / supported under SQLDW\n- CREATE REMOTE TABLE AS SELECT\n- CREATE EXTERNAL TABLE AS SELECT\n- REDISTRIBUTE \n-->\n> [AZURE.NOTE]值得强调的是，只针对动态管理检视和目录检视执行的 `SELECT` 查询**不是**由资源类控制。\n\n请务必记住，大多数用户查询很可能由资源类控制。一般而言，活动的查询工作负荷必须落在并发查询和并发槽阈值内，除非已被平台专门排除。最终用户无法选择从并发槽模型中排除查询。超出任何一个阈值后，查询将开始排队。排队的查询将依次根据优先顺序和提交时间予以解决。\n\n### 内部 \n\n在 SQL 数据仓库的工作负荷管理幕后，情况有点复杂。资源类动态映射到资源调控器内的一组常规工作负荷管理组。使用的组取决于仓库的 DWU 值。但是，SQL 数据仓库总共使用八个工作负荷组。它们具有以下特点：\n\n- SloDWGroupC00\n- SloDWGroupC01\n- SloDWGroupC02\n- SloDWGroupC03\n- SloDWGroupC04\n- SloDWGroupC05\n- SloDWGroupC06\n- SloDWGroupC07\n\n这 8 个组映射到并发槽使用量\n\n| 工作负荷组 | 并发槽映射 | 优先级映射 |\n| :------------  | :----------------------- | :--------------- |\n| SloDWGroupC00 | 1 | 中型 |\n| SloDWGroupC01 | 2 | 中型 |\n| SloDWGroupC02 | 4 | 中型 |\n| SloDWGroupC03 | 8 | 中型 |\n| SloDWGroupC04 | 16 | 高 |\n| SloDWGroupC05 | 32 | 高 |\n| SloDWGroupC06 | 64 | 高 |\n| SloDWGroupC07 | 128 | 高 |\n\n因此，举例来说，如果 DW500 是 SQL 数据仓库当前的 DWU 设置，则活动的工作负荷组将映射到资源类，如下所示：\n\n| 资源类 | 工作负荷组 | 使用的并发槽数 | 重要性 |\n| :------------- | :------------- | :---------------------   | :--------- |\n| smallrc | SloDWGroupC00 | 1 | 中型 |\n| mediumrc | SloDWGroupC02 | 4 | 中型 |\n| largerc | SloDWGroupC03 | 8 | 中型 |\n| xlargerc | SloDWGroupC04 | 16 | 高 |\n\n若要从资源调控器的立场查看详细信息中内存资源分配的差异，请使用以下查询：\n\n```\nWITH rg\nAS\n(   SELECT  pn.name                                 AS node_name\n    ,       pn.[type]                               AS node_type\n    ,       pn.pdw_node_id                          AS node_id\n    ,       rp.name                                 AS pool_name\n    ,       rp.max_memory_kb*1.0/1024               AS pool_max_mem_MB\n    ,       wg.name                                 AS group_name\n    ,       wg.importance                           AS group_importance\n    ,       wg.request_max_memory_grant_percent     AS group_request_max_memory_grant_pcnt\n    ,       wg.max_dop                              AS group_max_dop\n    ,       wg.effective_max_dop                    AS group_effective_max_dop\n    ,       wg.total_request_count                  AS group_total_request_count\n    ,       wg.total_queued_request_count           AS group_total_queued_request_count\n    ,       wg.active_request_count                 AS group_active_request_count\n    ,       wg.queued_request_count                 AS group_queued_request_count\n    FROM    sys.dm_pdw_nodes_resource_governor_workload_groups wg\n    JOIN    sys.dm_pdw_nodes_resource_governor_resource_pools rp    ON  wg.pdw_node_id  = rp.pdw_node_id\n                                                                    AND wg.pool_id      = rp.pool_id\n    JOIN    sys.dm_pdw_nodes pn                                     ON  wg.pdw_node_id  = pn.pdw_node_id\n    WHERE   wg.name like 'SloDWGroup%'\n    AND     rp.name = 'SloDWPool'\n) \nSELECT  pool_name\n,       pool_max_mem_MB\n,       group_name\n,       group_importance\n,       (pool_max_mem_MB/100)*group_request_max_memory_grant_pcnt AS max_memory_grant_MB\n,       node_name\n,       node_type\n,       group_total_request_count\n,       group_total_queued_request_count\n,       group_active_request_count\n,       group_queued_request_count\nFROM    rg\nORDER BY \n    node_name\n,   group_request_max_memory_grant_pcnt\n,   group_importance\n;\n```\n\n> [AZURE.NOTE]上述查询还可以在故障排除时用来分析工作负荷组的活动使用量和历史使用量\n\n## 工作负荷管理示例\n\n本部分提供其他一些示例来说明如何管理用户和检测正在排队的查询。\n\n### 管理用户\n\n若要向某个用户授予对 SQL 数据仓库的访问权限，该用户首先需要一个登录名。\n\n与 SQL 数据仓库的 master 数据库建立连接，然后执行以下命令：\n\n```\nCREATE LOGIN newperson WITH PASSWORD = 'mypassword'\n\nCREATE USER newperson for LOGIN newperson\n```\n\n[AZURE.NOTE]最好为你在 master 数据库中的登录名创建用户，以便能够同时使用 Azure SQL 数据库和 SQL 数据仓库。此级别有两个可用的服务器角色，需要登录才能在 master 数据库中拥有用户以授予成员资格。这些角色为 `Loginmanager` 和 `dbmanager`。在 Azure SQL 数据库和 SQL 数据仓库中，这些角色授予管理登录以及创建数据库的权限。这与 SQL Server 有所不同。有关详细信息，请参阅[在 Azure SQL 数据库中管理数据库和登录名]一文。\n\n创建登录名后，需要添加用户帐户。\n\n与 SQL 数据仓库数据库建立连接，然后执行以下命令：\n\n```\nCREATE USER newperson FOR LOGIN newperson\n```\n\n完成之后，必须向用户授予权限。以下示例授予对 SQL 数据仓库数据库的 `CONTROL` 权限。数据库级别的 `CONTROL` 相当于 SQL Server 中的 db\\_owner。\n\n```\nGRANT CONTROL ON DATABASE::MySQLDW to newperson\n```\n\n若要查看工作负荷管理角色，请使用以下查询：\n\n```\nSELECT  ro.[name]           AS [db_role_name]\nFROM    sys.database_principals ro\nWHERE   ro.[type_desc]      = 'DATABASE_ROLE'\nAND     ro.[is_fixed_role]  = 0\n;\n```\n\n若要将用户添加到增加工作负荷管理角色，请使用以下查询：\n\n``` \nEXEC sp_addrolemember 'largerc', 'newperson' \n```\n\n若要从工作负荷管理角色中删除用户，请使用以下查询：\n\n``` \nEXEC sp_droprolemember 'largerc', 'newperson' \n```\n\n> [AZURE.NOTE]无法从 smallrc 中删除用户。\n\n若要查看哪些用户是给定角色的成员，请使用以下查询：\n\n```\nSELECT  r.name AS role_principal_name\n,       m.name AS member_principal_name\nFROM    sys.database_role_members rm\nJOIN    sys.database_principals AS r            ON rm.role_principal_id     = r.principal_id\nJOIN    sys.database_principals AS m            ON rm.member_principal_id   = m.principal_id\nWHERE   r.name IN ('mediumrc','largerc', 'xlargerc')\n;\n```\n\n### 排队的查询检测\n若要识别保留在并发队列中的查询，始终可以引用 `sys.dm_pdw_exec_requests` DMV。\n\n```\nSELECT   r.[request_id]                                 AS Request_ID\n        ,r.[status]                                     AS Request_Status\n        ,r.[submit_time]                                AS Request_SubmitTime\n        ,r.[start_time]                                 AS Request_StartTime\n        ,DATEDIFF(ms,[submit_time],[start_time])        AS Request_InitiateDuration_ms\n        ,r.resource_class                               AS Request_resource_class\nFROM    sys.dm_pdw_exec_requests r\n;\n```\n\nSQL 数据仓库提供特定的等待类型来度量并发性。\n\n它们具有以下特点：\n \n- LocalQueriesConcurrencyResourceType\n- UserConcurrencyResourceType\n- DmsConcurrencyResourceType\n- BackupConcurrencyResourceType\n\nLocalQueriesConcurrencyResourceType 引用并发槽框架外部的查询。DMV 查询和 `SELECT @@VERSION` 等系统函数是本地查询的示例。\n\nUserConcurrencyResourceType 引用并发槽框架内部的查询。针对最终用户表的查询代表使用此资源类型的示例。\n\nDmsConcurrencyResourceType 引用数据移动操作生成的等待。\n\n备份数据库时，可以看到 BackupConcurrencyResourceType。此资源类型的最大值为 1。如果同时请求了多个备份，其他备份将会排队。\n\n\n若要分析当前排队的查询以确定请求正在等待哪些资源，请引用 `sys.dm_pdw_waits` DMV。\n\n```\nSELECT  w.[wait_id]\n,       w.[session_id]\n,       w.[type]                                            AS Wait_type\n,       w.[object_type]\n,       w.[object_name]\n,       w.[request_id]\n,       w.[request_time]\n,       w.[acquire_time]\n,       w.[state]\n,       w.[priority]\n,       SESSION_ID()                                        AS Current_session\n,       s.[status]                                          AS Session_status\n,       s.[login_name]\n,       s.[query_count]\n,       s.[client_id]\n,       s.[sql_spid]\n,       r.[command]                                         AS Request_command\n,       r.[label]\n,       r.[status]                                          AS Request_status\n,       r.[submit_time]\n,       r.[start_time]\n,       r.[end_compile_time]\n,       r.[end_time]\n,       DATEDIFF(ms,r.[submit_time],r.[start_time])         AS Request_queue_time_ms\n,       DATEDIFF(ms,r.[start_time],r.[end_compile_time])    AS Request_compile_time_ms\n,       DATEDIFF(ms,r.[end_compile_time],r.[end_time])      AS Request_execution_time_ms\n,       r.[total_elapsed_time]\nFROM    sys.dm_pdw_waits w\nJOIN    sys.dm_pdw_exec_sessions s  ON w.[session_id] = s.[session_id]\nJOIN    sys.dm_pdw_exec_requests r  ON w.[request_id] = r.[request_id]\nWHERE   w.[session_id] <> SESSION_ID()\n;\n```\n\n若只要查看给定查询使用的资源等待，可以引用 `sys.dm_pdw_resource_waits` DMV。资源等待时间只度量等待提供资源的时间，与信号等待时间相反，后者是基础 SQL Server 将查询调度到 CPU 所需的时间。\n\n```\nSELECT  [session_id]\n,       [type]\n,       [object_type]\n,       [object_name]\n,       [request_id]\n,       [request_time]\n,       [acquire_time]\n,       DATEDIFF(ms,[request_time],[acquire_time])  AS acquire_duration_ms\n,       [concurrency_slots_used]                    AS concurrency_slots_reserved\n,       [resource_class]\n,       [wait_id]                                   AS queue_position\nFROM    sys.dm_pdw_resource_waits\nWHERE   [session_id] <> SESSION_ID()\n;\n```\n\n最后，SQL 数据仓库提供 `sys.dm_pdw_wait_stats` DMV 用于分析等待历史趋势。\n\n```\nSELECT  w.[pdw_node_id]\n,       w.[wait_name]\n,       w.[max_wait_time]\n,       w.[request_count]\n,       w.[signal_time]\n,       w.[completed_count]\n,       w.[wait_time]\nFROM    sys.dm_pdw_wait_stats w\n;\n```\n\n## 后续步骤\n有关更多开发技巧，请参阅[开发概述][]。\n\n<!--Image references-->\n\n<!--Article references-->\n[开发概述]: /documentation/articles/sql-data-warehouse-overview-develop\n\n<!--MSDN references-->\n[在 Azure SQL 数据库中管理数据库和登录名]: /documentation/articles/sql-database-manage-logins\n\n<!--Other Web references-->\n\n<!---HONumber=Mooncake_1207_2015-->\n"
}