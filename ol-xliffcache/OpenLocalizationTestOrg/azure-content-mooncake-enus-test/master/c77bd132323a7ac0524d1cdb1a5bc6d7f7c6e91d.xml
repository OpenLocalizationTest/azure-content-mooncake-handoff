{
  "nodes": [
    {
      "content": "使用 .NET (C#) 连接到 SQL 数据库",
      "pos": [
        27,
        51
      ]
    },
    {
      "content": "使用本快速入门教程中的示例代码可以生成一个包含 C# 代码并由云中强大的 Azure SQL 数据库关系数据库支持的现代应用程序。",
      "pos": [
        70,
        135
      ]
    },
    {
      "content": "从 .NET (C#) 使用 SQL 数据库",
      "pos": [
        352,
        374
      ]
    },
    {
      "content": "[AZURE.SELECTOR]",
      "pos": [
        379,
        395
      ]
    },
    {
      "content": "C",
      "pos": [
        399,
        400
      ]
    },
    {
      "content": "PHP",
      "pos": [
        466,
        469
      ]
    },
    {
      "content": "Python",
      "pos": [
        539,
        545
      ]
    },
    {
      "content": "Ruby",
      "pos": [
        618,
        622
      ]
    },
    {
      "content": "Java",
      "pos": [
        693,
        697
      ]
    },
    {
      "content": "Node.js",
      "pos": [
        768,
        775
      ]
    },
    {
      "content": "先决条件",
      "pos": [
        850,
        854
      ]
    },
    {
      "content": ".NET framework",
      "pos": [
        860,
        874
      ]
    },
    {
      "pos": [
        876,
        986
      ],
      "content": "已在 Windows 上预装了 .NET Framework。对于 Linux 和 Mac OS X，可从 <bpt id=\"p1\">[</bpt>Mono 项目<ept id=\"p1\">](http://www.mono-project.com)</ept>下载 .NET Framework。"
    },
    {
      "content": "SQL 数据库",
      "pos": [
        992,
        999
      ]
    },
    {
      "pos": [
        1001,
        1141
      ],
      "content": "请参阅<bpt id=\"p1\">[</bpt>入门页<ept id=\"p1\">](/documentation/articles/sql-database-get-started)</ept>，以了解如何创建示例数据库。必须根据指南创建 <bpt id=\"p2\">**</bpt>AdventureWorks 数据库模板<ept id=\"p2\">**</ept>。下面所示的示例只适用于 <bpt id=\"p3\">**</bpt>AdventureWorks 架构<ept id=\"p3\">**</ept>。"
    },
    {
      "content": "步骤 1：获取连接字符串",
      "pos": [
        1146,
        1158
      ]
    },
    {
      "content": "步骤 2：连接",
      "pos": [
        1320,
        1327
      ]
    },
    {
      "pos": [
        1329,
        1465
      ],
      "content": "<bpt id=\"p1\">[</bpt>System.Data.SqlClient.SqlConnection 类<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/system.data.sqlclient.sqlconnection.aspx)</ept>用于连接到 SQL 数据库。"
    },
    {
      "content": "步骤 3：执行查询",
      "pos": [
        1874,
        1883
      ]
    },
    {
      "pos": [
        1885,
        2254
      ],
      "content": "<bpt id=\"p1\">[</bpt>System.Data.SqlClient.SqlCommand<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/system.data.sqlclient.sqlcommand.aspx)</ept> 和 <bpt id=\"p2\">[</bpt>SqlDataReader<ept id=\"p2\">](https://msdn.microsoft.com/zh-cn/library/system.data.sqlclient.sqldatareader.aspx)</ept> 类可用于针对 SQL 数据库从查询中检索结果集。请注意，System.Data.SqlClient 也支持将数据检索到脱机 <bpt id=\"p3\">[</bpt>System.Data.DataSet<ept id=\"p3\">](https://msdn.microsoft.com/zh-cn/library/system.data.dataset.aspx)</ept> 中。"
    },
    {
      "content": "步骤 4：插入行",
      "pos": [
        3581,
        3589
      ]
    },
    {
      "pos": [
        3591,
        3847
      ],
      "content": "在本示例中，你将了解如何安全地执行 <bpt id=\"p1\">[</bpt>INSERT<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/ms174335.aspx)</ept> 语句，传递参数以保护应用程序免遭 <bpt id=\"p2\">[</bpt>SQL 注入<ept id=\"p2\">](https://technet.microsoft.com/zh-cn/library/ms161953(v=sql.105).aspx)</ept> 漏洞的危害，然后检索自动生成的<bpt id=\"p3\">[</bpt>主键<ept id=\"p3\">](https://msdn.microsoft.com/zh-cn/library/ms179610.aspx)</ept>值。"
    }
  ],
  "content": "<properties\n    pageTitle=\"使用 .NET (C#) 连接到 SQL 数据库\"\n    description=\"使用本快速入门教程中的示例代码可以生成一个包含 C# 代码并由云中强大的 Azure SQL 数据库关系数据库支持的现代应用程序。\"\n    services=\"sql-database\"\n    documentationCenter=\"\"\n    authors=\"tobbox\"\n    manager=\"jeffreyg\"\n    editor=\"\"/>\n\n\n<tags\n    ms.service=\"sql-database\"\n    ms.date=\"12/17/2015\"\n        wacn.date=\"01/15/2016\"/>\n\n\n# 从 .NET (C#) 使用 SQL 数据库\n\n\n> [AZURE.SELECTOR]\n- [C#](/documentation/articles/sql-database-develop-dotnet-simple)\n- [PHP](/documentation/articles/sql-database-develop-php-simple-windows)\n- [Python](/documentation/articles/sql-database-develop-python-simple-windows)\n- [Ruby](/documentation/articles/sql-database-develop-ruby-simple-windows)\n- [Java](/documentation/articles/sql-database-develop-java-simple-windows)\n- [Node.js](/documentation/articles/sql-database-develop-nodejs-simple-windows)\n\n\n## 先决条件\n\n### .NET framework\n\n已在 Windows 上预装了 .NET Framework。对于 Linux 和 Mac OS X，可从 [Mono 项目](http://www.mono-project.com)下载 .NET Framework。\n\n### SQL 数据库\n\n请参阅[入门页](/documentation/articles/sql-database-get-started)，以了解如何创建示例数据库。必须根据指南创建 **AdventureWorks 数据库模板**。下面所示的示例只适用于 **AdventureWorks 架构**。\n\n## 步骤 1：获取连接字符串\n\n[AZURE.INCLUDE [sql-database-include-connection-string-dotnet-20-portalshots](../includes/sql-database-include-connection-string-dotnet-20-portalshots.md)]\n\n## 步骤 2：连接\n\n[System.Data.SqlClient.SqlConnection 类](https://msdn.microsoft.com/zh-cn/library/system.data.sqlclient.sqlconnection.aspx)用于连接到 SQL 数据库。\n\n\n    using System.Data.SqlClient;\n    \n    class Sample\n    {\n      static void Main()\n      {\n          using(var conn = new SqlConnection(\"Server=tcp:yourserver.database.chinacloudapi.cn,1433;Database=yourdatabase;User ID=yourlogin@yourserver;Password={yourpassword};Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;\"))\n          {\n              conn.Open();\n          }\n      }\n    }\n\n\n## 步骤 3：执行查询\n\n[System.Data.SqlClient.SqlCommand](https://msdn.microsoft.com/zh-cn/library/system.data.sqlclient.sqlcommand.aspx) 和 [SqlDataReader](https://msdn.microsoft.com/zh-cn/library/system.data.sqlclient.sqldatareader.aspx) 类可用于针对 SQL 数据库从查询中检索结果集。请注意，System.Data.SqlClient 也支持将数据检索到脱机 [System.Data.DataSet](https://msdn.microsoft.com/zh-cn/library/system.data.dataset.aspx) 中。\n\n    \n    using System;\n    using System.Data.SqlClient;\n    \n    class Sample\n    {\n        static void Main()\n        {\n          using(var conn = new SqlConnection(\"Server=tcp:yourserver.database.chinacloudapi.cn,1433;Database=yourdatabase;User ID=yourlogin@yourserver;Password={yourpassword};Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;\"))\n            {\n                var cmd = conn.CreateCommand();\n                cmd.CommandText = @\"\n                        SELECT\n                            c.CustomerID\n                            ,c.CompanyName\n                            ,COUNT(soh.SalesOrderID) AS OrderCount\n                        FROM SalesLT.Customer AS c\n                        LEFT OUTER JOIN SalesLT.SalesOrderHeader AS soh ON c.CustomerID = soh.CustomerID\n                        GROUP BY c.CustomerID, c.CompanyName\n                        ORDER BY OrderCount DESC;\";\n    \n                conn.Open();\n    \n                using(var reader = cmd.ExecuteReader())\n                {\n                    while(reader.Read())\n                    {\n                        Console.WriteLine(\"ID: {0} Name: {1} Order Count: {2}\", reader.GetInt32(0), reader.GetString(1), reader.GetInt32(2));\n                    }\n                }                   \n            }\n        }\n    }\n\n\n## 步骤 4：插入行\n\n在本示例中，你将了解如何安全地执行 [INSERT](https://msdn.microsoft.com/zh-cn/library/ms174335.aspx) 语句，传递参数以保护应用程序免遭 [SQL 注入](https://technet.microsoft.com/zh-cn/library/ms161953(v=sql.105).aspx) 漏洞的危害，然后检索自动生成的[主键](https://msdn.microsoft.com/zh-cn/library/ms179610.aspx)值。\n\n    \n    using System;\n    using System.Data.SqlClient;\n    \n    class Sample\n    {\n        static void Main()\n        {\n            using(var conn = new SqlConnection(\"Server=tcp:yourserver.database.chinacloudapi.cn,1433;Database=yourdatabase;User ID=yourlogin@yourserver;Password={yourpassword};Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;\"))\n            {\n                var cmd = conn.CreateCommand();\n                cmd.CommandText = @\"\n                    INSERT SalesLT.Product (Name, ProductNumber, StandardCost, ListPrice, SellStartDate)\n                    OUTPUT INSERTED.ProductID\n                    VALUES (@Name, @Number, @Cost, @Price, CURRENT_TIMESTAMP)\";\n    \n                cmd.Parameters.AddWithValue(\"@Name\", \"SQL Server Express\");\n                cmd.Parameters.AddWithValue(\"@Number\", \"SQLEXPRESS1\");\n                cmd.Parameters.AddWithValue(\"@Cost\", 0);\n                cmd.Parameters.AddWithValue(\"@Price\", 0);\n    \n                conn.Open();\n    \n                int insertedProductId = (int)cmd.ExecuteScalar();\n    \n                Console.WriteLine(\"Product ID {0} inserted.\", insertedProductId);\n            }\n        }\n    }\n\n\n<!---HONumber=Mooncake_0104_2016-->\n"
}