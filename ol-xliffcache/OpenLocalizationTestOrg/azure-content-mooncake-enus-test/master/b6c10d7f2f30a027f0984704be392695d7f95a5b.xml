{
  "nodes": [
    {
      "content": "默认情况下，对移动服务资源的所有请求仅限于提供了应用程序密钥的客户端，这并不能严格保护对资源的访问。为了保护资源安全，您必须将访问权限仅限于经过身份验证的客户端。",
      "pos": [
        2,
        83
      ]
    },
    {
      "pos": [
        88,
        224
      ],
      "content": "在 Visual Studio 中打开移动服务项目，展开 Controllers 文件夹，然后打开 <bpt id=\"p1\">**</bpt>TodoItemController.cs<ept id=\"p1\">**</ept>。<bpt id=\"p2\">**</bpt>TodoItemController<ept id=\"p2\">**</ept> 类可为 TodoItem 表实现数据访问。添加以下 <ph id=\"ph1\">`using`</ph> 语句："
    },
    {
      "pos": [
        294,
        344
      ],
      "content": "将以下 AuthorizeLevel 属性应用于 <bpt id=\"p1\">**</bpt>TodoItemController<ept id=\"p1\">**</ept> 类："
    },
    {
      "pos": [
        402,
        471
      ],
      "content": "这样可以确保对 <bpt id=\"p1\">_</bpt>TodoItem<ept id=\"p1\">_</ept> 表的所有操作都要求用户经过身份验证。你也可以在方法级别应用 <bpt id=\"p2\">*</bpt>AuthorizeLevel<ept id=\"p2\">*</ept> 属性。"
    },
    {
      "pos": [
        476,
        563
      ],
      "content": "（可选）如果要从本地调试身份验证，请展开 <ph id=\"ph1\">`App_Start`</ph> 文件夹，打开 <bpt id=\"p1\">**</bpt>WebApiConfig.cs<ept id=\"p1\">**</ept>，然后将以下代码添加到 <bpt id=\"p2\">**</bpt>Register<ept id=\"p2\">**</ept> 方法。"
    },
    {
      "pos": [
        604,
        764
      ],
      "content": "这样可以通知本地移动服务项目按照 Azure 中托管的方式运行，包括遵循 <bpt id=\"p1\">*</bpt>AuthorizeLevel<ept id=\"p1\">*</ept> 设置。没有此设置，发送到 localhost 的所有 HTTP 请求都会在未经身份验证的情况下得到允许，而不受 <bpt id=\"p2\">*</bpt>AuthorizeLevel<ept id=\"p2\">*</ept> 设置影响。当你启用自我托管模式时，还需要为本地应用程序密钥设置值。"
    },
    {
      "pos": [
        769,
        825
      ],
      "content": "（可选）在 web.config 项目文件中，设置 <ph id=\"ph1\">`MS_ApplicationKey`</ph> 应用设置的字符串值。"
    },
    {
      "content": "这是当你在本地运行服务时用来测试 API 帮助页的密码（不结合用户名）。Azure 中的实时站点不使用此字符串值，并且你不需要使用实际的应用程序密钥；任何有效的字符串值都是可行的。",
      "pos": [
        831,
        921
      ]
    },
    {
      "content": "重新发布你的项目。",
      "pos": [
        927,
        936
      ]
    }
  ],
  "content": "\n\n默认情况下，对移动服务资源的所有请求仅限于提供了应用程序密钥的客户端，这并不能严格保护对资源的访问。为了保护资源安全，您必须将访问权限仅限于经过身份验证的客户端。\n\n1. 在 Visual Studio 中打开移动服务项目，展开 Controllers 文件夹，然后打开 **TodoItemController.cs**。**TodoItemController** 类可为 TodoItem 表实现数据访问。添加以下 `using` 语句：\n\n\n\n        using Microsoft.WindowsAzure.Mobile.Service.Security;\n\n2. 将以下 AuthorizeLevel 属性应用于 **TodoItemController** 类：\n\n        [AuthorizeLevel(AuthorizationLevel.User)] \n\n    这样可以确保对 _TodoItem_ 表的所有操作都要求用户经过身份验证。你也可以在方法级别应用 *AuthorizeLevel* 属性。\n\n3. （可选）如果要从本地调试身份验证，请展开 `App_Start` 文件夹，打开 **WebApiConfig.cs**，然后将以下代码添加到 **Register** 方法。\n\n        config.SetIsHosted(true);\n\n    这样可以通知本地移动服务项目按照 Azure 中托管的方式运行，包括遵循 *AuthorizeLevel* 设置。没有此设置，发送到 localhost 的所有 HTTP 请求都会在未经身份验证的情况下得到允许，而不受 *AuthorizeLevel* 设置影响。当你启用自我托管模式时，还需要为本地应用程序密钥设置值。\n\n4. （可选）在 web.config 项目文件中，设置 `MS_ApplicationKey` 应用设置的字符串值。\n\n    这是当你在本地运行服务时用来测试 API 帮助页的密码（不结合用户名）。Azure 中的实时站点不使用此字符串值，并且你不需要使用实际的应用程序密钥；任何有效的字符串值都是可行的。\n \n5. 重新发布你的项目。\n\n<!---HONumber=71-->"
}