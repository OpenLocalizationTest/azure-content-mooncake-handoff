{
  "nodes": [
    {
      "content": "如何使用 SendGrid 电子邮件服务 (.NET) | Azure",
      "pos": [
        28,
        63
      ]
    },
    {
      "content": "了解如何在 Azure 上使用 SendGrid 电子邮件服务发送电子邮件。代码示例用 C# 编写且使用 .NET API。",
      "pos": [
        83,
        145
      ]
    },
    {
      "content": "如何在 Azure 中使用 SendGrid 发送电子邮件",
      "pos": [
        376,
        405
      ]
    },
    {
      "content": "概述",
      "pos": [
        436,
        438
      ]
    },
    {
      "pos": [
        440,
        595
      ],
      "content": "本指南演示了如何在 Azure 上使用 SendGrid 电子邮件服务执行常见编程任务。相关示例用 C# 编写且使用 .NET API。涉及的任务包括<bpt id=\"p1\">**</bpt>创建电子邮件<ept id=\"p1\">**</ept>、<bpt id=\"p2\">**</bpt>发送电子邮件<ept id=\"p2\">**</ept>、<bpt id=\"p3\">**</bpt>添加附件<ept id=\"p3\">**</ept>和<bpt id=\"p4\">**</bpt>使用筛选器<ept id=\"p4\">**</ept>。有关 SendGrid 和发送电子邮件的详细信息，请参阅<bpt id=\"p5\">[</bpt>后续步骤<ept id=\"p5\">][]</ept>部分。"
    },
    {
      "content": "什么是 SendGrid 电子邮件服务？",
      "pos": [
        623,
        643
      ]
    },
    {
      "pos": [
        645,
        740
      ],
      "content": "SendGrid 是一项<bpt id=\"p1\">[</bpt><ept id=\"p1\">基于云的电子邮件服务]</ept>，该服务提供了可靠的<bpt id=\"p2\">[</bpt><ept id=\"p2\">事务性电子邮件传递]</ept>、可缩放性、实时分析以及可用于简化自定义集成的灵活的 API。常见 SendGrid 使用方案包括："
    },
    {
      "content": "自动向客户发送收据。",
      "pos": [
        746,
        756
      ]
    },
    {
      "content": "管理用于每月向客户发送电子传单和特惠产品/服务的通讯组列表。",
      "pos": [
        761,
        791
      ]
    },
    {
      "content": "收集诸如已阻止的电子邮件和客户响应性等项目的实时度量值。",
      "pos": [
        796,
        824
      ]
    },
    {
      "content": "生成用于帮助确定趋势的报告。",
      "pos": [
        829,
        843
      ]
    },
    {
      "content": "转发客户查询。",
      "pos": [
        848,
        855
      ]
    },
    {
      "content": "处理传入的电子邮件。",
      "pos": [
        860,
        870
      ]
    },
    {
      "pos": [
        872,
        956
      ],
      "content": "有关详细信息，请参阅 <bpt id=\"p1\">[</bpt>https://sendgrid.com<ept id=\"p1\">](https://sendgrid.com)</ept> 或我们的 <bpt id=\"p2\">[</bpt>C# 库<ept id=\"p2\">][sendgrid-csharp]</ept>"
    },
    {
      "content": "创建 SendGrid 帐户",
      "pos": [
        991,
        1005
      ]
    },
    {
      "content": "引用 SendGrid.NET 类库",
      "pos": [
        1104,
        1122
      ]
    },
    {
      "pos": [
        1124,
        1296
      ],
      "content": "<bpt id=\"p1\">[</bpt>SendGrid NuGet 包<ept id=\"p1\">](https://www.nuget.org/packages/Sendgrid)</ept>是获取 SendGrid API 和使用所有依赖项配置应用程序的最简单方法。NuGet 是 Microsoft Visual Studio 2015 随附的一个 Visual Studio 扩展，可让你轻松安装和更新库与工具。"
    },
    {
      "pos": [
        1300,
        1439
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>如果你运行的 Visual Studio 版本低于 Visual Studio 2015，并且想要安装 NuGet，那么，请访问 <bpt id=\"p1\">[</bpt>http://www.nuget.org<ept id=\"p1\">](http://www.nuget.org)</ept>，然后单击“安装 NuGet”按钮。"
    },
    {
      "content": "若要在应用程序中安装 SendGrid NuGet 包，请执行以下操作：",
      "pos": [
        1441,
        1477
      ]
    },
    {
      "content": "创建新项目。",
      "pos": [
        1483,
        1489
      ]
    },
    {
      "content": "创建新项目",
      "pos": [
        1497,
        1502
      ]
    },
    {
      "content": "选择模板。",
      "pos": [
        1529,
        1534
      ]
    },
    {
      "content": "选择模板",
      "pos": [
        1542,
        1546
      ]
    },
    {
      "content": "在“解决方案资源管理器”中，右键单击“引用”，然后单击“管理 NuGet 包”。",
      "pos": [
        1572,
        1612
      ]
    },
    {
      "pos": [
        1618,
        1660
      ],
      "content": "搜索 <bpt id=\"p1\">**</bpt>SendGrid<ept id=\"p1\">**</ept>，然后在结果列表中选择 <bpt id=\"p2\">**</bpt>SendGrid<ept id=\"p2\">**</ept> 项。"
    },
    {
      "content": "SendGrid NuGet 包",
      "pos": [
        1668,
        1684
      ]
    },
    {
      "content": "单击“安装”以完成安装，然后关闭此对话框。",
      "pos": [
        1715,
        1736
      ]
    },
    {
      "pos": [
        1738,
        1787
      ],
      "content": "SendGrid 的 .NET 类库名为 <bpt id=\"p1\">**</bpt>SendGridMail<ept id=\"p1\">**</ept>。其中包含以下命名空间："
    },
    {
      "pos": [
        1793,
        1823
      ],
      "content": "<bpt id=\"p1\">**</bpt>SendGridMail<ept id=\"p1\">**</ept>：用于创建和处理电子邮件项。"
    },
    {
      "pos": [
        1828,
        1908
      ],
      "content": "<bpt id=\"p1\">**</bpt>SendGridMail.Transport<ept id=\"p1\">**</ept>：用于通过 <bpt id=\"p2\">**</bpt>SMTP<ept id=\"p2\">**</ept> 协议或采用 <bpt id=\"p3\">**</bpt>Web/REST<ept id=\"p3\">**</ept> 的 HTTP 1.1 协议发送电子邮件。"
    },
    {
      "pos": [
        1910,
        2063
      ],
      "content": "在你希望以编程方式访问 SendGrid 电子邮件服务的任何 C# 文件中，将以下代码命名空间声明添加到文件的顶部。<bpt id=\"p1\">**</bpt>System.Net<ept id=\"p1\">**</ept> 和 <bpt id=\"p2\">**</bpt>System.Net.Mail<ept id=\"p2\">**</ept> 均为 .NET Framework 命名空间，加入它们的原因是包含你通常配合 SendGrid API 使用的类型。"
    },
    {
      "content": "如何：创建电子邮件",
      "pos": [
        2184,
        2193
      ]
    },
    {
      "pos": [
        2195,
        2275
      ],
      "content": "使用 <bpt id=\"p1\">**</bpt>SendGridMessage<ept id=\"p1\">**</ept> 对象创建电子邮件。创建邮件对象后，可以设置属性和方法，包括电子邮件发件人、电子邮件收件人以及电子邮件的主题和正文。"
    },
    {
      "content": "以下示例演示了如何创建完全填充的电子邮件对象：",
      "pos": [
        2277,
        2300
      ]
    },
    {
      "pos": [
        2959,
        3027
      ],
      "content": "有关 <bpt id=\"p1\">**</bpt>SendGrid<ept id=\"p1\">**</ept> 类型支持的所有属性和方法的详细信息，请参阅 GitHub 上的 <bpt id=\"p2\">[</bpt>sendgrid-csharp<ept id=\"p2\">][]</ept>。"
    },
    {
      "content": "如何：发送电子邮件",
      "pos": [
        3058,
        3067
      ]
    },
    {
      "pos": [
        3069,
        3183
      ],
      "content": "创建电子邮件后，可以使用 SendGrid 提供的 Web API 发送该邮件。或者，你可以使用 <bpt id=\"p1\">[</bpt>.NET 的内置库<ept id=\"p1\">](https://sendgrid.com/docs/Code_Examples/csharp.html)</ept>。"
    },
    {
      "pos": [
        3185,
        3335
      ],
      "content": "发送电子邮件都需要你提供SendGrid 帐户凭据（用户名和密码）或 SendGrid API 密钥。API 密钥是首选方法。如需有关如何配置 API 密钥的详细信息，请访问我们的<bpt id=\"p1\">[</bpt>文档<ept id=\"p1\">](https://sendgrid.com/docs/Classroom/Send/api_keys.html)</ept>"
    },
    {
      "content": "你可以通过 Azure 管理门户存储这些凭据，方法是单击“配置”，然后在“应用设置”下添加键/值对。",
      "pos": [
        3337,
        3387
      ]
    },
    {
      "content": "Azure 应用设置",
      "pos": [
        3392,
        3402
      ]
    },
    {
      "content": "然后，可按如下所示访问这些凭据：",
      "pos": [
        3426,
        3442
      ]
    },
    {
      "content": "使用凭据：",
      "pos": [
        3683,
        3688
      ]
    },
    {
      "content": "使用 API 密钥：",
      "pos": [
        4004,
        4014
      ]
    },
    {
      "content": "以下示例演示如何使用 Web API 发送邮件。",
      "pos": [
        4147,
        4171
      ]
    },
    {
      "content": "如何：添加附件",
      "pos": [
        4943,
        4950
      ]
    },
    {
      "pos": [
        4952,
        5048
      ],
      "content": "可以通过调用 <bpt id=\"p1\">**</bpt>AddAttachment<ept id=\"p1\">**</ept> 方法并指定你要附加的文件名和路径，将附件添加到邮件。对想要附加的每个文件调用此方法一次，即可包含多个附件。以下示例演示了如何将附件添加到邮件："
    },
    {
      "pos": [
        5363,
        5467
      ],
      "content": "你还可以从数据<bpt id=\"p1\">**</bpt>流<ept id=\"p1\">**</ept>添加附件。可以调用与上述相同的 <bpt id=\"p2\">**</bpt>AddAttachment<ept id=\"p2\">**</ept> 方法来执行此操作，不过这次要传入数据的流，以及要在邮件中显示的文件名。在此情况下，需要添加 System.IO 库。"
    },
    {
      "content": "如何：使用应用来启用页脚、跟踪和分析",
      "pos": [
        5935,
        5953
      ]
    },
    {
      "pos": [
        5955,
        6048
      ],
      "content": "SendGrid 通过使用应用提供其他电子邮件功能。可将这些设置添加到电子邮件以启用特定功能（例如单击跟踪、Google 分析、订阅跟踪等）。有关应用的完整列表，请参阅<bpt id=\"p1\">[</bpt>应用设置<ept id=\"p1\">][]</ept>。"
    },
    {
      "pos": [
        6050,
        6105
      ],
      "content": "可以使用作为 <bpt id=\"p1\">**</bpt>SendGrid<ept id=\"p1\">**</ept> 类的一部分实现的方法将应用应用到 <bpt id=\"p2\">**</bpt>SendGrid<ept id=\"p2\">**</ept> 电子邮件。"
    },
    {
      "content": "以下示例演示了脚注和单击跟踪筛选器：",
      "pos": [
        6107,
        6125
      ]
    },
    {
      "content": "脚注",
      "pos": [
        6131,
        6133
      ]
    },
    {
      "content": "单击跟踪",
      "pos": [
        6581,
        6585
      ]
    },
    {
      "content": "如何：使用其他 SendGrid 服务",
      "pos": [
        7210,
        7229
      ]
    },
    {
      "pos": [
        7231,
        7339
      ],
      "content": "SendGrid 提供了基于 Web 的 API 和 Webhook，可通过这些 API 从 Azure 应用程序中使用其他 SendGrid 功能。有关完整详细信息，请参阅 <bpt id=\"p1\">[</bpt>SendGrid API 文档<ept id=\"p1\">][]</ept>。"
    },
    {
      "content": "后续步骤",
      "pos": [
        7386,
        7390
      ]
    },
    {
      "content": "此时，你已了解 SendGrid 电子邮件服务的基础知识，请访问以下链接以了解更多信息。",
      "pos": [
        7392,
        7436
      ]
    },
    {
      "pos": [
        7442,
        7478
      ],
      "content": "SendGrid C# 库存储库：<bpt id=\"p1\">[</bpt>sendgrid-csharp<ept id=\"p1\">][]</ept>"
    },
    {
      "pos": [
        7483,
        7526
      ],
      "content": "SendGrid API 文档：<bpt id=\"p1\">&lt;</bpt><ept id=\"p1\">https://sendgrid.com/docs&gt;</ept>"
    },
    {
      "pos": [
        7531,
        7602
      ],
      "content": "面向 Azure 客户的 SendGrid 特惠产品：<bpt id=\"p1\">[</bpt>https://sendgrid.com<ept id=\"p1\">](https://sendgrid.com)</ept>"
    }
  ],
  "content": "<properties \n    pageTitle=\"如何使用 SendGrid 电子邮件服务 (.NET) | Azure\" \n    description=\"了解如何在 Azure 上使用 SendGrid 电子邮件服务发送电子邮件。代码示例用 C# 编写且使用 .NET API。\" \n    services=\"app-service\\web\" \n    documentationCenter=\".net\" \n    authors=\"thinkingserious\" \n    manager=\"dwrede\" \n    editor=\"\"/>\n\n<tags\n    ms.service=\"web-sites\"\n    ms.date=\"10/12/2015\"\n    wacn.date=\"12/17/2015\"/>\n\n\n\n\n\n# 如何在 Azure 中使用 SendGrid 发送电子邮件\n\n\n<a name=\"overview\"></a> \n## 概述\n\n本指南演示了如何在 Azure 上使用 SendGrid 电子邮件服务执行常见编程任务。相关示例用 C# 编写且使用 .NET API。涉及的任务包括**创建电子邮件**、**发送电子邮件**、**添加附件**和**使用筛选器**。有关 SendGrid 和发送电子邮件的详细信息，请参阅[后续步骤][]部分。\n\n<a name=\"whatis\"></a> \n## 什么是 SendGrid 电子邮件服务？\n\nSendGrid 是一项[基于云的电子邮件服务]，该服务提供了可靠的[事务性电子邮件传递]、可缩放性、实时分析以及可用于简化自定义集成的灵活的 API。常见 SendGrid 使用方案包括：\n\n-   自动向客户发送收据。\n-   管理用于每月向客户发送电子传单和特惠产品/服务的通讯组列表。\n-   收集诸如已阻止的电子邮件和客户响应性等项目的实时度量值。\n-   生成用于帮助确定趋势的报告。\n-   转发客户查询。\n-   处理传入的电子邮件。\n\n有关详细信息，请参阅 [https://sendgrid.com](https://sendgrid.com) 或我们的 [C# 库][sendgrid-csharp]\n\n<a name=\"createaccount\"></a> \n## 创建 SendGrid 帐户\n\n[AZURE.INCLUDE [sendgrid-sign-up](../includes/sendgrid-sign-up.md)]\n\n<a name=\"reference\"></a>\n## 引用 SendGrid.NET 类库\n\n[SendGrid NuGet 包](https://www.nuget.org/packages/Sendgrid)是获取 SendGrid API 和使用所有依赖项配置应用程序的最简单方法。NuGet 是 Microsoft Visual Studio 2015 随附的一个 Visual Studio 扩展，可让你轻松安装和更新库与工具。\n\n> [AZURE.NOTE]如果你运行的 Visual Studio 版本低于 Visual Studio 2015，并且想要安装 NuGet，那么，请访问 [http://www.nuget.org](http://www.nuget.org)，然后单击“安装 NuGet”按钮。\n\n若要在应用程序中安装 SendGrid NuGet 包，请执行以下操作：\n\n1.  创建新项目。\n\n    ![创建新项目][create-new-project]\n\n2.  选择模板。\n\n    ![选择模板][select-a-template]\n\n3.  在“解决方案资源管理器”中，右键单击“引用”，然后单击“管理 NuGet 包”。\n\n4.  搜索 **SendGrid**，然后在结果列表中选择 **SendGrid** 项。\n\n    ![SendGrid NuGet 包][SendGrid-NuGet-package]\n\n5.  单击“安装”以完成安装，然后关闭此对话框。\n\nSendGrid 的 .NET 类库名为 **SendGridMail**。其中包含以下命名空间：\n\n-   **SendGridMail**：用于创建和处理电子邮件项。\n-   **SendGridMail.Transport**：用于通过 **SMTP** 协议或采用 **Web/REST** 的 HTTP 1.1 协议发送电子邮件。\n\n在你希望以编程方式访问 SendGrid 电子邮件服务的任何 C# 文件中，将以下代码命名空间声明添加到文件的顶部。**System.Net** 和 **System.Net.Mail** 均为 .NET Framework 命名空间，加入它们的原因是包含你通常配合 SendGrid API 使用的类型。\n\n    using System;\n    using System.Net;\n    using System.Net.Mail;\n    using SendGrid;\n\n<a name=\"createemail\"></a> \n## 如何：创建电子邮件\n\n使用 **SendGridMessage** 对象创建电子邮件。创建邮件对象后，可以设置属性和方法，包括电子邮件发件人、电子邮件收件人以及电子邮件的主题和正文。\n\n以下示例演示了如何创建完全填充的电子邮件对象：\n\n    // Create the email object first, then add the properties.\n    var myMessage = new SendGridMessage();\n\n    // Add the message properties.\n    myMessage.From = new MailAddress(\"john@example.com\");\n\n    // Add multiple addresses to the To field.\n    List<String> recipients = new List<String>\n    {\n        @\"Jeff Smith <jeff@example.com>\",\n        @\"Anna Lidman <anna@example.com>\",\n        @\"Peter Saddow <peter@example.com>\"\n    };\n\n    myMessage.AddTo(recipients);\n\n    myMessage.Subject = \"Testing the SendGrid Library\";\n\n    //Add the HTML and Text bodies\n    myMessage.Html = \"<p>Hello World!</p>\";\n    myMessage.Text = \"Hello World plain text!\";\n\n有关 **SendGrid** 类型支持的所有属性和方法的详细信息，请参阅 GitHub 上的 [sendgrid-csharp][]。\n\n<a name=\"sendemail\"></a> \n## 如何：发送电子邮件\n\n创建电子邮件后，可以使用 SendGrid 提供的 Web API 发送该邮件。或者，你可以使用 [.NET 的内置库](https://sendgrid.com/docs/Code_Examples/csharp.html)。\n\n发送电子邮件都需要你提供SendGrid 帐户凭据（用户名和密码）或 SendGrid API 密钥。API 密钥是首选方法。如需有关如何配置 API 密钥的详细信息，请访问我们的[文档](https://sendgrid.com/docs/Classroom/Send/api_keys.html)\n\n你可以通过 Azure 管理门户存储这些凭据，方法是单击“配置”，然后在“应用设置”下添加键/值对。\n\n ![Azure 应用设置][azure_app_settings]\n\n 然后，可按如下所示访问这些凭据：\n    \n    var username = System.Environment.GetEnvironmentVariable(\"SENDGRID_USER\"); \n    var pswd = System.Environment.GetEnvironmentVariable(\"SENDGRID_PASS\");\n    var apiKey = System.Environment.GetEnvironmentVariable(\"SENDGRID_APIKEY\");\n\n使用凭据：\n    \n    // Create network credentials to access your SendGrid account\n    var username = \"your_sendgrid_username\";\n    var pswd = \"your_sendgrid_password\";\n\n    var credentials = new NetworkCredential(username, pswd);\n    // Create an Web transport for sending email.\n    var transportWeb = new Web(credentials);\n\n使用 API 密钥：\n\n    var apiKey = \"your_sendgrid_api_key\";  \n    // create a Web transport, using API Key\n    var transportWeb = new Web(apiKey);\n\n\n以下示例演示如何使用 Web API 发送邮件。\n\n    // Create the email object first, then add the properties.\n    SendGridMessage myMessage = new SendGridMessage();\n    myMessage.AddTo(\"anna@example.com\");\n    myMessage.From = new MailAddress(\"john@example.com\", \"John Smith\");\n    myMessage.Subject = \"Testing the SendGrid Library\";\n    myMessage.Text = \"Hello World!\";\n\n    // Create credentials, specifying your user name and password.\n    var credentials = new NetworkCredential(\"username\", \"password\");\n\n    // Create an Web transport for sending email.\n    var transportWeb = new Web(credentials);\n\n    // Send the email, which returns an awaitable task.\n    transportWeb.DeliverAsync(myMessage);\n\n    // If developing a Console Application, use the following\n    // transportWeb.DeliverAsync(mail).Wait();\n\n## 如何：添加附件\n\n可以通过调用 **AddAttachment** 方法并指定你要附加的文件名和路径，将附件添加到邮件。对想要附加的每个文件调用此方法一次，即可包含多个附件。以下示例演示了如何将附件添加到邮件：\n\n    SendGridMessage myMessage = new SendGridMessage();\n    myMessage.AddTo(\"anna@example.com\");\n    myMessage.From = new MailAddress(\"john@example.com\", \"John Smith\");\n    myMessage.Subject = \"Testing the SendGrid Library\";\n    myMessage.Text = \"Hello World!\";\n\n    myMessage.AddAttachment(@\"C:\\file1.txt\");\n    \n你还可以从数据**流**添加附件。可以调用与上述相同的 **AddAttachment** 方法来执行此操作，不过这次要传入数据的流，以及要在邮件中显示的文件名。在此情况下，需要添加 System.IO 库。\n\n    SendGridMessage myMessage = new SendGridMessage();\n    myMessage.AddTo(\"anna@example.com\");\n    myMessage.From = new MailAddress(\"john@example.com\", \"John Smith\");\n    myMessage.Subject = \"Testing the SendGrid Library\";\n    myMessage.Text = \"Hello World!\";\n\n    using (var attachmentFileStream = new FileStream(@\"C:\\file.txt\", FileMode.Open))\n    {\n        myMessage.AddAttachment(attachmentFileStream, \"My Cool File.txt\");\n    }\n\n\n<a name=\"usefilters\"></a> \n## 如何：使用应用来启用页脚、跟踪和分析\n\nSendGrid 通过使用应用提供其他电子邮件功能。可将这些设置添加到电子邮件以启用特定功能（例如单击跟踪、Google 分析、订阅跟踪等）。有关应用的完整列表，请参阅[应用设置][]。\n\n可以使用作为 **SendGrid** 类的一部分实现的方法将应用应用到 **SendGrid** 电子邮件。\n\n以下示例演示了脚注和单击跟踪筛选器：\n\n### 脚注\n\n    // Create the email object first, then add the properties.\n    SendGridMessage myMessage = new SendGridMessage();\n    myMessage.AddTo(\"anna@example.com\");\n    myMessage.From = new MailAddress(\"john@example.com\", \"John Smith\");\n    myMessage.Subject = \"Testing the SendGrid Library\";\n    myMessage.Text = \"Hello World!\";\n\n    // Add a footer to the message.\n    myMessage.EnableFooter(\"PLAIN TEXT FOOTER\", \"<p><em>HTML FOOTER</em></p>\");\n\n### 单击跟踪\n\n    // Create the email object first, then add the properties.\n    SendGridMessage myMessage = new SendGridMessage();\n    myMessage.AddTo(\"anna@example.com\");\n    myMessage.From = new MailAddress(\"john@example.com\", \"John Smith\");\n    myMessage.Subject = \"Testing the SendGrid Library\";\n    myMessage.Html = \"<p><a href=\\\"http://www.example.com\\\">Hello World Link!</a></p>\";\n    myMessage.Text = \"Hello World!\";\n    \n    // true indicates that links in plain text portions of the email \n    // should also be overwritten for link tracking purposes. \n    myMessage.EnableClickTracking(true);\n\n<a name=\"useservices\"></a> \n## 如何：使用其他 SendGrid 服务\n\nSendGrid 提供了基于 Web 的 API 和 Webhook，可通过这些 API 从 Azure 应用程序中使用其他 SendGrid 功能。有关完整详细信息，请参阅 [SendGrid API 文档][]。\n\n<a name=\"nextsteps\" id=\"next-steps\"></a> \n## 后续步骤\n\n此时，你已了解 SendGrid 电子邮件服务的基础知识，请访问以下链接以了解更多信息。\n\n*   SendGrid C# 库存储库：[sendgrid-csharp][]\n*   SendGrid API 文档：<https://sendgrid.com/docs>\n*   面向 Azure 客户的 SendGrid 特惠产品：[https://sendgrid.com](https://sendgrid.com)\n\n  [后续步骤]: #next-steps\n  [What is the SendGrid Email Service?]: #whatis\n  [Create a SendGrid Account]: #createaccount\n  [Reference the SendGrid .NET Class Library]: #reference\n  [How to: Create an Email]: #createemail\n  [How to: Send an Email]: #sendemail\n  [How to: Add an Attachment]: #addattachment\n  [How to: Use Filters to Enable Footers, Tracking, and Analytics]: #usefilters\n  [How to: Use Additional SendGrid Services]: #useservices\n  \n  [special offer]: https://www.sendgrid.com/windowsazure.html\n  \n  [create-new-project]: ./media/sendgrid-dotnet-how-to-send-email/create_new_project.png\n  [select-a-template]: ./media/sendgrid-dotnet-how-to-send-email/select_a_template.png\n  [SendGrid-NuGet-package]: ./media/sendgrid-dotnet-how-to-send-email/sendgrid_nuget.png\n  [azure_app_settings]: ./media/sendgrid-dotnet-how-to-send-email/app_settings.png\n  [sendgrid-csharp]: https://github.com/sendgrid/sendgrid-csharp\n  [SMTP vs. Web API]: https://sendgrid.com/docs/Integrate/index.html\n  [应用设置]: https://sendgrid.com/docs/API_Reference/SMTP_API/apps.html\n  [SendGrid API 文档]: https://sendgrid.com/docs\n  \n  [基于云的电子邮件服务]: https://sendgrid.com/email-solutions\n  [事务性电子邮件传递]: https://sendgrid.com/transactional-email\n \n\n<!---HONumber=79-->"
}