{
  "nodes": [
    {
      "content": "在 SQL 数据仓库中使用 PolyBase 的指南 | Azure",
      "pos": [
        26,
        60
      ]
    },
    {
      "content": "有关在 SQL 数据仓库方案中使用 PolyBase 的指导原则和建议。",
      "pos": [
        78,
        114
      ]
    },
    {
      "content": "在 SQL 数据仓库中使用 PolyBase 的指南",
      "pos": [
        346,
        372
      ]
    },
    {
      "content": "本指南提供有关在 SQL 数据仓库中使用 PolyBase 的实用信息。",
      "pos": [
        374,
        410
      ]
    },
    {
      "pos": [
        412,
        443
      ],
      "content": "若要开始，请参阅<bpt id=\"p1\">[</bpt>使用 PolyBase 加载数据<ept id=\"p1\">][]</ept>教程。"
    },
    {
      "content": "轮换存储密钥",
      "pos": [
        449,
        455
      ]
    },
    {
      "content": "有时出于安全考虑，想要更改 Blob 存储的访问密钥。",
      "pos": [
        457,
        484
      ]
    },
    {
      "content": "执行此任务的最佳方式是遵循称为“轮换密钥”的过程。你可能已注意到，Blob 存储帐户有两个存储密钥。这样你便可以转换",
      "pos": [
        486,
        544
      ]
    },
    {
      "content": "轮换 Azure 存储帐户密钥的过程只需简单的三个步骤",
      "pos": [
        546,
        573
      ]
    },
    {
      "content": "创建基于辅助存储访问密钥的第二个数据库范围凭据",
      "pos": [
        578,
        601
      ]
    },
    {
      "content": "创建基于新凭据的第二个外部数据源",
      "pos": [
        605,
        621
      ]
    },
    {
      "content": "删除并创建指向新外部数据源的外部表",
      "pos": [
        625,
        642
      ]
    },
    {
      "content": "当你将所有外部表迁移到新的外部数据源时，可以执行清理任务：",
      "pos": [
        644,
        673
      ]
    },
    {
      "content": "删除第一个外部数据源",
      "pos": [
        679,
        689
      ]
    },
    {
      "content": "删除基于主存储访问密钥的第一个数据库范围凭据",
      "pos": [
        693,
        715
      ]
    },
    {
      "content": "登录 Azure 并重新生成主访问密钥供下一次使用",
      "pos": [
        719,
        744
      ]
    },
    {
      "content": "查询 Azure Blob 存储数据",
      "pos": [
        749,
        767
      ]
    },
    {
      "content": "针对外部表的查询只使用表名称，如关系表一样。",
      "pos": [
        768,
        790
      ]
    },
    {
      "pos": [
        900,
        1127
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>对外部表的查询可能因“查询已中止 -- 从外部源读取时已达最大拒绝阈值”错误而失败。这表示外部数据包含<bpt id=\"p1\">*</bpt>脏<ept id=\"p1\">*</ept>记录。如果实际数据类型/列数目不匹配外部表的列定义，或数据不匹配指定的外部文件格式，则会将数据记录视为脏记录。若要解决此问题，请确保外部表和外部文件格式定义正确，并且外部数据符合这些定义。如果外部数据记录的子集是脏的，你可以通过使用 CREATE EXTERNAL TABLE DDL 中的拒绝选项，选择拒绝这些查询记录。"
    },
    {
      "content": "从 Azure Blob 存储加载数据",
      "pos": [
        1133,
        1152
      ]
    },
    {
      "content": "此示例将 Azure Blob 存储中的数据加载到 SQL 数据仓库数据库中。",
      "pos": [
        1153,
        1192
      ]
    },
    {
      "content": "直接存储数据可免除查询时的数据传输时间。配合列存储索引存储数据可让分析查询的查询性能提升 10 倍。",
      "pos": [
        1194,
        1244
      ]
    },
    {
      "content": "此示例使用 CREATE TABLE AS SELECT 语句来加载数据。新表继承查询中指定的列。它从外部表定义继承这些列的数据类型。",
      "pos": [
        1246,
        1313
      ]
    },
    {
      "content": "CREATE TABLE AS SELECT 是高性能 TRANSACT-SQL 语句，可将数据并行加载到 SQL 数据仓库的所有计算节点。它最初是针对分析平台系统中的大规模并行处理 (MPP) 引擎开发的，现已纳入 SQL 数据仓库。",
      "pos": [
        1315,
        1433
      ]
    },
    {
      "pos": [
        1691,
        1737
      ],
      "content": "请参阅 <bpt id=\"p1\">[</bpt>CREATE TABLE AS SELECT (Transact-SQL)<ept id=\"p1\">][]</ept>。"
    },
    {
      "content": "基于新加载的数据创建统计信息",
      "pos": [
        1742,
        1756
      ]
    },
    {
      "pos": [
        1758,
        1901
      ],
      "content": "Azure SQL 数据仓库尚不支持自动创建或自动更新统计信息。为了获得查询的最佳性能，在首次加载数据或者在数据发生重大更改之后，创建所有表的所有列统计信息非常重要。有关统计信息的详细说明，请参阅开发主题组中的<bpt id=\"p1\">[</bpt>统计信息<ept id=\"p1\">][]</ept>主题。以下快速示例说明如何基于此示例中加载的表创建统计信息。"
    },
    {
      "content": "将数据导出到 Azure Blob 存储",
      "pos": [
        2248,
        2268
      ]
    },
    {
      "content": "本部分说明如何将数据从 SQL 数据仓库导出到 Azure Blob 存储。此示例使用 CREATE EXTERNAL TABLE AS SELECT（高性能 TRANSACT-SQL 语句）将数据从所有计算节点并行导出。",
      "pos": [
        2269,
        2380
      ]
    },
    {
      "content": "以下示例使用 dbo.Weblogs 表中的列定义和数据从 dbo 创建外部表 Weblogs2014。外部表定义存储在 SQL 数据仓库中，SELECT 语句的结果将导出到数据源所指定的 Blob 容器下的“/archive/log2014/”目录中。将以指定的文本文件格式导出数据。",
      "pos": [
        2382,
        2525
      ]
    },
    {
      "content": "满足 PolyBase UTF-8 要求",
      "pos": [
        2828,
        2848
      ]
    },
    {
      "content": "目前 PolyBase 支持加载 UTF-8 编码的数据文件。由于 UTF-8 使用与 ASCII 相同的字符编码，PolyBase 也支持加载 ASCII 编码的数据。但是，PolyBase 不支持其他字符编码，例如 UTF-16/Unicode 或扩展的 ASCII 字符。扩展的 ASCII 包括具有重音符号的字符，例如德语中常见的变音符号。",
      "pos": [
        2849,
        3023
      ]
    },
    {
      "content": "满足这项要求的最佳方法是重新编写为 UTF-8 编码。",
      "pos": [
        3025,
        3052
      ]
    },
    {
      "content": "有多种方法可实现此目的。以下是两种使用 Powershell 的方法：",
      "pos": [
        3054,
        3089
      ]
    },
    {
      "content": "适用于小文件的简单示例",
      "pos": [
        3095,
        3106
      ]
    },
    {
      "content": "以下是用于创建文件的一行简单 Powershell 脚本。",
      "pos": [
        3108,
        3137
      ]
    },
    {
      "content": "但是，尽管将数据重新编码的方法非常简单，但绝非最有效的做法。以下 IO 流式处理示例要快得多，并可达到相同的效果。",
      "pos": [
        3245,
        3302
      ]
    },
    {
      "content": "适用于较大文件的 IO 流式处理示例",
      "pos": [
        3308,
        3326
      ]
    },
    {
      "content": "以下代码示例更为复杂，但在流式处理从源到目标的数据行时要有效得多。请对较大的文件应用此方法。",
      "pos": [
        3328,
        3374
      ]
    },
    {
      "content": "后续步骤",
      "pos": [
        4433,
        4437
      ]
    },
    {
      "pos": [
        4438,
        4476
      ],
      "content": "若要详细了解如何将数据转移到 SQL 数据仓库，请参阅<bpt id=\"p1\">[</bpt>数据迁移概述<ept id=\"p1\">][]</ept>。"
    },
    {
      "content": "[CREATE EXTERNAL FILE FORMAT (Transact-SQL)]: https://msdn.microsoft.com/zh-cn/library/dn935026).aspx",
      "pos": [
        5350,
        5451
      ]
    },
    {
      "content": "[CREATE EXTERNAL TABLE (Transact-SQL)]: https://msdn.microsoft.com/zh-cn/library/dn935021.aspx",
      "pos": [
        5452,
        5546
      ]
    }
  ],
  "content": "<properties\n   pageTitle=\"在 SQL 数据仓库中使用 PolyBase 的指南 | Azure\"\n   description=\"有关在 SQL 数据仓库方案中使用 PolyBase 的指导原则和建议。\"\n   services=\"sql-data-warehouse\"\n   documentationCenter=\"NA\"\n   authors=\"sahaj08\"\n   manager=\"barbkess\"\n   editor=\"jrowlandjones\"/>\n\n<tags\n   ms.service=\"sql-data-warehouse\"\n   ms.date=\"11/19/2015\"\n   wacn.date=\"01/20/2016\"/>\n\n\n# 在 SQL 数据仓库中使用 PolyBase 的指南\n\n本指南提供有关在 SQL 数据仓库中使用 PolyBase 的实用信息。\n\n若要开始，请参阅[使用 PolyBase 加载数据][]教程。\n\n\n## 轮换存储密钥\n\n有时出于安全考虑，想要更改 Blob 存储的访问密钥。\n\n执行此任务的最佳方式是遵循称为“轮换密钥”的过程。你可能已注意到，Blob 存储帐户有两个存储密钥。这样你便可以转换\n\n轮换 Azure 存储帐户密钥的过程只需简单的三个步骤\n\n1. 创建基于辅助存储访问密钥的第二个数据库范围凭据\n2. 创建基于新凭据的第二个外部数据源\n3. 删除并创建指向新外部数据源的外部表\n\n当你将所有外部表迁移到新的外部数据源时，可以执行清理任务：\n \n1. 删除第一个外部数据源\n2. 删除基于主存储访问密钥的第一个数据库范围凭据\n3. 登录 Azure 并重新生成主访问密钥供下一次使用\n\n## 查询 Azure Blob 存储数据\n针对外部表的查询只使用表名称，如关系表一样。\n\n```\n-- Query Azure storage resident data via external table. \nSELECT * FROM [ext].[CarSensor_Data]\n;\n```\n\n> [AZURE.NOTE]对外部表的查询可能因“查询已中止 -- 从外部源读取时已达最大拒绝阈值”错误而失败。这表示外部数据包含*脏*记录。如果实际数据类型/列数目不匹配外部表的列定义，或数据不匹配指定的外部文件格式，则会将数据记录视为脏记录。若要解决此问题，请确保外部表和外部文件格式定义正确，并且外部数据符合这些定义。如果外部数据记录的子集是脏的，你可以通过使用 CREATE EXTERNAL TABLE DDL 中的拒绝选项，选择拒绝这些查询记录。\n\n\n## 从 Azure Blob 存储加载数据\n此示例将 Azure Blob 存储中的数据加载到 SQL 数据仓库数据库中。\n\n直接存储数据可免除查询时的数据传输时间。配合列存储索引存储数据可让分析查询的查询性能提升 10 倍。\n\n此示例使用 CREATE TABLE AS SELECT 语句来加载数据。新表继承查询中指定的列。它从外部表定义继承这些列的数据类型。\n\nCREATE TABLE AS SELECT 是高性能 TRANSACT-SQL 语句，可将数据并行加载到 SQL 数据仓库的所有计算节点。它最初是针对分析平台系统中的大规模并行处理 (MPP) 引擎开发的，现已纳入 SQL 数据仓库。\n\n\n```\n-- Load data from Azure blob storage to SQL Data Warehouse      \nCREATE TABLE [dbo].[Customer_Speed]\nWITH \n(   \n  CLUSTERED COLUMNSTORE INDEX\n,   DISTRIBUTION = HASH([CarSensor_Data].[CustomerKey])\n)\nAS \nSELECT * \nFROM   [ext].[CarSensor_Data];\n```\n\n\n请参阅 [CREATE TABLE AS SELECT (Transact-SQL)][]。\n\n## 基于新加载的数据创建统计信息\n\nAzure SQL 数据仓库尚不支持自动创建或自动更新统计信息。为了获得查询的最佳性能，在首次加载数据或者在数据发生重大更改之后，创建所有表的所有列统计信息非常重要。有关统计信息的详细说明，请参阅开发主题组中的[统计信息][]主题。以下快速示例说明如何基于此示例中加载的表创建统计信息。\n\n```\ncreate statistics [SensorKey] on [Customer_Speed] ([SensorKey]);\ncreate statistics [CustomerKey] on [Customer_Speed] ([CustomerKey]);\ncreate statistics [GeographyKey] on [Customer_Speed] ([GeographyKey]);\ncreate statistics [Speed] on [Customer_Speed] ([Speed]);\ncreate statistics [YearMeasured] on [Customer_Speed] ([YearMeasured]);\n```\n\n## 将数据导出到 Azure Blob 存储\n本部分说明如何将数据从 SQL 数据仓库导出到 Azure Blob 存储。此示例使用 CREATE EXTERNAL TABLE AS SELECT（高性能 TRANSACT-SQL 语句）将数据从所有计算节点并行导出。\n\n以下示例使用 dbo.Weblogs 表中的列定义和数据从 dbo 创建外部表 Weblogs2014。外部表定义存储在 SQL 数据仓库中，SELECT 语句的结果将导出到数据源所指定的 Blob 容器下的“/archive/log2014/”目录中。将以指定的文本文件格式导出数据。\n\n```\nCREATE EXTERNAL TABLE Weblogs2014 WITH\n(\n    LOCATION='/archive/log2014/',\n    DATA_SOURCE=azure_storage,\n    FILE_FORMAT=text_file_format\n)\nAS\nSELECT\n    Uri,\n    DateRequested\nFROM\n    dbo.Weblogs\nWHERE\n    1=1\n    AND DateRequested > '12/31/2013'\n    AND DateRequested < '01/01/2015';\n```\n\n\n## 满足 PolyBase UTF-8 要求\n目前 PolyBase 支持加载 UTF-8 编码的数据文件。由于 UTF-8 使用与 ASCII 相同的字符编码，PolyBase 也支持加载 ASCII 编码的数据。但是，PolyBase 不支持其他字符编码，例如 UTF-16/Unicode 或扩展的 ASCII 字符。扩展的 ASCII 包括具有重音符号的字符，例如德语中常见的变音符号。\n\n满足这项要求的最佳方法是重新编写为 UTF-8 编码。\n\n有多种方法可实现此目的。以下是两种使用 Powershell 的方法：\n\n### 适用于小文件的简单示例\n\n以下是用于创建文件的一行简单 Powershell 脚本。\n \n```\nGet-Content <input_file_name> -Encoding Unicode | Set-Content <output_file_name> -Encoding utf8\n```\n\n但是，尽管将数据重新编码的方法非常简单，但绝非最有效的做法。以下 IO 流式处理示例要快得多，并可达到相同的效果。\n\n### 适用于较大文件的 IO 流式处理示例\n\n以下代码示例更为复杂，但在流式处理从源到目标的数据行时要有效得多。请对较大的文件应用此方法。\n\n\n        #Static variables\n        $ascii = [System.Text.Encoding]::ASCII\n        $utf16le = [System.Text.Encoding]::Unicode\n        $utf8 = [System.Text.Encoding]::UTF8\n        $ansi = [System.Text.Encoding]::Default\n        $append = $False\n        \n        #Set source file path and file name\n        $src = [System.IO.Path]::Combine(\"C:\\input_file_path\",\"input_file_name.txt\")\n        \n        #Set source file encoding (using list above)\n        $src_enc = $ansi\n        \n        #Set target file path and file name\n        $tgt = [System.IO.Path]::Combine(\"C:\\output_file_path\",\"output_file_name.txt\")\n        \n        #Set target file encoding (using list above)\n        $tgt_enc = $utf8\n        \n        $read = New-Object System.IO.StreamReader($src,$src_enc)\n        $write = New-Object System.IO.StreamWriter($tgt,$append,$tgt_enc)\n        \n        while ($read.Peek() -ne -1)\n        {\n            $line = $read.ReadLine();\n            $write.WriteLine($line);\n        }\n        $read.Close()\n        $read.Dispose()\n        $write.Close()\n\n\n## 后续步骤\n若要详细了解如何将数据转移到 SQL 数据仓库，请参阅[数据迁移概述][]。\n\n<!--Image references-->\n\n<!--Article references-->\n[Load data with bcp]: /documentation/articles/sql-data-warehouse-load-with-bcp\n[使用 PolyBase 加载数据]: /documentation/articles/sql-data-warehouse-load-with-polybase\n[solution partners]: /documentation/articles/sql-data-warehouse-solution-partners\n[development overview]: /documentation/articles/sql-data-warehouse-overview-develop\n[统计信息]: /documentation/articles/sql-data-warehouse-develop-statistics\n[数据迁移概述]: /documentation/articles/sql-data-warehouse-overview-migrate\n\n<!--MSDN references-->\n[supported source/sink]: https://msdn.microsoft.com/zh-cn/library/dn894007.aspx\n[copy activity]: https://msdn.microsoft.com/zh-cn/library/dn835035.aspx\n[SQL Server destination adapter]: https://msdn.microsoft.com/zh-cn/library/ms141095.aspx\n[SSIS]: https://msdn.microsoft.com/zh-cn/library/ms141026.aspx\n\n\n<!-- External Links -->\n[CREATE EXTERNAL DATA SOURCE (Transact-SQL)]: https://msdn.microsoft.com/zh-cn/library/dn935022.aspx\n[CREATE EXTERNAL FILE FORMAT (Transact-SQL)]: https://msdn.microsoft.com/zh-cn/library/dn935026).aspx\n[CREATE EXTERNAL TABLE (Transact-SQL)]: https://msdn.microsoft.com/zh-cn/library/dn935021.aspx\n\n[DROP EXTERNAL DATA SOURCE (Transact-SQL)]: https://msdn.microsoft.com/zh-cn/library/mt146367.aspx\n[DROP EXTERNAL FILE FORMAT (Transact-SQL)]: https://msdn.microsoft.com/zh-cn/library/mt146379.aspx\n[DROP EXTERNAL TABLE (Transact-SQL)]: https://msdn.microsoft.com/zh-cn/library/mt130698.aspx\n\n[CREATE TABLE AS SELECT (Transact-SQL)]: https://msdn.microsoft.com/zh-cn/library/mt204041.aspx\n[INSERT...SELECT (Transact-SQL)]: https://msdn.microsoft.com/zh-cn/library/ms174335.aspx\n[CREATE MASTER KEY (Transact-SQL)]: https://msdn.microsoft.com/zh-cn/library/ms174382.aspx\n[CREATE CREDENTIAL (Transact-SQL)]: https://msdn.microsoft.com/zh-cn/library/ms189522.aspx\n[CREATE DATABASE SCOPED CREDENTIAL (Transact-SQL)]: https://msdn.microsoft.com/zh-cn/library/mt270260.aspx\n[DROP CREDENTIAL (Transact-SQL)]: https://msdn.microsoft.com/zh-cn/library/ms189450.aspx\n\n<!---HONumber=Mooncake_1207_2015-->\n"
}