{
  "nodes": [
    {
      "content": "使用移动服务中的脱机数据处理冲突 (iOS) | 移动开发人员中心",
      "pos": [
        28,
        61
      ]
    },
    {
      "content": "了解在 iOS 应用程序中同步脱机数据时如何使用 Azure 移动服务处理冲突",
      "pos": [
        81,
        120
      ]
    },
    {
      "content": "使用移动服务中的脱机数据处理冲突",
      "pos": [
        349,
        365
      ]
    },
    {
      "content": "&amp;nbsp;",
      "pos": [
        467,
        473
      ]
    },
    {
      "pos": [
        595,
        650
      ],
      "content": "本主题演示在使用 Azure 移动服务的脱机功能时如何同步数据和处理冲突。本教程基于<bpt id=\"p1\">[</bpt><ept id=\"p1\">脱机数据入门]</ept>教程编写。"
    },
    {
      "pos": [
        653,
        807
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>若要完成本教程，你需要一个 Azure 帐户。如果你没有帐户，可以创建一个试用帐户，只需几分钟即可完成。有关详细信息，请参阅 <ph id=\"ph2\">&lt;a href=\"/pricing/1rmb-trial/?WT.mc_id=AE564AB28\" target=\"_blank\"&gt;</ph>Azure 试用<ph id=\"ph3\">&lt;/a&gt;</ph>。"
    },
    {
      "content": "下载 iOS 项目",
      "pos": [
        813,
        822
      ]
    },
    {
      "pos": [
        824,
        1019
      ],
      "content": "对于本教程，从 Github 下载<bpt id=\"p1\">[</bpt>已更新的 Xcode 项目<ept id=\"p1\">](https://github.com/Azure/mobile-services-samples/tree/master/TodoOffline/iOS)</ept>。我们已使用<bpt id=\"p2\">[</bpt><ept id=\"p2\">脱机数据入门]</ept>教程末尾提供的 Xcode 项目作为起点，然后对其进行更新以允许编辑项目。我们还添加了支持的类和方法，以便我们可以在下一节中添加冲突处理程序。"
    },
    {
      "content": "在本教程结束时，如果你在两个手机上运行此应用，请在两个手机上本地更改同一项，并将更改推送回服务器，你将允许每个手机的用户选择要保留哪个版本：",
      "pos": [
        1021,
        1091
      ]
    },
    {
      "content": "保留客户端版本（这将覆盖服务器上的版本），",
      "pos": [
        1096,
        1117
      ]
    },
    {
      "content": "保留服务器版本（这将更新客户端本地表）或者",
      "pos": [
        1122,
        1143
      ]
    },
    {
      "content": "上述两个版本都不保留（取消推送并使操作处于挂起状态）。",
      "pos": [
        1148,
        1175
      ]
    },
    {
      "content": "现在，让我们添加冲突处理程序以启用此功能。",
      "pos": [
        1177,
        1198
      ]
    },
    {
      "pos": [
        1203,
        1262
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"add-conflict-handling\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>将冲突处理程序添加到 Todo 列表视图控制器"
    },
    {
      "pos": [
        1267,
        1386
      ],
      "content": "在 <bpt id=\"p1\">**</bpt>QSTodoListViewController.m<ept id=\"p1\">**</ept> 中，编辑 <bpt id=\"p2\">**</bpt>viewDidLoad<ept id=\"p2\">**</ept>。将对 <bpt id=\"p3\">**</bpt>defaultService<ept id=\"p3\">**</ept> 的调用替换为对 <bpt id=\"p4\">**</bpt>defaultServiceWithDelegate<ept id=\"p4\">**</ept> 的调用："
    },
    {
      "pos": [
        1468,
        1581
      ],
      "content": "在 <bpt id=\"p1\">**</bpt>QSTodoListViewController.h<ept id=\"p1\">**</ept> 中，将 <bpt id=\"p2\">**</bpt>&amp;lt;MSSyncContextDelegate&amp;gt;<ept id=\"p2\">**</ept> 添加到接口声明，以便实现 <bpt id=\"p3\">**</bpt>MSSyncContextDelegate<ept id=\"p3\">**</ept> 协议。"
    },
    {
      "pos": [
        1714,
        1765
      ],
      "content": "在 <bpt id=\"p1\">**</bpt>QSTodoListViewController.m<ept id=\"p1\">**</ept> 的顶部添加以下 import 语句："
    },
    {
      "pos": [
        1814,
        1889
      ],
      "content": "最后，让我们将以下两项操作添加到 <bpt id=\"p1\">**</bpt>QSTodoListViewController.m<ept id=\"p1\">**</ept>，以便使用此帮助器类，并提示用户以三种方式之一协调冲突。"
    },
    {
      "pos": [
        3992,
        4021
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"test-app\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>测试应用程序"
    },
    {
      "content": "让我们通过冲突测试应用程序！ 在同时运行的应用程序的两个不同实例中编辑同一项，或者使用应用程序和 REST 客户端进行编辑。",
      "pos": [
        4023,
        4085
      ]
    },
    {
      "content": "通过从顶部拖动在应用程序实例中执行刷新手势。现在，你将看到协调冲突的提示：",
      "pos": [
        4087,
        4124
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"使用移动服务中的脱机数据处理冲突 (iOS) | 移动开发人员中心\" \n    description=\"了解在 iOS 应用程序中同步脱机数据时如何使用 Azure 移动服务处理冲突\" \n    documentationCenter=\"ios\" \n    authors=\"krisragh\" \n    manager=\"dwrede\" \n    editor=\"\" \n    services=\"mobile-services\"/>\n\n<tags \n    ms.service=\"mobile-services\" \n    ms.date=\"12/16/2015\"\n    wacn.date=\"01/29/2016\"/>\n\n\n#  使用移动服务中的脱机数据处理冲突\n\n[AZURE.INCLUDE [mobile-service-note-mobile-apps](../includes/mobile-services-note-mobile-apps.md)]\n\n&nbsp;\n[AZURE.INCLUDE [mobile-services-selector-offline-conflicts](../includes/mobile-services-selector-offline-conflicts.md)]\n\n本主题演示在使用 Azure 移动服务的脱机功能时如何同步数据和处理冲突。本教程基于[脱机数据入门]教程编写。\n\n>[AZURE.NOTE]若要完成本教程，你需要一个 Azure 帐户。如果你没有帐户，可以创建一个试用帐户，只需几分钟即可完成。有关详细信息，请参阅 <a href=\"/pricing/1rmb-trial/?WT.mc_id=AE564AB28\" target=\"_blank\">Azure 试用</a>。\n\n\n## 下载 iOS 项目\n\n对于本教程，从 Github 下载[已更新的 Xcode 项目](https://github.com/Azure/mobile-services-samples/tree/master/TodoOffline/iOS)。我们已使用[脱机数据入门]教程末尾提供的 Xcode 项目作为起点，然后对其进行更新以允许编辑项目。我们还添加了支持的类和方法，以便我们可以在下一节中添加冲突处理程序。\n\n在本教程结束时，如果你在两个手机上运行此应用，请在两个手机上本地更改同一项，并将更改推送回服务器，你将允许每个手机的用户选择要保留哪个版本：\n  * 保留客户端版本（这将覆盖服务器上的版本），\n  * 保留服务器版本（这将更新客户端本地表）或者\n  * 上述两个版本都不保留（取消推送并使操作处于挂起状态）。\n\n现在，让我们添加冲突处理程序以启用此功能。\n\n## <a name=\"add-conflict-handling\"></a>将冲突处理程序添加到 Todo 列表视图控制器\n\n1. 在 **QSTodoListViewController.m** 中，编辑 **viewDidLoad**。将对 **defaultService** 的调用替换为对 **defaultServiceWithDelegate** 的调用：\n\n        self.todoService = [QSTodoService defaultServiceWithDelegate:self];\n\n2. 在 **QSTodoListViewController.h** 中，将 **&lt;MSSyncContextDelegate&gt;** 添加到接口声明，以便实现 **MSSyncContextDelegate** 协议。\n\n        @interface QSTodoListViewController : UITableViewController<MSSyncContextDelegate, NSFetchedResultsControllerDelegate>\n\n3. 在 **QSTodoListViewController.m** 的顶部添加以下 import 语句：\n\n        #import \"QSUIAlertViewWithBlock.h\"\n\n4. 最后，让我们将以下两项操作添加到 **QSTodoListViewController.m**，以便使用此帮助器类，并提示用户以三种方式之一协调冲突。\n\n        - (void)tableOperation:(MSTableOperation *)operation onComplete:(MSSyncItemBlock)completion\n        {\n            [self doOperation:operation complete:completion];\n        }\n\n        -(void)doOperation:(MSTableOperation *)operation complete:(MSSyncItemBlock)completion\n        {\n            [operation executeWithCompletion:^(NSDictionary *item, NSError *error) {\n\n                NSDictionary *serverItem = [error.userInfo objectForKey:MSErrorServerItemKey];\n\n                if (error.code == MSErrorPreconditionFailed) {\n                    QSUIAlertViewWithBlock *alert = [[QSUIAlertViewWithBlock alloc] initWithCallback:^(NSInteger buttonIndex) {\n                        if (buttonIndex == 1) { // Client\n                            NSMutableDictionary *adjustedItem = [operation.item mutableCopy];\n\n                            [adjustedItem setValue:[serverItem objectForKey:MSSystemColumnVersion] forKey:MSSystemColumnVersion];\n                            operation.item = adjustedItem;\n\n                            [self doOperation:operation complete:completion];\n                            return;\n\n                        } else if (buttonIndex == 2) { // Server\n                            NSDictionary *serverItem = [error.userInfo objectForKey:MSErrorServerItemKey];\n                            completion(serverItem, nil);\n                        } else { // Cancel\n                            [operation cancelPush];\n                            completion(nil, error);\n                        }\n                    }];\n\n                    NSString *message = [NSString stringWithFormat:@\"Client value: %@\\nServer value: %@\", operation.item[@\"text\"], serverItem[@\"text\"]];\n\n                    [alert showAlertWithTitle:@\"Server Conflict\"\n                                      message:message\n                            cancelButtonTitle:@\"Cancel\"\n                            otherButtonTitles:[NSArray arrayWithObjects:@\"Use Client\", @\"Use Server\", nil]];\n                } else {\n                    completion(item, error);\n                }\n            }];\n        }\n\n## <a name=\"test-app\"></a>测试应用程序\n\n让我们通过冲突测试应用程序！ 在同时运行的应用程序的两个不同实例中编辑同一项，或者使用应用程序和 REST 客户端进行编辑。\n\n通过从顶部拖动在应用程序实例中执行刷新手势。现在，你将看到协调冲突的提示：\n\n![][conflict-ui]\n\n<!-- URLs. -->\n\n[Update the App Project to Allow Editing]: #update-app\n[Update Todo List View Controller]: #update-list-view\n[Add Todo Item View Controller]: #add-view-controller\n[Add Todo Item View Controller and Segue to Storyboard]: #add-segue\n[Add Item Details to Todo Item View Controller]: #add-item-details\n[Add Support for Saving Edits]: #saving-edits\n[Conflict Handling Problem]: #conflict-handling-problem\n[Update QSTodoService to Support Conflict Handling]: #service-add-conflict-handling\n[Add UI Alert View Helper to Support Conflict Handling]: #add-alert-view\n[Add Conflict Handler to Todo List View Controller]: #add-conflict-handling\n[Test the App]: #test-app\n\n\n[add-todo-item-view-controller-3]: ./media/mobile-services-ios-handling-conflicts-offline-data/add-todo-item-view-controller-3.png\n[add-todo-item-view-controller-4]: ./media/mobile-services-ios-handling-conflicts-offline-data/add-todo-item-view-controller-4.png\n[add-todo-item-view-controller-5]: ./media/mobile-services-ios-handling-conflicts-offline-data/add-todo-item-view-controller-5.png\n[add-todo-item-view-controller-6]: ./media/mobile-services-ios-handling-conflicts-offline-data/add-todo-item-view-controller-6.png\n[todo-list-view-controller-add-segue]: ./media/mobile-services-ios-handling-conflicts-offline-data/todo-list-view-controller-add-segue.png\n[update-todo-list-view-controller-2]: ./media/mobile-services-ios-handling-conflicts-offline-data/update-todo-list-view-controller-2.png\n[conflict-handling-problem-1]: ./media/mobile-services-ios-handling-conflicts-offline-data/conflict-handling-problem-1.png\n[conflict-ui]: ./media/mobile-services-ios-handling-conflicts-offline-data/conflict-ui.png\n\n\n[Segmented Controls]: https://developer.apple.com/zh-cn/library/ios/documentation/UserExperience/Conceptual/UIKitUICatalog/UISegmentedControl.html\n[Core Data Model Editor Help]: https://developer.apple.com/zh-cn/library/mac/recipes/xcode_help-core_data_modeling_tool/Articles/about_cd_modeling_tool.html\n[Creating an Outlet Connection]: https://developer.apple.com/zh-cn/library/mac/recipes/xcode_help-interface_builder/articles-connections_bindings/CreatingOutlet.html\n[Build a User Interface]: https://developer.apple.com/zh-cn/library/mac/documentation/ToolsLanguages/Conceptual/Xcode_Overview/Edit_User_Interfaces/edit_user_interface.html\n[Adding a Segue Between Scenes in a Storyboard]: https://developer.apple.com/zh-cn/library/ios/recipes/xcode_help-IB_storyboard/chapters/StoryboardSegue.html#//apple_ref/doc/uid/TP40014225-CH25-SW1\n[Adding a Scene to a Storyboard]: https://developer.apple.com/zh-cn/library/ios/recipes/xcode_help-IB_storyboard/chapters/StoryboardScene.html\n[Core Data]: https://developer.apple.com/zh-cn/library/ios/documentation/Cocoa/Conceptual/CoreData/cdProgrammingGuide.html\n[Download the preview SDK here]: http://aka.ms/Gc6fex\n[How to use the Mobile Services client library for iOS]: /documentation/articles/mobile-services-ios-how-to-use-client-library\n[Getting Started Offline iOS Sample]: https://github.com/Azure/mobile-services-samples/tree/master/TodoOffline/iOS/blog20140611\n[脱机数据入门]: /documentation/articles/mobile-services-ios-get-started-offline-data\n[Get started with Mobile Services]: /documentation/articles/mobile-services-ios-get-started\n \n\n<!---HONumber=Mooncake_0118_2016-->"
}