{
  "nodes": [
    {
      "content": "用于 Xamarin iOS 应用的移动服务中的身份验证入门 | Azure",
      "pos": [
        28,
        66
      ]
    },
    {
      "content": "了解如何使用移动服务通过各种标识提供程序（包括 Microsoft 和 Azure Active Directory 对 Xamarin iOS 应用程序的用户进行身份验证。",
      "pos": [
        85,
        172
      ]
    },
    {
      "content": "向移动服务应用程序添加身份验证",
      "pos": [
        406,
        421
      ]
    },
    {
      "content": "&amp;nbsp;",
      "pos": [
        523,
        529
      ]
    },
    {
      "content": "本主题说明如何通过应用程序对 Azure 移动服务中的用户进行身份验证。在本教程中，你将要使用移动服务支持的标识提供程序向快速入门项目添加身份验证。在移动服务成功完成身份验证和授权后，将显示用户 ID 值。",
      "pos": [
        651,
        754
      ]
    },
    {
      "content": "本教程将指导你完成在应用程序中启用身份验证的以下基本步骤：",
      "pos": [
        756,
        785
      ]
    },
    {
      "content": "注册应用程序以进行身份验证并配置移动服务",
      "pos": [
        791,
        811
      ]
    },
    {
      "content": "将表权限限制给已经过身份验证的用户",
      "pos": [
        817,
        834
      ]
    },
    {
      "content": "向应用程序添加身份验证",
      "pos": [
        840,
        851
      ]
    },
    {
      "pos": [
        854,
        888
      ],
      "content": "本教程基于移动服务快速入门。此外，还必须先完成<bpt id=\"p1\">[</bpt><ept id=\"p1\">移动服务入门]</ept>教程。"
    },
    {
      "pos": [
        892,
        935
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"register\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>注册应用程序以进行身份验证并配置移动服务"
    },
    {
      "pos": [
        1193,
        1235
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"permissions\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>将权限限制给已经过身份验证的用户"
    },
    {
      "content": "在 Visual Studio 或 Xamarin Studio 中，运行设备或模拟器中的客户端项目。验证在应用程序启动后是否引发状态代码为 401（“未授权”）的未处理异常。",
      "pos": [
        1398,
        1486
      ]
    },
    {
      "content": "接下来，你需要更新应用程序，以便在从移动服务请求资源之前对用户进行身份验证。",
      "pos": [
        1583,
        1621
      ]
    },
    {
      "pos": [
        1625,
        1669
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"add-authentication\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>向应用程序添加身份验证"
    },
    {
      "content": "在本部分中，你将修改应用程序，以便在显示数据之前显示登录屏幕。当应用启动时，它将不会连接到移动服务，并且不会显示任何数据。用户首次执行刷新笔势后，将显示登录屏幕；成功登录后，将显示 Todo 项列表。",
      "pos": [
        1671,
        1771
      ]
    },
    {
      "pos": [
        1776,
        1834
      ],
      "content": "在客户端项目中，打开文件 <bpt id=\"p1\">**</bpt>QSTodoService.cs<ept id=\"p1\">**</ept> 并将以下声明添加到 QSTodoService："
    },
    {
      "pos": [
        1985,
        2034
      ],
      "content": "使用以下定义向 <bpt id=\"p1\">**</bpt>QSTodoService<ept id=\"p1\">**</ept> 添加新方法 <bpt id=\"p2\">**</bpt>Authenticate<ept id=\"p2\">**</ept>："
    },
    {
      "pos": [
        2423,
        2565
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>如果使用的标识提供程序不是 Facebook，请将传递给上述 <bpt id=\"p1\">**</bpt>LoginAsync<ept id=\"p1\">**</ept> 方法的值更改为下列其中一项：<bpt id=\"p2\">_</bpt>MicrosoftAccount<ept id=\"p2\">_</ept>、<bpt id=\"p3\">_</bpt>Twitter<ept id=\"p3\">_</ept>、<bpt id=\"p4\">_</bpt>Google<ept id=\"p4\">_</ept> 或 <bpt id=\"p5\">_</bpt>WindowsAzureActiveDirectory<ept id=\"p5\">_</ept>。"
    },
    {
      "pos": [
        2570,
        2662
      ],
      "content": "打开 <bpt id=\"p1\">**</bpt>QSTodoListViewController.cs<ept id=\"p1\">**</ept>。修改 <bpt id=\"p2\">**</bpt>ViewDidLoad<ept id=\"p2\">**</ept> 的方法定义以删除接近结尾处对 <bpt id=\"p3\">**</bpt>RefreshAsync()<ept id=\"p3\">**</ept> 的调用："
    },
    {
      "pos": [
        3187,
        3260
      ],
      "content": "修改方法 <bpt id=\"p1\">**</bpt>RefreshAsync<ept id=\"p1\">**</ept>，以便在 <bpt id=\"p2\">**</bpt>User<ept id=\"p2\">**</ept> 属性为 null 时进行身份验证并显示登录屏幕。在方法定义顶部的以下代码中："
    },
    {
      "content": "按“运行”按钮以生成项目，并在 iPhone 模拟器中启动应用程序。验证应用程序是否未显示任何数据。",
      "pos": [
        3605,
        3655
      ]
    },
    {
      "content": "通过向下拉动项列表来执行刷新笔势，这将导致显示登录屏幕。成功输入有效的凭据后，应用程序将显示 Todo 项的列表，你可以对数据进行更新。",
      "pos": [
        3661,
        3729
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"用于 Xamarin iOS 应用的移动服务中的身份验证入门 | Azure\"\n    description=\"了解如何使用移动服务通过各种标识提供程序（包括 Microsoft 和 Azure Active Directory 对 Xamarin iOS 应用程序的用户进行身份验证。\" \n    services=\"mobile-services\" \n    documentationCenter=\"xamarin\" \n    authors=\"lindydonna\" \n    manager=\"dwrede\" \n    editor=\"\"/>\n\n<tags \n    ms.service=\"mobile-services\" \n    ms.date=\"12/01/2015\" \n    wacn.date=\"01/29/2016\"/>\n\n# 向移动服务应用程序添加身份验证\n\n[AZURE.INCLUDE [mobile-service-note-mobile-apps](../includes/mobile-services-note-mobile-apps.md)]\n\n&nbsp;\n[AZURE.INCLUDE [mobile-services-selector-get-started-users](../includes/mobile-services-selector-get-started-users.md)]\n\n本主题说明如何通过应用程序对 Azure 移动服务中的用户进行身份验证。在本教程中，你将要使用移动服务支持的标识提供程序向快速入门项目添加身份验证。在移动服务成功完成身份验证和授权后，将显示用户 ID 值。\n\n本教程将指导你完成在应用程序中启用身份验证的以下基本步骤：\n\n1. [注册应用程序以进行身份验证并配置移动服务]\n2. [将表权限限制给已经过身份验证的用户]\n3. [向应用程序添加身份验证]\n\n本教程基于移动服务快速入门。此外，还必须先完成[移动服务入门]教程。\n\n##<a name=\"register\"></a>注册应用程序以进行身份验证并配置移动服务\n\n[AZURE.INCLUDE [mobile-services-register-authentication](../includes/mobile-services-register-authentication.md)]\n\n[AZURE.INCLUDE [mobile-services-dotnet-backend-aad-server-extension](../includes/mobile-services-dotnet-backend-aad-server-extension.md)]\n\n##<a name=\"permissions\"></a>将权限限制给已经过身份验证的用户\n\n[AZURE.INCLUDE [mobile-services-restrict-permissions-dotnet-backend](../includes/mobile-services-restrict-permissions-dotnet-backend.md)]\n\n<ol start=\"6\">\n<li><p>在 Visual Studio 或 Xamarin Studio 中，运行设备或模拟器中的客户端项目。验证在应用程序启动后是否引发状态代码为 401（“未授权”）的未处理异常。</p>\n   \n    <p>发生此异常的原因是应用程序尝试以未经身份验证的用户身份访问移动服务，但 <em>TodoItem</em> 表现在要求身份验证。</p></li>\n</ol>\n\n接下来，你需要更新应用程序，以便在从移动服务请求资源之前对用户进行身份验证。\n\n##<a name=\"add-authentication\"></a>向应用程序添加身份验证\n\n在本部分中，你将修改应用程序，以便在显示数据之前显示登录屏幕。当应用启动时，它将不会连接到移动服务，并且不会显示任何数据。用户首次执行刷新笔势后，将显示登录屏幕；成功登录后，将显示 Todo 项列表。\n\n1. 在客户端项目中，打开文件 **QSTodoService.cs** 并将以下声明添加到 QSTodoService：\n\n        // Mobile Service logged in user\n        private MobileServiceUser user; \n        public MobileServiceUser User { get { return user; } }\n\n2. 使用以下定义向 **QSTodoService** 添加新方法 **Authenticate**：\n\n        private async Task Authenticate(UIViewController view)\n        {\n            try\n            {\n                user = await client.LoginAsync(view, MobileServiceAuthenticationProvider.Facebook);\n            }\n            catch (Exception ex)\n            {\n                Console.Error.WriteLine (@\"ERROR - AUTHENTICATION FAILED {0}\", ex.Message);\n            }\n        }\n\n    > [AZURE.NOTE]如果使用的标识提供程序不是 Facebook，请将传递给上述 **LoginAsync** 方法的值更改为下列其中一项：_MicrosoftAccount_、_Twitter_、_Google_ 或 _WindowsAzureActiveDirectory_。\n\n3. 打开 **QSTodoListViewController.cs**。修改 **ViewDidLoad** 的方法定义以删除接近结尾处对 **RefreshAsync()** 的调用：\n\n        public override async void ViewDidLoad ()\n        {\n            base.ViewDidLoad ();\n\n            todoService = QSTodoService.DefaultService;\n\n            todoService.BusyUpdate += (bool busy) => {\n                if (busy)\n                    activityIndicator.StartAnimating ();\n                else \n                    activityIndicator.StopAnimating ();\n            };\n\n            // Comment out the call to RefreshAsync\n            // await RefreshAsync ();\n\n            AddRefreshControl ();\n        }\n\n\n4. 修改方法 **RefreshAsync**，以便在 **User** 属性为 null 时进行身份验证并显示登录屏幕。在方法定义顶部的以下代码中：\n\n        // start of RefreshAsync method\n        if (todoService.User == null) {\n            await QSTodoService.DefaultService.Authenticate (this);\n            if (todoService.User == null) {\n                Console.WriteLine (\"couldn't login!!\");\n                return;\n            }\n        }\n        // rest of RefreshAsync method\n    \n5. 按“运行”按钮以生成项目，并在 iPhone 模拟器中启动应用程序。验证应用程序是否未显示任何数据。\n\n    通过向下拉动项列表来执行刷新笔势，这将导致显示登录屏幕。成功输入有效的凭据后，应用程序将显示 Todo 项的列表，你可以对数据进行更新。\n\n<!-- ## <a name=\"next-steps\"> </a>Next steps\n\nIn the next tutorial, [Service-side authorization of Mobile Services users][Authorize users with scripts], you will take the user ID value provided by Mobile Services based on an authenticated user and use it to filter the data returned by Mobile Services. \n -->\n<!-- Anchors. -->\n\n[注册应用程序以进行身份验证并配置移动服务]: #register\n[将表权限限制给已经过身份验证的用户]: #permissions\n[向应用程序添加身份验证]: #add-authentication\n[Next Steps]: #next-steps\n\n\n<!-- URLs. -->\n\n[Submit an app page]: http://go.microsoft.com/fwlink/p/?LinkID=266582\n[My Applications]: http://go.microsoft.com/fwlink/p/?LinkId=262039\n[Live SDK for Windows]: http://go.microsoft.com/fwlink/p/?LinkId=262253\n[移动服务入门]: /documentation/articles/mobile-services-dotnet-backend-xamarin-ios-get-started\n[Get started with authentication]: /documentation/articles/mobile-services-dotnet-backend-xamarin-ios-get-started-users\n[Get started with push notifications]: /documentation/articles/mobile-services-dotnet-backend-xamarin-ios-get-started-push\n[Authorize users with scripts]: /documentation/articles/mobile-services-dotnet-backend-windows-store-dotnet-authorize-users-in-scripts\n[JavaScript and HTML]: /documentation/articles/mobile-services-dotnet-backend-windows-store-javascript-get-started-users\n[Azure Management Portal]: https://manage.windowsazure.cn/\n\n<!---HONumber=Mooncake_0118_2016-->"
}