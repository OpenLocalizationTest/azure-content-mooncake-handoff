{
  "nodes": [
    {
      "content": "Azure 队列和服务总线队列 - 比较与对照 | Azure",
      "pos": [
        27,
        58
      ]
    },
    {
      "content": "分析 Azure 提供的两种队列类型之间的差异和相似性。",
      "pos": [
        76,
        104
      ]
    },
    {
      "content": "Azure 队列和服务总线队列 - 比较与对照",
      "pos": [
        315,
        338
      ]
    },
    {
      "content": "本文分析 Azure 目前提供的以下两种队列类型之间的差异和相似性：Azure 队列和服务总线队列。通过使用该信息，您可以比较和对照这两种技术，并可以明智地决定哪种解决方案最符合您的需要。",
      "pos": [
        340,
        434
      ]
    },
    {
      "content": "介绍",
      "pos": [
        439,
        441
      ]
    },
    {
      "pos": [
        443,
        482
      ],
      "content": "Azure 支持两种队列机制：<bpt id=\"p1\">**</bpt>Azure 队列<ept id=\"p1\">**</ept>和<bpt id=\"p2\">**</bpt>服务总线队列<ept id=\"p2\">**</ept>。"
    },
    {
      "pos": [
        484,
        601
      ],
      "content": "<bpt id=\"p1\">**</bpt>Azure 队列<ept id=\"p1\">**</ept>是 <bpt id=\"p2\">[</bpt>Azure 存储空间<ept id=\"p2\">](/home/features/storage/)</ept>基础结构的一部分，其特点是简单的基于 REST 的 Get/Put/Peek 接口，可在服务内部或服务之间提供可靠的持久性消息传送。"
    },
    {
      "pos": [
        603,
        787
      ],
      "content": "<bpt id=\"p1\">**</bpt>服务总线队列<ept id=\"p1\">**</ept>是更广的 <bpt id=\"p2\">[</bpt>Azure 消息传送<ept id=\"p2\">](/home/features/messaging)</ept>基础结构的一部分，可支持队列以及发布/订阅、Web 远程服务和集成模式。有关服务总线队列、主题/订阅和中继的详细信息，请参阅<bpt id=\"p3\">[</bpt>服务总线消息传送概述<ept id=\"p3\">](/documentation/articles/service-bus-messaging-overview)</ept>。"
    },
    {
      "content": "当两种队列技术同时存在时，首先引入的是 Azure 队列，这是一种基于 Azure 存储服务构建的专用队列存储机制。服务总线队列基于更广泛的“中转消息传送”基础结构而构建，旨在集成跨多个通信协议、数据约定、可信域和/或网络环境的应用程序或应用程序组件。",
      "pos": [
        789,
        915
      ]
    },
    {
      "content": "本文比较了 Azure 提供的这两种队列技术，并分别讨论了这两种技术所提供的功能的行为及其实现形式。本文还提供相关的指导，以便你选择最适合你的应用程序开发需求的功能。",
      "pos": [
        917,
        1000
      ]
    },
    {
      "content": "技术选择注意事项",
      "pos": [
        1005,
        1013
      ]
    },
    {
      "content": "Azure 队列和服务总线队列都是 Azure 目前提供的消息队列服务的实现形式。两种队列的功能集略有不同，这意味着你可以选择其中一种，或者同时使用这两种，具体取决于你的特定解决方案或要解决的业务/技术问题的需要。",
      "pos": [
        1015,
        1122
      ]
    },
    {
      "content": "在确定哪种队列技术适合给定的解决方案时，解决方案架构师和开发人员应考虑以下建议。有关更多详细信息，请参阅下一部分。",
      "pos": [
        1124,
        1181
      ]
    },
    {
      "pos": [
        1183,
        1224
      ],
      "content": "作为解决方案架构师/开发人员，在以下情况下，<bpt id=\"p1\">**</bpt>应考虑使用 Azure 队列<ept id=\"p1\">**</ept>："
    },
    {
      "content": "你的应用程序需要在队列中存储超过 80 GB 的消息，这些消息的生存期不到 7 天。",
      "pos": [
        1228,
        1270
      ]
    },
    {
      "content": "你的应用程序需要跟踪队列内部消息的处理进度。这在处理消息的工作线程发生崩溃时很有用。然后，后续的工作线程可以使用该信息从之前的工作线程停止处继续。",
      "pos": [
        1274,
        1347
      ]
    },
    {
      "content": "你要求在服务器端记录针对你的队列执行的所有事务。",
      "pos": [
        1351,
        1375
      ]
    },
    {
      "pos": [
        1377,
        1415
      ],
      "content": "作为解决方案架构师/开发人员，在以下情况下，<bpt id=\"p1\">**</bpt>应考虑使用服务总线队列<ept id=\"p1\">**</ept>："
    },
    {
      "content": "你的解决方案必须能够在无需轮询队列的情况下接收消息。有了服务总线，就可以使用服务总线支持的基于 TCP 的协议，通过长轮询接收操作实现这一点。",
      "pos": [
        1419,
        1490
      ]
    },
    {
      "content": "你的解决方案要求队列必须遵循先入先出 (FIFO) 的传递顺序。",
      "pos": [
        1494,
        1526
      ]
    },
    {
      "pos": [
        1530,
        1663
      ],
      "content": "你希望在 Azure 和 Windows Server（私有云）上获得对称体验。有关详细信息，请参阅<bpt id=\"p1\">[</bpt>适用于 Windows Server 的服务总线<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/dn282144.aspx)</ept>。"
    },
    {
      "content": "你的解决方案必须能够支持自动重复检测。",
      "pos": [
        1667,
        1686
      ]
    },
    {
      "pos": [
        1690,
        1920
      ],
      "content": "你希望应用程序将消息作为长时间运行的并行流进行处理（使用消息的 <bpt id=\"p1\">[</bpt>SessionId<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.sessionid.aspx)</ept> 属性，将消息与流相关联）。在这种模式下，消费应用程序中的每个节点将竞争流而不是消息。当流被提供给某个消费节点时，该节点可以使用事务检查应用程序流的状态。"
    },
    {
      "content": "你的解决方案在发送或接收来自队列的多个消息时，需要事务行为和原子性。",
      "pos": [
        1924,
        1958
      ]
    },
    {
      "content": "应用程序特定的工作负荷的生存时间 (TTL) 特性超过 7 天的期限。",
      "pos": [
        1962,
        1997
      ]
    },
    {
      "content": "你的应用程序处理的消息介于 64 KB 和 256 KB 之间。",
      "pos": [
        2001,
        2033
      ]
    },
    {
      "content": "你需要向队列提供基于角色的访问模型，为发送者和接收者提供不同权限。",
      "pos": [
        2037,
        2070
      ]
    },
    {
      "content": "你的队列大小不会增长到超过 80 GB。",
      "pos": [
        2074,
        2094
      ]
    },
    {
      "pos": [
        2098,
        2208
      ],
      "content": "你希望使用基于 AMQP 1.0 标准的消息传送代理。有关 AMQP 的详细信息，请参阅<bpt id=\"p1\">[</bpt>服务总线 AMQP 概述<ept id=\"p1\">](/documentation/articles/service-bus-amqp-overview)</ept>。"
    },
    {
      "content": "你想要从基于队列的点到点通信最终迁移到消息交换模式，后者允许无缝集成其他接收者（订阅服务器），其中每个接收者都接收发送到该队列的某些消息或所有消息的独立副本。消息交换模式是服务总线本机提供的发布/订阅功能。",
      "pos": [
        2212,
        2315
      ]
    },
    {
      "content": "你的消息传送解决方案必须能够支持“至多一次”传递保证，而无需构建其他基础结构组件。",
      "pos": [
        2319,
        2360
      ]
    },
    {
      "content": "你希望能够发布并使用消息批处理。",
      "pos": [
        2364,
        2380
      ]
    },
    {
      "content": "你需要与 Windows Communication Foundation (WCF) 中的 .NET Framework 通信堆栈完全集成。",
      "pos": [
        2384,
        2455
      ]
    },
    {
      "content": "比较 Azure 队列和服务总线队列",
      "pos": [
        2460,
        2478
      ]
    },
    {
      "content": "以下各部分中的表格提供队列功能的逻辑分组，使你可以一目了然地比较 Azure 队列和服务总线队列中的功能。",
      "pos": [
        2480,
        2533
      ]
    },
    {
      "content": "基础功能",
      "pos": [
        2538,
        2542
      ]
    },
    {
      "content": "本部分比较 Azure 队列和服务总线队列提供的一些基础队列功能。",
      "pos": [
        2544,
        2577
      ]
    },
    {
      "content": "比较条件",
      "pos": [
        2580,
        2584
      ]
    },
    {
      "content": "Azure 队列",
      "pos": [
        2585,
        2593
      ]
    },
    {
      "content": "Service Bus 队列",
      "pos": [
        2594,
        2608
      ]
    },
    {
      "content": "排序保障",
      "pos": [
        2625,
        2629
      ]
    },
    {
      "content": "否",
      "pos": [
        2632,
        2633
      ]
    },
    {
      "content": "有关详细信息，请参阅“其他信息”部分中的第一个注意事项。",
      "pos": [
        2644,
        2672
      ]
    },
    {
      "content": "是 - 先入先出 (FIFO)",
      "pos": [
        2680,
        2695
      ]
    },
    {
      "content": "（通过使用消息传送会话）",
      "pos": [
        2706,
        2718
      ]
    },
    {
      "content": "传递保障",
      "pos": [
        2721,
        2725
      ]
    },
    {
      "content": "至少一次",
      "pos": [
        2728,
        2732
      ]
    },
    {
      "content": "至少一次",
      "pos": [
        2737,
        2741
      ]
    },
    {
      "content": "最多一次",
      "pos": [
        2755,
        2759
      ]
    },
    {
      "content": "事务支持",
      "pos": [
        2764,
        2768
      ]
    },
    {
      "content": "否",
      "pos": [
        2771,
        2772
      ]
    },
    {
      "content": "是",
      "pos": [
        2777,
        2778
      ]
    },
    {
      "content": "（通过使用本地事务）",
      "pos": [
        2790,
        2800
      ]
    },
    {
      "content": "接收行为",
      "pos": [
        2803,
        2807
      ]
    },
    {
      "content": "非阻塞",
      "pos": [
        2810,
        2813
      ]
    },
    {
      "content": "（如果没有发现新消息，则立即完成）",
      "pos": [
        2825,
        2842
      ]
    },
    {
      "content": "阻塞（带超时/不带超时）",
      "pos": [
        2845,
        2857
      ]
    },
    {
      "content": "（提供长轮询，或<bpt id=\"p1\">[</bpt>“Comet 技术”<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=613759)</ept>）",
      "pos": [
        2869,
        2937
      ]
    },
    {
      "content": "非阻塞",
      "pos": [
        2949,
        2952
      ]
    },
    {
      "content": "（仅通过使用 .NET 托管 API）",
      "pos": [
        2964,
        2983
      ]
    },
    {
      "content": "推送样式 API",
      "pos": [
        2986,
        2994
      ]
    },
    {
      "content": "否",
      "pos": [
        2997,
        2998
      ]
    },
    {
      "content": "是",
      "pos": [
        3003,
        3004
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>OnMessage<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/azure/jj908682.aspx)</ept>和<bpt id=\"p2\">**</bpt>OnMessage 会话<ept id=\"p2\">**</ept> .NET API。",
      "pos": [
        3016,
        3116
      ]
    },
    {
      "content": "接收模式",
      "pos": [
        3119,
        3123
      ]
    },
    {
      "content": "扫视与租赁",
      "pos": [
        3126,
        3131
      ]
    },
    {
      "content": "扫视与锁定",
      "pos": [
        3136,
        3141
      ]
    },
    {
      "content": "接收与删除",
      "pos": [
        3155,
        3160
      ]
    },
    {
      "content": "独占访问模式",
      "pos": [
        3165,
        3171
      ]
    },
    {
      "content": "基于租赁",
      "pos": [
        3174,
        3178
      ]
    },
    {
      "content": "基于锁定",
      "pos": [
        3183,
        3187
      ]
    },
    {
      "content": "租赁/锁定持续时间",
      "pos": [
        3192,
        3201
      ]
    },
    {
      "content": "30 秒（默认值）",
      "pos": [
        3204,
        3213
      ]
    },
    {
      "content": "**7 天7 天（最大值）（你可以使用 <bpt id=\"p1\">[</bpt>UpdateMessage<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.storage.queue.cloudqueue.updatemessage.aspx)</ept> API 来续订或释放消息租赁。）",
      "pos": [
        3225,
        3392
      ]
    },
    {
      "content": "60 秒（默认值）",
      "pos": [
        3395,
        3404
      ]
    },
    {
      "content": "你可以使用 <bpt id=\"p1\">[</bpt>RenewLock<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/microsoft.servicebus.messaging.brokeredmessage.renewlock.aspx)</ept> API 续订消息锁。",
      "pos": [
        3416,
        3548
      ]
    },
    {
      "content": "租赁/锁定精度",
      "pos": [
        3551,
        3558
      ]
    },
    {
      "content": "消息级别",
      "pos": [
        3561,
        3565
      ]
    },
    {
      "content": "（每条消息可以具有不同的超时值，你可以在处理消息时，根据需要使用 <bpt id=\"p1\">[</bpt>UpdateMessage<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/microsoft.windowsazure.storage.queue.cloudqueue.updatemessage.aspx)</ept> API 来更新超时值）",
      "pos": [
        3577,
        3746
      ]
    },
    {
      "content": "队列级别",
      "pos": [
        3749,
        3753
      ]
    },
    {
      "content": "（每个队列都具有一个适用于其中所有消息的锁定精度，但是你可以使用 <bpt id=\"p1\">[</bpt>RenewLock<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/microsoft.servicebus.messaging.brokeredmessage.renewlock.aspx)</ept> API 续订该锁。）",
      "pos": [
        3765,
        3924
      ]
    },
    {
      "content": "成批接收",
      "pos": [
        3927,
        3931
      ]
    },
    {
      "content": "是",
      "pos": [
        3934,
        3935
      ]
    },
    {
      "content": "（在检索消息时显式指定消息计数，最多可达 32 条消息）",
      "pos": [
        3947,
        3975
      ]
    },
    {
      "content": "是",
      "pos": [
        3978,
        3979
      ]
    },
    {
      "content": "（隐式启用预提取属性或通过使用事务显式启用）",
      "pos": [
        3991,
        4013
      ]
    },
    {
      "content": "成批发送",
      "pos": [
        4016,
        4020
      ]
    },
    {
      "content": "否",
      "pos": [
        4023,
        4024
      ]
    },
    {
      "content": "是",
      "pos": [
        4029,
        4030
      ]
    },
    {
      "content": "（通过使用事务或客户端批处理）",
      "pos": [
        4042,
        4057
      ]
    },
    {
      "content": "其他信息",
      "pos": [
        4064,
        4068
      ]
    },
    {
      "content": "Azure 队列中的消息通常是先进先出的，但有时其顺序可能会颠倒。例如，当消息的可见性超时到期时（例如，由于客户端应用程序在处理过程中崩溃），就会发生这种情况。当可见性超时到期时，消息会再次变成在队列上可见，让另一个工作线程能够取消它的排队。此时，重新变成可见的消息可以放置在队列中（可以再次取消其排队），位于原先排在它后面的消息之后。",
      "pos": [
        4072,
        4240
      ]
    },
    {
      "content": "如果你已经在使用 Azure 存储 Blob 或表，然后开始使用队列，则可保证 99.9% 的可用性。如果你将 Blob 或表与服务总线队列结合使用，则可用性将会降低。",
      "pos": [
        4244,
        4328
      ]
    },
    {
      "content": "服务总线队列中有保障的 FIFO 模式要求使用消息传送会话。当处理以“扫视与锁定”模式接收的消息时，如果应用程序发生崩溃，则当下次队列接收者接受消息传送会话时，它将在失败消息的生存时间 (TTL) 期限过期后开始传递此消息。",
      "pos": [
        4332,
        4444
      ]
    },
    {
      "content": "Azure 队列可以支持标准队列方案，例如解除应用程序组件之间的关联以增加可伸缩性和容错能力、进行负载分级，以及生成过程工作流。",
      "pos": [
        4448,
        4512
      ]
    },
    {
      "content": "服务总线队列支持“至少一次”传递保障。此外，可以通过使用会话状态来存储应用程序状态，并通过使用事务自动接收消息和更新会话状态，从而支持“最多一次”语义。Azure 工作流服务使用该技术来保障“最多一次”传递。",
      "pos": [
        4516,
        4620
      ]
    },
    {
      "content": "Azure 队列可在多个队列、表和 Blob 上提供统一和一致的编程模型 – 对于开发人员和运营团队都是如此。",
      "pos": [
        4624,
        4679
      ]
    },
    {
      "content": "服务总线队列为单个队列的上下文中的本地事务提供支持。",
      "pos": [
        4683,
        4709
      ]
    },
    {
      "content": "服务总线支持的“接收与删除”模式提供了减少消息传送操作计数（和相关成本）以换取降低安全传递保证的能力。",
      "pos": [
        4713,
        4764
      ]
    },
    {
      "content": "Azure 队列提供租赁以及延长消息租赁时间的能力。这使工作线程能够对消息保持短的租赁时间。因此，如果某个工作线程崩溃，则其他工作线程可以再次快速处理该消息。此外，如果工作线程处理消息所需的时间比当前租赁时间长，则工作线程可以延长该消息的租赁时间。",
      "pos": [
        4768,
        4892
      ]
    },
    {
      "pos": [
        4896,
        5126
      ],
      "content": "Azure 队列提供了你可以针对消息入队或出队设置的可见性超时。此外，你可以在运行时使用不同租赁值更新消息，并且可以跨同一队列的消息更新不同值。服务总线锁定超时值在队列元数据中定义，但是你可以通过调用 <bpt id=\"p1\">[</bpt>RenewLock<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.renewlock.aspx)</ept> 方法续订该锁。"
    },
    {
      "content": "服务总线队列中阻塞接收操作的最大超时值为 24 天。但是，基于 REST 的最大超时值为 55 秒。",
      "pos": [
        5130,
        5180
      ]
    },
    {
      "content": "服务总线提供的客户端批处理允许队列客户端将多个消息纳入一个发送操作中进行批处理。批处理仅适用于异步发送操作。",
      "pos": [
        5184,
        5238
      ]
    },
    {
      "content": "有些特性，例如 Azure 队列的 200TB 上限（当你虚拟化帐户时更多）和无限制队列，使得它成为 SaaS 提供商的理想平台。",
      "pos": [
        5242,
        5307
      ]
    },
    {
      "content": "Azure 队列提供灵活且性能良好的委托访问控制机制。",
      "pos": [
        5311,
        5338
      ]
    },
    {
      "content": "高级功能",
      "pos": [
        5343,
        5347
      ]
    },
    {
      "content": "本部分比较 Azure 队列和服务总线队列提供的高级功能。",
      "pos": [
        5349,
        5378
      ]
    },
    {
      "content": "比较条件",
      "pos": [
        5381,
        5385
      ]
    },
    {
      "content": "Azure 队列",
      "pos": [
        5386,
        5394
      ]
    },
    {
      "content": "Service Bus 队列",
      "pos": [
        5395,
        5409
      ]
    },
    {
      "content": "计划的传递",
      "pos": [
        5426,
        5431
      ]
    },
    {
      "content": "是",
      "pos": [
        5434,
        5435
      ]
    },
    {
      "content": "是",
      "pos": [
        5440,
        5441
      ]
    },
    {
      "content": "自动死信",
      "pos": [
        5446,
        5450
      ]
    },
    {
      "content": "否",
      "pos": [
        5453,
        5454
      ]
    },
    {
      "content": "是",
      "pos": [
        5459,
        5460
      ]
    },
    {
      "content": "提高队列生存时间值",
      "pos": [
        5465,
        5474
      ]
    },
    {
      "content": "是",
      "pos": [
        5477,
        5478
      ]
    },
    {
      "content": "（通过就地更新可见性超时）",
      "pos": [
        5490,
        5503
      ]
    },
    {
      "content": "是",
      "pos": [
        5506,
        5507
      ]
    },
    {
      "content": "（通过一个专用 API 功能提供）",
      "pos": [
        5519,
        5536
      ]
    },
    {
      "content": "有害消息支持",
      "pos": [
        5539,
        5545
      ]
    },
    {
      "content": "是",
      "pos": [
        5548,
        5549
      ]
    },
    {
      "content": "是",
      "pos": [
        5554,
        5555
      ]
    },
    {
      "content": "就地更新",
      "pos": [
        5560,
        5564
      ]
    },
    {
      "content": "是",
      "pos": [
        5567,
        5568
      ]
    },
    {
      "content": "是",
      "pos": [
        5573,
        5574
      ]
    },
    {
      "content": "服务器端事务日志",
      "pos": [
        5579,
        5587
      ]
    },
    {
      "content": "是",
      "pos": [
        5590,
        5591
      ]
    },
    {
      "content": "否",
      "pos": [
        5596,
        5597
      ]
    },
    {
      "content": "存储度量值",
      "pos": [
        5602,
        5607
      ]
    },
    {
      "content": "是",
      "pos": [
        5610,
        5611
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>分钟度量值<ept id=\"p1\">**</ept>：提供可用性、TPS、API 调用计数、错误计数等指标的实时度量值，所有这些值都是实时的（每分钟进行汇总，并在生产过程中发生后几分钟之内报告）。有关详细信息，请参阅<bpt id=\"p2\">[</bpt>关于存储分析度量值<ept id=\"p2\">](https://msdn.microsoft.com/zh-cn/library/azure/hh343258.aspx)</ept>。",
      "pos": [
        5623,
        5788
      ]
    },
    {
      "content": "是",
      "pos": [
        5791,
        5792
      ]
    },
    {
      "content": "（通过调用 <bpt id=\"p1\">[</bpt>GetQueues<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/azure/hh293128.aspx)</ept> 进行大容量查询）",
      "pos": [
        5804,
        5892
      ]
    },
    {
      "content": "状态管理",
      "pos": [
        5895,
        5899
      ]
    },
    {
      "content": "否",
      "pos": [
        5902,
        5903
      ]
    },
    {
      "content": "是",
      "pos": [
        5908,
        5909
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>Microsoft.ServiceBus.Messaging.EntityStatus.Active<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/microsoft.servicebus.messaging.entitystatus.aspx)</ept>、<bpt id=\"p2\">[</bpt>Microsoft.ServiceBus.Messaging.EntityStatus.Disabled<ept id=\"p2\">](https://msdn.microsoft.com/zh-cn/library/microsoft.servicebus.messaging.entitystatus.aspx)</ept>、<bpt id=\"p3\">[</bpt>Microsoft.ServiceBus.Messaging.EntityStatus.SendDisabled<ept id=\"p3\">](https://msdn.microsoft.com/zh-cn/library/microsoft.servicebus.messaging.entitystatus.aspx)</ept>、<bpt id=\"p4\">[</bpt>Microsoft.ServiceBus.Messaging.EntityStatus.ReceiveDisabled<ept id=\"p4\">](https://msdn.microsoft.com/zh-cn/library/microsoft.servicebus.messaging.entitystatus.aspx)</ept>",
      "pos": [
        5921,
        6513
      ]
    },
    {
      "content": "消息自动转发",
      "pos": [
        6516,
        6522
      ]
    },
    {
      "content": "否",
      "pos": [
        6525,
        6526
      ]
    },
    {
      "content": "是",
      "pos": [
        6531,
        6532
      ]
    },
    {
      "content": "清除队列函数",
      "pos": [
        6537,
        6543
      ]
    },
    {
      "content": "是",
      "pos": [
        6546,
        6547
      ]
    },
    {
      "content": "否",
      "pos": [
        6552,
        6553
      ]
    },
    {
      "content": "消息组",
      "pos": [
        6558,
        6561
      ]
    },
    {
      "content": "否",
      "pos": [
        6564,
        6565
      ]
    },
    {
      "content": "是",
      "pos": [
        6570,
        6571
      ]
    },
    {
      "content": "（通过使用消息传送会话）",
      "pos": [
        6583,
        6595
      ]
    },
    {
      "content": "每个消息组的应用程序状态",
      "pos": [
        6598,
        6610
      ]
    },
    {
      "content": "否",
      "pos": [
        6613,
        6614
      ]
    },
    {
      "content": "是",
      "pos": [
        6619,
        6620
      ]
    },
    {
      "content": "重复检测",
      "pos": [
        6625,
        6629
      ]
    },
    {
      "content": "否",
      "pos": [
        6632,
        6633
      ]
    },
    {
      "content": "是",
      "pos": [
        6638,
        6639
      ]
    },
    {
      "content": "（可在发送端配置）",
      "pos": [
        6651,
        6660
      ]
    },
    {
      "content": "WCF 集成",
      "pos": [
        6663,
        6669
      ]
    },
    {
      "content": "否",
      "pos": [
        6672,
        6673
      ]
    },
    {
      "content": "是",
      "pos": [
        6678,
        6679
      ]
    },
    {
      "content": "（提供现成的 WCF 绑定）",
      "pos": [
        6691,
        6705
      ]
    },
    {
      "content": "WF 集成",
      "pos": [
        6708,
        6713
      ]
    },
    {
      "content": "自定义",
      "pos": [
        6716,
        6719
      ]
    },
    {
      "content": "（需要构建自定义 WF 活动）",
      "pos": [
        6731,
        6746
      ]
    },
    {
      "content": "本机",
      "pos": [
        6749,
        6751
      ]
    },
    {
      "content": "（提供现成的 WF 活动）",
      "pos": [
        6763,
        6776
      ]
    },
    {
      "content": "浏览消息组",
      "pos": [
        6779,
        6784
      ]
    },
    {
      "content": "否",
      "pos": [
        6787,
        6788
      ]
    },
    {
      "content": "是",
      "pos": [
        6793,
        6794
      ]
    },
    {
      "content": "按 ID 提取消息会话",
      "pos": [
        6799,
        6810
      ]
    },
    {
      "content": "否",
      "pos": [
        6813,
        6814
      ]
    },
    {
      "content": "是",
      "pos": [
        6819,
        6820
      ]
    },
    {
      "content": "其他信息",
      "pos": [
        6829,
        6833
      ]
    },
    {
      "content": "两种队列技术都允许将消息安排在以后传送。",
      "pos": [
        6837,
        6857
      ]
    },
    {
      "content": "利用队列自动转发功能，数千个队列可将它们的消息自动转发至单个队列，而接收应用程序将使用来自该队列的消息。你可以使用此机制来实现安全性和控制流，并且隔离每个消息发布者的存储。",
      "pos": [
        6861,
        6947
      ]
    },
    {
      "pos": [
        6951,
        7321
      ],
      "content": "Azure 队列为更新消息内容提供支持。可以使用此功能将状态信息和递增进度更新持久保留到消息中，以便能够从上一个已知的检查点处理该消息，而不是从头开始。借助服务总线队列，你可以通过使用消息会话实现相同的方案。会话让你能够保存和检索应用程序处理状态（通过使用 <bpt id=\"p1\">[</bpt>SetState<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.messagesession.setstate.aspx)</ept> 和 <bpt id=\"p2\">[</bpt>GetState<ept id=\"p2\">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.messagesession.getstate.aspx)</ept>）。"
    },
    {
      "content": "死信（仅服务总线队列支持）可用于隔离接收应用程序无法成功处理的消息，或隔离由于生存时间 (TTL) 属性过期而无法到达其目的地的消息。TTL 值指定消息在队列中保留的时间。对于服务总线，在 TTL 期限过期时，该消息将移到一个特殊的队列（称为 $DeadLetterQueue）。",
      "pos": [
        7325,
        7465
      ]
    },
    {
      "content": "若要查找 Azure 队列中的“有害”消息，则在消息出队时，应用程序检查该消息的 DequeueCount 属性。如果 DequeueCount 超出给定的阈值，应用程序将消息移到应用程序定义的“死信”队列。",
      "pos": [
        7469,
        7573
      ]
    },
    {
      "content": "Azure 队列使你可以获取针对该队列执行的所有事务的详细日志以及聚合度量值。这两个选项可用于调试和了解你的应用程序如何使用 Azure 队列。它们还用于对应用程序进行性能优化并降低使用队列的成本。",
      "pos": [
        7577,
        7676
      ]
    },
    {
      "pos": [
        7680,
        7930
      ],
      "content": "服务总线支持的“消息会话”概念允许属于特定逻辑组的消息与给定的接收者关联，而这样一来又能在消息与其各自接收者之间创建类似于会话的关联。可以通过对消息设置 <bpt id=\"p1\">[</bpt>SessionID<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.sessionid.aspx)</ept> 属性，在服务总线中启用此高级功能。然后，接收者可以侦听特定会话 ID，并接收共享特定会话标识符的消息。"
    },
    {
      "pos": [
        7934,
        8099
      ],
      "content": "根据 <bpt id=\"p1\">[</bpt>MessageID<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.messageid.aspx)</ept> 属性的值，服务总线队列支持的重复项检测功能会自动删除发送到队列或主题的重复消息。"
    },
    {
      "pos": [
        8104,
        8143
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"capacity-and-quotas\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>容量和配额"
    },
    {
      "content": "本部分从适用的容量和配额角度比较 Azure 队列和服务总线队列。",
      "pos": [
        8145,
        8178
      ]
    },
    {
      "content": "比较条件",
      "pos": [
        8181,
        8185
      ]
    },
    {
      "content": "Azure 队列",
      "pos": [
        8186,
        8194
      ]
    },
    {
      "content": "Service Bus 队列",
      "pos": [
        8195,
        8209
      ]
    },
    {
      "content": "最大队列大小",
      "pos": [
        8226,
        8232
      ]
    },
    {
      "content": "200 TB",
      "pos": [
        8235,
        8241
      ]
    },
    {
      "content": "（限制为单个存储帐户容量）",
      "pos": [
        8253,
        8266
      ]
    },
    {
      "content": "1 GB 到 80 GB",
      "pos": [
        8269,
        8281
      ]
    },
    {
      "content": "（在创建队列和<bpt id=\"p1\">[</bpt>启用分区<ept id=\"p1\">](/documentation/articles/service-bus-partitioning)</ept>时定义 – 请参阅“其他信息”部分）",
      "pos": [
        8293,
        8374
      ]
    },
    {
      "content": "最大消息大小",
      "pos": [
        8377,
        8383
      ]
    },
    {
      "content": "64 KB",
      "pos": [
        8386,
        8391
      ]
    },
    {
      "content": "（使用 <bpt id=\"p1\">**</bpt>Base64<ept id=\"p1\">**</ept> 编码时为 48 KB）",
      "pos": [
        8403,
        8429
      ]
    },
    {
      "content": "Azure 可以通过合并队列和 Blob 支持大消息 – 单个项目排队的消息最多达到 200GB。",
      "pos": [
        8439,
        8488
      ]
    },
    {
      "content": "256 KB",
      "pos": [
        8491,
        8497
      ]
    },
    {
      "content": "（同时包含标题和正文，最大标题大小：64 KB）",
      "pos": [
        8509,
        8533
      ]
    },
    {
      "content": "最大消息 TTL",
      "pos": [
        8536,
        8544
      ]
    },
    {
      "content": "7 天",
      "pos": [
        8547,
        8550
      ]
    },
    {
      "content": "不受限制",
      "pos": [
        8555,
        8559
      ]
    },
    {
      "content": "最大队列数",
      "pos": [
        8564,
        8569
      ]
    },
    {
      "content": "不受限制",
      "pos": [
        8572,
        8576
      ]
    },
    {
      "content": "10,000",
      "pos": [
        8581,
        8587
      ]
    },
    {
      "content": "（每个服务命名空间，可以增加）",
      "pos": [
        8599,
        8614
      ]
    },
    {
      "content": "并发客户端的最大数目",
      "pos": [
        8617,
        8627
      ]
    },
    {
      "content": "不受限制",
      "pos": [
        8630,
        8634
      ]
    },
    {
      "content": "Unlimited",
      "pos": [
        8639,
        8648
      ]
    },
    {
      "content": "（100 个并发连接限制仅适用于基于 TCP 协议的通信）",
      "pos": [
        8660,
        8689
      ]
    },
    {
      "content": "其他信息",
      "pos": [
        8696,
        8700
      ]
    },
    {
      "pos": [
        8704,
        8867
      ],
      "content": "服务总线强制实施队列大小限制。在创建队列时指定最大队列大小，其值可以在 1 至 80 GB 之间。如果达到创建队列时设置的队列大小值，则将拒绝其他传入消息，并且调用代码将收到一个异常。有关服务总线中配额的详细信息，请参阅<bpt id=\"p1\">[</bpt>服务总线配额<ept id=\"p1\">](/documentation/articles/service-bus-quotas)</ept>。"
    },
    {
      "pos": [
        8871,
        9066
      ],
      "content": "你可以创建 1、2、3、4 或 5 GB 大小的服务总线队列（默认值为 1 GB）。启用分区（这是默认值）时，服务总线将为你指定的每个 GB 创建 16 个分区。因此，如果你创建了一个大小为 5 GB 的队列，由于每 GB 16 个分区，最大队列大小将变为 (5 * 16) = 80 GB。可以通过在 <bpt id=\"p1\">[</bpt>Azure 经典门户<ept id=\"p1\">][]</ept>上查看分区队列或主题的条目，来了解该队列或主题的最大大小。"
    },
    {
      "pos": [
        9070,
        9172
      ],
      "content": "在 Azure 队列中，如果消息的内容不属于 XML 安全内容，则必须对其进行 <bpt id=\"p1\">**</bpt>Base64<ept id=\"p1\">**</ept> 编码。如果你使用 <bpt id=\"p2\">**</bpt>Base64<ept id=\"p2\">**</ept> 编码此消息，则用户负载可高达 48 KB，而不是 64 KB。"
    },
    {
      "content": "对于服务总线队列，存储在队列中的每条消息由两个部分组成：标头和正文。消息的总大小不能超过 256 KB。",
      "pos": [
        9176,
        9228
      ]
    },
    {
      "content": "当客户端通过 TCP 协议与服务总线队列进行通信时，到单个服务总线队列的最大并发连接数不得超过 100。此数值在发送者和接收者之间共享。如果达到此配额，将拒绝后续的其他连接请求，调用代码将收到一个异常。使用基于 REST 的 API 连接到队列的客户端不受此限制。",
      "pos": [
        9232,
        9364
      ]
    },
    {
      "pos": [
        9368,
        9482
      ],
      "content": "如果在单个服务总线服务命名空间中需要超过 10,000 个队列，你可以联系 Azure 支持团队并请求增加数目。若要使用服务总线扩展到 10,000 个以上的队列，你还可以使用 <bpt id=\"p1\">[</bpt>Azure 经典门户<ept id=\"p1\">][]</ept>创建其他服务命名空间。"
    },
    {
      "content": "管理和操作",
      "pos": [
        9487,
        9492
      ]
    },
    {
      "content": "本部分对 Azure 队列和服务总线队列提供的管理功能进行了比较。",
      "pos": [
        9494,
        9527
      ]
    },
    {
      "content": "比较条件",
      "pos": [
        9530,
        9534
      ]
    },
    {
      "content": "Azure 队列",
      "pos": [
        9535,
        9543
      ]
    },
    {
      "content": "Service Bus 队列",
      "pos": [
        9544,
        9558
      ]
    },
    {
      "content": "管理协议",
      "pos": [
        9575,
        9579
      ]
    },
    {
      "content": "基于 HTTP/HTTPS 的 REST",
      "pos": [
        9582,
        9602
      ]
    },
    {
      "content": "基于 HTTPS 的 REST",
      "pos": [
        9607,
        9622
      ]
    },
    {
      "content": "运行时协议",
      "pos": [
        9627,
        9632
      ]
    },
    {
      "content": "基于 HTTP/HTTPS 的 REST",
      "pos": [
        9635,
        9655
      ]
    },
    {
      "content": "基于 HTTPS 的 REST",
      "pos": [
        9660,
        9675
      ]
    },
    {
      "content": "AMQP 1.0 标准（具有 TLS 的 TCP）",
      "pos": [
        9689,
        9714
      ]
    },
    {
      "content": ".NET 托管 API",
      "pos": [
        9719,
        9730
      ]
    },
    {
      "content": "是",
      "pos": [
        9733,
        9734
      ]
    },
    {
      "content": "（.NET 托管存储客户端 API）",
      "pos": [
        9746,
        9764
      ]
    },
    {
      "content": "是",
      "pos": [
        9767,
        9768
      ]
    },
    {
      "content": "（.NET 托管的中转消息传送 API）",
      "pos": [
        9780,
        9800
      ]
    },
    {
      "content": "本机 C++",
      "pos": [
        9803,
        9809
      ]
    },
    {
      "content": "是",
      "pos": [
        9812,
        9813
      ]
    },
    {
      "content": "否",
      "pos": [
        9818,
        9819
      ]
    },
    {
      "content": "Java API",
      "pos": [
        9824,
        9832
      ]
    },
    {
      "content": "是",
      "pos": [
        9835,
        9836
      ]
    },
    {
      "content": "是",
      "pos": [
        9841,
        9842
      ]
    },
    {
      "content": "PHP API",
      "pos": [
        9847,
        9854
      ]
    },
    {
      "content": "是",
      "pos": [
        9857,
        9858
      ]
    },
    {
      "content": "是",
      "pos": [
        9863,
        9864
      ]
    },
    {
      "content": "Node.js API",
      "pos": [
        9869,
        9880
      ]
    },
    {
      "content": "是",
      "pos": [
        9883,
        9884
      ]
    },
    {
      "content": "是",
      "pos": [
        9889,
        9890
      ]
    },
    {
      "content": "任意元数据支持",
      "pos": [
        9895,
        9902
      ]
    },
    {
      "content": "是",
      "pos": [
        9905,
        9906
      ]
    },
    {
      "content": "否",
      "pos": [
        9911,
        9912
      ]
    },
    {
      "content": "队列命名规则",
      "pos": [
        9917,
        9923
      ]
    },
    {
      "content": "长度最多为 63 个字符",
      "pos": [
        9926,
        9938
      ]
    },
    {
      "content": "（队列名称中的字母必须小写）",
      "pos": [
        9950,
        9964
      ]
    },
    {
      "content": "长度最多为 260 个字符",
      "pos": [
        9967,
        9980
      ]
    },
    {
      "content": "（队列名称不区分大小写）",
      "pos": [
        9992,
        10004
      ]
    },
    {
      "content": "获取队列长度函数",
      "pos": [
        10007,
        10015
      ]
    },
    {
      "content": "是",
      "pos": [
        10018,
        10019
      ]
    },
    {
      "content": "（在消息超出 TTL 但未删除的情况下的近似值）",
      "pos": [
        10031,
        10055
      ]
    },
    {
      "content": "是",
      "pos": [
        10058,
        10059
      ]
    },
    {
      "content": "（精确时间点值）",
      "pos": [
        10071,
        10079
      ]
    },
    {
      "content": "Peek 函数",
      "pos": [
        10082,
        10089
      ]
    },
    {
      "content": "是",
      "pos": [
        10092,
        10093
      ]
    },
    {
      "content": "是",
      "pos": [
        10098,
        10099
      ]
    },
    {
      "content": "其他信息",
      "pos": [
        10108,
        10112
      ]
    },
    {
      "content": "Azure 队列为可应用于队列说明的任意属性提供支持（以名称/值对形式）。",
      "pos": [
        10116,
        10153
      ]
    },
    {
      "content": "两种队列技术还提供无需锁定消息即可进行消息扫视的功能，这在实现队列资源管理器/浏览器工具时可能非常有用。",
      "pos": [
        10157,
        10209
      ]
    },
    {
      "content": "服务总线 .NET 托管中转消息传送 API 利用了全双工 TCP 连接，因此与 HTTP 上的 REST 相比提高了性能，另外它们还支持 AMQP 1.0 标准协议。",
      "pos": [
        10213,
        10297
      ]
    },
    {
      "pos": [
        10301,
        10427
      ],
      "content": "Azure 队列名称长度可以在 3-63 个字符之间，可以包含小写字母、数字和连字符。有关详细信息，请参阅<bpt id=\"p1\">[</bpt>命名队列和元数据<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/azure/dd179349.aspx)</ept>。"
    },
    {
      "content": "服务总线队列名称长度最大可达 260 个字符，且命名规则限制较少。服务总线队列名称可以包含字母、数字、句点 (.)、连字符 (-) 和下划线 (\\_)。",
      "pos": [
        10431,
        10507
      ]
    },
    {
      "content": "性能",
      "pos": [
        10512,
        10514
      ]
    },
    {
      "content": "本部分从性能角度对 Azure 队列和服务总线队列进行比较。",
      "pos": [
        10516,
        10546
      ]
    },
    {
      "content": "比较条件",
      "pos": [
        10549,
        10553
      ]
    },
    {
      "content": "Azure 队列",
      "pos": [
        10554,
        10562
      ]
    },
    {
      "content": "Service Bus 队列",
      "pos": [
        10563,
        10577
      ]
    },
    {
      "content": "最大吞吐量",
      "pos": [
        10594,
        10599
      ]
    },
    {
      "content": "每秒高达 2,000 条消息",
      "pos": [
        10602,
        10616
      ]
    },
    {
      "content": "（基于 1 KB 消息时的基准值）",
      "pos": [
        10628,
        10645
      ]
    },
    {
      "content": "每秒高达 2,000 条消息",
      "pos": [
        10648,
        10662
      ]
    },
    {
      "content": "（基于 1 KB 消息时的基准值）",
      "pos": [
        10674,
        10691
      ]
    },
    {
      "content": "平均延迟",
      "pos": [
        10694,
        10698
      ]
    },
    {
      "content": "10 毫秒",
      "pos": [
        10701,
        10706
      ]
    },
    {
      "content": "（禁用 <bpt id=\"p1\">[</bpt>TCP Nagle<ept id=\"p1\">](http://blogs.msdn.com/b/windowsazurestorage/archive/2010/06/25/nagle-s-algorithm-is-not-friendly-towards-small-requests.aspx)</ept>）",
      "pos": [
        10718,
        10860
      ]
    },
    {
      "content": "20-25 毫秒",
      "pos": [
        10863,
        10871
      ]
    },
    {
      "content": "限制行为",
      "pos": [
        10876,
        10880
      ]
    },
    {
      "content": "拒绝并显示 HTTP 503 代码",
      "pos": [
        10883,
        10900
      ]
    },
    {
      "content": "（中止的请求不会计费）",
      "pos": [
        10912,
        10923
      ]
    },
    {
      "content": "拒绝并显示异常/HTTP 503 代码",
      "pos": [
        10926,
        10945
      ]
    },
    {
      "content": "（中止的请求不会计费）",
      "pos": [
        10957,
        10968
      ]
    },
    {
      "content": "其他信息",
      "pos": [
        10975,
        10979
      ]
    },
    {
      "pos": [
        10983,
        11279
      ],
      "content": "单个 Azure 队列每秒最多可处理 2,000 个事务。事务可以是 <bpt id=\"p1\">**</bpt>Put<ept id=\"p1\">**</ept>、<bpt id=\"p2\">**</bpt>Get<ept id=\"p2\">**</ept> 或 <bpt id=\"p3\">**</bpt>Delete<ept id=\"p3\">**</ept> 操作。向队列发送单个消息 (<bpt id=\"p4\">**</bpt>Put<ept id=\"p4\">**</ept>) 被计为一个事务，但是接收一条消息通常分为与检索 (<bpt id=\"p5\">**</bpt>Get<ept id=\"p5\">**</ept>) 有关的两个步骤，之后执行一个请求将该消息从队列中删除 (<bpt id=\"p6\">**</bpt>Delete<ept id=\"p6\">**</ept>)。因此，成功的取消排队操作通常包含两个事务。批量检索多条消息可以减小这种影响，因为你可以在单个事务中通过 <bpt id=\"p7\">**</bpt>Get<ept id=\"p7\">**</ept> 操作获取多达 32 条消息，然后对每条消息进行 <bpt id=\"p8\">**</bpt>Delete<ept id=\"p8\">**</ept> 操作。为了提高吞吐量，你可以创建多个队列（一个存储帐户可以具有无限数量的队列）。"
    },
    {
      "content": "当应用程序达到 Azure 队列的最大吞吐量时，通常从队列服务中返回一个“HTTP 503 服务器忙”响应。发生这种情况时，应用程序应使用指数退让延迟以触发重试逻辑。",
      "pos": [
        11283,
        11366
      ]
    },
    {
      "content": "在处理与存储帐户处于同一位置（区域）的托管服务中的小消息（小于 10 KB）时，Azure 队列的延迟时间平均为 10 毫秒。",
      "pos": [
        11370,
        11433
      ]
    },
    {
      "content": "Azure 队列和服务总线队列通过对要中止的队列拒绝请求来实施中止行为。但是，这两个队列都不会将中止的请求视为计费。",
      "pos": [
        11437,
        11495
      ]
    },
    {
      "pos": [
        11499,
        11681
      ],
      "content": "针对服务总线队列的基准已证明：单个队列每秒可以获得最多 2,000 条消息的消息吞吐量（消息大小大约为 1 KB）。要获得更高吞吐量，请使用多个队列。有关使用服务总线优化性能的详细信息，请参阅<bpt id=\"p1\">[</bpt>使用服务总线中转消息传送改进性能的最佳实践<ept id=\"p1\">](/documentation/articles/service-bus-performance-improvements)</ept>。"
    },
    {
      "pos": [
        11685,
        11907
      ],
      "content": "对于服务总线队列，当达到最大吞吐量时，一个 <bpt id=\"p1\">[</bpt>ServerBusyException<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.serverbusyexception.aspx)</ept>（使用 .NET 托管中转消息传送 API 时）或 HTTP 503（使用基于 REST 的 API 时）响应将返回到该队列客户端，指示该队列将中止。"
    },
    {
      "content": "身份验证和授权",
      "pos": [
        11912,
        11919
      ]
    },
    {
      "content": "本部分讨论 Azure 队列和服务总线队列支持的身份验证和授权功能。",
      "pos": [
        11921,
        11955
      ]
    },
    {
      "content": "比较条件",
      "pos": [
        11958,
        11962
      ]
    },
    {
      "content": "Azure 队列",
      "pos": [
        11963,
        11971
      ]
    },
    {
      "content": "Service Bus 队列",
      "pos": [
        11972,
        11986
      ]
    },
    {
      "content": "身份验证",
      "pos": [
        12003,
        12007
      ]
    },
    {
      "content": "对称密钥",
      "pos": [
        12010,
        12014
      ]
    },
    {
      "content": "对称密钥",
      "pos": [
        12019,
        12023
      ]
    },
    {
      "content": "安全模型",
      "pos": [
        12028,
        12032
      ]
    },
    {
      "content": "通过 SAS 令牌进行的委托访问。",
      "pos": [
        12033,
        12050
      ]
    },
    {
      "content": "SAS",
      "pos": [
        12051,
        12054
      ]
    },
    {
      "content": "标识提供者联合",
      "pos": [
        12057,
        12064
      ]
    },
    {
      "content": "否",
      "pos": [
        12067,
        12068
      ]
    },
    {
      "content": "是",
      "pos": [
        12073,
        12074
      ]
    },
    {
      "content": "其他信息",
      "pos": [
        12083,
        12087
      ]
    },
    {
      "content": "针对任一队列技术的每个请求都必须进行身份验证。不支持使用匿名访问的公共队列。使用 SAS，你可以通过发布只写 SAS、只读 SAS 或者甚至完全访问权限 SAS 来满足这种方案的需求。",
      "pos": [
        12091,
        12183
      ]
    },
    {
      "pos": [
        12187,
        12498
      ],
      "content": "Azure 队列提供的身份验证方案涉及使用对称密钥，该密钥是基于哈希的消息身份验证代码 (HMAC)，使用 SHA-256 算法计算并编码为 <bpt id=\"p1\">**</bpt>Base64<ept id=\"p1\">**</ept> 字符串。有关相应协议的详细信息，请参阅 <bpt id=\"p2\">[</bpt>Azure 存储空间服务的身份验证<ept id=\"p2\">](https://msdn.microsoft.com/zh-cn/library/azure/dd179428.aspx)</ept>。服务总线队列支持使用对称密钥的类似模型。有关详细信息，请参阅<bpt id=\"p3\">[</bpt>使用服务总线进行共享访问签名身份验证<ept id=\"p3\">](/documentation/articles/service-bus-shared-access-signature-authentication)</ept>。"
    },
    {
      "content": "成本",
      "pos": [
        12503,
        12505
      ]
    },
    {
      "content": "本部分从成本角度对 Azure 队列和服务总线队列进行了比较。",
      "pos": [
        12507,
        12538
      ]
    },
    {
      "content": "比较条件",
      "pos": [
        12541,
        12545
      ]
    },
    {
      "content": "Azure 队列",
      "pos": [
        12546,
        12554
      ]
    },
    {
      "content": "Service Bus 队列",
      "pos": [
        12555,
        12569
      ]
    },
    {
      "content": "队列事务成本",
      "pos": [
        12586,
        12592
      ]
    },
    {
      "content": "0.0036 美元",
      "pos": [
        12595,
        12604
      ]
    },
    {
      "content": "（每 100,000 个事务）",
      "pos": [
        12616,
        12631
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>基本层<ept id=\"p1\">**</ept>：<bpt id=\"p2\">**</bpt>$0.05<ept id=\"p2\">**</ept>",
      "pos": [
        12632,
        12649
      ]
    },
    {
      "content": "（每 100 万次操作）",
      "pos": [
        12659,
        12671
      ]
    },
    {
      "content": "计费操作",
      "pos": [
        12674,
        12678
      ]
    },
    {
      "content": "全部",
      "pos": [
        12681,
        12683
      ]
    },
    {
      "content": "仅发送/接收",
      "pos": [
        12688,
        12694
      ]
    },
    {
      "content": "（其他操作不收费）",
      "pos": [
        12706,
        12715
      ]
    },
    {
      "content": "空闲事务",
      "pos": [
        12718,
        12722
      ]
    },
    {
      "content": "可计费",
      "pos": [
        12725,
        12728
      ]
    },
    {
      "content": "（查询空队列计为收费事务）",
      "pos": [
        12740,
        12753
      ]
    },
    {
      "content": "可计费",
      "pos": [
        12756,
        12759
      ]
    },
    {
      "content": "（针对空队列的接收被视为计费消息）",
      "pos": [
        12771,
        12788
      ]
    },
    {
      "content": "存储成本",
      "pos": [
        12791,
        12795
      ]
    },
    {
      "content": "$0.07",
      "pos": [
        12798,
        12803
      ]
    },
    {
      "content": "（GB/月）",
      "pos": [
        12815,
        12821
      ]
    },
    {
      "content": "$0.00",
      "pos": [
        12824,
        12829
      ]
    },
    {
      "content": "出站数据传输成本",
      "pos": [
        12834,
        12842
      ]
    },
    {
      "content": "$0.12 - $0.19",
      "pos": [
        12845,
        12858
      ]
    },
    {
      "content": "（根据地域）",
      "pos": [
        12870,
        12876
      ]
    },
    {
      "content": "$0.12 - $0.19",
      "pos": [
        12879,
        12892
      ]
    },
    {
      "content": "（根据地域）",
      "pos": [
        12904,
        12910
      ]
    },
    {
      "content": "其他信息",
      "pos": [
        12917,
        12921
      ]
    },
    {
      "content": "根据给定计费期内通过 Internet 离开 Azure 数据中心的数据总量对数据传输进行收费。",
      "pos": [
        12925,
        12973
      ]
    },
    {
      "content": "位于同一区域内的 Azure 服务之间的数据传输不收费。",
      "pos": [
        12977,
        13005
      ]
    },
    {
      "content": "截至撰写本文之时，所有入站数据传输都不收费。",
      "pos": [
        13009,
        13031
      ]
    },
    {
      "content": "在支持长轮询的情况下，在需要低延迟传递时，使用服务总线队列可达到经济高效的结果。",
      "pos": [
        13035,
        13075
      ]
    },
    {
      "pos": [
        13078,
        13243
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>所有成本随时会变化。上表反映在本文截稿时的当前价格，不包括任何当前可用的促销特价。有关 Azure 的最新价格信息，请参阅 <bpt id=\"p1\">[</bpt>Azure 定价<ept id=\"p1\">](/pricing/overview/)</ept>页。有关服务总线价格的详细信息，请参阅<bpt id=\"p2\">[</bpt>服务总线定价<ept id=\"p2\">](/home/features/messaging/#price)</ept>。"
    },
    {
      "content": "结束语",
      "pos": [
        13248,
        13251
      ]
    },
    {
      "content": "通过更深入地了解这两种技术，你将能够对使用哪种队列技术以及何时使用做出更明智的决策。决定何时使用 Azure 队列或服务总线队列明确地取决于很多因素。这些因素很大程度上取决于应用程序及其体系结构的独特需要。如果你的应用程序已使用 Azure 的核心功能，则可能更倾向于选择 Azure 队列，尤其在服务之间需要基本通信和消息传送或需要大小可大于 80 GB 的队列时。",
      "pos": [
        13253,
        13437
      ]
    },
    {
      "content": "因为服务总线队列提供许多高级功能（如会话、事务、重复检测、自动死信和持久发布/订阅功能），所以，如果你正在构建混合应用程序或你的应用程序需要这些功能，这些队列将是首选。",
      "pos": [
        13439,
        13523
      ]
    },
    {
      "content": "后续步骤",
      "pos": [
        13528,
        13532
      ]
    },
    {
      "content": "以下文章提供了有关使用 Azure 队列或服务总线队列的更多指导和信息。",
      "pos": [
        13534,
        13570
      ]
    },
    {
      "content": "如何使用 Service Bus 队列",
      "pos": [
        13575,
        13594
      ]
    },
    {
      "content": "如何使用队列存储服务",
      "pos": [
        13661,
        13671
      ]
    },
    {
      "content": "使用 Service Bus 中转消息传递改善性能的最佳实践",
      "pos": [
        13734,
        13764
      ]
    },
    {
      "content": "Azure 服务总线中的队列和主题简介",
      "pos": [
        13831,
        13850
      ]
    },
    {
      "content": "服务总线开发人员指南",
      "pos": [
        13914,
        13924
      ]
    },
    {
      "content": "Azure 表和队列深入介绍",
      "pos": [
        13966,
        13980
      ]
    },
    {
      "content": "Azure 存储体系结构",
      "pos": [
        14025,
        14037
      ]
    },
    {
      "content": "在 Azure 中使用队列服务",
      "pos": [
        14198,
        14213
      ]
    },
    {
      "content": "了解 Azure 存储计费 - 带宽、事务和容量",
      "pos": [
        14309,
        14333
      ]
    }
  ],
  "content": "<properties \n   pageTitle=\"Azure 队列和服务总线队列 - 比较与对照 | Azure\"\n   description=\"分析 Azure 提供的两种队列类型之间的差异和相似性。\"\n   services=\"service-bus\"\n   documentationCenter=\"na\"\n   authors=\"sethmanheim\"\n   manager=\"timlt\"\n   editor=\"tysonn\"/>\n<tags \n   ms.service=\"service-bus\"\n   ms.date=\"11/18/2015\"\n   wacn.date=\"01/14/2016\"/>\n\n# Azure 队列和服务总线队列 - 比较与对照\n\n本文分析 Azure 目前提供的以下两种队列类型之间的差异和相似性：Azure 队列和服务总线队列。通过使用该信息，您可以比较和对照这两种技术，并可以明智地决定哪种解决方案最符合您的需要。\n\n## 介绍\n\nAzure 支持两种队列机制：**Azure 队列**和**服务总线队列**。\n\n**Azure 队列**是 [Azure 存储空间](/home/features/storage/)基础结构的一部分，其特点是简单的基于 REST 的 Get/Put/Peek 接口，可在服务内部或服务之间提供可靠的持久性消息传送。\n\n**服务总线队列**是更广的 [Azure 消息传送](/home/features/messaging)基础结构的一部分，可支持队列以及发布/订阅、Web 远程服务和集成模式。有关服务总线队列、主题/订阅和中继的详细信息，请参阅[服务总线消息传送概述](/documentation/articles/service-bus-messaging-overview)。\n\n当两种队列技术同时存在时，首先引入的是 Azure 队列，这是一种基于 Azure 存储服务构建的专用队列存储机制。服务总线队列基于更广泛的“中转消息传送”基础结构而构建，旨在集成跨多个通信协议、数据约定、可信域和/或网络环境的应用程序或应用程序组件。\n\n本文比较了 Azure 提供的这两种队列技术，并分别讨论了这两种技术所提供的功能的行为及其实现形式。本文还提供相关的指导，以便你选择最适合你的应用程序开发需求的功能。\n\n## 技术选择注意事项\n\nAzure 队列和服务总线队列都是 Azure 目前提供的消息队列服务的实现形式。两种队列的功能集略有不同，这意味着你可以选择其中一种，或者同时使用这两种，具体取决于你的特定解决方案或要解决的业务/技术问题的需要。\n\n在确定哪种队列技术适合给定的解决方案时，解决方案架构师和开发人员应考虑以下建议。有关更多详细信息，请参阅下一部分。\n\n作为解决方案架构师/开发人员，在以下情况下，**应考虑使用 Azure 队列**：\n\n- 你的应用程序需要在队列中存储超过 80 GB 的消息，这些消息的生存期不到 7 天。\n\n- 你的应用程序需要跟踪队列内部消息的处理进度。这在处理消息的工作线程发生崩溃时很有用。然后，后续的工作线程可以使用该信息从之前的工作线程停止处继续。\n\n- 你要求在服务器端记录针对你的队列执行的所有事务。\n\n作为解决方案架构师/开发人员，在以下情况下，**应考虑使用服务总线队列**：\n\n- 你的解决方案必须能够在无需轮询队列的情况下接收消息。有了服务总线，就可以使用服务总线支持的基于 TCP 的协议，通过长轮询接收操作实现这一点。\n\n- 你的解决方案要求队列必须遵循先入先出 (FIFO) 的传递顺序。\n\n- 你希望在 Azure 和 Windows Server（私有云）上获得对称体验。有关详细信息，请参阅[适用于 Windows Server 的服务总线](https://msdn.microsoft.com/zh-cn/library/dn282144.aspx)。\n\n- 你的解决方案必须能够支持自动重复检测。\n\n- 你希望应用程序将消息作为长时间运行的并行流进行处理（使用消息的 [SessionId](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.sessionid.aspx) 属性，将消息与流相关联）。在这种模式下，消费应用程序中的每个节点将竞争流而不是消息。当流被提供给某个消费节点时，该节点可以使用事务检查应用程序流的状态。\n\n- 你的解决方案在发送或接收来自队列的多个消息时，需要事务行为和原子性。\n\n- 应用程序特定的工作负荷的生存时间 (TTL) 特性超过 7 天的期限。\n\n- 你的应用程序处理的消息介于 64 KB 和 256 KB 之间。\n\n- 你需要向队列提供基于角色的访问模型，为发送者和接收者提供不同权限。\n\n- 你的队列大小不会增长到超过 80 GB。\n\n- 你希望使用基于 AMQP 1.0 标准的消息传送代理。有关 AMQP 的详细信息，请参阅[服务总线 AMQP 概述](/documentation/articles/service-bus-amqp-overview)。\n\n- 你想要从基于队列的点到点通信最终迁移到消息交换模式，后者允许无缝集成其他接收者（订阅服务器），其中每个接收者都接收发送到该队列的某些消息或所有消息的独立副本。消息交换模式是服务总线本机提供的发布/订阅功能。\n\n- 你的消息传送解决方案必须能够支持“至多一次”传递保证，而无需构建其他基础结构组件。\n\n- 你希望能够发布并使用消息批处理。\n\n- 你需要与 Windows Communication Foundation (WCF) 中的 .NET Framework 通信堆栈完全集成。\n\n## 比较 Azure 队列和服务总线队列\n\n以下各部分中的表格提供队列功能的逻辑分组，使你可以一目了然地比较 Azure 队列和服务总线队列中的功能。\n\n## 基础功能\n\n本部分比较 Azure 队列和服务总线队列提供的一些基础队列功能。\n\n|比较条件|Azure 队列|Service Bus 队列|\n|---|---|---|\n|排序保障|**否**<br/><br>有关详细信息，请参阅“其他信息”部分中的第一个注意事项。</br>|**是 - 先入先出 (FIFO)**<br/><br>（通过使用消息传送会话）|\n|传递保障|**至少一次**|**至少一次**<br/><br/>**最多一次**|\n|事务支持|**否**|**是**<br/><br/>（通过使用本地事务）|\n|接收行为|**非阻塞**<br/><br/>（如果没有发现新消息，则立即完成）|**阻塞（带超时/不带超时）**<br/><br/>（提供长轮询，或[“Comet 技术”](http://go.microsoft.com/fwlink/?LinkId=613759)）<br/><br/>**非阻塞**<br/><br/>（仅通过使用 .NET 托管 API）|\n|推送样式 API|**否**|**是**<br/><br/>[OnMessage](https://msdn.microsoft.com/zh-cn/library/azure/jj908682.aspx)和**OnMessage 会话** .NET API。|\n|接收模式|**扫视与租赁**|**扫视与锁定**<br/><br/>**接收与删除**|\n|独占访问模式|**基于租赁**|**基于锁定**|\n|租赁/锁定持续时间|**30 秒（默认值）**<br/><br/>**7 天7 天（最大值）（你可以使用 [UpdateMessage](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.windowsazure.storage.queue.cloudqueue.updatemessage.aspx) API 来续订或释放消息租赁。）|**60 秒（默认值）**<br/><br/>你可以使用 [RenewLock](https://msdn.microsoft.com/zh-cn/library/microsoft.servicebus.messaging.brokeredmessage.renewlock.aspx) API 续订消息锁。|\n|租赁/锁定精度|**消息级别**<br/><br/>（每条消息可以具有不同的超时值，你可以在处理消息时，根据需要使用 [UpdateMessage](https://msdn.microsoft.com/zh-cn/library/microsoft.windowsazure.storage.queue.cloudqueue.updatemessage.aspx) API 来更新超时值）|**队列级别**<br/><br/>（每个队列都具有一个适用于其中所有消息的锁定精度，但是你可以使用 [RenewLock](https://msdn.microsoft.com/zh-cn/library/microsoft.servicebus.messaging.brokeredmessage.renewlock.aspx) API 续订该锁。）|\n|成批接收|**是**<br/><br/>（在检索消息时显式指定消息计数，最多可达 32 条消息）|**是**<br/><br/>（隐式启用预提取属性或通过使用事务显式启用）|\n|成批发送|**否**|**是**<br/><br/>（通过使用事务或客户端批处理）|\n\n### 其他信息\n\n- Azure 队列中的消息通常是先进先出的，但有时其顺序可能会颠倒。例如，当消息的可见性超时到期时（例如，由于客户端应用程序在处理过程中崩溃），就会发生这种情况。当可见性超时到期时，消息会再次变成在队列上可见，让另一个工作线程能够取消它的排队。此时，重新变成可见的消息可以放置在队列中（可以再次取消其排队），位于原先排在它后面的消息之后。\n\n- 如果你已经在使用 Azure 存储 Blob 或表，然后开始使用队列，则可保证 99.9% 的可用性。如果你将 Blob 或表与服务总线队列结合使用，则可用性将会降低。\n\n- 服务总线队列中有保障的 FIFO 模式要求使用消息传送会话。当处理以“扫视与锁定”模式接收的消息时，如果应用程序发生崩溃，则当下次队列接收者接受消息传送会话时，它将在失败消息的生存时间 (TTL) 期限过期后开始传递此消息。\n\n- Azure 队列可以支持标准队列方案，例如解除应用程序组件之间的关联以增加可伸缩性和容错能力、进行负载分级，以及生成过程工作流。\n\n- 服务总线队列支持“至少一次”传递保障。此外，可以通过使用会话状态来存储应用程序状态，并通过使用事务自动接收消息和更新会话状态，从而支持“最多一次”语义。Azure 工作流服务使用该技术来保障“最多一次”传递。\n\n- Azure 队列可在多个队列、表和 Blob 上提供统一和一致的编程模型 – 对于开发人员和运营团队都是如此。\n\n- 服务总线队列为单个队列的上下文中的本地事务提供支持。\n\n- 服务总线支持的“接收与删除”模式提供了减少消息传送操作计数（和相关成本）以换取降低安全传递保证的能力。\n\n- Azure 队列提供租赁以及延长消息租赁时间的能力。这使工作线程能够对消息保持短的租赁时间。因此，如果某个工作线程崩溃，则其他工作线程可以再次快速处理该消息。此外，如果工作线程处理消息所需的时间比当前租赁时间长，则工作线程可以延长该消息的租赁时间。\n\n- Azure 队列提供了你可以针对消息入队或出队设置的可见性超时。此外，你可以在运行时使用不同租赁值更新消息，并且可以跨同一队列的消息更新不同值。服务总线锁定超时值在队列元数据中定义，但是你可以通过调用 [RenewLock](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.renewlock.aspx) 方法续订该锁。\n\n- 服务总线队列中阻塞接收操作的最大超时值为 24 天。但是，基于 REST 的最大超时值为 55 秒。\n\n- 服务总线提供的客户端批处理允许队列客户端将多个消息纳入一个发送操作中进行批处理。批处理仅适用于异步发送操作。\n\n- 有些特性，例如 Azure 队列的 200TB 上限（当你虚拟化帐户时更多）和无限制队列，使得它成为 SaaS 提供商的理想平台。\n\n- Azure 队列提供灵活且性能良好的委托访问控制机制。\n\n## 高级功能\n\n本部分比较 Azure 队列和服务总线队列提供的高级功能。\n\n|比较条件|Azure 队列|Service Bus 队列|\n|---|---|---|\n|计划的传递|**是**|**是**|\n|自动死信|**否**|**是**|\n|提高队列生存时间值|**是**<br/><br/>（通过就地更新可见性超时）|**是**<br/><br/>（通过一个专用 API 功能提供）|\n|有害消息支持|**是**|**是**|\n|就地更新|**是**|**是**|\n|服务器端事务日志|**是**|**否**|\n|存储度量值|**是**<br/><br/>**分钟度量值**：提供可用性、TPS、API 调用计数、错误计数等指标的实时度量值，所有这些值都是实时的（每分钟进行汇总，并在生产过程中发生后几分钟之内报告）。有关详细信息，请参阅[关于存储分析度量值](https://msdn.microsoft.com/zh-cn/library/azure/hh343258.aspx)。|**是**<br/><br/>（通过调用 [GetQueues](https://msdn.microsoft.com/zh-cn/library/azure/hh293128.aspx) 进行大容量查询）|\n|状态管理|**否**|**是**<br/><br/>[Microsoft.ServiceBus.Messaging.EntityStatus.Active](https://msdn.microsoft.com/zh-cn/library/microsoft.servicebus.messaging.entitystatus.aspx)、[Microsoft.ServiceBus.Messaging.EntityStatus.Disabled](https://msdn.microsoft.com/zh-cn/library/microsoft.servicebus.messaging.entitystatus.aspx)、[Microsoft.ServiceBus.Messaging.EntityStatus.SendDisabled](https://msdn.microsoft.com/zh-cn/library/microsoft.servicebus.messaging.entitystatus.aspx)、[Microsoft.ServiceBus.Messaging.EntityStatus.ReceiveDisabled](https://msdn.microsoft.com/zh-cn/library/microsoft.servicebus.messaging.entitystatus.aspx)|\n|消息自动转发|**否**|**是**|\n|清除队列函数|**是**|**否**|\n|消息组|**否**|**是**<br/><br/>（通过使用消息传送会话）|\n|每个消息组的应用程序状态|**否**|**是**|\n|重复检测|**否**|**是**<br/><br/>（可在发送端配置）|\n|WCF 集成|**否**|**是**<br/><br/>（提供现成的 WCF 绑定）|\n|WF 集成|**自定义**<br/><br/>（需要构建自定义 WF 活动）|**本机**<br/><br/>（提供现成的 WF 活动）|\n|浏览消息组|**否**|**是**|\n|按 ID 提取消息会话|**否**|**是**|\n\n### 其他信息\n\n- 两种队列技术都允许将消息安排在以后传送。\n\n- 利用队列自动转发功能，数千个队列可将它们的消息自动转发至单个队列，而接收应用程序将使用来自该队列的消息。你可以使用此机制来实现安全性和控制流，并且隔离每个消息发布者的存储。\n\n- Azure 队列为更新消息内容提供支持。可以使用此功能将状态信息和递增进度更新持久保留到消息中，以便能够从上一个已知的检查点处理该消息，而不是从头开始。借助服务总线队列，你可以通过使用消息会话实现相同的方案。会话让你能够保存和检索应用程序处理状态（通过使用 [SetState](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.messagesession.setstate.aspx) 和 [GetState](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.messagesession.getstate.aspx)）。\n\n- 死信（仅服务总线队列支持）可用于隔离接收应用程序无法成功处理的消息，或隔离由于生存时间 (TTL) 属性过期而无法到达其目的地的消息。TTL 值指定消息在队列中保留的时间。对于服务总线，在 TTL 期限过期时，该消息将移到一个特殊的队列（称为 $DeadLetterQueue）。\n\n- 若要查找 Azure 队列中的“有害”消息，则在消息出队时，应用程序检查该消息的 DequeueCount 属性。如果 DequeueCount 超出给定的阈值，应用程序将消息移到应用程序定义的“死信”队列。\n\n- Azure 队列使你可以获取针对该队列执行的所有事务的详细日志以及聚合度量值。这两个选项可用于调试和了解你的应用程序如何使用 Azure 队列。它们还用于对应用程序进行性能优化并降低使用队列的成本。\n\n- 服务总线支持的“消息会话”概念允许属于特定逻辑组的消息与给定的接收者关联，而这样一来又能在消息与其各自接收者之间创建类似于会话的关联。可以通过对消息设置 [SessionID](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.sessionid.aspx) 属性，在服务总线中启用此高级功能。然后，接收者可以侦听特定会话 ID，并接收共享特定会话标识符的消息。\n\n- 根据 [MessageID](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.brokeredmessage.messageid.aspx) 属性的值，服务总线队列支持的重复项检测功能会自动删除发送到队列或主题的重复消息。\n\n## <a name=\"capacity-and-quotas\"></a>容量和配额\n\n本部分从适用的容量和配额角度比较 Azure 队列和服务总线队列。\n\n|比较条件|Azure 队列|Service Bus 队列|\n|---|---|---|\n|最大队列大小|**200 TB**<br/><br/>（限制为单个存储帐户容量）|**1 GB 到 80 GB**<br/><br/>（在创建队列和[启用分区](/documentation/articles/service-bus-partitioning)时定义 – 请参阅“其他信息”部分）|\n|最大消息大小|**64 KB**<br/><br/>（使用 **Base64** 编码时为 48 KB）<br/><br/>Azure 可以通过合并队列和 Blob 支持大消息 – 单个项目排队的消息最多达到 200GB。|**256 KB**<br/><br/>（同时包含标题和正文，最大标题大小：64 KB）|\n|最大消息 TTL|**7 天**|**不受限制**|\n|最大队列数|**不受限制**|**10,000**<br/><br/>（每个服务命名空间，可以增加）|\n|并发客户端的最大数目|**不受限制**|**Unlimited**<br/><br/>（100 个并发连接限制仅适用于基于 TCP 协议的通信）|\n\n### 其他信息\n\n- 服务总线强制实施队列大小限制。在创建队列时指定最大队列大小，其值可以在 1 至 80 GB 之间。如果达到创建队列时设置的队列大小值，则将拒绝其他传入消息，并且调用代码将收到一个异常。有关服务总线中配额的详细信息，请参阅[服务总线配额](/documentation/articles/service-bus-quotas)。\n\n- 你可以创建 1、2、3、4 或 5 GB 大小的服务总线队列（默认值为 1 GB）。启用分区（这是默认值）时，服务总线将为你指定的每个 GB 创建 16 个分区。因此，如果你创建了一个大小为 5 GB 的队列，由于每 GB 16 个分区，最大队列大小将变为 (5 * 16) = 80 GB。可以通过在 [Azure 经典门户][]上查看分区队列或主题的条目，来了解该队列或主题的最大大小。\n\n- 在 Azure 队列中，如果消息的内容不属于 XML 安全内容，则必须对其进行 **Base64** 编码。如果你使用 **Base64** 编码此消息，则用户负载可高达 48 KB，而不是 64 KB。\n\n- 对于服务总线队列，存储在队列中的每条消息由两个部分组成：标头和正文。消息的总大小不能超过 256 KB。\n\n- 当客户端通过 TCP 协议与服务总线队列进行通信时，到单个服务总线队列的最大并发连接数不得超过 100。此数值在发送者和接收者之间共享。如果达到此配额，将拒绝后续的其他连接请求，调用代码将收到一个异常。使用基于 REST 的 API 连接到队列的客户端不受此限制。\n\n- 如果在单个服务总线服务命名空间中需要超过 10,000 个队列，你可以联系 Azure 支持团队并请求增加数目。若要使用服务总线扩展到 10,000 个以上的队列，你还可以使用 [Azure 经典门户][]创建其他服务命名空间。\n\n## 管理和操作\n\n本部分对 Azure 队列和服务总线队列提供的管理功能进行了比较。\n\n|比较条件|Azure 队列|Service Bus 队列|\n|---|---|---|\n|管理协议|**基于 HTTP/HTTPS 的 REST**|**基于 HTTPS 的 REST**|\n|运行时协议|**基于 HTTP/HTTPS 的 REST**|**基于 HTTPS 的 REST**<br/><br/>**AMQP 1.0 标准（具有 TLS 的 TCP）**|\n|.NET 托管 API|**是**<br/><br/>（.NET 托管存储客户端 API）|**是**<br/><br/>（.NET 托管的中转消息传送 API）|\n|本机 C++|**是**|**否**|\n|Java API|**是**|**是**|\n|PHP API|**是**|**是**|\n|Node.js API|**是**|**是**|\n|任意元数据支持|**是**|**否**|\n|队列命名规则|**长度最多为 63 个字符**<br/><br/>（队列名称中的字母必须小写）|**长度最多为 260 个字符**<br/><br/>（队列名称不区分大小写）|\n|获取队列长度函数|**是**<br/><br/>（在消息超出 TTL 但未删除的情况下的近似值）|**是**<br/><br/>（精确时间点值）|\n|Peek 函数|**是**|**是**|\n\n### 其他信息\n\n- Azure 队列为可应用于队列说明的任意属性提供支持（以名称/值对形式）。\n\n- 两种队列技术还提供无需锁定消息即可进行消息扫视的功能，这在实现队列资源管理器/浏览器工具时可能非常有用。\n\n- 服务总线 .NET 托管中转消息传送 API 利用了全双工 TCP 连接，因此与 HTTP 上的 REST 相比提高了性能，另外它们还支持 AMQP 1.0 标准协议。\n\n- Azure 队列名称长度可以在 3-63 个字符之间，可以包含小写字母、数字和连字符。有关详细信息，请参阅[命名队列和元数据](https://msdn.microsoft.com/zh-cn/library/azure/dd179349.aspx)。\n\n- 服务总线队列名称长度最大可达 260 个字符，且命名规则限制较少。服务总线队列名称可以包含字母、数字、句点 (.)、连字符 (-) 和下划线 (\\_)。\n\n## 性能\n\n本部分从性能角度对 Azure 队列和服务总线队列进行比较。\n\n|比较条件|Azure 队列|Service Bus 队列|\n|---|---|---|\n|最大吞吐量|**每秒高达 2,000 条消息**<br/><br/>（基于 1 KB 消息时的基准值）|**每秒高达 2,000 条消息**<br/><br/>（基于 1 KB 消息时的基准值）|\n|平均延迟|**10 毫秒**<br/><br/>（禁用 [TCP Nagle](http://blogs.msdn.com/b/windowsazurestorage/archive/2010/06/25/nagle-s-algorithm-is-not-friendly-towards-small-requests.aspx)）|**20-25 毫秒**|\n|限制行为|**拒绝并显示 HTTP 503 代码**<br/><br/>（中止的请求不会计费）|**拒绝并显示异常/HTTP 503 代码**<br/><br/>（中止的请求不会计费）|\n\n### 其他信息\n\n- 单个 Azure 队列每秒最多可处理 2,000 个事务。事务可以是 **Put**、**Get** 或 **Delete** 操作。向队列发送单个消息 (**Put**) 被计为一个事务，但是接收一条消息通常分为与检索 (**Get**) 有关的两个步骤，之后执行一个请求将该消息从队列中删除 (**Delete**)。因此，成功的取消排队操作通常包含两个事务。批量检索多条消息可以减小这种影响，因为你可以在单个事务中通过 **Get** 操作获取多达 32 条消息，然后对每条消息进行 **Delete** 操作。为了提高吞吐量，你可以创建多个队列（一个存储帐户可以具有无限数量的队列）。\n\n- 当应用程序达到 Azure 队列的最大吞吐量时，通常从队列服务中返回一个“HTTP 503 服务器忙”响应。发生这种情况时，应用程序应使用指数退让延迟以触发重试逻辑。\n\n- 在处理与存储帐户处于同一位置（区域）的托管服务中的小消息（小于 10 KB）时，Azure 队列的延迟时间平均为 10 毫秒。\n\n- Azure 队列和服务总线队列通过对要中止的队列拒绝请求来实施中止行为。但是，这两个队列都不会将中止的请求视为计费。\n\n- 针对服务总线队列的基准已证明：单个队列每秒可以获得最多 2,000 条消息的消息吞吐量（消息大小大约为 1 KB）。要获得更高吞吐量，请使用多个队列。有关使用服务总线优化性能的详细信息，请参阅[使用服务总线中转消息传送改进性能的最佳实践](/documentation/articles/service-bus-performance-improvements)。\n\n- 对于服务总线队列，当达到最大吞吐量时，一个 [ServerBusyException](https://msdn.microsoft.com/zh-cn/library/azure/microsoft.servicebus.messaging.serverbusyexception.aspx)（使用 .NET 托管中转消息传送 API 时）或 HTTP 503（使用基于 REST 的 API 时）响应将返回到该队列客户端，指示该队列将中止。\n\n## 身份验证和授权\n\n本部分讨论 Azure 队列和服务总线队列支持的身份验证和授权功能。\n\n|比较条件|Azure 队列|Service Bus 队列|\n|---|---|---|\n|身份验证|**对称密钥**|**对称密钥**|\n|安全模型|通过 SAS 令牌进行的委托访问。|SAS|\n|标识提供者联合|**否**|**是**|\n\n### 其他信息\n\n- 针对任一队列技术的每个请求都必须进行身份验证。不支持使用匿名访问的公共队列。使用 SAS，你可以通过发布只写 SAS、只读 SAS 或者甚至完全访问权限 SAS 来满足这种方案的需求。\n\n- Azure 队列提供的身份验证方案涉及使用对称密钥，该密钥是基于哈希的消息身份验证代码 (HMAC)，使用 SHA-256 算法计算并编码为 **Base64** 字符串。有关相应协议的详细信息，请参阅 [Azure 存储空间服务的身份验证](https://msdn.microsoft.com/zh-cn/library/azure/dd179428.aspx)。服务总线队列支持使用对称密钥的类似模型。有关详细信息，请参阅[使用服务总线进行共享访问签名身份验证](/documentation/articles/service-bus-shared-access-signature-authentication)。\n\n## 成本\n\n本部分从成本角度对 Azure 队列和服务总线队列进行了比较。\n\n|比较条件|Azure 队列|Service Bus 队列|\n|---|---|---|\n|队列事务成本|**0.0036 美元**<br/><br/>（每 100,000 个事务）|**基本层**：**$0.05**<br/><br/>（每 100 万次操作）|\n|计费操作|**全部**|**仅发送/接收**<br/><br/>（其他操作不收费）|\n|空闲事务|**可计费**<br/><br/>（查询空队列计为收费事务）|**可计费**<br/><br/>（针对空队列的接收被视为计费消息）|\n|存储成本|**$0.07**<br/><br/>（GB/月）|**$0.00**|\n|出站数据传输成本|**$0.12 - $0.19**<br/><br/>（根据地域）|**$0.12 - $0.19**<br/><br/>（根据地域）|\n\n### 其他信息\n\n- 根据给定计费期内通过 Internet 离开 Azure 数据中心的数据总量对数据传输进行收费。\n\n- 位于同一区域内的 Azure 服务之间的数据传输不收费。\n\n- 截至撰写本文之时，所有入站数据传输都不收费。\n\n- 在支持长轮询的情况下，在需要低延迟传递时，使用服务总线队列可达到经济高效的结果。\n\n>[AZURE.NOTE]所有成本随时会变化。上表反映在本文截稿时的当前价格，不包括任何当前可用的促销特价。有关 Azure 的最新价格信息，请参阅 [Azure 定价](/pricing/overview/)页。有关服务总线价格的详细信息，请参阅[服务总线定价](/home/features/messaging/#price)。\n\n## 结束语\n\n通过更深入地了解这两种技术，你将能够对使用哪种队列技术以及何时使用做出更明智的决策。决定何时使用 Azure 队列或服务总线队列明确地取决于很多因素。这些因素很大程度上取决于应用程序及其体系结构的独特需要。如果你的应用程序已使用 Azure 的核心功能，则可能更倾向于选择 Azure 队列，尤其在服务之间需要基本通信和消息传送或需要大小可大于 80 GB 的队列时。\n\n因为服务总线队列提供许多高级功能（如会话、事务、重复检测、自动死信和持久发布/订阅功能），所以，如果你正在构建混合应用程序或你的应用程序需要这些功能，这些队列将是首选。\n\n## 后续步骤\n\n以下文章提供了有关使用 Azure 队列或服务总线队列的更多指导和信息。\n\n- [如何使用 Service Bus 队列](/documentation/articles/service-bus-dotnet-how-to-use-queues)\n- [如何使用队列存储服务](/documentation/articles/storage-dotnet-how-to-use-queues)\n- [使用 Service Bus 中转消息传递改善性能的最佳实践](/documentation/articles/service-bus-performance-improvements)\n- [Azure 服务总线中的队列和主题简介](http://www.code-magazine.com/article.aspx?quickid=1112041)\n- [服务总线开发人员指南](http://www.cloudcasts.net/devguide/)\n- [Azure 表和队列深入介绍](http://www.microsoftpdc.com/2009/SVC09)\n- [Azure 存储体系结构](http://blogs.msdn.com/b/windowsazurestorage/archive/2011/11/20/windows-azure-storage-a-highly-available-cloud-storage-service-with-strong-consistency.aspx)\n- [在 Azure 中使用队列服务](http://www.developerfusion.com/article/120197/using-the-queuing-service-in-windows-azure/)\n- [了解 Azure 存储计费 - 带宽、事务和容量](http://blogs.msdn.com/b/windowsazurestorage/archive/2010/07/09/understanding-windows-azure-storage-billing-bandwidth-transactions-and-capacity.aspx)\n\n\n[Azure 经典门户]: http://manage.windowsazure.cn\n \n\n<!---HONumber=Mooncake_0104_2016-->"
}