{
  "nodes": [
    {
      "content": "使用 .NET 创建内容密钥",
      "pos": [
        28,
        42
      ]
    },
    {
      "content": "了解如何创建提供对资产进行安全访问的内容密钥。",
      "pos": [
        62,
        85
      ]
    },
    {
      "content": "使用 .NET 创建内容密钥",
      "pos": [
        304,
        318
      ]
    },
    {
      "content": "[AZURE.SELECTOR]",
      "pos": [
        322,
        338
      ]
    },
    {
      "content": "REST",
      "pos": [
        342,
        346
      ]
    },
    {
      "content": ".NET",
      "pos": [
        414,
        418
      ]
    },
    {
      "pos": [
        486,
        536
      ],
      "content": "媒体服务允许你创建资产和传送加密的资产。<bpt id=\"p1\">**</bpt>ContentKey<ept id=\"p1\">**</ept> 提供对<bpt id=\"p2\">**</bpt>资产<ept id=\"p2\">**</ept>的安全访问。"
    },
    {
      "pos": [
        538,
        715
      ],
      "content": "创建新资产时（例如，<bpt id=\"p1\">[</bpt>上载文件<ept id=\"p1\">](/documentation/articles/media-services-dotnet-upload-files/)</ept>之前），可以指定以下加密选项：<bpt id=\"p2\">**</bpt>StorageEncrypted<ept id=\"p2\">**</ept>、<bpt id=\"p3\">**</bpt>CommonEncryptionProtected<ept id=\"p3\">**</ept> 或 <bpt id=\"p4\">**</bpt>EnvelopeEncryptionProtected<ept id=\"p4\">**</ept>。"
    },
    {
      "pos": [
        717,
        896
      ],
      "content": "将资产传送到你的客户端时，可以使用以下两个加密选项之一<bpt id=\"p1\">[</bpt>将资产配置为动态加密<ept id=\"p1\">](/documentation/articles/media-services-dotnet-configure-asset-delivery-policy)</ept>：<bpt id=\"p2\">**</bpt>DynamicEnvelopeEncryption<ept id=\"p2\">**</ept> 或 <bpt id=\"p3\">**</bpt>DynamicCommonEncryption<ept id=\"p3\">**</ept>。"
    },
    {
      "pos": [
        898,
        938
      ],
      "content": "加密的资产必须与 <bpt id=\"p1\">**</bpt>ContentKey<ept id=\"p1\">**</ept> 关联。本文介绍如何创建内容密钥。"
    },
    {
      "pos": [
        941,
        1031
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> 在使用媒体服务 .NET SDK 创建新的 <bpt id=\"p1\">**</bpt>StorageEncrypted<ept id=\"p1\">**</ept> 资产时，会自动创建 <bpt id=\"p2\">**</bpt>ContentKey<ept id=\"p2\">**</ept> 并将其链接到资产。"
    },
    {
      "content": "ContentKeyType",
      "pos": [
        1035,
        1049
      ]
    },
    {
      "content": "创建内容密钥时必须设置的值之一是内容密钥类型。选择以下值之一。",
      "pos": [
        1051,
        1082
      ]
    },
    {
      "pos": [
        1769,
        1818
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"envelope_contentkey\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>创建信封类型 ContentKey"
    },
    {
      "content": "以下代码段创建信封加密类型的内容密钥。然后，它将密钥与指定的资产关联。",
      "pos": [
        1820,
        1855
      ]
    },
    {
      "content": "call",
      "pos": [
        2666,
        2670
      ]
    },
    {
      "pos": [
        2744,
        2791
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"common_contentkey\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>创建公共类型 ContentKey"
    },
    {
      "content": "以下代码段创建公共加密类型的内容密钥。然后，它将密钥与指定的资产关联。",
      "pos": [
        2797,
        2832
      ]
    },
    {
      "content": "call",
      "pos": [
        3703,
        3707
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"使用 .NET 创建内容密钥\" \n    description=\"了解如何创建提供对资产进行安全访问的内容密钥。\" \n    services=\"media-services\" \n    documentationCenter=\"\" \n    authors=\"Juliako\" \n    manager=\"dwrede\" \n    editor=\"\"/>\n\n<tags\n    ms.service=\"media-services\"\n    ms.date=\"02/03/2016\"\n    wacn.date=\"03/17/2016\"/>\n\n\n#使用 .NET 创建内容密钥\n\n> [AZURE.SELECTOR]\n- [REST](/documentation/articles/media-services-rest-create-contentkey)\n- [.NET](/documentation/articles/media-services-dotnet-create-contentkey)\n\n媒体服务允许你创建资产和传送加密的资产。**ContentKey** 提供对**资产**的安全访问。\n\n创建新资产时（例如，[上载文件](/documentation/articles/media-services-dotnet-upload-files/)之前），可以指定以下加密选项：**StorageEncrypted**、**CommonEncryptionProtected** 或 **EnvelopeEncryptionProtected**。\n\n将资产传送到你的客户端时，可以使用以下两个加密选项之一[将资产配置为动态加密](/documentation/articles/media-services-dotnet-configure-asset-delivery-policy)：**DynamicEnvelopeEncryption** 或 **DynamicCommonEncryption**。\n\n加密的资产必须与 **ContentKey** 关联。本文介绍如何创建内容密钥。\n\n>[AZURE.NOTE] 在使用媒体服务 .NET SDK 创建新的 **StorageEncrypted** 资产时，会自动创建 **ContentKey** 并将其链接到资产。\n\n##ContentKeyType\n\n创建内容密钥时必须设置的值之一是内容密钥类型。选择以下值之一。\n\n    public enum ContentKeyType\n    {\n        /// <summary>\n        /// Specifies a content key for common encryption.\n        /// </summary>\n        /// <remarks>This is the default value.</remarks>\n        CommonEncryption = 0,\n\n        /// <summary>\n        /// Specifies a content key for storage encryption.\n        /// </summary>\n        StorageEncryption = 1,\n\n        /// <summary>\n        /// Specifies a content key for configuration encryption.\n        /// </summary>\n        ConfigurationEncryption = 2,\n\n        /// <summary>\n        /// Specifies a content key for Envelope encryption.  Only used internally.\n        /// </summary>\n        EnvelopeEncryption = 4\n    }\n\n##<a id=\"envelope_contentkey\"></a>创建信封类型 ContentKey\n\n以下代码段创建信封加密类型的内容密钥。然后，它将密钥与指定的资产关联。\n\n    static public IContentKey CreateEnvelopeTypeContentKey(IAsset asset)\n    {\n        // Create envelope encryption content key\n        Guid keyId = Guid.NewGuid();\n        byte[] contentKey = GetRandomBuffer(16);\n\n        IContentKey key = _context.ContentKeys.Create(\n                                keyId,\n                                contentKey,\n                                \"ContentKey\",\n                                ContentKeyType.EnvelopeEncryption);\n\n        asset.ContentKeys.Add(key);\n\n        return key;\n    }\n\n    static private byte[] GetRandomBuffer(int size)\n    {\n        byte[] randomBytes = new byte[size];\n        using (RNGCryptoServiceProvider rng = new RNGCryptoServiceProvider())\n        {\n            rng.GetBytes(randomBytes);\n        }\n\n        return randomBytes;\n    }\n\ncall\n\n    IContentKey key = CreateEnvelopeTypeContentKey(encryptedsset);\n\n\n\n##<a id=\"common_contentkey\"></a>创建公共类型 ContentKey    \n\n以下代码段创建公共加密类型的内容密钥。然后，它将密钥与指定的资产关联。\n\n    static public IContentKey CreateCommonTypeContentKey(IAsset asset)\n    {\n        // Create common encryption content key\n        Guid keyId = Guid.NewGuid();\n        byte[] contentKey = GetRandomBuffer(16);\n\n        IContentKey key = _context.ContentKeys.Create(\n                                keyId,\n                                contentKey,\n                                \"ContentKey\",\n                                ContentKeyType.CommonEncryption);\n\n        // Associate the key with the asset.\n        asset.ContentKeys.Add(key);\n\n        return key;\n    }\n\n    static private byte[] GetRandomBuffer(int length)\n    {\n        var returnValue = new byte[length];\n\n        using (var rng =\n            new System.Security.Cryptography.RNGCryptoServiceProvider())\n        {\n            rng.GetBytes(returnValue);\n        }\n\n        return returnValue;\n    }\ncall\n\n    IContentKey key = CreateCommonTypeContentKey(encryptedsset); \n\n<!---HONumber=Mooncake_0307_2016-->"
}