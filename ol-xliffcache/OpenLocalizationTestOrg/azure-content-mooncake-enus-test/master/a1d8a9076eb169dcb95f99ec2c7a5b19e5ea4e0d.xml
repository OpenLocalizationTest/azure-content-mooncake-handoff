{
  "nodes": [
    {
      "content": "在源代码管理中存储 .NET 后端项目代码 | Azure 移动服务",
      "pos": [
        27,
        61
      ]
    },
    {
      "content": "了解如何将 .NET 后端项目存储在计算机上的本地 Git 存储库中并从中发布。",
      "pos": [
        80,
        120
      ]
    },
    {
      "content": "在源代码管理中存储移动服务项目代码",
      "pos": [
        341,
        358
      ]
    },
    {
      "content": "&amp;nbsp;",
      "pos": [
        460,
        466
      ]
    },
    {
      "content": "[AZURE.SELECTOR]",
      "pos": [
        471,
        487
      ]
    },
    {
      "content": ".NET backend",
      "pos": [
        491,
        503
      ]
    },
    {
      "content": "Javascript backend",
      "pos": [
        596,
        614
      ]
    },
    {
      "content": "本主题说明如何使用 Azure 移动服务提供的源代码管理存储 .NET 后端服务项目。只需将项目从本地 Git 存储库上载到生产移动服务，便可以发布该项目。",
      "pos": [
        693,
        771
      ]
    },
    {
      "pos": [
        773,
        807
      ],
      "content": "若要完成本教程，你必须事先参考<bpt id=\"p1\">[</bpt><ept id=\"p1\">移动服务入门]</ept>教程创建一个移动服务。"
    },
    {
      "pos": [
        811,
        860
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"enable-source-control\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>在移动服务中启用源代码管理"
    },
    {
      "pos": [
        975,
        1015
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"clone-repo\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>安装 Git 并创建本地存储库"
    },
    {
      "content": "在本地计算机上安装 Git。",
      "pos": [
        1020,
        1034
      ]
    },
    {
      "pos": [
        1041,
        1093
      ],
      "content": "安装 Git 所需的步骤因操作系统的不同而异。有关操作系统特定的分发和安装指南，请参阅<bpt id=\"p1\">[</bpt><ept id=\"p1\">安装 Git]</ept>。"
    },
    {
      "content": "在某些操作系统上，命令行和 GUI 版本的 Git 都可用。本文中提供的说明使用命令行版本。",
      "pos": [
        1118,
        1164
      ]
    },
    {
      "pos": [
        1169,
        1265
      ],
      "content": "打开一个命令行，例如 <bpt id=\"p1\">**</bpt>GitBash<ept id=\"p1\">**</ept> (Windows) 或 <bpt id=\"p2\">**</bpt>Bash<ept id=\"p2\">**</ept> (Unix Shell)。在 OS X 系统上，可以通过 <bpt id=\"p3\">**</bpt>Terminal<ept id=\"p3\">**</ept> 应用程序访问命令行。"
    },
    {
      "pos": [
        1270,
        1313
      ],
      "content": "在命令行中，切换到要在其中存储脚本的目录。例如，<ph id=\"ph1\">`cd SourceControl`</ph>。"
    },
    {
      "pos": [
        1318,
        1383
      ],
      "content": "使用以下命令创建新 Git 存储库的本地副本，并将 <ph id=\"ph1\">`&lt;your_git_URL&gt;`</ph> 替换为移动服务的 Git 存储库的 URL："
    },
    {
      "content": "出现提示时，请键入你在移动服务中启用源代码管理时设置的用户名和密码。身份验证成功后，你将看到类似于下面的一系列响应：",
      "pos": [
        1422,
        1480
      ]
    },
    {
      "pos": [
        1683,
        1762
      ],
      "content": "浏览到你从中运行了 <ph id=\"ph1\">`git clone`</ph> 命令的目录，可以发现，已创建了一个与移动服务同名的新目录。对于 .NET 后端移动服务，git 存储库最初是空的。"
    },
    {
      "content": "创建本地存储库后，可以从此存储库发布 .NET 后端服务项目。",
      "pos": [
        1764,
        1795
      ]
    },
    {
      "pos": [
        1799,
        1839
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"deploy-scripts\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>使用 Git 发布项目"
    },
    {
      "content": "在 Visual Studio 2013 中创建新的 .NET 后端移动服务项目，或者将现有项目移到新本地存储库。",
      "pos": [
        1844,
        1901
      ]
    },
    {
      "content": "为了进行快速测试，请下载移动服务快速入门项目并将其保存到此文件夹。",
      "pos": [
        1909,
        1942
      ]
    },
    {
      "content": "删除所有 NuGet 包文件夹，只保留 packages.config 文件。",
      "pos": [
        1947,
        1986
      ]
    },
    {
      "content": "移动服务将基于 packages.confign 文件自动还原 NuGet 包。你还可以定义一个 .gitignore 文件，以防止添加包目录。",
      "pos": [
        1992,
        2064
      ]
    },
    {
      "content": "在 Git 命令提示符下，键入以下命令以开始跟踪新脚本文件：",
      "pos": [
        2070,
        2100
      ]
    },
    {
      "content": "键入以下命令以提交更改：",
      "pos": [
        2130,
        2142
      ]
    },
    {
      "content": "键入以下命令以将更改上载到远程存储库，并提供你的凭据：",
      "pos": [
        2214,
        2241
      ]
    },
    {
      "content": "你应会看到一系列命令，它们指示已将项目部署到移动服务、已添加包，并且已重新启动服务。",
      "pos": [
        2285,
        2327
      ]
    },
    {
      "content": "浏览到 .NET 后端移动服务的 URL，你应会看到：",
      "pos": [
        2332,
        2359
      ]
    },
    {
      "content": "移动服务启动页",
      "pos": [
        2367,
        2374
      ]
    },
    {
      "pos": [
        2470,
        2584
      ],
      "content": "现在，你的移动服务项目已保留在源代码管理中，你只需从本地存储库推送更新，便可以发布服务更新。有关在使用 SQL 数据库的 .NET 后端移动服务中进行数据模型更改的信息，请参阅<bpt id=\"p1\">[</bpt><ept id=\"p1\">如何对 .NET 后端移动服务进行数据模型更改]</ept>。"
    }
  ],
  "content": "<properties\n    pageTitle=\"在源代码管理中存储 .NET 后端项目代码 | Azure 移动服务\"\n    description=\"了解如何将 .NET 后端项目存储在计算机上的本地 Git 存储库中并从中发布。\"\n    services=\"mobile-services\"\n    documentationCenter=\"\"\n    authors=\"ggailey777\"\n    manager=\"dwrede\"\n    editor=\"\"/>\n\n<tags \n    ms.service=\"mobile-services\" \n    ms.date=\"12/07/2015\"\n    wacn.date=\"01/29/2016\"/>\n\n# 在源代码管理中存储移动服务项目代码\n\n[AZURE.INCLUDE [mobile-service-note-mobile-apps](../includes/mobile-services-note-mobile-apps.md)]\n\n&nbsp;\n\n\n> [AZURE.SELECTOR]\n- [.NET backend](/zh-cn/documentation/articles/mobile-services-dotnet-backend-store-code-source-control)\n- [Javascript backend](/zh-cn/documentation/articles/mobile-services-store-scripts-source-control)\n\n本主题说明如何使用 Azure 移动服务提供的源代码管理存储 .NET 后端服务项目。只需将项目从本地 Git 存储库上载到生产移动服务，便可以发布该项目。\n\n若要完成本教程，你必须事先参考[移动服务入门]教程创建一个移动服务。\n\n##<a name=\"enable-source-control\"></a>在移动服务中启用源代码管理\n\n[AZURE.INCLUDE [mobile-services-enable-source-control](../includes/mobile-services-enable-source-control.md)]\n\n##<a name=\"clone-repo\"></a>安装 Git 并创建本地存储库\n\n1. 在本地计算机上安装 Git。 \n\n    安装 Git 所需的步骤因操作系统的不同而异。有关操作系统特定的分发和安装指南，请参阅[安装 Git]。\n\n    > [AZURE.NOTE]\n    在某些操作系统上，命令行和 GUI 版本的 Git 都可用。本文中提供的说明使用命令行版本。\n\n2. 打开一个命令行，例如 **GitBash** (Windows) 或 **Bash** (Unix Shell)。在 OS X 系统上，可以通过 **Terminal** 应用程序访问命令行。\n\n3. 在命令行中，切换到要在其中存储脚本的目录。例如，`cd SourceControl`。\n\n4. 使用以下命令创建新 Git 存储库的本地副本，并将 `<your_git_URL>` 替换为移动服务的 Git 存储库的 URL：\n\n        git clone <your_git_URL>\n\n5. 出现提示时，请键入你在移动服务中启用源代码管理时设置的用户名和密码。身份验证成功后，你将看到类似于下面的一系列响应：\n\n        remote: Counting objects: 8, done.\n        remote: Compressing objects: 100% (4/4), done.\n        remote: Total 8 (delta 1), reused 0 (delta 0)\n        Unpacking objects: 100% (8/8), done.\n\n6. 浏览到你从中运行了 `git clone` 命令的目录，可以发现，已创建了一个与移动服务同名的新目录。对于 .NET 后端移动服务，git 存储库最初是空的。\n\n创建本地存储库后，可以从此存储库发布 .NET 后端服务项目。\n\n##<a name=\"deploy-scripts\"></a>使用 Git 发布项目\n\n1. 在 Visual Studio 2013 中创建新的 .NET 后端移动服务项目，或者将现有项目移到新本地存储库。  \n\n    为了进行快速测试，请下载移动服务快速入门项目并将其保存到此文件夹。\n\n2. 删除所有 NuGet 包文件夹，只保留 packages.config 文件。\n\n    移动服务将基于 packages.confign 文件自动还原 NuGet 包。你还可以定义一个 .gitignore 文件，以防止添加包目录。\n \n3. 在 Git 命令提示符下，键入以下命令以开始跟踪新脚本文件：\n\n        $ git add .\n    \n4. 键入以下命令以提交更改：\n\n        $ git commit -m \"adding the .NET backend service project\"\n\n5. 键入以下命令以将更改上载到远程存储库，并提供你的凭据：\n\n        $ git push origin master\n    \n    你应会看到一系列命令，它们指示已将项目部署到移动服务、已添加包，并且已重新启动服务。\n\n6. 浏览到 .NET 后端移动服务的 URL，你应会看到：\n\n    ![移动服务启动页](./media/mobile-services-dotnet-backend-store-code-source-control/mobile-service-startup.png)\n\n现在，你的移动服务项目已保留在源代码管理中，你只需从本地存储库推送更新，便可以发布服务更新。有关在使用 SQL 数据库的 .NET 后端移动服务中进行数据模型更改的信息，请参阅[如何对 .NET 后端移动服务进行数据模型更改]。\n\n<!-- Anchors. -->\n\n<!-- Images. -->\n\n<!-- URLs. -->\n[Git website]: http://git-scm.com\n[Source control]: http://msdn.microsoft.com/zh-cn/library/azure/c25aaede-c1f0-4004-8b78-113708761643\n[安装 Git]: http://git-scm.com/book/en/Getting-Started-Installing-Git\n[移动服务入门]: /documentation/articles/mobile-services-dotnet-backend-ios-get-started\n[Azure Management Portal]: https://manage.windowsazure.cn/\n[如何对 .NET 后端移动服务进行数据模型更改]: /documentation/articles/mobile-services-dotnet-backend-how-to-use-code-first-migrations\n\n<!---HONumber=Mooncake_0118_2016-->"
}