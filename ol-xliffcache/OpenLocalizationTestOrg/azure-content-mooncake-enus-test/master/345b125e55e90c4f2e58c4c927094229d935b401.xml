{
  "nodes": [
    {
      "content": "Batch 中的作业准备和清理 | Azure",
      "pos": [
        27,
        50
      ]
    },
    {
      "content": "采用作业级准备任务最大程度地减少 Azure 批处理 ( Batch )计算节点的数据传输，并在完成作业时执行释放任务来清理节点。",
      "pos": [
        69,
        134
      ]
    },
    {
      "content": "在 Azure 批处理( Batch ) 计算节点上运行作业准备和完成任务",
      "pos": [
        365,
        402
      ]
    },
    {
      "pos": [
        404,
        519
      ],
      "content": "Azure 批处理( Batch ) 任务在执行之前通常需要进行某种形式的设置，同样，在作业的任务完成之后需要进行某种形式的作业后维护。批处理( Batch ) 以可选的<bpt id=\"p1\">*</bpt>作业准备<ept id=\"p1\">*</ept>和<bpt id=\"p2\">*</bpt>作业解放<ept id=\"p2\">*</ept>任务的形式提供这种准备和维护机制。"
    },
    {
      "content": "在任何作业任务运行之前，作业准备任务在计划要运行任务的所有计算节点上运行。作业完成后，作业释放任务将在池中至少运行了一个任务的每个节点上运行。作业准备和释放任务允许你指定命令行在任务被调用时运行，并提供许多功能，例如文件下载、提升权限的执行、自定义环境变量、最大执行持续时间、重试计数和文件保留时间。",
      "pos": [
        521,
        671
      ]
    },
    {
      "pos": [
        673,
        803
      ],
      "content": "在以下部分中，你将了解如何在 <bpt id=\"p1\">[</bpt>Batch .NET<ept id=\"p1\">][api_net]</ept> API 中利用 <bpt id=\"p2\">[</bpt>JobPreparationTask<ept id=\"p2\">][net_job_prep]</ept> 和 <bpt id=\"p3\">[</bpt>JobReleaseTask<ept id=\"p3\">][net_job_release]</ept> 来使用这两种特殊类型的任务。"
    },
    {
      "pos": [
        807,
        878
      ],
      "content": "<ph id=\"ph1\">[AZURE.TIP]</ph>作业准备和释放任务在“共享池”环境中特别有用；在这种环境中，计算节点的池在任务运行之间保留，并在许多不同的作业之间共享。"
    },
    {
      "content": "何时使用作业准备和释放任务",
      "pos": [
        883,
        896
      ]
    },
    {
      "content": "许多情况可受益于作业准备和释放任务。下面只是其中的几种情况：",
      "pos": [
        898,
        928
      ]
    },
    {
      "pos": [
        932,
        1103
      ],
      "content": "<bpt id=\"p1\">**</bpt>通用任务数据的传输<ept id=\"p1\">**</ept> - 批处理( Batch ) 作业通常需要一组通用的数据作为作业任务的输入。例如，在每日风险分析计算中，市场数据特定于作业，同时也是作业中所有任务通用的数据。这些市场数据（大小通常为若干 GB）应该只下载到每个计算节点一次，以供节点上运行的每个任务使用。在执行其他任务之前使用<bpt id=\"p2\">*</bpt>作业准备任务<ept id=\"p2\">*</ept>将数据下载到每个节点。"
    },
    {
      "pos": [
        1106,
        1224
      ],
      "content": "<bpt id=\"p1\">**</bpt>作业数据删除<ept id=\"p1\">**</ept> - 在共享池环境中，池的计算节点不在作业之间取消保留，为了要节省节点上的磁盘空间或满足组织的安全政策，可能需要在运行之间删除作业数据。使用<bpt id=\"p2\">*</bpt>作业释放任务<ept id=\"p2\">*</ept>可以删除作业准备任务下载的数据或者在任务执行期间生成的数据。"
    },
    {
      "pos": [
        1227,
        1329
      ],
      "content": "<bpt id=\"p1\">**</bpt>日志保留<ept id=\"p1\">**</ept> - 你可能想要保留任务生成的日志，或失败应用程序所生成的崩溃转储文件。在这种情况下，使用<bpt id=\"p2\">*</bpt>作业释放任务<ept id=\"p2\">*</ept>可将这些数据压缩并上载到 <bpt id=\"p3\">[</bpt>Azure 存储<ept id=\"p3\">][azure_storage]</ept>帐户。"
    },
    {
      "content": "作业准备任务",
      "pos": [
        1334,
        1340
      ]
    },
    {
      "content": "在执行作业的任务之前，将在计划运行任务的每个计算节点上执行作业准备任务。默认情况下，Batch 服务将等待作业准备任务完成，然后才在节点上运行计划的任务，但你可以将该服务配置为不要等待。如果计算节点重新启动，作业准备任务将在该节点上再次运行，但你也可以禁用此行为。",
      "pos": [
        1342,
        1474
      ]
    },
    {
      "pos": [
        1476,
        1659
      ],
      "content": "作业准备任务只会在计划运行任务的节点上运行。例如，这可以防止未分配任务的节点不必要地执行准备任务，从而节省数据传输费用。当作业的任务数小于池中的节点数，或者在任务计数小于可能的并行任务总数的情况下启用了<bpt id=\"p1\">[</bpt>并行任务执行<ept id=\"p1\">](/documentation/articles/batch-parallel-node-tasks)</ept>，从而留出一些空闲节点时，便可以实现上述目的。"
    },
    {
      "pos": [
        1663,
        1833
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> <bpt id=\"p1\">[</bpt>JobPreparationTask<ept id=\"p1\">][net\\_job\\_prep\\_cloudjob]</ept> 与 <bpt id=\"p2\">[</bpt>CloudPool.StartTask<ept id=\"p2\">][pool_starttask]</ept> 的不同之处在于，JobPreparationTask 在每个作业启动时执行，而 StartTask 只在计算节点首次加入池或重新启动时执行。"
    },
    {
      "content": "作业释放任务",
      "pos": [
        1838,
        1844
      ]
    },
    {
      "pos": [
        1846,
        1977
      ],
      "content": "作业完成后，作业释放任务将在池中至少运行了一个任务的每个节点上执行。可以通过发出终止请求将作业标记为已完成。然后，Batch 服务会将作业状态设置为<bpt id=\"p1\">*</bpt>正在终止<ept id=\"p1\">*</ept>，终止与任务关联的任何活动任务或正在运行的任务，并运行作业释放任务。然后，该作业将进入<bpt id=\"p2\">*</bpt>已完成<ept id=\"p2\">*</ept>状态。"
    },
    {
      "pos": [
        1981,
        2046
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>作业删除操作也会执行作业释放任务。但是，如果以前终止了某个作业，则以后删除该作业时，释放任务不会再次运行。"
    },
    {
      "content": "Batch .NET API 中的作业准备和释放任务",
      "pos": [
        2051,
        2077
      ]
    },
    {
      "pos": [
        2079,
        2317
      ],
      "content": "若要指定作业准备任务，可以创建并配置 <bpt id=\"p1\">[</bpt>JobPreparationTask<ept id=\"p1\">][net_job_prep]</ept> 对象，然后将它分配到作业的 <bpt id=\"p2\">[</bpt>CloudJob.JobPreparationTask<ept id=\"p2\">][net_job_prep_cloudjob]</ept> 属性。同样，初始化 <bpt id=\"p3\">[</bpt>JobReleaseTask<ept id=\"p3\">][net_job_release]</ept> 并将它分配到作业的 <bpt id=\"p4\">[</bpt>CloudJob.JobReleaseTask<ept id=\"p4\">][net_job_prep_cloudjob]</ept> 属性可以设置作业的释放任务。"
    },
    {
      "pos": [
        2319,
        2410
      ],
      "content": "在此代码段中，<ph id=\"ph1\">`myBatchClient`</ph> 是完全初始化的 <bpt id=\"p1\">[</bpt>BatchClient<ept id=\"p1\">][net_batch_client]</ept> 实例，<ph id=\"ph2\">`myPool`</ph> 是 Batch 帐户中的现有池。"
    },
    {
      "pos": [
        3276,
        3472
      ],
      "content": "如上所述，终止或删除作业时会执行释放任务。可以通过调用 <bpt id=\"p1\">[</bpt>PoolOperations.TerminateJobAsync<ept id=\"p1\">][net_job_terminate]</ept> 使用 Batch .NET API 终止作业。可以使用 <bpt id=\"p2\">[</bpt>PoolOperations.DeleteJobAsync<ept id=\"p2\">][net_job_delete]</ept> 删除作业。这两项操作通常都是在作业的任务已完成或者达到了你定义的超时时完成。"
    },
    {
      "content": "后续步骤",
      "pos": [
        3879,
        3883
      ]
    },
    {
      "content": "GitHub 上的示例项目",
      "pos": [
        3889,
        3902
      ]
    },
    {
      "pos": [
        3904,
        3995
      ],
      "content": "查看 GitHub 上的 <bpt id=\"p1\">[</bpt>JobPrepRelease<ept id=\"p1\">][job_prep_release_sample]</ept> 示例项目，了解作业准备和释放的操作实践。此控制台应用程序将执行以下操作："
    },
    {
      "content": "创建包含两个“小”节点的池",
      "pos": [
        4000,
        4013
      ]
    },
    {
      "content": "创建具有作业准备、释放和标准任务的作业",
      "pos": [
        4017,
        4036
      ]
    },
    {
      "content": "运行作业准备任务，该任务首先会将节点 ID 写入节点的“共享”目录中的文本文件内",
      "pos": [
        4040,
        4080
      ]
    },
    {
      "content": "在每个节点上运行一个任务，该任务将其任务 ID 写入同一文本文件",
      "pos": [
        4084,
        4116
      ]
    },
    {
      "content": "完成所有任务（或达到超时）后，将每个节点的文本文件内容输出到控制台",
      "pos": [
        4120,
        4153
      ]
    },
    {
      "content": "完成作业后，运行作业释放任务以从节点中删除该文件",
      "pos": [
        4157,
        4181
      ]
    },
    {
      "content": "输出执行作业准备和释放任务的每个节点上的这些任务的退出代码",
      "pos": [
        4185,
        4214
      ]
    },
    {
      "content": "暂停执行，以便确认删除作业和/或池",
      "pos": [
        4218,
        4235
      ]
    },
    {
      "content": "示例应用程序的输出类似于：",
      "pos": [
        4237,
        4250
      ]
    },
    {
      "content": "使用 Batch 资源管理器检查作业准备和释放任务",
      "pos": [
        5299,
        5324
      ]
    },
    {
      "pos": [
        5326,
        5532
      ],
      "content": "<bpt id=\"p1\">[</bpt>批处理( Batch ) 资源管理器<ept id=\"p1\">][batch_explorer_article]</ept>（在 GitHub 上的<bpt id=\"p2\">[</bpt>示例代码存储库<ept id=\"p2\">][batch_explorer_project]</ept>中也能找到）是在 Azure 批处理( Batch ) 中开发解决方案时可以使用的绝佳工具。例如，在运行上述示例应用程序时，你可以使用批处理( Batch ) 资源管理器查看作业及其任务的属性，甚至可以下载作业任务修改的共享文本文件。"
    },
    {
      "pos": [
        5534,
        5615
      ],
      "content": "以下屏幕截图突出显示了当你在“作业”选项卡中选择 <bpt id=\"p1\">*</bpt>JobPrepReleaseSampleJob<ept id=\"p1\">*</ept> 作业时，“作业详细信息”窗格中显示的作业准备和释放任务属性。"
    },
    {
      "content": "批处理( Batch )资源管理器",
      "pos": [
        5619,
        5636
      ]
    },
    {
      "content": "显示作业准备和释放任务的 Batch 资源管理器屏幕截图",
      "pos": [
        5643,
        5671
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"Batch 中的作业准备和清理 | Azure\"\n    description=\"采用作业级准备任务最大程度地减少 Azure 批处理 ( Batch )计算节点的数据传输，并在完成作业时执行释放任务来清理节点。\"\n    services=\"batch\"\n    documentationCenter=\".net\"\n    authors=\"mmacy\"\n    manager=\"timlt\"\n    editor=\"\"\n    tags=\"azure-resource-manager\"/>\n\n<tags\n    ms.service=\"batch\"\n    ms.date=\"10/15/2015\"\n    wacn.date=\"12/31/2015\"/>\n\n# 在 Azure 批处理( Batch ) 计算节点上运行作业准备和完成任务\n\nAzure 批处理( Batch ) 任务在执行之前通常需要进行某种形式的设置，同样，在作业的任务完成之后需要进行某种形式的作业后维护。批处理( Batch ) 以可选的*作业准备*和*作业解放*任务的形式提供这种准备和维护机制。\n\n在任何作业任务运行之前，作业准备任务在计划要运行任务的所有计算节点上运行。作业完成后，作业释放任务将在池中至少运行了一个任务的每个节点上运行。作业准备和释放任务允许你指定命令行在任务被调用时运行，并提供许多功能，例如文件下载、提升权限的执行、自定义环境变量、最大执行持续时间、重试计数和文件保留时间。\n\n在以下部分中，你将了解如何在 [Batch .NET][api_net] API 中利用 [JobPreparationTask][net_job_prep] 和 [JobReleaseTask][net_job_release] 来使用这两种特殊类型的任务。\n\n> [AZURE.TIP]作业准备和释放任务在“共享池”环境中特别有用；在这种环境中，计算节点的池在任务运行之间保留，并在许多不同的作业之间共享。\n\n## 何时使用作业准备和释放任务\n\n许多情况可受益于作业准备和释放任务。下面只是其中的几种情况：\n\n- **通用任务数据的传输** - 批处理( Batch ) 作业通常需要一组通用的数据作为作业任务的输入。例如，在每日风险分析计算中，市场数据特定于作业，同时也是作业中所有任务通用的数据。这些市场数据（大小通常为若干 GB）应该只下载到每个计算节点一次，以供节点上运行的每个任务使用。在执行其他任务之前使用*作业准备任务*将数据下载到每个节点。\n- **作业数据删除** - 在共享池环境中，池的计算节点不在作业之间取消保留，为了要节省节点上的磁盘空间或满足组织的安全政策，可能需要在运行之间删除作业数据。使用*作业释放任务*可以删除作业准备任务下载的数据或者在任务执行期间生成的数据。\n- **日志保留** - 你可能想要保留任务生成的日志，或失败应用程序所生成的崩溃转储文件。在这种情况下，使用*作业释放任务*可将这些数据压缩并上载到 [Azure 存储][azure_storage]帐户。\n\n## 作业准备任务\n\n在执行作业的任务之前，将在计划运行任务的每个计算节点上执行作业准备任务。默认情况下，Batch 服务将等待作业准备任务完成，然后才在节点上运行计划的任务，但你可以将该服务配置为不要等待。如果计算节点重新启动，作业准备任务将在该节点上再次运行，但你也可以禁用此行为。\n\n作业准备任务只会在计划运行任务的节点上运行。例如，这可以防止未分配任务的节点不必要地执行准备任务，从而节省数据传输费用。当作业的任务数小于池中的节点数，或者在任务计数小于可能的并行任务总数的情况下启用了[并行任务执行](/documentation/articles/batch-parallel-node-tasks)，从而留出一些空闲节点时，便可以实现上述目的。\n\n> [AZURE.NOTE] [JobPreparationTask][net\\_job\\_prep\\_cloudjob] 与 [CloudPool.StartTask][pool_starttask] 的不同之处在于，JobPreparationTask 在每个作业启动时执行，而 StartTask 只在计算节点首次加入池或重新启动时执行。\n\n## 作业释放任务\n\n作业完成后，作业释放任务将在池中至少运行了一个任务的每个节点上执行。可以通过发出终止请求将作业标记为已完成。然后，Batch 服务会将作业状态设置为*正在终止*，终止与任务关联的任何活动任务或正在运行的任务，并运行作业释放任务。然后，该作业将进入*已完成*状态。\n\n> [AZURE.NOTE]作业删除操作也会执行作业释放任务。但是，如果以前终止了某个作业，则以后删除该作业时，释放任务不会再次运行。\n\n## Batch .NET API 中的作业准备和释放任务\n\n若要指定作业准备任务，可以创建并配置 [JobPreparationTask][net_job_prep] 对象，然后将它分配到作业的 [CloudJob.JobPreparationTask][net_job_prep_cloudjob] 属性。同样，初始化 [JobReleaseTask][net_job_release] 并将它分配到作业的 [CloudJob.JobReleaseTask][net_job_prep_cloudjob] 属性可以设置作业的释放任务。\n\n在此代码段中，`myBatchClient` 是完全初始化的 [BatchClient][net_batch_client] 实例，`myPool` 是 Batch 帐户中的现有池。\n\n        // Create the CloudJob for CloudPool \"myPool\"\n        CloudJob myJob = myBatchClient.JobOperations.CreateJob(\"JobPrepReleaseSampleJob\",\n                                                               new PoolInformation() { PoolId = \"myPool\" });\n\n        // Specify the command lines for the job preparation and release tasks\n        string jobPrepCmdLine = \"cmd /c echo %AZ_BATCH_NODE_ID% > %AZ_BATCH_NODE_SHARED_DIR%\\\\shared_file.txt\";\n        string jobReleaseCmdLine = \"cmd /c del %AZ_BATCH_NODE_SHARED_DIR%\\\\shared_file.txt\";\n\n        // Assign the job preparation task to the job\n        myJob.JobPreparationTask = new JobPreparationTask { CommandLine = jobPrepCmdLine };\n\n        // Assign the job release task to the job\n        myJob.JobReleaseTask = new JobPreparationTask { CommandLine = jobReleaseCmdLine };\n\n        await myJob.CommitAsync();\n\n如上所述，终止或删除作业时会执行释放任务。可以通过调用 [PoolOperations.TerminateJobAsync][net_job_terminate] 使用 Batch .NET API 终止作业。可以使用 [PoolOperations.DeleteJobAsync][net_job_delete] 删除作业。这两项操作通常都是在作业的任务已完成或者达到了你定义的超时时完成。\n\n        // Terminate the job to mark it as Completed; this will initiate the Job Release Task on any node\n        // that executed job tasks. Note that the Job Release Task is also executed when a job is deleted,\n        // thus you need not call Terminate if you typically delete your jobs upon task completion.\n        await myBatchClient.JobOperations.TerminateJobAsync(\"JobPrepReleaseSampleJob\");\n\n## 后续步骤\n\n### GitHub 上的示例项目\n\n查看 GitHub 上的 [JobPrepRelease][job_prep_release_sample] 示例项目，了解作业准备和释放的操作实践。此控制台应用程序将执行以下操作：\n\n1. 创建包含两个“小”节点的池\n2. 创建具有作业准备、释放和标准任务的作业\n3. 运行作业准备任务，该任务首先会将节点 ID 写入节点的“共享”目录中的文本文件内\n4. 在每个节点上运行一个任务，该任务将其任务 ID 写入同一文本文件\n5. 完成所有任务（或达到超时）后，将每个节点的文本文件内容输出到控制台\n6. 完成作业后，运行作业释放任务以从节点中删除该文件\n6. 输出执行作业准备和释放任务的每个节点上的这些任务的退出代码\n7. 暂停执行，以便确认删除作业和/或池\n\n示例应用程序的输出类似于：\n\n```\nAttempting to create pool: JobPrepReleaseSamplePool\nThe pool already existed when we tried to create it\nChecking for existing job JobPrepReleaseSampleJob...\nJob JobPrepReleaseSampleJob not found, creating...\nSubmitting tasks and awaiting completion...\nAll tasks completed.\n\nContents of shared\\job_prep_and_release.txt on tvm-3105992504_1-20151015t150030z:\n-------------------------------------------\ntvm-3105992504_1-20151015t150030z tasks:\n  task001\n  task002\n  task006\n  task007\n\nContents of shared\\job_prep_and_release.txt on tvm-3105992504_2-20151015t150030z:\n-------------------------------------------\ntvm-3105992504_2-20151015t150030z tasks:\n  task003\n  task005\n  task004\n  task008\n\nWaiting for job JobPrepReleaseSampleJob to reach state Completed\n....\n\ntvm-3105992504_1-20151015t150030z:\n  Prep task exit code:    0\n  Release task exit code: 0\n\ntvm-3105992504_2-20151015t150030z:\n  Prep task exit code:    0\n  Release task exit code: 0\n\nDelete job? [yes] no\nyes\nDelete pool? [yes] no\nno\n\nSample complete, hit ENTER to exit...\n```\n\n### 使用 Batch 资源管理器检查作业准备和释放任务\n\n[批处理( Batch ) 资源管理器][batch_explorer_article]（在 GitHub 上的[示例代码存储库][batch_explorer_project]中也能找到）是在 Azure 批处理( Batch ) 中开发解决方案时可以使用的绝佳工具。例如，在运行上述示例应用程序时，你可以使用批处理( Batch ) 资源管理器查看作业及其任务的属性，甚至可以下载作业任务修改的共享文本文件。\n\n以下屏幕截图突出显示了当你在“作业”选项卡中选择 *JobPrepReleaseSampleJob* 作业时，“作业详细信息”窗格中显示的作业准备和释放任务属性。\n\n![批处理( Batch )资源管理器][1]\n\n*显示作业准备和释放任务的 Batch 资源管理器屏幕截图*\n\n[api_net]: http://msdn.microsoft.com/library/azure/mt348682.aspx\n[api_net_listjobs]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.joboperations.listjobs.aspx\n[api_rest]: http://msdn.microsoft.com/library/azure/dn820158.aspx\n[azure_storage]: https://azure.microsoft.com/services/storage/\n[batch_explorer_article]: http://blogs.technet.com/b/windowshpc/archive/2015/01/20/azure-batch-explorer-sample-walkthrough.aspx\n[batch_explorer_project]: https://github.com/Azure/azure-batch-samples/tree/master/CSharp/BatchExplorer\n[job_prep_release_sample]: https://github.com/Azure/azure-batch-samples/tree/master/CSharp/ArticleProjects/JobPrepRelease\n[net_batch_client]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.batchclient.aspx\n[net_cloudjob]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudjob.aspx\n[net_job_prep]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.jobpreparationtask.aspx\n[net_job_prep_cloudjob]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudjob.jobpreparationtask.aspx\n[net\\_job\\_prep\\_cloudjob]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudjob.jobpreparationtask.aspx\n[net_job_delete]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.joboperations.deletejobasync.aspx\n[net_job_terminate]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.joboperations.terminatejobasync.aspx\n[net_job_release]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.jobreleasetask.aspx\n[net_job_release_cloudjob]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudjob.jobreleasetask.aspx\n[pool_starttask]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudpool.starttask.aspx\n\n[net_list_certs]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.certificateoperations.listcertificates.aspx\n[net_list_compute_nodes]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.pooloperations.listcomputenodes.aspx\n[net_list_job_schedules]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.jobscheduleoperations.listjobschedules.aspx\n[net_list_jobprep_status]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.joboperations.listjobpreparationandreleasetaskstatus.aspx\n[net_list_jobs]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.joboperations.listjobs.aspx\n[net_list_nodefiles]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.joboperations.listnodefiles.aspx\n[net_list_pools]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.pooloperations.listpools.aspx\n[net_list_schedule_jobs]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.jobscheduleoperations.listjobs.aspx\n[net_list_task_files]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask.listnodefiles.aspx\n[net_list_tasks]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.joboperations.listtasks.aspx\n\n[1]: ./media/batch-job-prep-release/batchexplorer-01.png\n[2]: ./media/batch-job-prep-release/batchexplorer-02.png\n\n<!---HONumber=Mooncake_0215_2016-->"
}