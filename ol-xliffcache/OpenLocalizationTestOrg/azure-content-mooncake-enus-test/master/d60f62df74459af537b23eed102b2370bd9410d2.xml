{
  "nodes": [
    {
      "content": "SQL 数据仓库中的存储过程 | Azure",
      "pos": [
        26,
        48
      ]
    },
    {
      "content": "有关在开发解决方案时实现 Azure SQL 数据仓库中的存储过程的技巧。",
      "pos": [
        66,
        103
      ]
    },
    {
      "content": "SQL 数据仓库中的存储过程",
      "pos": [
        327,
        341
      ]
    },
    {
      "content": "SQL 数据仓库支持 SQL Server 中提供的许多 Transact-SQL 功能。更重要的是，我们可以利用特定的扩大功能将解决方案的性能最大化。",
      "pos": [
        344,
        420
      ]
    },
    {
      "content": "但是，为了保持 SQL 数据仓库的缩放性和性能，还有一些具有行为差异的功能以及其他不支持的功能。",
      "pos": [
        422,
        470
      ]
    },
    {
      "content": "本文介绍如何实现 SQL 数据仓库中的存储过程。",
      "pos": [
        472,
        496
      ]
    },
    {
      "content": "存储过程简介",
      "pos": [
        501,
        507
      ]
    },
    {
      "content": "存储过程很适合用于封装 SQL 代码；将它存储在数据仓库中数据附近。通过将代码封装成可管理的单位，存储过程帮助开发人员将其解决方案模块化；促使代码有更大的可重复使用性。每个存储过程还可接受参数，使其更具弹性。",
      "pos": [
        508,
        612
      ]
    },
    {
      "content": "SQL 数据仓库提供简化且流畅的存储过程实现。相比于 SQL Server，最大差异是存储过程不是预先编译的代码。在数据仓库中，我们通常不很在乎编译时间。比较重要的是在对大型数据卷操作时，正确优化存储过程代码。目标是要节省时数、分钟数和秒数，而不是毫秒数。因此，将存储过程视为 SQL 逻辑的容器更有帮助。",
      "pos": [
        614,
        767
      ]
    },
    {
      "content": "当 SQL 数据仓库执行存储过程时，SQL 语句在运行时进行解析、转换和优化。在此过程中，每个语句都转换为分布式查询。实际针对数据执行的 SQL 代码与提交的查询不同。",
      "pos": [
        770,
        854
      ]
    },
    {
      "content": "嵌套存储过程",
      "pos": [
        859,
        865
      ]
    },
    {
      "content": "如果存储过程调用其他存储过程或执行动态 sql，则将内部存储过程或代码调用视为嵌套。",
      "pos": [
        866,
        908
      ]
    },
    {
      "content": "SQL 数据仓库最多支持 8 个嵌套级别。这与 SQL Server 稍有不同。SQL Server 中的嵌套级别为 32。",
      "pos": [
        910,
        972
      ]
    },
    {
      "content": "最上层存储过程调用等同于嵌套级别 1",
      "pos": [
        974,
        992
      ]
    },
    {
      "content": "如果存储过程还进行另一个 EXEC 调用，将使嵌套级别提升为 2 ```",
      "pos": [
        1020,
        1056
      ]
    },
    {
      "content": "如果第二个程序接着执行某个动态 sql，将使嵌套级别提升为 3 ```",
      "pos": [
        1166,
        1201
      ]
    },
    {
      "content": "请注意，SQL 数据仓库当前不支持 @@NESTLEVEL。你需要自行跟踪自己的嵌套级别。不太可能达到 8 个嵌套级别的限制，但如果达到，则你需要重新处理代码并将其“平整化”，使其符合此限制。",
      "pos": [
        1343,
        1439
      ]
    },
    {
      "content": "INSERT..EXECUTE",
      "pos": [
        1444,
        1459
      ]
    },
    {
      "content": "SQL 数据仓库不允许通过 INSERT 语句使用存储过程的结果集。但是，你可以使用替代方法。",
      "pos": [
        1460,
        1507
      ]
    },
    {
      "pos": [
        1509,
        1534
      ],
      "content": "有关此方法的示例，请参阅以下有关<bpt id=\"p1\">[</bpt><ept id=\"p1\">临时表]</ept>的文章。"
    },
    {
      "content": "限制",
      "pos": [
        1539,
        1541
      ]
    },
    {
      "content": "SQL 数据仓库中未实现 Transact-SQL 存储过程的某些方面。",
      "pos": [
        1543,
        1579
      ]
    },
    {
      "content": "它们具有以下特点：",
      "pos": [
        1581,
        1590
      ]
    },
    {
      "content": "临时存储过程",
      "pos": [
        1594,
        1600
      ]
    },
    {
      "content": "编号的存储过程",
      "pos": [
        1603,
        1610
      ]
    },
    {
      "content": "扩展的存储过程",
      "pos": [
        1613,
        1620
      ]
    },
    {
      "content": "CLR 存储过程",
      "pos": [
        1623,
        1631
      ]
    },
    {
      "content": "加密选项",
      "pos": [
        1634,
        1638
      ]
    },
    {
      "content": "复制选项",
      "pos": [
        1641,
        1645
      ]
    },
    {
      "content": "表值参数",
      "pos": [
        1648,
        1652
      ]
    },
    {
      "content": "只读参数",
      "pos": [
        1655,
        1659
      ]
    },
    {
      "content": "默认参数",
      "pos": [
        1662,
        1666
      ]
    },
    {
      "content": "执行上下文",
      "pos": [
        1669,
        1674
      ]
    },
    {
      "content": "return 语句",
      "pos": [
        1677,
        1686
      ]
    },
    {
      "content": "后续步骤",
      "pos": [
        1691,
        1695
      ]
    },
    {
      "pos": [
        1696,
        1717
      ],
      "content": "有关更多开发技巧，请参阅<bpt id=\"p1\">[</bpt>开发概述<ept id=\"p1\">][]</ept>。"
    }
  ],
  "content": "<properties\n   pageTitle=\"SQL 数据仓库中的存储过程 | Azure\"\n   description=\"有关在开发解决方案时实现 Azure SQL 数据仓库中的存储过程的技巧。\"\n   services=\"sql-data-warehouse\"\n   documentationCenter=\"NA\"\n   authors=\"jrowlandjones\"\n   manager=\"barbkess\"\n   editor=\"\"/>\n\n<tags\n   ms.service=\"sql-data-warehouse\"\n   ms.date=\"09/22/2015\"\n   wacn.date=\"01/20/2016\"/>\n\n# SQL 数据仓库中的存储过程 \n\nSQL 数据仓库支持 SQL Server 中提供的许多 Transact-SQL 功能。更重要的是，我们可以利用特定的扩大功能将解决方案的性能最大化。\n\n但是，为了保持 SQL 数据仓库的缩放性和性能，还有一些具有行为差异的功能以及其他不支持的功能。\n\n本文介绍如何实现 SQL 数据仓库中的存储过程。\n\n## 存储过程简介\n存储过程很适合用于封装 SQL 代码；将它存储在数据仓库中数据附近。通过将代码封装成可管理的单位，存储过程帮助开发人员将其解决方案模块化；促使代码有更大的可重复使用性。每个存储过程还可接受参数，使其更具弹性。\n\nSQL 数据仓库提供简化且流畅的存储过程实现。相比于 SQL Server，最大差异是存储过程不是预先编译的代码。在数据仓库中，我们通常不很在乎编译时间。比较重要的是在对大型数据卷操作时，正确优化存储过程代码。目标是要节省时数、分钟数和秒数，而不是毫秒数。因此，将存储过程视为 SQL 逻辑的容器更有帮助。\n \n当 SQL 数据仓库执行存储过程时，SQL 语句在运行时进行解析、转换和优化。在此过程中，每个语句都转换为分布式查询。实际针对数据执行的 SQL 代码与提交的查询不同。\n\n## 嵌套存储过程\n如果存储过程调用其他存储过程或执行动态 sql，则将内部存储过程或代码调用视为嵌套。\n\nSQL 数据仓库最多支持 8 个嵌套级别。这与 SQL Server 稍有不同。SQL Server 中的嵌套级别为 32。\n\n最上层存储过程调用等同于嵌套级别 1\n\n```\nEXEC prc_nesting\n``` \n如果存储过程还进行另一个 EXEC 调用，将使嵌套级别提升为 2 ```\n```\nCREATE PROCEDURE prc_nesting\nAS\nEXEC prc_nesting_2  -- This call is nest level 2\nGO\nEXEC prc_nesting\n```\n如果第二个程序接着执行某个动态 sql，将使嵌套级别提升为 3 ```\n```\nCREATE PROCEDURE prc_nesting_2\nAS\nEXEC sp_executesql 'SELECT 'another nest level'  -- This call is nest level 2\nGO\nEXEC prc_nesting\n```\n\n请注意，SQL 数据仓库当前不支持 @@NESTLEVEL。你需要自行跟踪自己的嵌套级别。不太可能达到 8 个嵌套级别的限制，但如果达到，则你需要重新处理代码并将其“平整化”，使其符合此限制。\n\n## INSERT..EXECUTE\nSQL 数据仓库不允许通过 INSERT 语句使用存储过程的结果集。但是，你可以使用替代方法。\n\n有关此方法的示例，请参阅以下有关[临时表]的文章。\n\n## 限制\n\nSQL 数据仓库中未实现 Transact-SQL 存储过程的某些方面。\n\n它们具有以下特点：\n\n- 临时存储过程\n- 编号的存储过程\n- 扩展的存储过程\n- CLR 存储过程\n- 加密选项\n- 复制选项\n- 表值参数\n- 只读参数\n- 默认参数\n- 执行上下文\n- return 语句\n\n## 后续步骤\n有关更多开发技巧，请参阅[开发概述][]。\n\n<!--Image references-->\n\n<!--Article references-->\n[临时表]: /documentation/articles/sql-data-warehouse-develop-temporary-tables\n[开发概述]: /documentation/articles/sql-data-warehouse-overview-develop\n\n<!--MSDN references-->\n[nest level]: https://msdn.microsoft.com/zh-cn/library/ms187371.aspx\n\n<!--Other Web references-->\n\n<!---HONumber=Mooncake_1207_2015-->\n"
}