<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">192eb408fbb02509797aca070e69ba6d624b3fc0</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>在 Windows 上配合使用 Java 和 JDBC 连接到 SQL 数据库</source>
          <target state="new">在 Windows 上配合使用 Java 和 JDBC 连接到 SQL 数据库</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>演示了一个可以用来连接到 Azure SQL 数据库的 Java 代码示例。该示例使用 JDBC，并在 Windows 客户端计算机上运行。</source>
          <target state="new">演示了一个可以用来连接到 Azure SQL 数据库的 Java 代码示例。该示例使用 JDBC，并在 Windows 客户端计算机上运行。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>在 Windows 上配合使用 Java 和 JDBC 连接到 SQL 数据库</source>
          <target state="new">在 Windows 上配合使用 Java 和 JDBC 连接到 SQL 数据库</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>[AZURE.SELECTOR]</source>
          <target state="new">[AZURE.SELECTOR]</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="new">C</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>PHP</source>
          <target state="new">PHP</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="new">Python</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Ruby</source>
          <target state="new">Ruby</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Java</source>
          <target state="new">Java</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Node.js</source>
          <target state="new">Node.js</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>本主题演示了一个可以用来连接到 Azure SQL 数据库的 Java 代码示例。该 Java 示例依赖于 Java 开发工具包 (JDK) 版本 1.8。该示例将使用 JDBC 驱动程序连接到 Azure SQL 数据库。</source>
          <target state="new">本主题演示了一个可以用来连接到 Azure SQL 数据库的 Java 代码示例。该 Java 示例依赖于 Java 开发工具包 (JDK) 版本 1.8。该示例将使用 JDBC 驱动程序连接到 Azure SQL 数据库。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>先决条件</source>
          <target state="new">先决条件</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>驱动程序和库</source>
          <target state="new">驱动程序和库</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft JDBC Driver for SQL Server - SQL JDBC 4<ept id="p1">](http://www.microsoft.com/zh-cn/download/details.aspx?displaylang=en&amp;id=11774)</ept>。</source>
          <target state="new"><bpt id="p1">[</bpt>Microsoft JDBC Driver for SQL Server - SQL JDBC 4<ept id="p1">](http://www.microsoft.com/zh-cn/download/details.aspx?displaylang=en&amp;id=11774)</ept>。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>运行 <bpt id="p1">[</bpt>Java 开发工具包 1.8<ept id="p1">](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)</ept> 的任何操作系统平台。</source>
          <target state="new">运行 <bpt id="p1">[</bpt>Java 开发工具包 1.8<ept id="p1">](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)</ept> 的任何操作系统平台。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>SQL 数据库</source>
          <target state="new">SQL 数据库</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>请参阅<bpt id="p1">[</bpt>入门页<ept id="p1">](/documentation/articles/sql-database-get-started)</ept>，以了解如何创建数据库。</source>
          <target state="new">请参阅<bpt id="p1">[</bpt>入门页<ept id="p1">](/documentation/articles/sql-database-get-started)</ept>，以了解如何创建数据库。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>SQL 表</source>
          <target state="new">SQL 表</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>本主题中的 Java 代码示例假设 Azure SQL 数据库数据库中已存在以下测试表。</source>
          <target state="new">本主题中的 Java 代码示例假设 Azure SQL 数据库数据库中已存在以下测试表。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>步骤 1：获取连接字符串</source>
          <target state="new">步骤 1：获取连接字符串</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>如果你使用的是 JTDS JDBC 驱动程序，则需要将“ssl=require”添加到连接字符串的 URL，并需要设置以下 JVM 选项：“-Djsse.enableCBCProtection=false”。此 JVM 选项会禁用针对某个安全漏洞的修复程序，因此在设置此选项之前，请确保你了解涉及哪些风险。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>如果你使用的是 JTDS JDBC 驱动程序，则需要将“ssl=require”添加到连接字符串的 URL，并需要设置以下 JVM 选项：“-Djsse.enableCBCProtection=false”。此 JVM 选项会禁用针对某个安全漏洞的修复程序，因此在设置此选项之前，请确保你了解涉及哪些风险。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>步骤 2：编译 Java 代码示例</source>
          <target state="new">步骤 2：编译 Java 代码示例</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>本部分包含 Java 代码示例的主干。代码中包含注释，指出你可以在何处复制并粘贴后续部分中提供的较小 Java 段。即使不在注释附近复制并粘贴代码段，本部分中的示例也可以编译和运行，不过，它只会连接，然后结束。你会看到的注释如下：</source>
          <target state="new">本部分包含 Java 代码示例的主干。代码中包含注释，指出你可以在何处复制并粘贴后续部分中提供的较小 Java 段。即使不在注释附近复制并粘贴代码段，本部分中的示例也可以编译和运行，不过，它只会连接，然后结束。你会看到的注释如下：</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>下面是 Java 代码示例的主干。该示例包含 <ph id="ph1">`SQLDatabaseTest`</ph> 类的 <ph id="ph2">`main`</ph> 函数。</source>
          <target state="new">下面是 Java 代码示例的主干。该示例包含 <ph id="ph1">`SQLDatabaseTest`</ph> 类的 <ph id="ph2">`main`</ph> 函数。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>当然，若要实际运行上面的 Java 代码示例，你必须将实际值填入连接字符串以替换占位符：</source>
          <target state="new">当然，若要实际运行上面的 Java 代码示例，你必须将实际值填入连接字符串以替换占位符：</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>你的服务器</source>
          <target state="new">你的服务器</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>你的数据库</source>
          <target state="new">你的数据库</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>你的用户</source>
          <target state="new">你的用户</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>你的密码</source>
          <target state="new">你的密码</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>步骤 3：插入行</source>
          <target state="new">步骤 3：插入行</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>此 Java 段将发出 Transact-SQL INSERT 语句，以在 Person 表中插入两行。一般顺序如下：</source>
          <target state="new">此 Java 段将发出 Transact-SQL INSERT 语句，以在 Person 表中插入两行。一般顺序如下：</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>使用 <ph id="ph1">`Connection`</ph> 对象生成 <ph id="ph2">`PreparedStatement`</ph> 对象。</source>
          <target state="new">使用 <ph id="ph1">`Connection`</ph> 对象生成 <ph id="ph2">`PreparedStatement`</ph> 对象。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>我们包含了参数 <ph id="ph1">`Statement.RETURN_GENERATED_KEYS`</ph>，以便稍后可以获取自动为 <bpt id="p1">**</bpt>id<ept id="p1">**</ept> 键值生成的值。</source>
          <target state="new">我们包含了参数 <ph id="ph1">`Statement.RETURN_GENERATED_KEYS`</ph>，以便稍后可以获取自动为 <bpt id="p1">**</bpt>id<ept id="p1">**</ept> 键值生成的值。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>对 <ph id="ph1">`PreparedStatement`</ph> 对象调用 <ph id="ph2">`execute`</ph> 方法。</source>
          <target state="new">对 <ph id="ph1">`PreparedStatement`</ph> 对象调用 <ph id="ph2">`execute`</ph> 方法。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>使用 <ph id="ph1">`PreparedStatement`</ph> 对象获取自动为主键生成的数字值。</source>
          <target state="new">使用 <ph id="ph1">`PreparedStatement`</ph> 对象获取自动为主键生成的数字值。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>此值与 Person 表中 <bpt id="p1">**</bpt>id<ept id="p1">**</ept> 列上的 AUTO\_INCREMENT 规范相关</source>
          <target state="new">此值与 Person 表中 <bpt id="p1">**</bpt>id<ept id="p1">**</ept> 列上的 AUTO\_INCREMENT 规范相关</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>将此简短 Java 段复制并粘贴到主代码示例中注释 <ph id="ph1">`// INSERT two rows into the table.`</ph> 所在的位置。</source>
          <target state="new">将此简短 Java 段复制并粘贴到主代码示例中注释 <ph id="ph1">`// INSERT two rows into the table.`</ph> 所在的位置。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>步骤 4：提交事务</source>
          <target state="new">步骤 4：提交事务</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>以下 Java 代码段将发出 Transact-SQL UPDATE 语句，以增大 Person 表中每行的 <ph id="ph1">`age`</ph> 值。一般顺序如下：</source>
          <target state="new">以下 Java 代码段将发出 Transact-SQL UPDATE 语句，以增大 Person 表中每行的 <ph id="ph1">`age`</ph> 值。一般顺序如下：</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>调用 <ph id="ph1">`setAutoCommit`</ph> 方法，以防止在数据库中自动提交更新。</source>
          <target state="new">调用 <ph id="ph1">`setAutoCommit`</ph> 方法，以防止在数据库中自动提交更新。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>调用 <ph id="ph1">`executeUpdate`</ph> 方法以在事务上下文中执行 UPDATE。</source>
          <target state="new">调用 <ph id="ph1">`executeUpdate`</ph> 方法以在事务上下文中执行 UPDATE。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>调用 <ph id="ph1">`commit`</ph> 方法以显式提交事务。</source>
          <target state="new">调用 <ph id="ph1">`commit`</ph> 方法以显式提交事务。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>将此简短 Java 段复制并粘贴到主代码示例中注释 <ph id="ph1">`// TRANSACTION and commit for an UPDATE.`</ph> 所在的位置。</source>
          <target state="new">将此简短 Java 段复制并粘贴到主代码示例中注释 <ph id="ph1">`// TRANSACTION and commit for an UPDATE.`</ph> 所在的位置。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>步骤 4：执行查询</source>
          <target state="new">步骤 4：执行查询</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>此 Java 段执行 Transact-SQL SELECT 语句，以查看 Person 表中所有已更新的行。一般顺序如下：</source>
          <target state="new">此 Java 段执行 Transact-SQL SELECT 语句，以查看 Person 表中所有已更新的行。一般顺序如下：</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>使用 <ph id="ph1">`Connection`</ph> 对象生成 <ph id="ph2">`Statement`</ph> 对象。</source>
          <target state="new">使用 <ph id="ph1">`Connection`</ph> 对象生成 <ph id="ph2">`Statement`</ph> 对象。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>使用 <ph id="ph1">`Statement`</ph> 对象生成 <ph id="ph2">`ResultSet`</ph> 对象。</source>
          <target state="new">使用 <ph id="ph1">`Statement`</ph> 对象生成 <ph id="ph2">`ResultSet`</ph> 对象。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>循环调用 <ph id="ph1">`resultSet.next`</ph> 以循环访问所有返回的行。</source>
          <target state="new">循环调用 <ph id="ph1">`resultSet.next`</ph> 以循环访问所有返回的行。</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>将此简短 Java 段复制并粘贴到主代码示例中注释 <ph id="ph1">`// SELECT rows from a table.`</ph> 所在的位置。</source>
          <target state="new">将此简短 Java 段复制并粘贴到主代码示例中注释 <ph id="ph1">`// SELECT rows from a table.`</ph> 所在的位置。</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>有关详细信息，请参阅 <bpt id="p1">[</bpt>Java 开发人员中心<ept id="p1">](/develop/java)</ept>。</source>
          <target state="new">有关详细信息，请参阅 <bpt id="p1">[</bpt>Java 开发人员中心<ept id="p1">](/develop/java)</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>