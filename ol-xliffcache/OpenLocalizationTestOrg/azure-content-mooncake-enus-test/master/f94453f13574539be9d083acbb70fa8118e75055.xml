{
  "nodes": [
    {
      "content": "适用于 Open Source Media Framework 的平滑流式处理插件",
      "pos": [
        28,
        69
      ]
    },
    {
      "content": "了解如何使用适用于 Adobe Open Source Media Framework 的 Azure 媒体服务平滑流式处理插件。",
      "pos": [
        89,
        154
      ]
    },
    {
      "content": "如何使用适用于 Adobe Open Source Media Framework 的 Microsoft 平滑流式处理插件",
      "pos": [
        375,
        437
      ]
    },
    {
      "content": "概述",
      "pos": [
        443,
        445
      ]
    },
    {
      "content": "适用于 Open Source Media Framework 2.0 的 Microsoft 平滑流式处理插件 (SS for OSMF) 扩展了 OSMF 的默认功能，并在新的和现有的 OSMF 播放器中添加了 Microsoft 平滑流式处理内容播放功能。该插件还为 Strobe Media Playback (SMP) 添加了平滑流式处理播放功能。",
      "pos": [
        451,
        630
      ]
    },
    {
      "content": "SS for OSMF 包括两个版本的插件：",
      "pos": [
        632,
        654
      ]
    },
    {
      "content": "适用于 OSMF 的静态平滑流式处理插件 (.swc)",
      "pos": [
        658,
        685
      ]
    },
    {
      "content": "适用于 OSMF 的动态平滑流式处理插件 (.swf)",
      "pos": [
        689,
        716
      ]
    },
    {
      "pos": [
        718,
        809
      ],
      "content": "本文档假设读者具有 OSMF 和 OSMF 插件方面的一般实践知识。有关 OSMF 的详细信息，请参阅 <bpt id=\"p1\">[</bpt>OSMF 官方 Web 应用<ept id=\"p1\">](http://osmf.org/)</ept>上的文档。"
    },
    {
      "content": "适用于 OSMF 2.0 的平滑流式处理插件",
      "pos": [
        814,
        836
      ]
    },
    {
      "content": "该插件支持通过以下功能加载和播放按需平滑流式处理内容：",
      "pos": [
        838,
        865
      ]
    },
    {
      "content": "按需平滑流式处理播放（播放、暂停、定位、停止）",
      "pos": [
        869,
        892
      ]
    },
    {
      "content": "实时平滑流式处理播放（播放）",
      "pos": [
        895,
        909
      ]
    },
    {
      "content": "实时 DVR 功能（暂停、定位、DVR 播放、现场直播）",
      "pos": [
        912,
        940
      ]
    },
    {
      "content": "支持视频编解码器 - H.264",
      "pos": [
        943,
        959
      ]
    },
    {
      "content": "支持音频编解码器 - AAC",
      "pos": [
        962,
        976
      ]
    },
    {
      "content": "通过 OSMF 内置 API 切换多种音频语言",
      "pos": [
        979,
        1002
      ]
    },
    {
      "content": "通过 OSMF 内置 API 选择最佳播放质量",
      "pos": [
        1005,
        1028
      ]
    },
    {
      "content": "通过 OSMF 字幕插件实现 Sidecar 隐藏字幕",
      "pos": [
        1031,
        1058
      ]
    },
    {
      "content": "Adobe&amp;reg; Flash&amp;reg; Player 11.4 或更高版本。",
      "pos": [
        1061,
        1101
      ]
    },
    {
      "content": "此版本仅支持 OSMF 2.0。",
      "pos": [
        1104,
        1120
      ]
    },
    {
      "content": "支持的功能和已知问题",
      "pos": [
        1125,
        1135
      ]
    },
    {
      "pos": [
        1137,
        1291
      ],
      "content": "有关支持的功能、不支持的功能和已知问题的完整列表，请参阅<bpt id=\"p1\">[</bpt>本文档<ept id=\"p1\">](http://download.microsoft.com/download/3/1/B/31B63D97-574E-4A8D-BF8D-170744181724/Smooth_Streaming_Plugin_for_OSMF.pdf)</ept>。"
    },
    {
      "content": "加载插件",
      "pos": [
        1297,
        1301
      ]
    },
    {
      "content": "可静态（在编译时）或动态（在运行时）加载 OSMF 插件。适用于 OSMF 的平滑流式处理插件的下载内容包括动态和静态版本。",
      "pos": [
        1302,
        1364
      ]
    },
    {
      "content": "静态加载：若要以静态方式加载，必须有一个静态库 (SWC) 文件。静态插件将添加为对项目的引用，并在编译时合并到最终输出文件中。",
      "pos": [
        1368,
        1432
      ]
    },
    {
      "content": "动态加载：若要以动态方式加载，必须有一个预编译的 (SWF) 文件。动态插件在运行时中加载，不包含在项目输出中。（编译的输出）可以使用 HTTP 和 FILE 协议加载动态插件。",
      "pos": [
        1436,
        1525
      ]
    },
    {
      "pos": [
        1527,
        1622
      ],
      "content": "有关静态和动态加载的详细信息，请参阅官方的 <bpt id=\"p1\">[</bpt>OSMF 插件页<ept id=\"p1\">](http://osmf.org/dev/osmf/OtherPDFs/osmf_plugin_dev_guide.pdf)</ept>。"
    },
    {
      "content": "SS for OSMF 静态加载",
      "pos": [
        1627,
        1643
      ]
    },
    {
      "content": "以下代码段演示如何静态加载 SS for OSMF 插件以及如何使用 OSMF MediaFactory 类播放基本视频。在包含 SS for OSMF 代码之前，请确保项目引用包含“MSAdaptiveStreamingPlugin-v1.0.3-osmf2.0.swc”静态插件。",
      "pos": [
        1644,
        1786
      ]
    },
    {
      "content": "SS for OSMF 动态加载",
      "pos": [
        6384,
        6400
      ]
    },
    {
      "content": "以下代码段演示如何动态加载 SS for OSMF 插件以及如何使用 OSMF MediaFactory 类播放基本视频。在包含 SS for OSMF 代码之前，如果要使用 FILE 协议进行加载，请将“MSAdaptiveStreamingPlugin-v1.0.3-osmf2.0.swf”动态插件复制到项目文件夹；如果要进行 HTTP 加载，请将该插件复制到 Web 服务器下。不需要在项目引用中包含“MSAdaptiveStreamingPlugin-v1.0.3-osmf2.0.swc”。",
      "pos": [
        6402,
        6653
      ]
    },
    {
      "content": "Strobe Media Playback 与 SS OSMF 动态插件",
      "pos": [
        11337,
        11373
      ]
    },
    {
      "content": "适用于 OSMF 的平滑流式处理动态插件与 <bpt id=\"p1\">[</bpt>Strobe Media Playback (SMP)<ept id=\"p1\">](http://osmf.org/strobe_mediaplayback.html)</ept> 兼容。你可以使用 SS for OSMF 插件向 SMP 添加平滑流式处理内容播放功能。为此，请在进行 HTTP 加载时，使用以下步骤将“MSAdaptiveStreamingPlugin-v1.0.3-osmf2.0.swf”复制到 Web 服务器下：",
      "pos": [
        11374,
        11596
      ]
    },
    {
      "pos": [
        11602,
        11671
      ],
      "content": "浏览 <bpt id=\"p1\">[</bpt>Strobe Media Playback 设置页<ept id=\"p1\">](http://osmf.org/dev/2.0gm/setup.html)</ept>。"
    },
    {
      "content": "将 src 设置为平滑流式处理源（例如 http://devplatem.vo.msecnd.net/Sintel/Sintel_H264.ism/manifest）",
      "pos": [
        11677,
        11760
      ]
    },
    {
      "content": "进行所需的配置更改，然后单击“Preview and Update”（预览并更新）。",
      "pos": [
        11766,
        11808
      ]
    },
    {
      "pos": [
        11815,
        11856
      ],
      "content": "<bpt id=\"p1\">**</bpt>注意<ept id=\"p1\">**</ept> 你的内容 Web 服务器需要有效的 crossdomain.xml。"
    },
    {
      "content": "使用常用的文本编辑器将该代码复制并粘贴到一个简单的 HTML 页，如以下示例所示：",
      "pos": [
        11862,
        11903
      ]
    },
    {
      "content": "将平滑流式处理 OSMF 插件添加到 embed 代码中，然后保存。",
      "pos": [
        12839,
        12873
      ]
    },
    {
      "content": "保存 HTML 页，然后发布到 Web 服务器。使用你最常用的、已启用 Flash&amp;reg; Player 的 Internet 浏览器（Internet Explorer、Chrome、Firefox 等）浏览到已发布的网页。",
      "pos": [
        14122,
        14236
      ]
    },
    {
      "content": "在 Adobe&amp;reg; Flash&amp;reg; Player 中欣赏平滑流式处理内容。",
      "pos": [
        14241,
        14284
      ]
    },
    {
      "pos": [
        14286,
        14355
      ],
      "content": "有关一般性 OSMF 开发的详细信息，请参阅官方的 <bpt id=\"p1\">[</bpt>OSMF 开发页<ept id=\"p1\">](http://osmf.org/resources.html)</ept>。"
    },
    {
      "content": "另请参阅",
      "pos": [
        14361,
        14365
      ]
    },
    {
      "content": "适用于 OSMF 的 Microsoft 自适应流式处理插件更新",
      "pos": [
        14368,
        14400
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"适用于 Open Source Media Framework 的平滑流式处理插件\" \n    description=\"了解如何使用适用于 Adobe Open Source Media Framework 的 Azure 媒体服务平滑流式处理插件。\" \n    services=\"media-services\" \n    documentationCenter=\"\" \n    authors=\"juliako\" \n    manager=\"dwrede\" \n    editor=\"\"/>\n\n<tags\n    ms.service=\"media-services\"\n    ms.date=\"09/28/2015\"\n    wacn.date=\"01/21/2016\"/>\n\n\n\n# 如何使用适用于 Adobe Open Source Media Framework 的 Microsoft 平滑流式处理插件 #\n\n##概述 ##\n\n\n适用于 Open Source Media Framework 2.0 的 Microsoft 平滑流式处理插件 (SS for OSMF) 扩展了 OSMF 的默认功能，并在新的和现有的 OSMF 播放器中添加了 Microsoft 平滑流式处理内容播放功能。该插件还为 Strobe Media Playback (SMP) 添加了平滑流式处理播放功能。\n\nSS for OSMF 包括两个版本的插件：\n\n- 适用于 OSMF 的静态平滑流式处理插件 (.swc)\n\n- 适用于 OSMF 的动态平滑流式处理插件 (.swf)\n\n本文档假设读者具有 OSMF 和 OSMF 插件方面的一般实践知识。有关 OSMF 的详细信息，请参阅 [OSMF 官方 Web 应用](http://osmf.org/)上的文档。\n\n###适用于 OSMF 2.0 的平滑流式处理插件\n\n该插件支持通过以下功能加载和播放按需平滑流式处理内容：\n\n- 按需平滑流式处理播放（播放、暂停、定位、停止）\n- 实时平滑流式处理播放（播放）\n- 实时 DVR 功能（暂停、定位、DVR 播放、现场直播）\n- 支持视频编解码器 - H.264\n- 支持音频编解码器 - AAC\n- 通过 OSMF 内置 API 切换多种音频语言\n- 通过 OSMF 内置 API 选择最佳播放质量\n- 通过 OSMF 字幕插件实现 Sidecar 隐藏字幕\n- Adobe&reg; Flash&reg; Player 11.4 或更高版本。\n- 此版本仅支持 OSMF 2.0。\n\n## 支持的功能和已知问题\n\n有关支持的功能、不支持的功能和已知问题的完整列表，请参阅[本文档](http://download.microsoft.com/download/3/1/B/31B63D97-574E-4A8D-BF8D-170744181724/Smooth_Streaming_Plugin_for_OSMF.pdf)。\n\n\n## 加载插件\n可静态（在编译时）或动态（在运行时）加载 OSMF 插件。适用于 OSMF 的平滑流式处理插件的下载内容包括动态和静态版本。\n\n- 静态加载：若要以静态方式加载，必须有一个静态库 (SWC) 文件。静态插件将添加为对项目的引用，并在编译时合并到最终输出文件中。\n\n- 动态加载：若要以动态方式加载，必须有一个预编译的 (SWF) 文件。动态插件在运行时中加载，不包含在项目输出中。（编译的输出）可以使用 HTTP 和 FILE 协议加载动态插件。\n\n有关静态和动态加载的详细信息，请参阅官方的 [OSMF 插件页](http://osmf.org/dev/osmf/OtherPDFs/osmf_plugin_dev_guide.pdf)。\n\n###SS for OSMF 静态加载\n以下代码段演示如何静态加载 SS for OSMF 插件以及如何使用 OSMF MediaFactory 类播放基本视频。在包含 SS for OSMF 代码之前，请确保项目引用包含“MSAdaptiveStreamingPlugin-v1.0.3-osmf2.0.swc”静态插件。\n\n```\npackage \n{\n    \n    import com.microsoft.azure.media.AdaptiveStreamingPluginInfo;\n    \n    import flash.display.*;\n    import org.osmf.media.*;\n    import org.osmf.containers.MediaContainer;\n    import org.osmf.events.MediaErrorEvent;\n    import org.osmf.events.MediaFactoryEvent;\n    import org.osmf.events.MediaPlayerStateChangeEvent;\n    import org.osmf.layout.*;\n    \n    \n    \n    [SWF(width=\"1024\", height=\"768\", backgroundColor='#405050', frameRate=\"25\")]\n    public class TestPlayer extends Sprite\n    {        \n        public var _container:MediaContainer;\n        public var _mediaFactory:DefaultMediaFactory;\n        private var _mediaPlayerSprite:MediaPlayerSprite;\n        \n\n        public function TestPlayer( )\n        {\n            stage.quality = StageQuality.HIGH;\n\n            initMediaPlayer();\n\n        }\n    \n        private function initMediaPlayer():void\n        {\n        \n            // Create the container (sprite) for managing display and layout\n            _mediaPlayerSprite = new MediaPlayerSprite();    \n            _mediaPlayerSprite.addEventListener(MediaErrorEvent.MEDIA_ERROR, onPlayerFailed);\n            _mediaPlayerSprite.addEventListener(MediaPlayerStateChangeEvent.MEDIA_PLAYER_STATE_CHANGE, onPlayerStateChange);\n            _mediaPlayerSprite.scaleMode = ScaleMode.NONE;\n            _mediaPlayerSprite.width = stage.stageWidth;\n            _mediaPlayerSprite.height = stage.stageHeight;\n            //Adds the container to the stage\n            addChild(_mediaPlayerSprite);\n            \n            // Create a mediafactory instance\n            _mediaFactory = new DefaultMediaFactory();\n            \n            // Add the listeners for PLUGIN_LOADING\n            _mediaFactory.addEventListener(MediaFactoryEvent.PLUGIN_LOAD,onPluginLoaded);\n            _mediaFactory.addEventListener(MediaFactoryEvent.PLUGIN_LOAD_ERROR, onPluginLoadFailed );\n            \n            // Load the plugin class \n            loadAdaptiveStreamingPlugin( );  \n            \n        }\n        \n        private function loadAdaptiveStreamingPlugin( ):void\n        {\n            var pluginResource:MediaResourceBase;\n            \n            pluginResource = new PluginInfoResource(new AdaptiveStreamingPluginInfo( )); \n            _mediaFactory.loadPlugin( pluginResource ); \n        }\n        \n        private function onPluginLoaded( event:MediaFactoryEvent ):void\n        {\n            // The plugin is loaded successfully.\n            // Your web server needs to host a valid crossdomain.xml file to allow plugin to download Smooth Streaming files.\n        loadMediaSource(\"http://devplatem.vo.msecnd.net/Sintel/Sintel_H264.ism/manifest\")\n        \n        }\n        \n        private function onPluginLoadFailed( event:MediaFactoryEvent ):void\n        {\n            // The plugin is failed to load ...\n        }\n        \n        \n        private function onPlayerStateChange(event:MediaPlayerStateChangeEvent) : void\n        {\n            var state:String;\n            \n            state =  event.state;\n            \n            switch (state)\n            {\n                case MediaPlayerState.LOADING: \n                    \n                    // A new source is started to load.\n                    \n                    break;\n                \n                case  MediaPlayerState.READY :   \n                    // Add code to deal with Player Ready when it is hit the first load after a source is loaded. \n                    \n                    break;\n                \n                case MediaPlayerState.BUFFERING :\n                    \n                    break;\n                \n                case  MediaPlayerState.PAUSED :\n                    break;      \n                // other states ...          \n            }\n        }\n        \n        private function onPlayerFailed(event:MediaErrorEvent) : void\n        {\n            // Media Player is failed .           \n        }\n        \n        private function loadMediaSource(sourceURL : String):void \n        {\n            // Take an URL of SmoothStreamingSource's manifest and add it to the page.\n            \n            var resource:URLResource= new URLResource( sourceURL );\n            \n            var element:MediaElement = _mediaFactory.createMediaElement( resource );\n            _mediaPlayerSprite.scaleMode = ScaleMode.LETTERBOX;\n            _mediaPlayerSprite.width = stage.stageWidth;\n            _mediaPlayerSprite.height = stage.stageHeight;\n            \n            // Add the media element\n            _mediaPlayerSprite.media = element;\n        }     \n        \n    }\n}\n```\n\n\n###SS for OSMF 动态加载\n\n以下代码段演示如何动态加载 SS for OSMF 插件以及如何使用 OSMF MediaFactory 类播放基本视频。在包含 SS for OSMF 代码之前，如果要使用 FILE 协议进行加载，请将“MSAdaptiveStreamingPlugin-v1.0.3-osmf2.0.swf”动态插件复制到项目文件夹；如果要进行 HTTP 加载，请将该插件复制到 Web 服务器下。不需要在项目引用中包含“MSAdaptiveStreamingPlugin-v1.0.3-osmf2.0.swc”。\n\n```\npackage \n{\n    \n    import flash.display.*;\n    import org.osmf.media.*;\n    import org.osmf.containers.MediaContainer;\n    import org.osmf.events.MediaErrorEvent;\n    import org.osmf.events.MediaFactoryEvent;\n    import org.osmf.events.MediaPlayerStateChangeEvent;\n    import org.osmf.layout.*;\n    import flash.events.Event;\n    import flash.system.Capabilities;\n\n    \n    //Sets the size of the SWF\n    \n    [SWF(width=\"1024\", height=\"768\", backgroundColor='#405050', frameRate=\"25\")]\n    public class TestPlayer extends Sprite\n    {        \n        public var _container:MediaContainer;\n        public var _mediaFactory:DefaultMediaFactory;\n        private var _mediaPlayerSprite:MediaPlayerSprite;\n        \n        \n        public function TestPlayer( )\n        {\n            stage.quality = StageQuality.HIGH;\n            initMediaPlayer();\n        }\n        \n        private function initMediaPlayer():void\n        {\n            \n            // Create the container (sprite) for managing display and layout\n            _mediaPlayerSprite = new MediaPlayerSprite();    \n            _mediaPlayerSprite.addEventListener(MediaErrorEvent.MEDIA_ERROR, onPlayerFailed);\n            _mediaPlayerSprite.addEventListener(MediaPlayerStateChangeEvent.MEDIA_PLAYER_STATE_CHANGE, onPlayerStateChange);\n\n            //Adds the container to the stage\n            addChild(_mediaPlayerSprite);\n            \n            // Create a mediafactory instance\n            _mediaFactory = new DefaultMediaFactory();\n            \n            // Add the listeners for PLUGIN_LOADING\n            _mediaFactory.addEventListener(MediaFactoryEvent.PLUGIN_LOAD,onPluginLoaded);\n            _mediaFactory.addEventListener(MediaFactoryEvent.PLUGIN_LOAD_ERROR, onPluginLoadFailed );\n            \n            // Load the plugin class \n            loadAdaptiveStreamingPlugin( );  \n            \n        }\n        \n        private function loadAdaptiveStreamingPlugin( ):void\n        {\n            var pluginResource:MediaResourceBase;\n            var adaptiveStreamingPluginUrl:String;\n\n            // Your dynamic plugin web server needs to host a valid crossdomain.xml file to allow loading plugins.\n\n            adaptiveStreamingPluginUrl = \"http://yourdomain/MSAdaptiveStreamingPlugin-v1.0.3-osmf2.0.swf\";\n            pluginResource = new URLResource(adaptiveStreamingPluginUrl);\n            _mediaFactory.loadPlugin( pluginResource ); \n\n        }\n        \n        private function onPluginLoaded( event:MediaFactoryEvent ):void\n        {\n            // The plugin is loaded successfully.\n\n            // Your web server needs to host a valid crossdomain.xml file to allow plugin to download Smooth Streaming files.\n\n    loadMediaSource(\"http://devplatem.vo.msecnd.net/Sintel/Sintel_H264.ism/manifest\")\n        }\n        \n        private function onPluginLoadFailed( event:MediaFactoryEvent ):void\n        {\n            // The plugin is failed to load ...\n        }\n        \n        \n        private function onPlayerStateChange(event:MediaPlayerStateChangeEvent) : void\n        {\n            var state:String;\n            \n            state =  event.state;\n            \n            switch (state)\n            {\n                case MediaPlayerState.LOADING: \n                    \n                    // A new source is started to load.\n                    \n                    break;\n                \n                case  MediaPlayerState.READY :   \n                    // Add code to deal with Player Ready when it is hit the first load after a source is loaded. \n                    \n                    break;\n                \n                case MediaPlayerState.BUFFERING :\n                    \n                    break;\n                \n                case  MediaPlayerState.PAUSED :\n                    break;      \n                // other states ...          \n            }\n        }\n        \n        private function onPlayerFailed(event:MediaErrorEvent) : void\n        {\n            // Media Player is failed .           \n        }\n        \n        private function loadMediaSource(sourceURL : String):void \n        {\n            // Take an URL of SmoothStreamingSource's manifest and add it to the page.\n            \n            var resource:URLResource= new URLResource( sourceURL );\n            \n            var element:MediaElement = _mediaFactory.createMediaElement( resource );\n            _mediaPlayerSprite.scaleMode = ScaleMode.LETTERBOX;\n            _mediaPlayerSprite.width = stage.stageWidth;\n            _mediaPlayerSprite.height = stage.stageHeight;\n            // Add the media element\n            _mediaPlayerSprite.media = element;\n        }     \n        \n    }\n}\n```\n\n##Strobe Media Playback 与 SS OSMF 动态插件\n适用于 OSMF 的平滑流式处理动态插件与 [Strobe Media Playback (SMP)](http://osmf.org/strobe_mediaplayback.html) 兼容。你可以使用 SS for OSMF 插件向 SMP 添加平滑流式处理内容播放功能。为此，请在进行 HTTP 加载时，使用以下步骤将“MSAdaptiveStreamingPlugin-v1.0.3-osmf2.0.swf”复制到 Web 服务器下：\n\n1.  浏览 [Strobe Media Playback 设置页](http://osmf.org/dev/2.0gm/setup.html)。 \n2.  将 src 设置为平滑流式处理源（例如 http://devplatem.vo.msecnd.net/Sintel/Sintel_H264.ism/manifest） \n3.  进行所需的配置更改，然后单击“Preview and Update”（预览并更新）。\n \n    **注意** 你的内容 Web 服务器需要有效的 crossdomain.xml。 \n4.  使用常用的文本编辑器将该代码复制并粘贴到一个简单的 HTML 页，如以下示例所示：\n\n\n\n        <html>\n        <body>\n        <object width=\"920\" height=\"640\"> \n        <param name=\"movie\" value=\"http://osmf.org/dev/2.0gm/StrobeMediaPlayback.swf\"></param>\n        <param name=\"flashvars\" value=\"src=http://devplatem.vo.msecnd.net/Sintel/Sintel_H264.ism/manifest &autoPlay=true\"></param>\n        <param name=\"allowFullScreen\" value=\"true\"></param>\n        <param name=\"allowscriptaccess\" value=\"always\"></param>\n        <param name=\"wmode\" value=\"direct\"></param>\n        <embed src=\"http://osmf.org/dev/2.0gm/StrobeMediaPlayback.swf\" \n            type=\"application/x-shockwave-flash\" \n            allowscriptaccess=\"always\" \n            allowfullscreen=\"true\" \n            wmode=\"direct\" \n            width=\"920\" \n            height=\"640\" \n            flashvars=\" src=http://devplatem.vo.msecnd.net/Sintel/Sintel_H264.ism/manifest&autoPlay=true\">\n        </embed>\n        </object>\n        </body>\n        </html>\n\n\n\n5. 将平滑流式处理 OSMF 插件添加到 embed 代码中，然后保存。\n\n        <html>\n        <object width=\"920\" height=\"640\"> \n        <param name=\"movie\" value=\"http://osmf.org/dev/2.0gm/StrobeMediaPlayback.swf\"></param>\n        <param name=\"flashvars\" value=\"src=http://devplatem.vo.msecnd.net/Sintel/Sintel_H264.ism/manifest&autoPlay=true&plugin_AdaptiveStreamingPlugin=http://yourdomain/MSAdaptiveStreamingPlugin-v1.0.3-osmf2.0.swf&AdaptiveStreamingPlugin_retryLive=true&AdaptiveStreamingPlugin_retryInterval=10\"></param>\n        <param name=\"allowFullScreen\" value=\"true\"></param>\n        <param name=\"allowscriptaccess\" value=\"always\"></param>\n        <param name=\"wmode\" value=\"direct\"></param>\n        <embed src=\"http://osmf.org/dev/2.0gm/StrobeMediaPlayback.swf\" \n            type=\"application/x-shockwave-flash\" \n            allowscriptaccess=\"always\" \n            allowfullscreen=\"true\" \n            wmode=\"direct\" \n            width=\"920\" \n            height=\"640\" \n            flashvars=\"src=http://devplatem.vo.msecnd.net/Sintel/Sintel_H264.ism/manifest&autoPlay=true&plugin_AdaptiveStreamingPlugin=http://yourdomain/MSAdaptiveStreamingPlugin-v1.0.3-osmf2.0.swf&AdaptiveStreamingPlugin_retryLive=true&AdaptiveStreamingPlugin_retryInterval=10\">\n        </embed>\n        </object>\n        </html>\n\n\n6.  保存 HTML 页，然后发布到 Web 服务器。使用你最常用的、已启用 Flash&reg; Player 的 Internet 浏览器（Internet Explorer、Chrome、Firefox 等）浏览到已发布的网页。\n7.  在 Adobe&reg; Flash&reg; Player 中欣赏平滑流式处理内容。\n\n有关一般性 OSMF 开发的详细信息，请参阅官方的 [OSMF 开发页](http://osmf.org/resources.html)。\n\n\n\n##另请参阅\n\n[适用于 OSMF 的 Microsoft 自适应流式处理插件更新](http://azure.microsoft.com/blog/2014/10/27/microsoft-adaptive-streaming-plugin-for-osmf-update/)\n\n<!---HONumber=82-->"
}