{
  "nodes": [
    {
      "content": "使用适用于 Azure 上的 Linux 的 Docker VM 扩展",
      "pos": [
        27,
        62
      ]
    },
    {
      "content": "介绍 Docker 以及 Azure 虚拟机扩展，并说明如何在 Azure 上，使用 Azure CLI 通过命令行以编程方式创建用作 Docker 主机的虚拟机。",
      "pos": [
        81,
        163
      ]
    },
    {
      "content": "从 Azure 命令行界面 (Azure CLI) 使用 Docker VM 扩展",
      "pos": [
        388,
        429
      ]
    },
    {
      "pos": [
        431,
        517
      ],
      "content": "[AZURE.INCLUDE <bpt id=\"p1\">[</bpt>了解部署模型<ept id=\"p1\">](../includes/learn-about-deployment-models-classic-include.md)</ept>]"
    },
    {
      "pos": [
        521,
        958
      ],
      "content": "本主题说明如何通过 Azure CLI 中的服务管理 (asm) 模式，在任何平台上创建包含 Docker VM 扩展的 VM。<bpt id=\"p1\">[</bpt>Docker<ept id=\"p1\">](https://www.docker.com/)</ept> 是最常用的虚拟化技术之一，它使用 <bpt id=\"p2\">[</bpt>Linux 容器<ept id=\"p2\">](http://zh.wikipedia.org/wiki/LXC)</ept>而不是虚拟机作为在共享资源上隔离数据和执行计算的方法。可以在 <bpt id=\"p3\">[</bpt>Azure Linux 代理<ept id=\"p3\">](/documentation/articles/virtual-machines-linux-agent-user-guide)</ept>中使用 Docker VM 扩展，以创建可在 Azure 上为应用程序托管任意数量的容器的 Docker VM。若要查看容器及其优点的综合讨论，请参阅 <bpt id=\"p4\">[</bpt>Docker 高级白板<ept id=\"p4\">](http://channel9.msdn.com/Blogs/Regular-IT-Guy/Docker-High-Level-Whiteboard)</ept>。"
    },
    {
      "content": "如何对 Azure 使用 Docker VM 扩展",
      "pos": [
        963,
        988
      ]
    },
    {
      "content": "若要对 Azure 使用 Docker VM，你必须安装 0.8.6 版本以上的 <bpt id=\"p1\">[</bpt>Azure 命令行界面 <ept id=\"p1\">](https://github.com/Azure/azure-sdk-tools-xplat)</ept>(Azure CLI) （截至本文编写时的最新版本为 0.8.10）。可以在 Mac、Linux 和 Windows 上安装 Azure CLI。",
      "pos": [
        989,
        1165
      ]
    },
    {
      "content": "在 Azure 上使用 Docker 的整个过程相当简单：",
      "pos": [
        1168,
        1197
      ]
    },
    {
      "content": "在要从中控制 Azure 的计算机上安装 Azure CLI 及其依赖项（在 Windows 上，这是作为虚拟机运行的 Linux 分发版）",
      "pos": [
        1201,
        1271
      ]
    },
    {
      "content": "使用 Azure CLI Docker 命令在 Azure 中创建 VM Docker 主机",
      "pos": [
        1274,
        1320
      ]
    },
    {
      "content": "使用本地 Docker 命令在 Azure 中的 Docker VM 内管理 Docker 容器。",
      "pos": [
        1323,
        1372
      ]
    },
    {
      "content": "安装 Azure 命令行界面 (Azure CLI)",
      "pos": [
        1379,
        1405
      ]
    },
    {
      "pos": [
        1407,
        1612
      ],
      "content": "若要安装和配置 Azure CLI，请参阅<bpt id=\"p1\">[</bpt>如何安装 Azure 命令行界面<ept id=\"p1\">](/documentation/articles/xplat-cli-install)</ept>。若要确认安装，请在命令提示符下键入 <ph id=\"ph1\">`azure`</ph>，片刻之后，你就会看到 Azure CLI ASCII 图文，其中列出了可用的基本命令。如果安装正常，你应该可以键入 <ph id=\"ph2\">`azure help vm`</ph>，并看到列出的其中一个命令是“docker”。"
    },
    {
      "pos": [
        1616,
        1774
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> Docker 提供适用于 Windows 的安装程序 <bpt id=\"p1\">[</bpt>Boot2Docker<ept id=\"p1\">](https://docs.docker.com/installation/windows/)</ept>，你也可以使用该安装程序自动创建可以配合用作 docker 主机的 Azure VM 使用的 docker 客户端。"
    },
    {
      "content": "将 Azure CLI 连接到你的 Azure 帐户",
      "pos": [
        1780,
        1806
      ]
    },
    {
      "pos": [
        1807,
        2061
      ],
      "content": "在使用 Azure CLI 之前，必须将 Azure 帐户凭据与平台上的 Azure CLI 相关联。<bpt id=\"p1\">[</bpt>如何连接到 Azure 订阅<ept id=\"p1\">](/documentation/articles/xplat-cli-connect)</ept>部分说明了如何下载和导入 <bpt id=\"p2\">**</bpt>.publishsettings<ept id=\"p2\">**</ept> 文件，或者将 Azure CLI 与组织 ID 相关联。在Bash或终端会话下键入一下Azure CLI命令来链接到Azure账户,并将其中的&lt;username\\&gt;和&lt;password\\&gt;分别替换为您自己的用户名和密码。"
    },
    {
      "pos": [
        2152,
        2174
      ],
      "content": "登录成功后将服务模式切换为<bpt id=\"p1\">**</bpt>asm<ept id=\"p1\">**</ept>模式"
    },
    {
      "pos": [
        2203,
        2263
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> 由于使用一个或其他多个身份验证方法的行为有一些差异，因此请务必阅读上述文档，以了解不同的功能。"
    },
    {
      "content": "安装 Docker 并对 Azure 使用 Docker VM 扩展",
      "pos": [
        2269,
        2303
      ]
    },
    {
      "pos": [
        2304,
        2388
      ],
      "content": "遵循 <bpt id=\"p1\">[</bpt>Docker 安装说明<ept id=\"p1\">](https://docs.docker.com/installation/#installation)</ept>在计算机本地安装 Docker。"
    },
    {
      "pos": [
        2390,
        2542
      ],
      "content": "若要将 Docker 与 Azure 虚拟机配合使用，VM 使用的 Linux 映像上必须已安装 <bpt id=\"p1\">[</bpt>Azure Linux VM 代理<ept id=\"p1\">](/documentation/articles/virtual-machines-linux-agent-user-guide)</ept>。目前，只有两种类型的映像提供此代理："
    },
    {
      "content": "Azure 映像库中的 Ubuntu 映像，或",
      "pos": [
        2546,
        2569
      ]
    },
    {
      "pos": [
        2573,
        2744
      ],
      "content": "使用已安装并配置的 Azure Linux VM 代理创建的自定义 Linux 映像。有关如何使用 Azure VM 代理构建自定义 Linux VM 的详细信息，请参阅 <bpt id=\"p1\">[</bpt>Azure Linux VM 代理<ept id=\"p1\">](/documentation/articles/virtual-machines-linux-agent-user-guide)</ept>。"
    },
    {
      "content": "使用 Azure 映像库",
      "pos": [
        2750,
        2762
      ]
    },
    {
      "content": "从 Bash 或终端会话键入以下 Azure CLI 命令找到 VM 映像库中要使用的最新 Ubuntu 映像",
      "pos": [
        2764,
        2819
      ]
    },
    {
      "pos": [
        2864,
        2986
      ],
      "content": "选择其中一个映像名称（例如 <ph id=\"ph1\">`b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_04-LTS-amd64-server-20140724-en-us-30GB`</ph>），然后使用以下命令创建使用该映像的新 VM。"
    },
    {
      "content": "其中：",
      "pos": [
        3180,
        3183
      ]
    },
    {
      "pos": [
        3187,
        3252
      ],
      "content": "<bpt id=\"p1\">*</bpt>&amp;lt;vm-cloudservice name&amp;gt;<ept id=\"p1\">*</ept> 是将成为 Azure 中 Docker 容器主计算机的 VM 名称。"
    },
    {
      "pos": [
        3257,
        3295
      ],
      "content": "<bpt id=\"p1\">*</bpt>&amp;lt;username&amp;gt;<ept id=\"p1\">*</ept> 是 VM 默认 root 用户的用户名"
    },
    {
      "pos": [
        3299,
        3353
      ],
      "content": "<bpt id=\"p1\">*</bpt>&amp;lt;password&amp;gt;<ept id=\"p1\">*</ept> 是 <bpt id=\"p2\">*</bpt>username<ept id=\"p2\">*</ept> 帐户的密码，需符合 Azure 的复杂性标准"
    },
    {
      "pos": [
        3357,
        3450
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> 目前，密码必须至少有 8 个字符，包含一个小写字母和一个大写字母、一个数字以及下列特殊字符之一：<ph id=\"ph2\">`!@#$%^&amp;+=`</ph>。不，上一个句子末尾的句号并不是特殊字符。"
    },
    {
      "content": "如果命令成功，根据使用的确切参数和选项，你应会可以看到如下所示的内容：",
      "pos": [
        3452,
        3487
      ]
    },
    {
      "pos": [
        3568,
        3670
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> 创建虚拟机可能需要几分钟的时间，但当其设置完成后（状态值为 <ph id=\"ph2\">`ReadyRole`</ph>），Docker 守护程序（Docker 服务）便会启动，你可以连接到 Docker 容器主机。"
    },
    {
      "content": "若要测试你在 Azure 中创建的 Docker VM，请键入",
      "pos": [
        3672,
        3703
      ]
    },
    {
      "pos": [
        3783,
        3910
      ],
      "content": "其中，<bpt id=\"p1\">*</bpt>&amp;lt;vm-name-you-used&amp;gt;<ept id=\"p1\">*</ept> 是你在 <ph id=\"ph1\">`azure vm docker create`</ph> 调用中使用的虚拟机名称。你应会看到如下所示的内容，这表示 Docker 主机 VM 已在 Azure 中启动和运行，并且正等待你的命令。"
    },
    {
      "pos": [
        3912,
        3999
      ],
      "content": "现在，可以尝试使用你的 Docker 客户端进行连接以获取信息（在某些 Docker 客户端设置（如 Mac 上的 Docker 客户端设置）中可能需要使用 <ph id=\"ph1\">`sudo`</ph>）："
    },
    {
      "content": "为了确认它一直在工作，你可以检查 Docker 扩展的 VM：",
      "pos": [
        4992,
        5023
      ]
    },
    {
      "content": "Docker 主机 VM 身份验证",
      "pos": [
        5407,
        5424
      ]
    },
    {
      "pos": [
        5426,
        5570
      ],
      "content": "除了创建 Docker VM 以外，<ph id=\"ph1\">`azure vm docker create`</ph> 命令还会自动创建所需的证书，使 Docker 客户端计算机能够使用 HTTPS 连接到 Azure 容器主机；这些证书将适当地存储在客户端和主计算机上。在后续尝试时，现有证书将被重复使用并与新主机共享。"
    },
    {
      "pos": [
        5572,
        5723
      ],
      "content": "默认情况下，证书放置在 <ph id=\"ph1\">`~/.docker`</ph> 中，而 Docker 将配置为在端口 <bpt id=\"p1\">**</bpt>2376<ept id=\"p1\">**</ept> 上运行。如果你要使用不同的端口或目录，则可以使用下列其中一个 <ph id=\"ph2\">`azure vm docker create`</ph> 命令行选项将 Docker 容器主机 VM 配置为使用不同端口或不同证书来连接客户端："
    },
    {
      "pos": [
        5897,
        6003
      ],
      "content": "主机上的 Docker 守护程序配置为使用由 <ph id=\"ph1\">`azure vm docker create`</ph> 命令生成的证书侦听和验证指定端口上的客户端连接。客户端计算机必须使用这些证书来获取对 Docker 主机的访问权限。"
    },
    {
      "pos": [
        6007,
        6090
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> 不使用这些证书运行的联网主机很容易受到任何可连接到该计算机的用户的攻击。在修改默认配置之前，请确保了解这样做会对计算机和应用程序造成的风险。"
    },
    {
      "content": "后续步骤",
      "pos": [
        6095,
        6099
      ]
    },
    {
      "content": "现在，你可以转到 <bpt id=\"p1\">[</bpt><ept id=\"p1\">Docker 用户指南]</ept>并开始使用你的 Docker VM。",
      "pos": [
        6101,
        6141
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"使用适用于 Azure 上的 Linux 的 Docker VM 扩展\"\n    description=\"介绍 Docker 以及 Azure 虚拟机扩展，并说明如何在 Azure 上，使用 Azure CLI 通过命令行以编程方式创建用作 Docker 主机的虚拟机。\"\n    services=\"virtual-machines\"\n    documentationCenter=\"\"\n    authors=\"squillace\"\n    manager=\"timlt\"\n    editor=\"tysonn\"/>\n\n<tags\n    ms.service=\"virtual-machines\"\n    ms.date=\"01/04/2016\"\n    wacn.date=\"02/26/2016\"/>\n\n# 从 Azure 命令行界面 (Azure CLI) 使用 Docker VM 扩展\n\n[AZURE.INCLUDE [了解部署模型](../includes/learn-about-deployment-models-classic-include.md)]\n\n\n\n本主题说明如何通过 Azure CLI 中的服务管理 (asm) 模式，在任何平台上创建包含 Docker VM 扩展的 VM。[Docker](https://www.docker.com/) 是最常用的虚拟化技术之一，它使用 [Linux 容器](http://zh.wikipedia.org/wiki/LXC)而不是虚拟机作为在共享资源上隔离数据和执行计算的方法。可以在 [Azure Linux 代理](/documentation/articles/virtual-machines-linux-agent-user-guide)中使用 Docker VM 扩展，以创建可在 Azure 上为应用程序托管任意数量的容器的 Docker VM。若要查看容器及其优点的综合讨论，请参阅 [Docker 高级白板](http://channel9.msdn.com/Blogs/Regular-IT-Guy/Docker-High-Level-Whiteboard)。\n\n\n##如何对 Azure 使用 Docker VM 扩展\n若要对 Azure 使用 Docker VM，你必须安装 0.8.6 版本以上的 [Azure 命令行界面 ](https://github.com/Azure/azure-sdk-tools-xplat)(Azure CLI) （截至本文编写时的最新版本为 0.8.10）。可以在 Mac、Linux 和 Windows 上安装 Azure CLI。\n\n\n在 Azure 上使用 Docker 的整个过程相当简单：\n\n+ 在要从中控制 Azure 的计算机上安装 Azure CLI 及其依赖项（在 Windows 上，这是作为虚拟机运行的 Linux 分发版）\n+ 使用 Azure CLI Docker 命令在 Azure 中创建 VM Docker 主机\n+ 使用本地 Docker 命令在 Azure 中的 Docker VM 内管理 Docker 容器。\n\n\n### 安装 Azure 命令行界面 (Azure CLI)\n\n若要安装和配置 Azure CLI，请参阅[如何安装 Azure 命令行界面](/documentation/articles/xplat-cli-install)。若要确认安装，请在命令提示符下键入 `azure`，片刻之后，你就会看到 Azure CLI ASCII 图文，其中列出了可用的基本命令。如果安装正常，你应该可以键入 `azure help vm`，并看到列出的其中一个命令是“docker”。\n\n> [AZURE.NOTE] Docker 提供适用于 Windows 的安装程序 [Boot2Docker](https://docs.docker.com/installation/windows/)，你也可以使用该安装程序自动创建可以配合用作 docker 主机的 Azure VM 使用的 docker 客户端。\n\n### 将 Azure CLI 连接到你的 Azure 帐户\n在使用 Azure CLI 之前，必须将 Azure 帐户凭据与平台上的 Azure CLI 相关联。[如何连接到 Azure 订阅](/documentation/articles/xplat-cli-connect)部分说明了如何下载和导入 **.publishsettings** 文件，或者将 Azure CLI 与组织 ID 相关联。在Bash或终端会话下键入一下Azure CLI命令来链接到Azure账户,并将其中的<username\\>和<password\\>分别替换为您自己的用户名和密码。\n\n`azure login --environment AzureChinaCloud --username <username> --password <password>`\n\n登录成功后将服务模式切换为**asm**模式\n\n`azure config mode asm`\n\n> [AZURE.NOTE] 由于使用一个或其他多个身份验证方法的行为有一些差异，因此请务必阅读上述文档，以了解不同的功能。\n\n### 安装 Docker 并对 Azure 使用 Docker VM 扩展\n遵循 [Docker 安装说明](https://docs.docker.com/installation/#installation)在计算机本地安装 Docker。\n\n若要将 Docker 与 Azure 虚拟机配合使用，VM 使用的 Linux 映像上必须已安装 [Azure Linux VM 代理](/documentation/articles/virtual-machines-linux-agent-user-guide)。目前，只有两种类型的映像提供此代理：\n\n+ Azure 映像库中的 Ubuntu 映像，或\n\n+ 使用已安装并配置的 Azure Linux VM 代理创建的自定义 Linux 映像。有关如何使用 Azure VM 代理构建自定义 Linux VM 的详细信息，请参阅 [Azure Linux VM 代理](/documentation/articles/virtual-machines-linux-agent-user-guide)。\n\n### 使用 Azure 映像库\n\n从 Bash 或终端会话键入以下 Azure CLI 命令找到 VM 映像库中要使用的最新 Ubuntu 映像\n\n`azure vm image list | grep Ubuntu-14_04`\n\n选择其中一个映像名称（例如 `b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_04-LTS-amd64-server-20140724-en-us-30GB`），然后使用以下命令创建使用该映像的新 VM。\n\n    \n    azure vm docker create -e 22 -l \"China North\" <vm-cloudservice name> \"b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_04-LTS-amd64-server-20140724-en-us-30GB\" <username> <password>\n    \n\n其中：\n\n+ *&lt;vm-cloudservice name&gt;* 是将成为 Azure 中 Docker 容器主计算机的 VM 名称。\n\n+  *&lt;username&gt;* 是 VM 默认 root 用户的用户名\n\n+ *&lt;password&gt;* 是 *username* 帐户的密码，需符合 Azure 的复杂性标准\n\n> [AZURE.NOTE] 目前，密码必须至少有 8 个字符，包含一个小写字母和一个大写字母、一个数字以及下列特殊字符之一：`!@#$%^&+=`。不，上一个句子末尾的句号并不是特殊字符。\n\n如果命令成功，根据使用的确切参数和选项，你应会可以看到如下所示的内容：\n\n![](./media/virtual-machines-docker-with-xplat-cli/dockercreateresults.png)\n\n> [AZURE.NOTE] 创建虚拟机可能需要几分钟的时间，但当其设置完成后（状态值为 `ReadyRole`），Docker 守护程序（Docker 服务）便会启动，你可以连接到 Docker 容器主机。\n\n若要测试你在 Azure 中创建的 Docker VM，请键入\n\n    sudo docker --tls -H tcp://<vm-name-you-used>.chinacloudapp.cn:2376 info\n\n其中，*&lt;vm-name-you-used&gt;* 是你在 `azure vm docker create` 调用中使用的虚拟机名称。你应会看到如下所示的内容，这表示 Docker 主机 VM 已在 Azure 中启动和运行，并且正等待你的命令。\n\n现在，可以尝试使用你的 Docker 客户端进行连接以获取信息（在某些 Docker 客户端设置（如 Mac 上的 Docker 客户端设置）中可能需要使用 `sudo`）：\n\n    sudo docker --tls -H tcp://testsshasm.chinacloudapp.cn:2376 info\n    Password:\n    Containers: 0\n    Images: 0\n    Storage Driver: devicemapper\n    Pool Name: docker-8:1-131781-pool\n    Pool Blocksize: 65.54 kB\n    Backing Filesystem: extfs\n    Data file: /dev/loop0\n    Metadata file: /dev/loop1\n    Data Space Used: 1.821 GB\n    Data Space Total: 107.4 GB\n    Data Space Available: 28 GB\n    Metadata Space Used: 1.479 MB\n    Metadata Space Total: 2.147 GB\n    Metadata Space Available: 2.146 GB\n    Udev Sync Supported: true\n    Deferred Removal Enabled: false\n    Data loop file: /var/lib/docker/devicemapper/devicemapper/data\n    Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\n    Library Version: 1.02.77 (2012-10-15)\n    Execution Driver: native-0.2\n    Logging Driver: json-file\n    Kernel Version: 3.19.0-28-generic\n    Operating System: Ubuntu 14.04.3 LTS\n    CPUs: 1\n    Total Memory: 1.637 GiB\n    Name: testsshasm\n    WARNING: No swap limit support\n\n为了确认它一直在工作，你可以检查 Docker 扩展的 VM：\n\n    azure vm extension get testsshasm\n    info: Executing command vm extension get\n    + Getting virtual machines\n    data: Publisher Extension name ReferenceName Version State\n    data: -------------------- --------------- ------------------------- ------- ------\n    data: Microsoft.Azure.E... DockerExtension DockerExtension 1.* Enable\n    info: vm extension get command OK\n\n### Docker 主机 VM 身份验证\n\n除了创建 Docker VM 以外，`azure vm docker create` 命令还会自动创建所需的证书，使 Docker 客户端计算机能够使用 HTTPS 连接到 Azure 容器主机；这些证书将适当地存储在客户端和主计算机上。在后续尝试时，现有证书将被重复使用并与新主机共享。\n\n默认情况下，证书放置在 `~/.docker` 中，而 Docker 将配置为在端口 **2376** 上运行。如果你要使用不同的端口或目录，则可以使用下列其中一个 `azure vm docker create` 命令行选项将 Docker 容器主机 VM 配置为使用不同端口或不同证书来连接客户端：\n\n    \n    -dp, --docker-port [port]              Port to use for docker [2376]\n    -dc, --docker-cert-dir [dir]           Directory containing docker certs [.docker/]\n    \n\n主机上的 Docker 守护程序配置为使用由 `azure vm docker create` 命令生成的证书侦听和验证指定端口上的客户端连接。客户端计算机必须使用这些证书来获取对 Docker 主机的访问权限。\n\n> [AZURE.NOTE] 不使用这些证书运行的联网主机很容易受到任何可连接到该计算机的用户的攻击。在修改默认配置之前，请确保了解这样做会对计算机和应用程序造成的风险。\n\n## 后续步骤\n\n现在，你可以转到 [Docker 用户指南]并开始使用你的 Docker VM。<!-- 若要在新门户中创建启用 Docker 的 VM，请参阅[如何在门户中使用 Docker VM 扩展]。 -->\n\n<!--Anchors-->\n[Subheading 1]: #subheading-1\n[Subheading 2]: #subheading-2\n[Subheading 3]: #subheading-3\n[Next steps]: #next-steps\n\n[How to use the Docker VM Extension with Azure]: #How-to-use-the-Docker-VM-Extension-with-Azure\n[Virtual Machine Extensions for Linux and Windows]: #Virtual-Machine-Extensions-For-Linux-and-Windows\n[Container and Container Management Resources for Azure]: #Container-and-Container-Management-Resources-for-Azure\n\n\n\n<!--Link references-->\n[Link 1 to another azure.microsoft.com documentation topic]: /documentation/articles/virtual-machines-windows-tutorial-classic-portal\n[Link 2 to another azure.microsoft.com documentation topic]: /documentation/articles/web-sites-custom-domain-name\n[Link 3 to another azure.microsoft.com documentation topic]: /documentation/articles/storage-whatis-account\n\n[Docker 用户指南]: https://docs.docker.com/userguide/\n \n\n<!---HONumber=Mooncake_0215_2016-->"
}