<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2dd23f49b2abc180bceaaf3f02c7c32b924675a4</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="update-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>更新应用程序以调用自定义 API</source>
          <target state="new"><ph id="ph1">&lt;a name="update-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>更新应用程序以调用自定义 API</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 中，打开快速启动项目中的 MainPage.xaml 文件，找到名为 <ph id="ph1">`ButtonRefresh`</ph> 的“按钮”元素，并将其替换为以下 XAML 代码：</source>
          <target state="new">在 Visual Studio 中，打开快速启动项目中的 MainPage.xaml 文件，找到名为 <ph id="ph1">`ButtonRefresh`</ph> 的“按钮”元素，并将其替换为以下 XAML 代码：</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>这样可将新按钮添加到页。</source>
          <target state="new">这样可将新按钮添加到页。</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>打开 MainPage.xaml.cs 代码文件，并添加以下类定义代码：</source>
          <target state="new">打开 MainPage.xaml.cs 代码文件，并添加以下类定义代码：</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>此类用于保存自定义 API 返回的行计数值。</source>
          <target state="new">此类用于保存自定义 API 返回的行计数值。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>找到 <bpt id="p1">**</bpt>MainPage<ept id="p1">**</ept> 类中的 <bpt id="p2">**</bpt>RefreshTodoItems<ept id="p2">**</ept> 方法，并确认 <ph id="ph1">`query`</ph> 是使用以下 <bpt id="p3">**</bpt>Where<ept id="p3">**</ept> 方法定义的：</source>
          <target state="new">找到 <bpt id="p1">**</bpt>MainPage<ept id="p1">**</ept> 类中的 <bpt id="p2">**</bpt>RefreshTodoItems<ept id="p2">**</ept> 方法，并确认 <ph id="ph1">`query`</ph> 是使用以下 <bpt id="p3">**</bpt>Where<ept id="p3">**</ept> 方法定义的：</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>这样可以筛选项，使得查询不返回已完成的项。</source>
          <target state="new">这样可以筛选项，使得查询不返回已完成的项。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>在 <bpt id="p1">**</bpt>MainPage<ept id="p1">**</ept> 类中，添加以下方法：</source>
          <target state="new">在 <bpt id="p1">**</bpt>MainPage<ept id="p1">**</ept> 类中，添加以下方法：</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>此方法可处理新按钮的 <bpt id="p1">**</bpt>Click<ept id="p1">**</ept> 事件。在客户端上调用 <bpt id="p2">[</bpt>InvokeApiAsync<ept id="p2">](https://msdn.microsoft.com/zh-CN/library/windowsazure/microsoft.windowsazure.mobileservices.mobileserviceclient.invokeapiasync.aspx)</ept> 方法，该客户端向新的自定义 API 发送 POST 请求。与任何错误相同，自定义 API 返回的结果也显示在消息对话框中。</source>
          <target state="new">此方法可处理新按钮的 <bpt id="p1">**</bpt>Click<ept id="p1">**</ept> 事件。在客户端上调用 <bpt id="p2">[</bpt>InvokeApiAsync<ept id="p2">](https://msdn.microsoft.com/zh-CN/library/windowsazure/microsoft.windowsazure.mobileservices.mobileserviceclient.invokeapiasync.aspx)</ept> 方法，该客户端向新的自定义 API 发送 POST 请求。与任何错误相同，自定义 API 返回的结果也显示在消息对话框中。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="test-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>测试应用程序</source>
          <target state="new"><ph id="ph1">&lt;a name="test-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>测试应用程序</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 中，按 <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> 键以重新生成项目并启动应用。</source>
          <target state="new">在 Visual Studio 中，按 <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> 键以重新生成项目并启动应用。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>在应用的“插入 TodoItem”中键入一些文本，然后单击“保存”。</source>
          <target state="new">在应用的“插入 TodoItem”中键入一些文本，然后单击“保存”。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>重复上述步骤，直至你将多个 ToDo 项添加到列表。</source>
          <target state="new">重复上述步骤，直至你将多个 ToDo 项添加到列表。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>单击“完成全部”按钮。</source>
          <target state="new">单击“完成全部”按钮。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>此时会显示一个消息框，指示标记为完成的多个项，并再次执行筛选查询，将所有项从列表中清除。</source>
          <target state="new">此时会显示一个消息框，指示标记为完成的多个项，并再次执行筛选查询，将所有项从列表中清除。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>