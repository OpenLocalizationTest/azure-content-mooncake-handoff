{
  "nodes": [
    {
      "content": "如何从媒体服务传送流内容",
      "pos": [
        28,
        40
      ]
    },
    {
      "content": "了解如何创建用于生成流 URL 的定位符。代码使用 REST API。",
      "pos": [
        60,
        95
      ]
    },
    {
      "content": "如何：传送流内容",
      "pos": [
        314,
        322
      ]
    },
    {
      "content": "[AZURE.SELECTOR]",
      "pos": [
        326,
        342
      ]
    },
    {
      "content": ".NET",
      "pos": [
        346,
        350
      ]
    },
    {
      "content": "REST",
      "pos": [
        421,
        425
      ]
    },
    {
      "content": "Portal",
      "pos": [
        501,
        507
      ]
    },
    {
      "content": "概述",
      "pos": [
        575,
        577
      ]
    },
    {
      "pos": [
        580,
        835
      ],
      "content": "你可以通过创建 OnDemand 流式处理定位符并生成流 URL 来流式传输自适应比特率 MP4 集。<bpt id=\"p1\">[</bpt>对资产进行编码<ept id=\"p1\">](/documentation/articles/media-services-rest-encode-asset)</ept>主题说明了如何编码成自适应比特率 MP4 集。如果内容已加密，则在创建定位符之前配置资产传送策略（如<bpt id=\"p2\">[</bpt>本<ept id=\"p2\">](/documentation/articles/media-services-rest-configure-asset-delivery-policy)</ept>主题中所述）。"
    },
    {
      "content": "你也可以使用 OnDemand 流式处理定位符生成指向可渐进式下载的 MP4 文件的 URL。",
      "pos": [
        837,
        884
      ]
    },
    {
      "content": "本主题说明如何创建 OnDemand 流式处理定位符，以发布资产及生成平滑流、MPEG DASH 和 HLS 流 URL。此外，还将示范如何生成渐进式下载 URL。",
      "pos": [
        886,
        968
      ]
    },
    {
      "pos": [
        970,
        1008
      ],
      "content": "<bpt id=\"p1\">[</bpt>以下<ept id=\"p1\">](#types)</ept>部分显示了其值将在 REST 调用中使用的枚举类型。"
    },
    {
      "content": "创建 OnDemand 流式处理定位符",
      "pos": [
        1014,
        1033
      ]
    },
    {
      "content": "若要创建 OnDemand 流式处理定位符并获取 URL，你需要执行以下操作：",
      "pos": [
        1035,
        1074
      ]
    },
    {
      "content": "如果内容已加密，则定义访问策略。",
      "pos": [
        1083,
        1099
      ]
    },
    {
      "content": "创建 OnDemand 流式处理定位符。",
      "pos": [
        1106,
        1126
      ]
    },
    {
      "content": "如果你想要流式处理，请获取资产中的流式处理清单文件 (.ism)。",
      "pos": [
        1133,
        1166
      ]
    },
    {
      "content": "生成清单文件或 MP4 文件的 URL。",
      "pos": [
        1216,
        1236
      ]
    },
    {
      "content": "创建访问策略",
      "pos": [
        1243,
        1249
      ]
    },
    {
      "content": "请求：",
      "pos": [
        1251,
        1254
      ]
    },
    {
      "content": "响应：",
      "pos": [
        2269,
        2272
      ]
    },
    {
      "content": "创建 OnDemand 流式处理定位符",
      "pos": [
        3279,
        3298
      ]
    },
    {
      "content": "创建指定资产和资产策略的定位符。",
      "pos": [
        3300,
        3316
      ]
    },
    {
      "content": "请求：",
      "pos": [
        3318,
        3321
      ]
    },
    {
      "content": "响应：",
      "pos": [
        4436,
        4439
      ]
    },
    {
      "content": "生成流 URL",
      "pos": [
        5771,
        5778
      ]
    },
    {
      "pos": [
        5780,
        5827
      ],
      "content": "使用创建定位符后返回的<bpt id=\"p1\">**</bpt>路径<ept id=\"p1\">**</ept>值生成平滑流式处理、HLS 和 MPEG DASH URL。"
    },
    {
      "pos": [
        5829,
        5863
      ],
      "content": "平滑流式处理：<bpt id=\"p1\">**</bpt>路径<ept id=\"p1\">**</ept> + 清单文件名 +“/manifest”"
    },
    {
      "content": "示例：",
      "pos": [
        5865,
        5868
      ]
    },
    {
      "pos": [
        5995,
        6044
      ],
      "content": "HLS：<bpt id=\"p1\">**</bpt>路径<ept id=\"p1\">**</ept> + 清单文件名 +“/manifest(format=m3u8-aapl)”"
    },
    {
      "content": "示例：",
      "pos": [
        6046,
        6049
      ]
    },
    {
      "pos": [
        6195,
        6248
      ],
      "content": "DASH：<bpt id=\"p1\">**</bpt>路径<ept id=\"p1\">**</ept> + 清单文件名 +“/manifest(format=mpd-time-csf)”"
    },
    {
      "content": "示例：",
      "pos": [
        6251,
        6254
      ]
    },
    {
      "content": "生成渐进式下载 URL",
      "pos": [
        6406,
        6417
      ]
    },
    {
      "pos": [
        6419,
        6449
      ],
      "content": "使用创建定位符后返回的<bpt id=\"p1\">**</bpt>路径<ept id=\"p1\">**</ept>值生成渐进式下载 URL。"
    },
    {
      "pos": [
        6451,
        6475
      ],
      "content": "URL：<bpt id=\"p1\">**</bpt>路径<ept id=\"p1\">**</ept> + 资产文件 mp4 名称"
    },
    {
      "content": "示例：",
      "pos": [
        6477,
        6480
      ]
    },
    {
      "pos": [
        6632,
        6654
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"types\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>枚举类型"
    }
  ],
  "content": "<properties \n    pageTitle=\"如何从媒体服务传送流内容\" \n    description=\"了解如何创建用于生成流 URL 的定位符。代码使用 REST API。\" \n    authors=\"Juliako\" \n    manager=\"dwrede\" \n    editor=\"\" \n    services=\"media-services\" \n    documentationCenter=\"\"/>\n\n<tags\n    ms.service=\"media-services\"\n    ms.date=\"12/17/2015\"\n    wacn.date=\"01/14/2016\"/>\n\n\n#如何：传送流内容\n\n> [AZURE.SELECTOR]\n- [.NET](/documentation/articles/media-services-deliver-streaming-content)\n- [REST](/documentation/articles/media-services-rest-deliver-streaming-content)\n- [Portal](/documentation/articles/media-services-manage-content#publish)\n\n##概述\n\n\n你可以通过创建 OnDemand 流式处理定位符并生成流 URL 来流式传输自适应比特率 MP4 集。[对资产进行编码](/documentation/articles/media-services-rest-encode-asset)主题说明了如何编码成自适应比特率 MP4 集。如果内容已加密，则在创建定位符之前配置资产传送策略（如[本](/documentation/articles/media-services-rest-configure-asset-delivery-policy)主题中所述）。\n\n你也可以使用 OnDemand 流式处理定位符生成指向可渐进式下载的 MP4 文件的 URL。\n\n本主题说明如何创建 OnDemand 流式处理定位符，以发布资产及生成平滑流、MPEG DASH 和 HLS 流 URL。此外，还将示范如何生成渐进式下载 URL。\n\n[以下](#types)部分显示了其值将在 REST 调用中使用的枚举类型。\n  \n##创建 OnDemand 流式处理定位符\n\n若要创建 OnDemand 流式处理定位符并获取 URL，你需要执行以下操作：\n\n\n   1. 如果内容已加密，则定义访问策略。\n   2. 创建 OnDemand 流式处理定位符。\n   3. 如果你想要流式处理，请获取资产中的流式处理清单文件 (.ism)。 \n        \n    如果你想要渐进式下载，请获取资产中的 MP4 文件名。 \n   4. 生成清单文件或 MP4 文件的 URL。 \n\n\n###创建访问策略\n\n请求：\n        \n    POST https://media.chinacloudapi.cn/api/AccessPolicies HTTP/1.1\n    Content-Type: application/json\n    DataServiceVersion: 1.0;NetFx\n    MaxDataServiceVersion: 3.0;NetFx\n    Accept: application/json\n    Accept-Charset: UTF-8\n    Authorization: Bearer http%3a%2f%2fschemas.xmlsoap.org%2fws%2f2005%2f05%2fidentity%2fclaims%2fnameidentifier=amstest1&urn%3aSubscriptionId=zbbef702-e769-2233-9f16-bc4d3aa97387&http%3a%2f%2fschemas.microsoft.com%2faccesscontrolservice%2f2010%2f07%2fclaims%2fidentityprovider=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.chinacloudapi.cn%2f&Audience=urn%3aWindowsAzureMediaServices&ExpiresOn=1424263184&Issuer=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.chinacloudapi.cn%2f&HMACSHA256=NWE%2f986Hr5lZTzVGKtC%2ftzHm9n6U%2fxpTFULItxKUGC4%3d\n    x-ms-version: 2.11\n    x-ms-client-request-id: 6bcfd511-a561-448d-a022-a319a89ecffa\n    Host: media.chinacloudapi.cn\n    Content-Length: 68\n    \n    {\"Name\":\"access policy\",\"DurationInMinutes\":43200.0,\"Permissions\":1}\n    \n响应：\n    \n    HTTP/1.1 201 Created\n    Cache-Control: no-cache\n    Content-Length: 311\n    Content-Type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8\n    Location: https:/media.chinacloudapi.cn/api/AccessPolicies('nb%3Apid%3AUUID%3A69c80d98-7830-407f-a9af-e25f4b0d3e5f')\n    Server: Microsoft-IIS/8.5\n    request-id: a877528a-bdb4-4414-9862-273f8e64f882\n    x-ms-request-id: a877528a-bdb4-4414-9862-273f8e64f882\n    x-ms-client-request-id: 6bcfd511-a561-448d-a022-a319a89ecffa\n    X-Content-Type-Options: nosniff\n    DataServiceVersion: 3.0;\n    X-Powered-By: ASP.NET\n    Strict-Transport-Security: max-age=31536000; includeSubDomains\n    Date: Wed, 18 Feb 2015 06:52:09 GMT\n    \n    {\"odata.metadata\":\"https://media.chinacloudapi.cn/api/$metadata#AccessPolicies/@Element\",\"Id\":\"nb:pid:UUID:69c80d98-7830-407f-a9af-e25f4b0d3e5f\",\"Created\":\"2015-02-18T06:52:09.8862191Z\",\"LastModified\":\"2015-02-18T06:52:09.8862191Z\",\"Name\":\"access policy\",\"DurationInMinutes\":43200.0,\"Permissions\":1}\n\n###创建 OnDemand 流式处理定位符\n\n创建指定资产和资产策略的定位符。\n\n请求：\n    \n    POST https://media.chinacloudapi.cn/api/Locators HTTP/1.1\n    Content-Type: application/json\n    DataServiceVersion: 1.0;NetFx\n    MaxDataServiceVersion: 3.0;NetFx\n    Accept: application/json\n    Accept-Charset: UTF-8\n    Authorization: Bearer http%3a%2f%2fschemas.xmlsoap.org%2fws%2f2005%2f05%2fidentity%2fclaims%2fnameidentifier=amstest1&urn%3aSubscriptionId=bbbef702-e769-477b-9f16-bc4d3aa97387&http%3a%2f%2fschemas.microsoft.com%2faccesscontrolservice%2f2010%2f07%2fclaims%2fidentityprovider=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.chinacloudapi.cn%2f&Audience=urn%3aWindowsAzureMediaServices&ExpiresOn=1424263184&Issuer=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.chinacloudapi.cn%2f&HMACSHA256=NWE%2f986Hr5lZTzVGKtC%2ftzHm9n6U%2fxpTFULItxKUGC4%3d\n    x-ms-version: 2.11\n    x-ms-client-request-id: ac159492-9a0c-40c3-aacc-551b1b4c5f62\n    Host: media.chinacloudapi.cn\n    Content-Length: 181\n    \n    {\"AccessPolicyId\":\"nb:pid:UUID:1480030d-c481-430a-9687-535c6a5cb272\",\"AssetId\":\"nb:cid:UUID:cc1e445d-1500-80bd-538e-f1e4b71b465e\",\"StartTime\":\"2015-02-18T06:34:47.267872Z\",\"Type\":2}\n\n响应：\n    \n    HTTP/1.1 201 Created\n    Cache-Control: no-cache\n    Content-Length: 637\n    Content-Type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8\n    Location: https://media.chinacloudapi.cn/api/Locators('nb%3Alid%3AUUID%3Abe245661-2bbd-4fc6-b14f-9cf9a1492e5e')\n    Server: Microsoft-IIS/8.5\n    request-id: 5bd5864a-0afd-44c0-a67a-4044a2c9043b\n    x-ms-request-id: 5bd5864a-0afd-44c0-a67a-4044a2c9043b\n    x-ms-client-request-id: ac159492-9a0c-40c3-aacc-551b1b4c5f62\n    X-Content-Type-Options: nosniff\n    DataServiceVersion: 3.0;\n    X-Powered-By: ASP.NET\n    Strict-Transport-Security: max-age=31536000; includeSubDomains\n    Date: Wed, 18 Feb 2015 06:58:37 GMT\n    \n    {\"odata.metadata\":\"https://media.chinacloudapi.cn/api/$metadata#Locators/@Element\",\"Id\":\"nb:lid:UUID:be245661-2bbd-4fc6-b14f-9cf9a1492e5e\",\"ExpirationDateTime\":\"2015-03-20T06:34:47.267872+00:00\",\"Type\":2,\"Path\":\"http://amstest1.streaming.mediaservices.chinacloudapi.cn/be245661-2bbd-4fc6-b14f-9cf9a1492e5e/\",\"BaseUri\":\"http://amstest1.streaming.mediaservices.chinacloudapi.cn\",\"ContentAccessComponent\":\"be245661-2bbd-4fc6-b14f-9cf9a1492e5e\",\"AccessPolicyId\":\"nb:pid:UUID:1480030d-c481-430a-9687-535c6a5cb272\",\"AssetId\":\"nb:cid:UUID:cc1e445d-1500-80bd-538e-f1e4b71b465e\",\"StartTime\":\"2015-02-18T06:34:47.267872+00:00\",\"Name\":null}\n\n###生成流 URL\n\n使用创建定位符后返回的**路径**值生成平滑流式处理、HLS 和 MPEG DASH URL。\n\n平滑流式处理：**路径** + 清单文件名 +“/manifest”\n\n示例：\n\n    http://amstest1.streaming.mediaservices.chinacloudapi.cn/3c5fe676-199c-4620-9b03-ba014900f214/BigBuckBunny.ism/manifest\n\nHLS：**路径** + 清单文件名 +“/manifest(format=m3u8-aapl)”\n\n示例：\n\n    http://amstest1.streaming.mediaservices.chinacloudapi.cn/3c5fe676-199c-4620-9b03-ba014900f214/BigBuckBunny.ism/manifest(format=m3u8-aapl)\n\n\nDASH：**路径** + 清单文件名 +“/manifest(format=mpd-time-csf)”\n\n\n示例：\n\n    http://amstest1.streaming.mediaservices.chinacloudapi.cn/3c5fe676-199c-4620-9b03-ba014900f214/BigBuckBunny.ism/manifest(format=mpd-time-csf)\n\n\n###生成渐进式下载 URL\n\n使用创建定位符后返回的**路径**值生成渐进式下载 URL。\n\nURL：**路径** + 资产文件 mp4 名称\n\n示例：\n\n    http://amstest1.streaming.mediaservices.chinacloudapi.cn/3c5fe676-199c-4620-9b03-ba014900f214/BigBuckBunny_H264_650kbps_AAC_und_ch2_96kbps.mp4\n\n##<a id=\"types\"></a>枚举类型\n\n    [Flags]\n    public enum AccessPermissions\n    {\n        None = 0,\n        Read = 1,\n        Write = 2,\n        Delete = 4,\n        List = 8,\n    }\n\n    public enum LocatorType\n    {\n        None = 0,\n        Sas = 1,\n        OnDemandOrigin = 2,\n    }\n\n<!---HONumber=76-->"
}