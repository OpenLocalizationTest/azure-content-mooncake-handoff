{
  "nodes": [
    {
      "content": "在 Eclipse 的 Package Explorer 中，打开 ToDoActivity.java 文件，然后添加以下 import 语句。",
      "pos": [
        4,
        76
      ]
    },
    {
      "pos": [
        545,
        573
      ],
      "content": "将以下方法添加到 <bpt id=\"p1\">**</bpt>ToDoActivity<ept id=\"p1\">**</ept> 类："
    },
    {
      "content": "}",
      "pos": [
        1328,
        1329
      ]
    },
    {
      "pos": [
        1563,
        1624
      ],
      "content": "在 <bpt id=\"p1\">**</bpt>onCreate<ept id=\"p1\">**</ept> 方法中，在实例化 <ph id=\"ph1\">`MobileServiceClient`</ph> 对象的代码后面添加以下代码行。"
    },
    {
      "content": "此调用启动身份验证过程。",
      "pos": [
        1655,
        1667
      ]
    },
    {
      "pos": [
        1672,
        1745
      ],
      "content": "将 <bpt id=\"p1\">**</bpt>onCreate<ept id=\"p1\">**</ept> 方法中 <ph id=\"ph1\">`authenticate();`</ph> 后面的剩余代码移到新的 <bpt id=\"p2\">**</bpt>createTable<ept id=\"p2\">**</ept> 方法，如下所示："
    },
    {
      "content": "然后，从“运行”菜单中单击“运行”以启动应用程序，并使用所选的标识提供程序登录。",
      "pos": [
        2365,
        2405
      ]
    },
    {
      "content": "当您成功登录时，应用应该运行而不出现错误，您应该能够查询移动服务，并对数据进行更新。",
      "pos": [
        2411,
        2453
      ]
    }
  ],
  "content": "\n1. 在 Eclipse 的 Package Explorer 中，打开 ToDoActivity.java 文件，然后添加以下 import 语句。\n\n        import java.util.concurrent.ExecutionException;\n        import java.util.concurrent.atomic.AtomicBoolean;\n\n        import android.content.Context;\n        import android.content.SharedPreferences;\n        import android.content.SharedPreferences.Editor;\n\n        import com.microsoft.windowsazure.mobileservices.authentication.MobileServiceAuthenticationProvider;\n        import com.microsoft.windowsazure.mobileservices.authentication.MobileServiceUser;\n\n2. 将以下方法添加到 **ToDoActivity** 类： \n    \n        private void authenticate() { // Login using the Google provider.\n        \n        ListenableFuture<MobileServiceUser> mLogin = mClient.login(MobileServiceAuthenticationProvider.Google);\n\n        Futures.addCallback(mLogin, new FutureCallback<MobileServiceUser>() {\n            @Override\n            public void onFailure(Throwable exc) {\n                createAndShowDialog((Exception) exc, \"Error\");\n            }           \n            @Override\n            public void onSuccess(MobileServiceUser user) {\n                createAndShowDialog(String.format(\n                        \"You are now logged in - %1$2s\",\n                        user.getUserId()), \"Success\");\n                createTable();  \n            }\n        });     \n    }\n\n\n    这将会创建一个用于处理身份验证过程的新方法。将使用 Google 登录对用户进行身份验证。此时将出现一个对话框，其中显示了已经过身份验证的用户的 ID。如果未正常完成身份验证，你将无法继续操作。\n\n    > [AZURE.NOTE] 如果使用的标识提供程序不是 Google，请将传递给上述 **login** 方法的值更改为下列其中一项：_MicrosoftAccount_ 或 _windowsazureactivedirectory_。\n\n3. 在 **onCreate** 方法中，在实例化 `MobileServiceClient` 对象的代码后面添加以下代码行。\n\n        authenticate();\n\n    此调用启动身份验证过程。\n\n4. 将 **onCreate** 方法中 `authenticate();` 后面的剩余代码移到新的 **createTable** 方法，如下所示：\n\n        private void createTable() {\n    \n            // Get the Mobile Service Table instance to use\n            mToDoTable = mClient.getTable(ToDoItem.class);\n    \n            mTextNewToDo = (EditText) findViewById(R.id.textNewToDo);\n    \n            // Create an adapter to bind the items with the view\n            mAdapter = new ToDoItemAdapter(this, R.layout.row_list_to_do);\n            ListView listViewToDo = (ListView) findViewById(R.id.listViewToDo);\n            listViewToDo.setAdapter(mAdapter);\n    \n            // Load the items from the Mobile Service\n            refreshItemsFromTable();\n        }\n\n5. 然后，从“运行”菜单中单击“运行”以启动应用程序，并使用所选的标识提供程序登录。\n\n    当您成功登录时，应用应该运行而不出现错误，您应该能够查询移动服务，并对数据进行更新。\n\n<!---HONumber=74-->"
}