{
  "nodes": [
    {
      "content": "使用 Apache Storm on HDInsight 处理车辆传感器数据 | Azure",
      "pos": [
        24,
        70
      ]
    },
    {
      "content": "了解如何使用 Apache Storm on HDInsight 处理事件中心的车辆传感器数据。添加 DocumentDB 提供的车型数据，然后将输出存储到存储空间。",
      "pos": [
        86,
        169
      ]
    },
    {
      "content": "使用 Apache Storm on HDInsight 处理 Azure 事件中心的车辆传感器数据",
      "pos": [
        398,
        448
      ]
    },
    {
      "content": "了解如何使用 Apache Storm on HDInsight 处理 Azure 事件中心的车辆传感器数据。此示例读取 Azure 事件中心的传感器数据，通过引用存储在 Azure DocumentDB 中的数据来丰富数据，最后使用 Hadoop 文件系统 (HDFS) 将数据存储在 Azure 存储空间。",
      "pos": [
        450,
        605
      ]
    },
    {
      "content": "HDInsight 和物联网 (IoT) 体系结构关系图",
      "pos": [
        609,
        637
      ]
    },
    {
      "content": "概述",
      "pos": [
        699,
        701
      ]
    },
    {
      "content": "向车辆添加传感器可以根据历史数据趋势预测设备问题，并可根据使用模式分析改进未来版本。虽然传统的 MapReduce 批处理可以用于这种分析，但你必须能够快速有效地将所有车辆的数据加载到 Hadoop 中，然后才能进行 MapReduce 处理。此外，你可能还希望能够实时地针对关键故障路径（引擎温度、刹车等）进行分析。",
      "pos": [
        703,
        862
      ]
    },
    {
      "content": "Azure 事件中心可用于处理传感器生成的大量数据，而 Apache Storm on HDInsight 则可用于加载和处理这些数据，然后将这些数据存储到 HDFS（由 Azure 存储空间提供支持）中，以便进行额外的 MapReduce 处理。",
      "pos": [
        864,
        988
      ]
    },
    {
      "content": "解决方案",
      "pos": [
        992,
        996
      ]
    },
    {
      "content": "关于引擎温度、环境温度和车速的遥测数据将由传感器记录，然后与车辆的车辆识别号 (VIN) 及时间戳一起发送到事件中心。在事件中心，运行在 Apache Storm on HDInsight 群集上的 Storm 拓扑将读取并处理数据，然后将其存储到 HDFS 中。",
      "pos": [
        998,
        1130
      ]
    },
    {
      "content": "在处理期间，VIN 用于从 Azure DocumentDB 检索车型信息。该信息在存储之前会添加到数据流中。",
      "pos": [
        1132,
        1187
      ]
    },
    {
      "content": "在 Storm 拓扑中使用的组件包括：",
      "pos": [
        1189,
        1208
      ]
    },
    {
      "pos": [
        1212,
        1248
      ],
      "content": "<bpt id=\"p1\">**</bpt>EventHubSpout<ept id=\"p1\">**</ept> - 从 Azure 事件中心读取数据"
    },
    {
      "pos": [
        1252,
        1329
      ],
      "content": "<bpt id=\"p1\">**</bpt>TypeConversionBolt<ept id=\"p1\">**</ept> - 将事件中心提供的 JSON 字符串转换为包含引擎温度、环境温度、车速、VIN 和时间戳等各项数据值的元组"
    },
    {
      "pos": [
        1333,
        1380
      ],
      "content": "<bpt id=\"p1\">**</bpt>DataReferencBolt<ept id=\"p1\">**</ept> - 使用 VIN 从 DocumentDB 查找车型"
    },
    {
      "pos": [
        1384,
        1427
      ],
      "content": "<bpt id=\"p1\">**</bpt>WasbStoreBolt<ept id=\"p1\">**</ept> - 将数据存储到 HDFS（Azure 存储空间）"
    },
    {
      "content": "下面是此解决方案的图示：",
      "pos": [
        1429,
        1441
      ]
    },
    {
      "content": "storm 拓扑",
      "pos": [
        1445,
        1453
      ]
    },
    {
      "pos": [
        1523,
        1611
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>这是一个简化的关系图，解决方案中的每个组件可能有多个实例。例如，拓扑中每个组件的多个实例分布在 Storm on HDInsight 群集的多个节点中。"
    },
    {
      "content": "实现",
      "pos": [
        1615,
        1617
      ]
    },
    {
      "pos": [
        1619,
        1888
      ],
      "content": "GitHub 上的 <ph id=\"ph1\">&lt;a href=\"https://github.com/hdinsight/hdinsight-storm-examples\" target=\"_blank\"&gt;</ph>HDInsight-Storm-Examples<ph id=\"ph2\">&lt;/a&gt;</ph> 存储库中提供了这种情况的完整自动化解决方案。若要使用此示例，请遵循 <bpt id=\"p1\">[</bpt>IoTExample README.MD<ept id=\"p1\">](https://github.com/hdinsight/hdinsight-storm-examples/blob/master/IotExample/README.md)</ept> 中的步骤。"
    },
    {
      "content": "后续步骤",
      "pos": [
        1893,
        1897
      ]
    },
    {
      "pos": [
        1899,
        2003
      ],
      "content": "如需更多 Storm 拓扑示例，请参阅 <bpt id=\"p1\">[</bpt>Storm on HDInsight 拓扑示例<ept id=\"p1\">](/documentation/articles/hdinsight-storm-example-topology)</ept>。"
    }
  ],
  "content": "<properties\n pageTitle=\"使用 Apache Storm on HDInsight 处理车辆传感器数据 | Azure\"\n description=\"了解如何使用 Apache Storm on HDInsight 处理事件中心的车辆传感器数据。添加 DocumentDB 提供的车型数据，然后将输出存储到存储空间。\"\n services=\"hdinsight,documentdb,notification-hubs\"\n documentationCenter=\"\"\n authors=\"Blackmist\"\n manager=\"paulettm\"\n editor=\"cgronlun\"/>\n\n<tags\n    ms.service=\"hdinsight\"\n    ms.date=\"01/08/2016\"\n    wacn.date=\"03/03/2016\"/>\n\n#使用 Apache Storm on HDInsight 处理 Azure 事件中心的车辆传感器数据\n\n了解如何使用 Apache Storm on HDInsight 处理 Azure 事件中心的车辆传感器数据。此示例读取 Azure 事件中心的传感器数据，通过引用存储在 Azure DocumentDB 中的数据来丰富数据，最后使用 Hadoop 文件系统 (HDFS) 将数据存储在 Azure 存储空间。\n\n![HDInsight 和物联网 (IoT) 体系结构关系图](./media/hdinsight-storm-iot-eventhub-documentdb/iot.png)\n\n##概述\n\n向车辆添加传感器可以根据历史数据趋势预测设备问题，并可根据使用模式分析改进未来版本。虽然传统的 MapReduce 批处理可以用于这种分析，但你必须能够快速有效地将所有车辆的数据加载到 Hadoop 中，然后才能进行 MapReduce 处理。此外，你可能还希望能够实时地针对关键故障路径（引擎温度、刹车等）进行分析。\n\nAzure 事件中心可用于处理传感器生成的大量数据，而 Apache Storm on HDInsight 则可用于加载和处理这些数据，然后将这些数据存储到 HDFS（由 Azure 存储空间提供支持）中，以便进行额外的 MapReduce 处理。\n\n##解决方案\n\n关于引擎温度、环境温度和车速的遥测数据将由传感器记录，然后与车辆的车辆识别号 (VIN) 及时间戳一起发送到事件中心。在事件中心，运行在 Apache Storm on HDInsight 群集上的 Storm 拓扑将读取并处理数据，然后将其存储到 HDFS 中。\n\n在处理期间，VIN 用于从 Azure DocumentDB 检索车型信息。该信息在存储之前会添加到数据流中。\n\n在 Storm 拓扑中使用的组件包括：\n\n* **EventHubSpout** - 从 Azure 事件中心读取数据\n\n* **TypeConversionBolt** - 将事件中心提供的 JSON 字符串转换为包含引擎温度、环境温度、车速、VIN 和时间戳等各项数据值的元组\n\n* **DataReferencBolt** - 使用 VIN 从 DocumentDB 查找车型\n\n* **WasbStoreBolt** - 将数据存储到 HDFS（Azure 存储空间）\n\n下面是此解决方案的图示：\n\n![storm 拓扑](./media/hdinsight-storm-iot-eventhub-documentdb/iottopology.png)\n\n> [AZURE.NOTE]这是一个简化的关系图，解决方案中的每个组件可能有多个实例。例如，拓扑中每个组件的多个实例分布在 Storm on HDInsight 群集的多个节点中。\n\n##实现\n\nGitHub 上的 <a href=\"https://github.com/hdinsight/hdinsight-storm-examples\" target=\"_blank\">HDInsight-Storm-Examples</a> 存储库中提供了这种情况的完整自动化解决方案。若要使用此示例，请遵循 [IoTExample README.MD](https://github.com/hdinsight/hdinsight-storm-examples/blob/master/IotExample/README.md) 中的步骤。\n\n## 后续步骤\n\n如需更多 Storm 拓扑示例，请参阅 [Storm on HDInsight 拓扑示例](/documentation/articles/hdinsight-storm-example-topology)。\n\n<!---HONumber=Mooncake_1207_2015-->"
}