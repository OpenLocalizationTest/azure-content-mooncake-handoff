{
  "nodes": [
    {
      "content": "使用 PowerShell 创建和管理弹性数据库作业",
      "pos": [
        28,
        54
      ]
    },
    {
      "content": "使用 PowerShell 管理 Azure SQL 数据库池",
      "pos": [
        74,
        105
      ]
    },
    {
      "content": "使用 PowerShell 创建和管理 SQL 数据库弹性数据库作业（预览版）",
      "pos": [
        305,
        344
      ]
    },
    {
      "content": "[AZURE.SELECTOR]",
      "pos": [
        348,
        364
      ]
    },
    {
      "content": "Azure 经典门户",
      "pos": [
        368,
        378
      ]
    },
    {
      "content": "PowerShell",
      "pos": [
        452,
        462
      ]
    },
    {
      "pos": [
        529,
        702
      ],
      "content": "使用适用于<bpt id=\"p1\">**</bpt>弹性数据库作业<ept id=\"p1\">**</ept>的 PowerShell API（预览版），可以定义要针对哪组数据库执行哪些脚本。本文说明如何使用 PowerShell cmdlet 创建和管理<bpt id=\"p2\">**</bpt>弹性数据库作业<ept id=\"p2\">**</ept>。请参阅<bpt id=\"p3\">[</bpt>弹性作业概述<ept id=\"p3\">](/documentation/articles/sql-database-elastic-jobs-overview)</ept>。"
    },
    {
      "content": "先决条件",
      "pos": [
        707,
        711
      ]
    },
    {
      "pos": [
        714,
        762
      ],
      "content": "Azure 订阅。若要获取试用版，请参阅<bpt id=\"p1\">[</bpt>1元试用<ept id=\"p1\">](/pricing/1rmb-trial)</ept>。"
    },
    {
      "pos": [
        765,
        862
      ],
      "content": "使用弹性数据库工具创建的一组数据库。请参阅<bpt id=\"p1\">[</bpt>弹性数据库工具入门<ept id=\"p1\">](/documentation/articles/sql-database-elastic-scale-get-started)</ept>。"
    },
    {
      "pos": [
        865,
        973
      ],
      "content": "Azure PowerShell。有关详细信息，请参阅<bpt id=\"p1\">[</bpt>如何安装和配置 Azure PowerShell<ept id=\"p1\">](/documentation/articles/powershell-install-configure)</ept>。"
    },
    {
      "pos": [
        976,
        1087
      ],
      "content": "<bpt id=\"p1\">**</bpt>弹性数据库作业<ept id=\"p1\">**</ept> PowerShell 包：请参阅<bpt id=\"p2\">[</bpt>安装弹性数据库作业<ept id=\"p2\">](/documentation/articles/sql-database-elastic-jobs-service-installation)</ept>"
    },
    {
      "content": "选择 Azure 订阅",
      "pos": [
        1093,
        1104
      ]
    },
    {
      "pos": [
        1106,
        1282
      ],
      "content": "若要选择订阅，你需要提供订阅 ID (<bpt id=\"p1\">**</bpt>-SubscriptionId<ept id=\"p1\">**</ept>) 或订阅名称 (<bpt id=\"p2\">**</bpt>-SubscriptionName<ept id=\"p2\">**</ept>)。如果你有多个订阅，你可以运行 <bpt id=\"p3\">**</bpt>Get-Subscription<ept id=\"p3\">**</ept> cmdlet，然后从结果集中复制所需的订阅信息。获取订阅信息后，请执行以下 cmdlet 将此订阅设置为默认值，也就是创建和管理作业的目标："
    },
    {
      "pos": [
        1347,
        1457
      ],
      "content": "建议使用 <bpt id=\"p1\">[</bpt>PowerShell ISE<ept id=\"p1\">](https://technet.microsoft.com/zh-cn/library/dd315244.aspx)</ept> 针对弹性数据库作业开发和执行 PowerShell 脚本。"
    },
    {
      "content": "弹性数据库作业对象",
      "pos": [
        1462,
        1471
      ]
    },
    {
      "pos": [
        1473,
        1519
      ],
      "content": "下表列出了<bpt id=\"p1\">**</bpt>弹性数据库作业<ept id=\"p1\">**</ept>的所有对象类型及其描述和相关 PowerShell API。"
    },
    {
      "content": "对象类型",
      "pos": [
        1563,
        1567
      ]
    },
    {
      "content": "说明",
      "pos": [
        1581,
        1583
      ]
    },
    {
      "content": "相关的 PowerShell API",
      "pos": [
        1597,
        1615
      ]
    },
    {
      "content": "凭据",
      "pos": [
        1644,
        1646
      ]
    },
    {
      "content": "连接到数据库以执行脚本或应用 DACPAC 时使用的用户名和密码。",
      "pos": [
        1660,
        1693
      ]
    },
    {
      "content": "密码在发送并存储在弹性数据库作业数据库之前会经过加密。密码由弹性数据库作业服务通过安装脚本创建和上载的凭据解密。",
      "pos": [
        1696,
        1752
      ]
    },
    {
      "content": "Get-AzureSqlJobCredential",
      "pos": [
        1769,
        1794
      ]
    },
    {
      "content": "New-AzureSqlJobCredential",
      "pos": [
        1806,
        1831
      ]
    },
    {
      "content": "Set-AzureSqlJobCredential",
      "pos": [
        1838,
        1863
      ]
    },
    {
      "content": "脚本",
      "pos": [
        1902,
        1904
      ]
    },
    {
      "content": "用于跨数据库执行的 Transact-SQL 脚本。脚本应该编写为幂等，因为服务将在失败时重试执行脚本。",
      "pos": [
        1918,
        1970
      ]
    },
    {
      "content": "Get-AzureSqlJobContent",
      "pos": [
        1997,
        2019
      ]
    },
    {
      "content": "Get-AzureSqlJobContentDefinition",
      "pos": [
        2031,
        2063
      ]
    },
    {
      "content": "New-AzureSqlJobContent",
      "pos": [
        2075,
        2097
      ]
    },
    {
      "content": "Set-AzureSqlJobContentDefinition",
      "pos": [
        2109,
        2141
      ]
    },
    {
      "content": "DACPAC",
      "pos": [
        2180,
        2186
      ]
    },
    {
      "content": "跨数据库应用的<ph id=\"ph1\">&lt;a href=\"https://msdn.microsoft.com/zh-cn/library/ee210546.aspx\"&gt;</ph>数据层应用程序<ph id=\"ph2\">&lt;/a&gt;</ph>包。",
      "pos": [
        2200,
        2285
      ]
    },
    {
      "content": "数据库目标",
      "pos": [
        2451,
        2456
      ]
    },
    {
      "content": "指向 Azure SQL 数据库的数据库和服务器名称。",
      "pos": [
        2470,
        2497
      ]
    },
    {
      "content": "分片映射目标",
      "pos": [
        2617,
        2623
      ]
    },
    {
      "content": "数据库目标和凭据的组合，用于确定弹性数据库分片映射内存储的信息。",
      "pos": [
        2637,
        2669
      ]
    },
    {
      "content": "Get-AzureSqlJobTarget",
      "pos": [
        2696,
        2717
      ]
    },
    {
      "content": "New-AzureSqlJobTarget",
      "pos": [
        2729,
        2750
      ]
    },
    {
      "content": "Set-AzureSqlJobTarget",
      "pos": [
        2762,
        2783
      ]
    },
    {
      "content": "自定义集合目标",
      "pos": [
        2819,
        2826
      ]
    },
    {
      "content": "共同用于执行的已定义数据库组。",
      "pos": [
        2840,
        2855
      ]
    },
    {
      "content": "Get-AzureSqlJobTarget",
      "pos": [
        2877,
        2898
      ]
    },
    {
      "content": "New-AzureSqlJobTarget",
      "pos": [
        2910,
        2931
      ]
    },
    {
      "content": "自定义集合子目标",
      "pos": [
        2967,
        2975
      ]
    },
    {
      "content": "从自定义集合引用的数据库目标。",
      "pos": [
        2989,
        3004
      ]
    },
    {
      "content": "Add-AzureSqlJobChildTarget",
      "pos": [
        3026,
        3052
      ]
    },
    {
      "content": "Remove-AzureSqlJobChildTarget",
      "pos": [
        3064,
        3093
      ]
    },
    {
      "content": "作业",
      "pos": [
        3130,
        3132
      ]
    },
    {
      "content": "作业参数的定义，可用于触发执行或完成计划。",
      "pos": [
        3154,
        3175
      ]
    },
    {
      "content": "Get-AzureSqlJob",
      "pos": [
        3206,
        3221
      ]
    },
    {
      "content": "New-AzureSqlJob",
      "pos": [
        3233,
        3248
      ]
    },
    {
      "content": "Set-AzureSqlJob",
      "pos": [
        3260,
        3275
      ]
    },
    {
      "content": "作业执行",
      "pos": [
        3312,
        3316
      ]
    },
    {
      "content": "必要的任务容器，以便使用数据库连接的凭据执行脚本或将 DACPAC 应用到目标，将会根据执行策略处理失败。",
      "pos": [
        3338,
        3391
      ]
    },
    {
      "content": "Get-AzureSqlJobExecution",
      "pos": [
        3422,
        3446
      ]
    },
    {
      "content": "Start-AzureSqlJobExecution",
      "pos": [
        3458,
        3484
      ]
    },
    {
      "content": "Stop-AzureSqlJobExecution",
      "pos": [
        3496,
        3521
      ]
    },
    {
      "content": "Wait-AzureSqlJobExecution",
      "pos": [
        3533,
        3558
      ]
    },
    {
      "content": "作业任务执行",
      "pos": [
        3585,
        3591
      ]
    },
    {
      "content": "用于完成作业的单个工作单位。",
      "pos": [
        3613,
        3627
      ]
    },
    {
      "content": "如果某个作业任务无法成功执行，将记录生成的异常消息，创建新的匹配作业任务并根据指定的执行策略执行。",
      "pos": [
        3639,
        3688
      ]
    },
    {
      "content": "Get-AzureSqlJobExecution",
      "pos": [
        3723,
        3747
      ]
    },
    {
      "content": "Start-AzureSqlJobExecution",
      "pos": [
        3759,
        3785
      ]
    },
    {
      "content": "Stop-AzureSqlJobExecution",
      "pos": [
        3797,
        3822
      ]
    },
    {
      "content": "Wait-AzureSqlJobExecution",
      "pos": [
        3834,
        3859
      ]
    },
    {
      "content": "作业执行策略",
      "pos": [
        3886,
        3892
      ]
    },
    {
      "content": "控制作业执行超时、重试限制和重试间隔。",
      "pos": [
        3914,
        3933
      ]
    },
    {
      "content": "弹性数据库作业包括默认作业执行策略，该策略在本质上会导致使用重试间隔的指数回退无限期重试失败的作业任务。",
      "pos": [
        3945,
        3997
      ]
    },
    {
      "content": "Get-AzureSqlJobExecutionPolicy",
      "pos": [
        4028,
        4058
      ]
    },
    {
      "content": "New-AzureSqlJobExecutionPolicy",
      "pos": [
        4070,
        4100
      ]
    },
    {
      "content": "Set-AzureSqlJobExecutionPolicy",
      "pos": [
        4112,
        4142
      ]
    },
    {
      "content": "计划",
      "pos": [
        4179,
        4181
      ]
    },
    {
      "content": "基于时间的执行指定在重复间隔发生或单次数发生。",
      "pos": [
        4203,
        4226
      ]
    },
    {
      "content": "Get-AzureSqlJobSchedule",
      "pos": [
        4257,
        4280
      ]
    },
    {
      "content": "New-AzureSqlJobSchedule",
      "pos": [
        4292,
        4315
      ]
    },
    {
      "content": "Set-AzureSqlJobSchedule",
      "pos": [
        4327,
        4350
      ]
    },
    {
      "content": "作业触发器",
      "pos": [
        4387,
        4392
      ]
    },
    {
      "content": "作业与计划之间的映射，用于根据计划触发作业执行。",
      "pos": [
        4414,
        4438
      ]
    },
    {
      "content": "New-AzureSqlJobTrigger",
      "pos": [
        4469,
        4491
      ]
    },
    {
      "content": "Remove-AzureSqlJobTrigger",
      "pos": [
        4503,
        4528
      ]
    },
    {
      "content": "支持的弹性数据库作业组类型",
      "pos": [
        4564,
        4577
      ]
    },
    {
      "content": "该作业可以跨数据库组执行 Transact-SQL (T-SQL) 脚本或应用 DACPAC。提交需要跨数据库组执行的作业时，该作业将“扩展”到子作业中，其中的每个作业会针对组中的单一数据库执行请求的执行操作。",
      "pos": [
        4578,
        4683
      ]
    },
    {
      "content": "有两种可以创建的组类型：",
      "pos": [
        4686,
        4698
      ]
    },
    {
      "pos": [
        4702,
        4840
      ],
      "content": "<bpt id=\"p1\">[</bpt>分片映射<ept id=\"p1\">](/documentation/articles/sql-database-elastic-scale-shard-map-management)</ept>组：提交以分片映射为目标的作业时，该作业会通过查询分片映射来确定其当前的分片集，然后为分片映射中的每个分片创建子作业。"
    },
    {
      "content": "自定义集合组：一种自定义数据库集。当作业以自定义集合为目标时，它会针对当前位于自定义集合中的每个数据库创建子作业。",
      "pos": [
        4843,
        4900
      ]
    },
    {
      "content": "设置弹性数据库作业连接",
      "pos": [
        4905,
        4916
      ]
    },
    {
      "pos": [
        4918,
        5026
      ],
      "content": "在使用作业 API 之前，需设置作业<bpt id=\"p1\">*</bpt>控制数据库<ept id=\"p1\">*</ept> 连接。如果运行此 cmdlet，则会在安装弹性数据库作业时触发一个弹出式凭据窗口，请求用户提供已创建的用户名/密码。本主题中提供的所有示例都假设已经执行第一个步骤。"
    },
    {
      "content": "建立与弹性数据库作业的连接：",
      "pos": [
        5028,
        5042
      ]
    },
    {
      "content": "弹性数据库作业中的已加密凭据",
      "pos": [
        5105,
        5119
      ]
    },
    {
      "pos": [
        5121,
        5172
      ],
      "content": "数据库凭据可以插入密码已加密的作业<bpt id=\"p1\">*</bpt>控制数据库<ept id=\"p1\">*</ept>。必须存储凭据，使作业可以在稍后执行（使用作业计划）。"
    },
    {
      "pos": [
        5175,
        5314
      ],
      "content": "加密是通过创建为安装脚本一部分的证书来进行的。安装脚本创建证书并将其上载到 Azure 云服务，以解密已存储的加密密码。Azure 云服务稍后在作业<bpt id=\"p1\">*</bpt>控制数据库<ept id=\"p1\">*</ept> 内存储公钥，让 PowerShell API 或 Azure 经典门户界面加密提供的密码，而不需要在本地安装证书。"
    },
    {
      "content": "凭据密码经过加密后，无法供只能通过只读方式访问弹性数据库作业对象的用户访问。不过，具有弹性数据库作业对象读-写访问权限的恶意用户可能会提取密码。凭据设计为跨作业执行重复使用。在建立连接时，凭据将传递到目标数据库。适用于每个凭据的目标数据库目前并没有受到限制，因此恶意用户可以针对自己所控制的数据库来添加数据库目标。然后，该用户可以启动一个针对该数据库的作业，从而获取凭据的密码。",
      "pos": [
        5317,
        5506
      ]
    },
    {
      "content": "弹性数据库作业安全方面的最佳实践包括：",
      "pos": [
        5508,
        5527
      ]
    },
    {
      "content": "将 API 的使用限制为受信任的个人。",
      "pos": [
        5531,
        5550
      ]
    },
    {
      "pos": [
        5553,
        5668
      ],
      "content": "凭据应该具有执行作业任务所需的最低权限。有关详细信息，请参阅这篇<bpt id=\"p1\">[</bpt>授权和权限<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/bb669084.aspx)</ept> SQL Server MSDN 文章。"
    },
    {
      "content": "跨数据库创建执行作业所需的加密凭据",
      "pos": [
        5674,
        5691
      ]
    },
    {
      "pos": [
        5693,
        5906
      ],
      "content": "创建新的加密凭据时，<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Get-Credential cmdlet<ept id=\"p2\">**</ept><ept id=\"p1\">](https://technet.microsoft.com/zh-cn/library/hh849815.aspx)</ept> 会提示用户输入可以传递给 <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>New-AzureSqlJobCredential cmdlet<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/zh-cn/library/mt346063.aspx)</ept> 的用户名和密码。"
    },
    {
      "content": "更新凭据",
      "pos": [
        6133,
        6137
      ]
    },
    {
      "pos": [
        6139,
        6271
      ],
      "content": "当密码更改时，请使用 <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Set-AzureSqlJobCredential cmdlet<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/mt346062.aspx)</ept> 并设置 <bpt id=\"p3\">**</bpt>CredentialName<ept id=\"p3\">**</ept> 参数。"
    },
    {
      "content": "定义弹性数据库分片映射目标",
      "pos": [
        6406,
        6419
      ]
    },
    {
      "pos": [
        6421,
        6647
      ],
      "content": "若要针对分片集（使用<bpt id=\"p1\">[</bpt>弹性数据库客户端库<ept id=\"p1\">](/documentation/articles/sql-database-elastic-database-client-library)</ept>创建）中的所有数据库执行作业，请将分片映射用作数据库目标。本示例要求使用弹性数据库客户端库创建分片应用程序。请参阅<bpt id=\"p2\">[</bpt>弹性数据库工具示例入门<ept id=\"p2\">](/documentation/articles/sql-database-elastic-scale-get-started)</ept>。"
    },
    {
      "content": "使用示例应用程序创建分片映射管理器",
      "pos": [
        6652,
        6669
      ]
    },
    {
      "content": "本示例将创建分片映射管理器以及多个分片，然后将数据插入分片。",
      "pos": [
        6671,
        6701
      ]
    },
    {
      "pos": [
        6706,
        6887
      ],
      "content": "生成并运行<bpt id=\"p1\">**</bpt>弹性数据库工具入门<ept id=\"p1\">**</ept>示例应用程序。一直执行到<bpt id=\"p2\">[</bpt>下载和运行示例应用<ept id=\"p2\">](/documentation/articles/sql-database-elastic-scale-get-started/#Getting-started-with-elastic-database-tools)</ept>部分中的步骤 7。在步骤 7 结束时，你将看到以下命令提示符："
    },
    {
      "content": "命令提示符",
      "pos": [
        6895,
        6900
      ]
    },
    {
      "pos": [
        6910,
        7005
      ],
      "content": "在命令窗口中键入“1”，然后按 <bpt id=\"p1\">**</bpt>Enter<ept id=\"p1\">**</ept>。这会创建分片映射管理器，并将两个分片添加到服务器。然后键入“3”并按 <bpt id=\"p2\">**</bpt>Enter<ept id=\"p2\">**</ept>；重复该操作四次。这会在你的分片中插入示例数据行。"
    },
    {
      "pos": [
        7013,
        7077
      ],
      "content": "<bpt id=\"p1\">[</bpt>Azure 门户<ept id=\"p1\">](https://manage.windowsazure.cn)</ept>应会在 v12 服务器中显示三个新的数据库："
    },
    {
      "content": "Visual Studio 确认",
      "pos": [
        7085,
        7101
      ]
    },
    {
      "pos": [
        7107,
        7251
      ],
      "content": "使用 <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>New-AzureSqlJobCredential cmdlet<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/mt346063.aspx)</ept> 创建分片映射目标。必须将分片映射管理器数据库设置为数据库目标，然后将特定分片映射指定为目标。"
    },
    {
      "content": "创建 T-SQL 脚本用于跨数据库执行",
      "pos": [
        7926,
        7945
      ]
    },
    {
      "pos": [
        7947,
        8068
      ],
      "content": "创建要执行的 T-SQL 脚本时，强烈建议将其构建为<bpt id=\"p1\">[</bpt>幂等<ept id=\"p1\">](https://zh.wikipedia.org/wiki/Idempotence)</ept>模式，以便灵活地应对各种故障。每当执行发生失败时，不论失败的分类，弹性数据库作业将重试执行脚本。"
    },
    {
      "pos": [
        8070,
        8219
      ],
      "content": "使用 <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>New-AzureSqlJobContent cmdlet<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/mt346085.aspx)</ept> 创建并保存执行脚本，然后设置 <bpt id=\"p3\">**</bpt>-ContentName<ept id=\"p3\">**</ept> 和 <bpt id=\"p4\">**</bpt>-CommandText<ept id=\"p4\">**</ept> 参数。"
    },
    {
      "content": "从文件创建新脚本",
      "pos": [
        8716,
        8724
      ]
    },
    {
      "content": "如果 T-SQL 脚本是在文件中定义的，请使用以下语句来导入脚本：",
      "pos": [
        8725,
        8758
      ]
    },
    {
      "content": "更新可以跨数据库执行的 T-SQL 脚本",
      "pos": [
        9029,
        9049
      ]
    },
    {
      "content": "此 PowerShell 脚本更新现有脚本的 T-SQL 命令文本。",
      "pos": [
        9053,
        9087
      ]
    },
    {
      "content": "设置以下变量以反映要设置的所需脚本定义：",
      "pos": [
        9089,
        9109
      ]
    },
    {
      "content": "更新现有脚本的定义",
      "pos": [
        9870,
        9879
      ]
    },
    {
      "content": "创建一个用于跨分片映射执行脚本的作业",
      "pos": [
        10010,
        10028
      ]
    },
    {
      "content": "此 PowerShell 脚本可以启动一个作业，以便跨弹性缩放分片映射中的每个分片来执行脚本。",
      "pos": [
        10030,
        10077
      ]
    },
    {
      "content": "设置以下变量以反映所需的脚本和目标：",
      "pos": [
        10079,
        10097
      ]
    },
    {
      "content": "执行作业",
      "pos": [
        10684,
        10688
      ]
    },
    {
      "content": "此 PowerShell 脚本执行现有作业：",
      "pos": [
        10691,
        10713
      ]
    },
    {
      "content": "更新以下变量以反映要执行的所需作业名称：",
      "pos": [
        10715,
        10735
      ]
    },
    {
      "content": "检索单个作业的执行状态",
      "pos": [
        10867,
        10878
      ]
    },
    {
      "pos": [
        10880,
        11013
      ],
      "content": "使用 <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Get-AzureSqlJobExecution cmdlet<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/mt346058.aspx)</ept> 并设置 <bpt id=\"p3\">**</bpt>JobExecutionId<ept id=\"p3\">**</ept> 参数以查看作业的执行状态。"
    },
    {
      "pos": [
        11167,
        11276
      ],
      "content": "使用相同 <bpt id=\"p1\">**</bpt>Get-AzureSqlJobExecution<ept id=\"p1\">**</ept> cmdlet 搭配 <bpt id=\"p2\">**</bpt>IncludeChildren<ept id=\"p2\">**</ept> 参数，以查看子作业执行的状态，还就是针对作为作业目标的每个数据库的每个作业执行的特定状态。"
    },
    {
      "content": "查看多次执行作业时的状态",
      "pos": [
        11453,
        11465
      ]
    },
    {
      "pos": [
        11467,
        11637
      ],
      "content": "<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Get-AzureSqlJobExecution cmdlet<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/mt346058.aspx)</ept> 具有多个可选参数，用于显示多次作业执行情况（已通过提供的参数进行筛选）。下面演示了 Get-AzureSqlJobExecution 的一些可能的用法："
    },
    {
      "content": "检索所有处于活动状态的顶级作业执行：",
      "pos": [
        11639,
        11657
      ]
    },
    {
      "content": "检索所有顶级作业执行，包括非活动的作业执行：",
      "pos": [
        11689,
        11711
      ]
    },
    {
      "content": "检索已提供作业执行 ID 的所有子作业执行，包括非活动的作业执行：",
      "pos": [
        11760,
        11793
      ]
    },
    {
      "content": "检索使用计划/作业组合创建的所有作业执行，包括非活动的作业：",
      "pos": [
        11968,
        11998
      ]
    },
    {
      "content": "检索以指定的分片映射为目标的所有作业，包括非活动的作业：",
      "pos": [
        12159,
        12187
      ]
    },
    {
      "content": "检索以指定的自定义集合为目标的所有作业，包括非活动的作业：",
      "pos": [
        12572,
        12601
      ]
    },
    {
      "content": "检索特定作业执行内的作业任务执行的列表：",
      "pos": [
        12813,
        12833
      ]
    },
    {
      "content": "检索作业任务执行详细信息：",
      "pos": [
        13002,
        13015
      ]
    },
    {
      "content": "以下 PowerShell 脚本可用于查看作业任务执行的详细信息，在调试执行失败时特别有用。",
      "pos": [
        13017,
        13063
      ]
    },
    {
      "content": "检索执行作业任务过程中出现的失败",
      "pos": [
        13249,
        13265
      ]
    },
    {
      "pos": [
        13267,
        13388
      ],
      "content": "<bpt id=\"p1\">**</bpt>JobTaskExecution 对象<ept id=\"p1\">**</ept>包括任务生命周期的属性以及消息属性。如果作业任务执行失败，生命周期属性将设为 <bpt id=\"p2\">*</bpt>Failed<ept id=\"p2\">*</ept>，且消息属性将设为生成的异常消息及其堆栈。如果作业不成功，必须查看给定操作不成功的作业任务的详细信息。"
    },
    {
      "content": "等待作业执行完毕",
      "pos": [
        13724,
        13732
      ]
    },
    {
      "content": "以下 PowerShell 脚本可用于等待作业任务完成：",
      "pos": [
        13734,
        13762
      ]
    },
    {
      "content": "创建自定义执行策略",
      "pos": [
        13874,
        13883
      ]
    },
    {
      "content": "弹性数据库作业支持创建可在启动作业时应用的自定义执行策略。",
      "pos": [
        13885,
        13914
      ]
    },
    {
      "content": "执行策略当前允许定义：",
      "pos": [
        13918,
        13929
      ]
    },
    {
      "content": "名称：执行策略的标识符。",
      "pos": [
        13933,
        13945
      ]
    },
    {
      "content": "作业超时：弹性数据库作业取消作业之前的总时间。",
      "pos": [
        13948,
        13971
      ]
    },
    {
      "content": "初始重试间隔：第一次重试之前等待的间隔。",
      "pos": [
        13974,
        13994
      ]
    },
    {
      "content": "最大重试间隔：要使用的重试间隔上限。",
      "pos": [
        13997,
        14015
      ]
    },
    {
      "content": "重试间隔回退系数：用于计算每两次重试的下一个间隔系数。使用以下公式：(初始重试间隔) * Math.pow((间隔回退指数),(重试次数) - 2)。",
      "pos": [
        14018,
        14093
      ]
    },
    {
      "content": "最大尝试次数：重试在作业中执行的最大次数。",
      "pos": [
        14097,
        14118
      ]
    },
    {
      "content": "默认的执行策略使用以下值：",
      "pos": [
        14120,
        14133
      ]
    },
    {
      "content": "名称：默认执行策略",
      "pos": [
        14137,
        14146
      ]
    },
    {
      "content": "作业超时：1 周",
      "pos": [
        14149,
        14157
      ]
    },
    {
      "content": "初始重试间隔：100 毫秒",
      "pos": [
        14160,
        14173
      ]
    },
    {
      "content": "最大重试间隔：30 分钟",
      "pos": [
        14176,
        14188
      ]
    },
    {
      "content": "重试间隔系数：2",
      "pos": [
        14191,
        14199
      ]
    },
    {
      "content": "最大尝试次数：2,147,483,647",
      "pos": [
        14202,
        14222
      ]
    },
    {
      "content": "创建所需的执行策略：",
      "pos": [
        14224,
        14234
      ]
    },
    {
      "content": "更新自定义执行策略",
      "pos": [
        14862,
        14871
      ]
    },
    {
      "content": "更新要更新的所需执行策略：",
      "pos": [
        14873,
        14886
      ]
    },
    {
      "content": "取消作业",
      "pos": [
        15523,
        15527
      ]
    },
    {
      "content": "弹性数据库作业支持取消作业请求。如果弹性数据库作业检测到当前正在执行作业的取消请求，它将尝试停止作业。",
      "pos": [
        15529,
        15580
      ]
    },
    {
      "content": "弹性数据库作业可通过两种不同的方式执行取消：",
      "pos": [
        15582,
        15604
      ]
    },
    {
      "content": "取消当前正在执行的任务：如果在任务正在执行时检测到取消，将在当前正在执行的任务层面尝试取消。例如：当尝试取消时，如果有某个长时间运行的查询当前正在执行，将尝试取消该查询。",
      "pos": [
        15609,
        15694
      ]
    },
    {
      "content": "取消任务重试：如果控制线程在启动任务执行之前检测到取消，控制线程将避免启动该任务，并将请求声明为已取消。",
      "pos": [
        15698,
        15750
      ]
    },
    {
      "content": "如果针对父作业请求了作业取消，则会对父作业及其所有子作业执行取消请求。",
      "pos": [
        15752,
        15787
      ]
    },
    {
      "pos": [
        15790,
        15924
      ],
      "content": "若要提交取消请求，请使用 <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Stop-AzureSqlJobExecution cmdlet<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/mt346053.aspx)</ept> 并设置 <bpt id=\"p3\">**</bpt>JobExecutionId<ept id=\"p3\">**</ept> 参数。"
    },
    {
      "content": "以异步方式删除作业和作业历史记录",
      "pos": [
        16035,
        16051
      ]
    },
    {
      "content": "弹性数据库作业支持异步删除作业。可将某个作业标记为待删除，系统将在作业的作业执行都已完成后，删除该作业及其所有作业历史记录。系统不会自动取消处于活动状态的作业执行。",
      "pos": [
        16053,
        16135
      ]
    },
    {
      "pos": [
        16137,
        16240
      ],
      "content": "调用 <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Stop-AzureSqlJobExecution<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/mt346053.aspx)</ept> 即可取消正在执行的作业。"
    },
    {
      "pos": [
        16242,
        16364
      ],
      "content": "若要触发作业删除操作，请使用 <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Remove-AzureSqlJob cmdlet<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/mt346083.aspx)</ept> 并设置 <bpt id=\"p3\">**</bpt>JobName<ept id=\"p3\">**</ept> 参数。"
    },
    {
      "content": "创建自定义数据库目标",
      "pos": [
        16440,
        16450
      ]
    },
    {
      "pos": [
        16452,
        16566
      ],
      "content": "你可以定义各种可以直接执行或包括到自定义数据库组中的自定义数据库目标。例如，由于<bpt id=\"p1\">**</bpt>弹性数据库池<ept id=\"p1\">**</ept>尚不能通过 PowerShell API 直接使用，你可以创建自定义数据库目标和自定义数据库集合目标，其中包含池中的所有数据库。"
    },
    {
      "content": "设置以下变量以反映所需的数据库信息：",
      "pos": [
        16568,
        16586
      ]
    },
    {
      "content": "创建自定义数据库集合目标",
      "pos": [
        16767,
        16779
      ]
    },
    {
      "pos": [
        16781,
        16925
      ],
      "content": "使用 <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>New-AzureSqlJobTarget<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/mt346077.aspx)</ept> 可以自定义数据库集合目标，从而让执行操作跨多个已定义数据库目标。创建数据库组之后，数据库可与自定义集合目标相关联。"
    },
    {
      "content": "设置以下变量以反映所需的自定义集合目标配置：",
      "pos": [
        16927,
        16949
      ]
    },
    {
      "content": "将数据库添加到自定义数据库集合目标",
      "pos": [
        17091,
        17108
      ]
    },
    {
      "pos": [
        17110,
        17228
      ],
      "content": "若要将数据库添加到特定的自定义集合，请使用 <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Add-AzureSqlJobChildTarget<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/mt346064.aspx)</ept> cmdlet。"
    },
    {
      "content": "查看自定义数据库集合目标内的数据库",
      "pos": [
        17517,
        17534
      ]
    },
    {
      "pos": [
        17536,
        17649
      ],
      "content": "使用 <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Get-AzureSqlJobTarget<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/mt346077.aspx)</ept> cmdlet 检索自定义数据库集合目标内的子数据库。"
    },
    {
      "content": "创建作业以跨自定义数据库集合目标执行脚本",
      "pos": [
        17907,
        17927
      ]
    },
    {
      "pos": [
        17929,
        18125
      ],
      "content": "使用 <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>New-AzureSqlJob<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/mt346078.aspx)</ept> cmdlet 可以针对自定义数据库集合目标定义的数据库组创建作业。弹性数据库作业将作业扩展为多个子作业（每个子作业映射到与自定义数据库集合目标关联的数据库），并确保脚本针对每个数据库执行。同样，重要的是脚本具有幂等处理重试的弹性。"
    },
    {
      "content": "跨数据库收集数据",
      "pos": [
        18521,
        18529
      ]
    },
    {
      "content": "你可以使用作业跨一组数据库来执行查询，然后将结果发送到特定的表。可以在事实之后查询数据表，以查看每个数据库的查询结果。这提供了跨多个数据库执行查询的异步方法。可通过重试自动处理失败的尝试。",
      "pos": [
        18531,
        18625
      ]
    },
    {
      "content": "如果不存在指定的目标表，则自动创建该表。新表与返回的结果集的架构相符。如果脚本返回多个结果集，弹性数据库作业只将第一个结果集发送到目标表。",
      "pos": [
        18627,
        18696
      ]
    },
    {
      "content": "以下 PowerShell 脚本可用于执行脚本，将其结果收集到指定的表。此脚本假设已创建一个可输出单个结果集的 T-SQL 脚本，并且已创建自定义的数据库集合目标。",
      "pos": [
        18698,
        18780
      ]
    },
    {
      "pos": [
        18782,
        18895
      ],
      "content": "此脚本使用 <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Get-AzureSqlJobTarget<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/mt346077.aspx)</ept> cmdlet。设置脚本、凭据和执行目标的参数："
    },
    {
      "content": "创建和启动用于数据收集方案的作业",
      "pos": [
        19455,
        19471
      ]
    },
    {
      "pos": [
        19473,
        19575
      ],
      "content": "此脚本使用 <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Start-AzureSqlJobExecution<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/mt346055.aspx)</ept> cmdlet。"
    },
    {
      "content": "计划作业执行触发器",
      "pos": [
        20163,
        20172
      ]
    },
    {
      "pos": [
        20174,
        20392
      ],
      "content": "以下 PowerShell 脚本可用于创建重复计划。此脚本使用分钟间隔，但是 <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>New-AzureSqlJobSchedule<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/mt346068.aspx)</ept> 也支持 -DayInterval、-HourInterval、-MonthInterval 和 -WeekInterval 参数。可以通过传递 -OneTime 来创建仅执行一次的计划。"
    },
    {
      "content": "创建新计划：",
      "pos": [
        20394,
        20400
      ]
    },
    {
      "content": "触发按时间计划执行的作业",
      "pos": [
        20681,
        20693
      ]
    },
    {
      "content": "可以定义作业触发器，使作业根据时间计划执行。以下 PowerShell 脚本可用于创建作业触发器。",
      "pos": [
        20695,
        20744
      ]
    },
    {
      "pos": [
        20746,
        20846
      ],
      "content": "使用 <bpt id=\"p1\">[</bpt>New-AzureSqlJobTrigger<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/mt346069.aspx)</ept>，根据所需作业和计划设置以下变量："
    },
    {
      "content": "删除计划的关联，以停止按计划执行作业",
      "pos": [
        21043,
        21061
      ]
    },
    {
      "pos": [
        21063,
        21208
      ],
      "content": "若要通过作业触发器中断作业重复执行，可以删除作业触发器。使用 <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Remove-AzureSqlJobTrigger cmdlet<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/mt346070.aspx)</ept> 删除作业触发器，以停止按计划执行作业。"
    },
    {
      "content": "检索绑定到时间计划的作业触发器",
      "pos": [
        21367,
        21382
      ]
    },
    {
      "content": "以下 PowerShell 脚本可用于获取并显示注册到特定时间计划的作业触发器。",
      "pos": [
        21384,
        21424
      ]
    },
    {
      "content": "检索绑定到作业的作业触发器",
      "pos": [
        21569,
        21582
      ]
    },
    {
      "pos": [
        21585,
        21686
      ],
      "content": "使用 <bpt id=\"p1\">[</bpt>Get-AzureSqlJobTrigger<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/mt346067.aspx)</ept> 来获取并显示包含已注册作业的计划。"
    },
    {
      "content": "创建可以跨数据库执行的数据层应用程序 (DACPAC)",
      "pos": [
        21810,
        21837
      ]
    },
    {
      "pos": [
        21839,
        22161
      ],
      "content": "若要创建 DACPAC，请参阅<bpt id=\"p1\">[</bpt>数据层应用程序<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/ee210546.aspx)</ept>。若要部署 DACPAC，请使用 <bpt id=\"p2\">[</bpt>New-AzureSqlJobContent cmdlet<ept id=\"p2\">](https://msdn.microsoft.com/zh-cn/library/mt346085.aspx)</ept>。DACPAC 必须可供服务访问。建议将创建的 DACPAC 上载到 Azure 存储空间，并创建 DACPAC 的<bpt id=\"p3\">[</bpt>共享访问签名<ept id=\"p3\">](/documentation/articles/storage-dotnet-shared-access-signature-part-1)</ept>。"
    },
    {
      "content": "更新可以跨数据库执行的数据层应用程序 (DACPAC)",
      "pos": [
        22337,
        22364
      ]
    },
    {
      "pos": [
        22366,
        22539
      ],
      "content": "弹性数据库作业中的现有已注册 DACPAC 可以更新为指向新的 URI。使用 <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Set-AzureSqlJobContentDefinition cmdlet<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/mt346074.aspx)</ept> 在现有的已注册 DACPAC 基础上更新 DACPAC URI："
    },
    {
      "content": "创建一个作业，以便跨数据库应用数据层应用程序 (DACPAC)",
      "pos": [
        22742,
        22773
      ]
    },
    {
      "content": "在弹性数据库作业中创建 DACPAC 之后，可以创建一个作业用于跨数据库组应用 DACPAC。以下 PowerShell 脚本可用于创建跨自定义数据库集合的 DACPAC 作业：",
      "pos": [
        22775,
        22864
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"使用 PowerShell 创建和管理弹性数据库作业\" \n    description=\"使用 PowerShell 管理 Azure SQL 数据库池\" \n    services=\"sql-database\" documentationCenter=\"\"  \n    manager=\"jeffreyg\" \n    authors=\"ddove\"/>\n\n<tags \n    ms.service=\"sql-database\" \n    ms.date=\"11/03/2015\" \n    wacn.date=\"01/29/2016\" />\n\n# 使用 PowerShell 创建和管理 SQL 数据库弹性数据库作业（预览版）\n\n> [AZURE.SELECTOR]\n- [Azure 经典门户](/documentation/articles/sql-database-elastic-jobs-create-and-manage)\n- [PowerShell](/documentation/articles/sql-database-elastic-jobs-powershell)\n\n\n\n使用适用于**弹性数据库作业**的 PowerShell API（预览版），可以定义要针对哪组数据库执行哪些脚本。本文说明如何使用 PowerShell cmdlet 创建和管理**弹性数据库作业**。请参阅[弹性作业概述](/documentation/articles/sql-database-elastic-jobs-overview)。\n\n## 先决条件\n* Azure 订阅。若要获取试用版，请参阅[1元试用](/pricing/1rmb-trial)。\n* 使用弹性数据库工具创建的一组数据库。请参阅[弹性数据库工具入门](/documentation/articles/sql-database-elastic-scale-get-started)。\n* Azure PowerShell。有关详细信息，请参阅[如何安装和配置 Azure PowerShell](/documentation/articles/powershell-install-configure)。\n* **弹性数据库作业** PowerShell 包：请参阅[安装弹性数据库作业](/documentation/articles/sql-database-elastic-jobs-service-installation)\n\n### 选择 Azure 订阅\n\n若要选择订阅，你需要提供订阅 ID (**-SubscriptionId**) 或订阅名称 (**-SubscriptionName**)。如果你有多个订阅，你可以运行 **Get-Subscription** cmdlet，然后从结果集中复制所需的订阅信息。获取订阅信息后，请执行以下 cmdlet 将此订阅设置为默认值，也就是创建和管理作业的目标：\n\n    Select-AzureSubscription -SubscriptionId {SubscriptionID}\n\n建议使用 [PowerShell ISE](https://technet.microsoft.com/zh-cn/library/dd315244.aspx) 针对弹性数据库作业开发和执行 PowerShell 脚本。\n\n## 弹性数据库作业对象\n\n下表列出了**弹性数据库作业**的所有对象类型及其描述和相关 PowerShell API。\n\n<table style=\"width:100%\">\n  <tr>\n    <th>对象类型</th>\n    <th>说明</th>\n    <th>相关的 PowerShell API</th>\n  </tr>\n  <tr>\n    <td>凭据</td>\n    <td>连接到数据库以执行脚本或应用 DACPAC 时使用的用户名和密码。<p>密码在发送并存储在弹性数据库作业数据库之前会经过加密。密码由弹性数据库作业服务通过安装脚本创建和上载的凭据解密。</td>\n    <td><p>Get-AzureSqlJobCredential</p>\n    <p>New-AzureSqlJobCredential</p><p>Set-AzureSqlJobCredential</p></td></td>\n  </tr>\n\n  <tr>\n    <td>脚本</td>\n    <td>用于跨数据库执行的 Transact-SQL 脚本。脚本应该编写为幂等，因为服务将在失败时重试执行脚本。\n    </td>\n    <td>\n    <p>Get-AzureSqlJobContent</p>\n    <p>Get-AzureSqlJobContentDefinition</p>\n    <p>New-AzureSqlJobContent</p>\n    <p>Set-AzureSqlJobContentDefinition</p>\n    </td>\n  </tr>\n\n  <tr>\n    <td>DACPAC</td>\n    <td>跨数据库应用的<a href=\"https://msdn.microsoft.com/zh-cn/library/ee210546.aspx\">数据层应用程序</a>包。\n\n    </td>\n    <td>\n    <p>Get-AzureSqlJobContent</p>\n    <p>New-AzureSqlJobContent</p>\n    <p>Set-AzureSqlJobContentDefinition</p>\n    </td>\n  </tr>\n  <tr>\n    <td>数据库目标</td>\n    <td>指向 Azure SQL 数据库的数据库和服务器名称。\n\n    </td>\n    <td>\n    <p>Get-AzureSqlJobTarget</p>\n    <p>New-AzureSqlJobTarget</p>\n    </td>\n  </tr>\n  <tr>\n    <td>分片映射目标</td>\n    <td>数据库目标和凭据的组合，用于确定弹性数据库分片映射内存储的信息。\n    </td>\n    <td>\n    <p>Get-AzureSqlJobTarget</p>\n    <p>New-AzureSqlJobTarget</p>\n    <p>Set-AzureSqlJobTarget</p>\n    </td>\n  </tr>\n<tr>\n    <td>自定义集合目标</td>\n    <td>共同用于执行的已定义数据库组。</td>\n    <td>\n    <p>Get-AzureSqlJobTarget</p>\n    <p>New-AzureSqlJobTarget</p>\n    </td>\n  </tr>\n<tr>\n    <td>自定义集合子目标</td>\n    <td>从自定义集合引用的数据库目标。</td>\n    <td>\n    <p>Add-AzureSqlJobChildTarget</p>\n    <p>Remove-AzureSqlJobChildTarget</p>\n    </td>\n  </tr>\n\n<tr>\n    <td>作业</td>\n    <td>\n    <p>作业参数的定义，可用于触发执行或完成计划。</p>\n    </td>\n    <td>\n    <p>Get-AzureSqlJob</p>\n    <p>New-AzureSqlJob</p>\n    <p>Set-AzureSqlJob</p>\n    </td>\n  </tr>\n\n<tr>\n    <td>作业执行</td>\n    <td>\n    <p>必要的任务容器，以便使用数据库连接的凭据执行脚本或将 DACPAC 应用到目标，将会根据执行策略处理失败。</p>\n    </td>\n    <td>\n    <p>Get-AzureSqlJobExecution</p>\n    <p>Start-AzureSqlJobExecution</p>\n    <p>Stop-AzureSqlJobExecution</p>\n    <p>Wait-AzureSqlJobExecution</p>\n  </tr>\n\n<tr>\n    <td>作业任务执行</td>\n    <td>\n    <p>用于完成作业的单个工作单位。</p>\n    <p>如果某个作业任务无法成功执行，将记录生成的异常消息，创建新的匹配作业任务并根据指定的执行策略执行。</p></p>\n    </td>\n    <td>\n    <p>Get-AzureSqlJobExecution</p>\n    <p>Start-AzureSqlJobExecution</p>\n    <p>Stop-AzureSqlJobExecution</p>\n    <p>Wait-AzureSqlJobExecution</p>\n  </tr>\n\n<tr>\n    <td>作业执行策略</td>\n    <td>\n    <p>控制作业执行超时、重试限制和重试间隔。</p>\n    <p>弹性数据库作业包括默认作业执行策略，该策略在本质上会导致使用重试间隔的指数回退无限期重试失败的作业任务。</p>\n    </td>\n    <td>\n    <p>Get-AzureSqlJobExecutionPolicy</p>\n    <p>New-AzureSqlJobExecutionPolicy</p>\n    <p>Set-AzureSqlJobExecutionPolicy</p>\n    </td>\n  </tr>\n\n<tr>\n    <td>计划</td>\n    <td>\n    <p>基于时间的执行指定在重复间隔发生或单次数发生。</p>\n    </td>\n    <td>\n    <p>Get-AzureSqlJobSchedule</p>\n    <p>New-AzureSqlJobSchedule</p>\n    <p>Set-AzureSqlJobSchedule</p>\n    </td>\n  </tr>\n\n<tr>\n    <td>作业触发器</td>\n    <td>\n    <p>作业与计划之间的映射，用于根据计划触发作业执行。</p>\n    </td>\n    <td>\n    <p>New-AzureSqlJobTrigger</p>\n    <p>Remove-AzureSqlJobTrigger</p>\n    </td>\n  </tr>\n</table>\n\n## 支持的弹性数据库作业组类型\n该作业可以跨数据库组执行 Transact-SQL (T-SQL) 脚本或应用 DACPAC。提交需要跨数据库组执行的作业时，该作业将“扩展”到子作业中，其中的每个作业会针对组中的单一数据库执行请求的执行操作。\n \n有两种可以创建的组类型：\n\n* [分片映射](/documentation/articles/sql-database-elastic-scale-shard-map-management)组：提交以分片映射为目标的作业时，该作业会通过查询分片映射来确定其当前的分片集，然后为分片映射中的每个分片创建子作业。\n* 自定义集合组：一种自定义数据库集。当作业以自定义集合为目标时，它会针对当前位于自定义集合中的每个数据库创建子作业。\n\n## 设置弹性数据库作业连接\n\n在使用作业 API 之前，需设置作业*控制数据库* 连接。如果运行此 cmdlet，则会在安装弹性数据库作业时触发一个弹出式凭据窗口，请求用户提供已创建的用户名/密码。本主题中提供的所有示例都假设已经执行第一个步骤。\n\n建立与弹性数据库作业的连接：\n\n    Use-AzureSqlJobConnection -CurrentAzureSubscription \n\n## 弹性数据库作业中的已加密凭据\n\n数据库凭据可以插入密码已加密的作业*控制数据库*。必须存储凭据，使作业可以在稍后执行（使用作业计划）。\n \n加密是通过创建为安装脚本一部分的证书来进行的。安装脚本创建证书并将其上载到 Azure 云服务，以解密已存储的加密密码。Azure 云服务稍后在作业*控制数据库* 内存储公钥，让 PowerShell API 或 Azure 经典门户界面加密提供的密码，而不需要在本地安装证书。\n \n凭据密码经过加密后，无法供只能通过只读方式访问弹性数据库作业对象的用户访问。不过，具有弹性数据库作业对象读-写访问权限的恶意用户可能会提取密码。凭据设计为跨作业执行重复使用。在建立连接时，凭据将传递到目标数据库。适用于每个凭据的目标数据库目前并没有受到限制，因此恶意用户可以针对自己所控制的数据库来添加数据库目标。然后，该用户可以启动一个针对该数据库的作业，从而获取凭据的密码。\n\n弹性数据库作业安全方面的最佳实践包括：\n\n* 将 API 的使用限制为受信任的个人。\n* 凭据应该具有执行作业任务所需的最低权限。有关详细信息，请参阅这篇[授权和权限](https://msdn.microsoft.com/zh-cn/library/bb669084.aspx) SQL Server MSDN 文章。\n\n### 跨数据库创建执行作业所需的加密凭据\n\n创建新的加密凭据时，[**Get-Credential cmdlet**](https://technet.microsoft.com/zh-cn/library/hh849815.aspx) 会提示用户输入可以传递给 [**New-AzureSqlJobCredential cmdlet**](https://msdn.microsoft.com/zh-cn/library/mt346063.aspx) 的用户名和密码。\n\n    $credentialName = \"{Credential Name}\"\n    $databaseCredential = Get-Credential\n    $credential = New-AzureSqlJobCredential -Credential $databaseCredential -CredentialName $credentialName\n    Write-Output $credential\n\n### 更新凭据\n\n当密码更改时，请使用 [**Set-AzureSqlJobCredential cmdlet**](https://msdn.microsoft.com/zh-cn/library/mt346062.aspx) 并设置 **CredentialName** 参数。\n\n    $credentialName = \"{Credential Name}\"\n    Set-AzureSqlJobCredential -CredentialName $credentialName -Credential $credential \n\n## 定义弹性数据库分片映射目标\n\n若要针对分片集（使用[弹性数据库客户端库](/documentation/articles/sql-database-elastic-database-client-library)创建）中的所有数据库执行作业，请将分片映射用作数据库目标。本示例要求使用弹性数据库客户端库创建分片应用程序。请参阅[弹性数据库工具示例入门](/documentation/articles/sql-database-elastic-scale-get-started)。\n\n###使用示例应用程序创建分片映射管理器\n\n本示例将创建分片映射管理器以及多个分片，然后将数据插入分片。\n\n1. 生成并运行**弹性数据库工具入门**示例应用程序。一直执行到[下载和运行示例应用](/documentation/articles/sql-database-elastic-scale-get-started/#Getting-started-with-elastic-database-tools)部分中的步骤 7。在步骤 7 结束时，你将看到以下命令提示符：\n\n    ![命令提示符][1]\n\n2.  在命令窗口中键入“1”，然后按 **Enter**。这会创建分片映射管理器，并将两个分片添加到服务器。然后键入“3”并按 **Enter**；重复该操作四次。这会在你的分片中插入示例数据行。\n  \n3.  [Azure 门户](https://manage.windowsazure.cn)应会在 v12 服务器中显示三个新的数据库：\n\n    ![Visual Studio 确认][2]\n\n使用 [**New-AzureSqlJobCredential cmdlet**](https://msdn.microsoft.com/zh-cn/library/mt346063.aspx) 创建分片映射目标。必须将分片映射管理器数据库设置为数据库目标，然后将特定分片映射指定为目标。\n\n    $shardMapCredentialName = \"{Credential Name}\"\n    $shardMapDatabaseName = \"{ShardMapDatabaseName}\" #example: ElasticScaleStarterKit_ShardMapManagerDb\n    $shardMapDatabaseServerName = \"{ShardMapServerName}\"\n    $shardMapName = \"{MyShardMap}\" #example: CustomerIDShardMap\n    $shardMapDatabaseTarget = New-AzureSqlJobTarget -DatabaseName $shardMapDatabaseName -ServerName $shardMapDatabaseServerName\n    $shardMapTarget = New-AzureSqlJobTarget -ShardMapManagerCredentialName $shardMapCredentialName -ShardMapManagerDatabaseName $shardMapDatabaseName -ShardMapManagerServerName $shardMapDatabaseServerName -ShardMapName $shardMapName\n    Write-Output $shardMapTarget\n\n## 创建 T-SQL 脚本用于跨数据库执行\n\n创建要执行的 T-SQL 脚本时，强烈建议将其构建为[幂等](https://zh.wikipedia.org/wiki/Idempotence)模式，以便灵活地应对各种故障。每当执行发生失败时，不论失败的分类，弹性数据库作业将重试执行脚本。\n\n使用 [**New-AzureSqlJobContent cmdlet**](https://msdn.microsoft.com/zh-cn/library/mt346085.aspx) 创建并保存执行脚本，然后设置 **-ContentName** 和 **-CommandText** 参数。\n\n    $scriptName = \"Create a TestTable\"\n\n    $scriptCommandText = \"\n    IF NOT EXISTS (SELECT name FROM sys.tables WHERE name = 'TestTable')\n    BEGIN\n        CREATE TABLE TestTable(\n            TestTableId INT PRIMARY KEY IDENTITY,\n            InsertionTime DATETIME2\n        );\n    END\n    GO\n    INSERT INTO TestTable(InsertionTime) VALUES (sysutcdatetime());\n    GO\"\n\n    $script = New-AzureSqlJobContent -ContentName $scriptName -CommandText $scriptCommandText\n    Write-Output $script\n\n### 从文件创建新脚本\n如果 T-SQL 脚本是在文件中定义的，请使用以下语句来导入脚本：\n\n    $scriptName = \"My Script Imported from a File\"\n    $scriptPath = \"{Path to SQL File}\"\n    $scriptCommandText = Get-Content -Path $scriptPath\n    $script = New-AzureSqlJobContent -ContentName $scriptName -CommandText $scriptCommandText\n    Write-Output $script\n\n### 更新可以跨数据库执行的 T-SQL 脚本  \n\n此 PowerShell 脚本更新现有脚本的 T-SQL 命令文本。\n\n设置以下变量以反映要设置的所需脚本定义：\n\n    $scriptName = \"Create a TestTable\"\n    $scriptUpdateComment = \"Adding AdditionalInformation column to TestTable\"\n    $scriptCommandText = \"\n    IF NOT EXISTS (SELECT name FROM sys.tables WHERE name = 'TestTable')\n    BEGIN\n    CREATE TABLE TestTable(\n        TestTableId INT PRIMARY KEY IDENTITY,\n        InsertionTime DATETIME2\n    );\n    END\n    GO\n\n    IF NOT EXISTS (SELECT columns.name FROM sys.columns INNER JOIN sys.tables on columns.object_id = tables.object_id WHERE tables.name = 'TestTable' AND columns.name = 'AdditionalInformation')\n    BEGIN\n    ALTER TABLE TestTable\n    ADD AdditionalInformation NVARCHAR(400);\n    END\n    GO\n\n    INSERT INTO TestTable(InsertionTime, AdditionalInformation) VALUES (sysutcdatetime(), 'test');\n    GO\"\n\n### 更新现有脚本的定义\n\n    Set-AzureSqlJobContentDefinition -ContentName $scriptName -CommandText $scriptCommandText -Comment $scriptUpdateComment \n\n## 创建一个用于跨分片映射执行脚本的作业\n\n此 PowerShell 脚本可以启动一个作业，以便跨弹性缩放分片映射中的每个分片来执行脚本。\n\n设置以下变量以反映所需的脚本和目标：\n\n    $jobName = \"{Job Name}\"\n    $scriptName = \"{Script Name}\"\n    $shardMapServerName = \"{Shard Map Server Name}\"\n    $shardMapDatabaseName = \"{Shard Map Database Name}\"\n    $shardMapName = \"{Shard Map Name}\"\n    $credentialName = \"{Credential Name}\"\n    $shardMapTarget = Get-AzureSqlJobTarget -ShardMapManagerDatabaseName $shardMapDatabaseName -ShardMapManagerServerName $shardMapServerName -ShardMapName $shardMapName \n    $job = New-AzureSqlJob -ContentName $scriptName -CredentialName $credentialName -JobName $jobName -TargetId $shardMapTarget.TargetId\n    Write-Output $job\n\n## 执行作业 \n\n此 PowerShell 脚本执行现有作业：\n\n更新以下变量以反映要执行的所需作业名称：\n\n    $jobName = \"{Job Name}\"\n    $jobExecution = Start-AzureSqlJobExecution -JobName $jobName \n    Write-Output $jobExecution\n \n## 检索单个作业的执行状态\n\n使用 [**Get-AzureSqlJobExecution cmdlet**](https://msdn.microsoft.com/zh-cn/library/mt346058.aspx) 并设置 **JobExecutionId** 参数以查看作业的执行状态。\n\n    $jobExecutionId = \"{Job Execution Id}\"\n    $jobExecution = Get-AzureSqlJobExecution -JobExecutionId $jobExecutionId\n    Write-Output $jobExecution\n\n使用相同 **Get-AzureSqlJobExecution** cmdlet 搭配 **IncludeChildren** 参数，以查看子作业执行的状态，还就是针对作为作业目标的每个数据库的每个作业执行的特定状态。\n\n    $jobExecutionId = \"{Job Execution Id}\"\n    $jobExecutions = Get-AzureSqlJobExecution -JobExecutionId $jobExecutionId -IncludeChildren\n    Write-Output $jobExecutions \n\n## 查看多次执行作业时的状态\n\n[**Get-AzureSqlJobExecution cmdlet**](https://msdn.microsoft.com/zh-cn/library/mt346058.aspx) 具有多个可选参数，用于显示多次作业执行情况（已通过提供的参数进行筛选）。下面演示了 Get-AzureSqlJobExecution 的一些可能的用法：\n\n检索所有处于活动状态的顶级作业执行：\n\n    Get-AzureSqlJobExecution\n\n检索所有顶级作业执行，包括非活动的作业执行：\n\n    Get-AzureSqlJobExecution -IncludeInactive\n\n检索已提供作业执行 ID 的所有子作业执行，包括非活动的作业执行：\n\n    $parentJobExecutionId = \"{Job Execution Id}\"\n    Get-AzureSqlJobExecution -AzureSqlJobExecution -JobExecutionId $parentJobExecutionId –IncludeInactive -IncludeChildren\n\n检索使用计划/作业组合创建的所有作业执行，包括非活动的作业：\n\n    $jobName = \"{Job Name}\"\n    $scheduleName = \"{Schedule Name}\"\n    Get-AzureSqlJobExecution -JobName $jobName -ScheduleName $scheduleName -IncludeInactive\n\n检索以指定的分片映射为目标的所有作业，包括非活动的作业：\n\n    $shardMapServerName = \"{Shard Map Server Name}\"\n    $shardMapDatabaseName = \"{Shard Map Database Name}\"\n    $shardMapName = \"{Shard Map Name}\"\n    $target = Get-AzureSqlJobTarget -ShardMapManagerDatabaseName $shardMapDatabaseName -ShardMapManagerServerName $shardMapServerName -ShardMapName $shardMapName\n    Get-AzureSqlJobExecution -TargetId $target.TargetId –IncludeInactive\n\n检索以指定的自定义集合为目标的所有作业，包括非活动的作业：\n\n    $customCollectionName = \"{Custom Collection Name}\"\n    $target = Get-AzureSqlJobTarget -CustomCollectionName $customCollectionName\n    Get-AzureSqlJobExecution -TargetId $target.TargetId –IncludeInactive\n \n检索特定作业执行内的作业任务执行的列表：\n\n    $jobExecutionId = \"{Job Execution Id}\"\n    $jobTaskExecutions = Get-AzureSqlJobTaskExecution -JobExecutionId $jobExecutionId\n    Write-Output $jobTaskExecutions \n\n检索作业任务执行详细信息：\n\n以下 PowerShell 脚本可用于查看作业任务执行的详细信息，在调试执行失败时特别有用。\n\n    $jobTaskExecutionId = \"{Job Task Execution Id}\"\n    $jobTaskExecution = Get-AzureSqlJobTaskExecution -JobTaskExecutionId $jobTaskExecutionId\n    Write-Output $jobTaskExecution\n\n## 检索执行作业任务过程中出现的失败\n\n**JobTaskExecution 对象**包括任务生命周期的属性以及消息属性。如果作业任务执行失败，生命周期属性将设为 *Failed*，且消息属性将设为生成的异常消息及其堆栈。如果作业不成功，必须查看给定操作不成功的作业任务的详细信息。\n\n    $jobExecutionId = \"{Job Execution Id}\"\n    $jobTaskExecutions = Get-AzureSqlJobTaskExecution -JobExecutionId $jobExecutionId\n    Foreach($jobTaskExecution in $jobTaskExecutions) \n        {\n        if($jobTaskExecution.Lifecycle -ne 'Succeeded')\n            {\n            Write-Output $jobTaskExecution\n            }\n        }\n\n## 等待作业执行完毕\n\n以下 PowerShell 脚本可用于等待作业任务完成：\n\n    $jobExecutionId = \"{Job Execution Id}\"\n    Wait-AzureSqlJobExecution -JobExecutionId $jobExecutionId \n\n## 创建自定义执行策略\n\n弹性数据库作业支持创建可在启动作业时应用的自定义执行策略。\n  \n执行策略当前允许定义：\n\n* 名称：执行策略的标识符。\n* 作业超时：弹性数据库作业取消作业之前的总时间。\n* 初始重试间隔：第一次重试之前等待的间隔。\n* 最大重试间隔：要使用的重试间隔上限。\n* 重试间隔回退系数：用于计算每两次重试的下一个间隔系数。使用以下公式：(初始重试间隔) * Math.pow((间隔回退指数),(重试次数) - 2)。 \n* 最大尝试次数：重试在作业中执行的最大次数。\n\n默认的执行策略使用以下值：\n\n* 名称：默认执行策略\n* 作业超时：1 周\n* 初始重试间隔：100 毫秒\n* 最大重试间隔：30 分钟\n* 重试间隔系数：2\n* 最大尝试次数：2,147,483,647\n\n创建所需的执行策略：\n\n    $executionPolicyName = \"{Execution Policy Name}\"\n    $initialRetryInterval = New-TimeSpan -Seconds 10\n    $jobTimeout = New-TimeSpan -Minutes 30\n    $maximumAttempts = 999999\n    $maximumRetryInterval = New-TimeSpan -Minutes 1\n    $retryIntervalBackoffCoefficient = 1.5\n    $executionPolicy = New-AzureSqlJobExecutionPolicy -ExecutionPolicyName $executionPolicyName -InitialRetryInterval $initialRetryInterval -JobTimeout $jobTimeout -MaximumAttempts $maximumAttempts -MaximumRetryInterval $maximumRetryInterval \n    -RetryIntervalBackoffCoefficient $retryIntervalBackoffCoefficient\n    Write-Output $executionPolicy\n\n### 更新自定义执行策略\n\n更新要更新的所需执行策略：\n\n    $executionPolicyName = \"{Execution Policy Name}\"\n    $initialRetryInterval = New-TimeSpan -Seconds 15\n    $jobTimeout = New-TimeSpan -Minutes 30\n    $maximumAttempts = 999999\n    $maximumRetryInterval = New-TimeSpan -Minutes 1\n    $retryIntervalBackoffCoefficient = 1.5\n    $updatedExecutionPolicy = Set-AzureSqlJobExecutionPolicy -ExecutionPolicyName $executionPolicyName -InitialRetryInterval $initialRetryInterval -JobTimeout $jobTimeout -MaximumAttempts $maximumAttempts -MaximumRetryInterval $maximumRetryInterval -RetryIntervalBackoffCoefficient $retryIntervalBackoffCoefficient\n    Write-Output $updatedExecutionPolicy\n \n## 取消作业\n\n弹性数据库作业支持取消作业请求。如果弹性数据库作业检测到当前正在执行作业的取消请求，它将尝试停止作业。\n\n弹性数据库作业可通过两种不同的方式执行取消：\n\n1. 取消当前正在执行的任务：如果在任务正在执行时检测到取消，将在当前正在执行的任务层面尝试取消。例如：当尝试取消时，如果有某个长时间运行的查询当前正在执行，将尝试取消该查询。\n2. 取消任务重试：如果控制线程在启动任务执行之前检测到取消，控制线程将避免启动该任务，并将请求声明为已取消。\n\n如果针对父作业请求了作业取消，则会对父作业及其所有子作业执行取消请求。\n \n若要提交取消请求，请使用 [**Stop-AzureSqlJobExecution cmdlet**](https://msdn.microsoft.com/zh-cn/library/mt346053.aspx) 并设置 **JobExecutionId** 参数。\n\n    $jobExecutionId = \"{Job Execution Id}\"\n    Stop-AzureSqlJobExecution -JobExecutionId $jobExecutionId\n\n## 以异步方式删除作业和作业历史记录\n\n弹性数据库作业支持异步删除作业。可将某个作业标记为待删除，系统将在作业的作业执行都已完成后，删除该作业及其所有作业历史记录。系统不会自动取消处于活动状态的作业执行。\n\n调用 [**Stop-AzureSqlJobExecution**](https://msdn.microsoft.com/zh-cn/library/mt346053.aspx) 即可取消正在执行的作业。\n\n若要触发作业删除操作，请使用 [**Remove-AzureSqlJob cmdlet**](https://msdn.microsoft.com/zh-cn/library/mt346083.aspx) 并设置 **JobName** 参数。\n\n    $jobName = \"{Job Name}\"\n    Remove-AzureSqlJob -JobName $jobName\n \n## 创建自定义数据库目标\n\n你可以定义各种可以直接执行或包括到自定义数据库组中的自定义数据库目标。例如，由于**弹性数据库池**尚不能通过 PowerShell API 直接使用，你可以创建自定义数据库目标和自定义数据库集合目标，其中包含池中的所有数据库。\n\n设置以下变量以反映所需的数据库信息：\n\n    $databaseName = \"{Database Name}\"\n    $databaseServerName = \"{Server Name}\"\n    New-AzureSqlJobDatabaseTarget -DatabaseName $databaseName -ServerName $databaseServerName \n\n## 创建自定义数据库集合目标\n\n使用 [**New-AzureSqlJobTarget**](https://msdn.microsoft.com/zh-cn/library/mt346077.aspx) 可以自定义数据库集合目标，从而让执行操作跨多个已定义数据库目标。创建数据库组之后，数据库可与自定义集合目标相关联。\n\n设置以下变量以反映所需的自定义集合目标配置：\n\n    $customCollectionName = \"{Custom Database Collection Name}\"\n    New-AzureSqlJobTarget -CustomCollectionName $customCollectionName \n\n### 将数据库添加到自定义数据库集合目标\n\n若要将数据库添加到特定的自定义集合，请使用 [**Add-AzureSqlJobChildTarget**](https://msdn.microsoft.com/zh-cn/library/mt346064.aspx) cmdlet。\n\n    $serverName = \"{Database Server Name}\"\n    $databaseName = \"{Database Name}\"\n    $customCollectionName = \"{Custom Database Collection Name}\"\n    Add-AzureSqlJobChildTarget -CustomCollectionName $customCollectionName -DatabaseName $databaseName -ServerName $databaseServerName \n\n#### 查看自定义数据库集合目标内的数据库\n\n使用 [**Get-AzureSqlJobTarget**](https://msdn.microsoft.com/zh-cn/library/mt346077.aspx) cmdlet 检索自定义数据库集合目标内的子数据库。\n \n    $customCollectionName = \"{Custom Database Collection Name}\"\n    $target = Get-AzureSqlJobTarget -CustomCollectionName $customCollectionName\n    $childTargets = Get-AzureSqlJobTarget -ParentTargetId $target.TargetId\n    Write-Output $childTargets\n\n### 创建作业以跨自定义数据库集合目标执行脚本\n\n使用 [**New-AzureSqlJob**](https://msdn.microsoft.com/zh-cn/library/mt346078.aspx) cmdlet 可以针对自定义数据库集合目标定义的数据库组创建作业。弹性数据库作业将作业扩展为多个子作业（每个子作业映射到与自定义数据库集合目标关联的数据库），并确保脚本针对每个数据库执行。同样，重要的是脚本具有幂等处理重试的弹性。\n\n    $jobName = \"{Job Name}\"\n    $scriptName = \"{Script Name}\"\n    $customCollectionName = \"{Custom Collection Name}\"\n    $credentialName = \"{Credential Name}\"\n    $target = Get-AzureSqlJobTarget -CustomCollectionName $customCollectionName\n    $job = New-AzureSqlJob -JobName $jobName -CredentialName $credentialName -ContentName $scriptName -TargetId $target.TargetId\n    Write-Output $job\n\n## 跨数据库收集数据\n\n你可以使用作业跨一组数据库来执行查询，然后将结果发送到特定的表。可以在事实之后查询数据表，以查看每个数据库的查询结果。这提供了跨多个数据库执行查询的异步方法。可通过重试自动处理失败的尝试。\n\n如果不存在指定的目标表，则自动创建该表。新表与返回的结果集的架构相符。如果脚本返回多个结果集，弹性数据库作业只将第一个结果集发送到目标表。\n\n以下 PowerShell 脚本可用于执行脚本，将其结果收集到指定的表。此脚本假设已创建一个可输出单个结果集的 T-SQL 脚本，并且已创建自定义的数据库集合目标。\n\n此脚本使用 [**Get-AzureSqlJobTarget**](https://msdn.microsoft.com/zh-cn/library/mt346077.aspx) cmdlet。设置脚本、凭据和执行目标的参数：\n\n    $jobName = \"{Job Name}\"\n    $scriptName = \"{Script Name}\"\n    $executionCredentialName = \"{Execution Credential Name}\"\n    $customCollectionName = \"{Custom Collection Name}\"\n    $destinationCredentialName = \"{Destination Credential Name}\"\n    $destinationServerName = \"{Destination Server Name}\"\n    $destinationDatabaseName = \"{Destination Database Name}\"\n    $destinationSchemaName = \"{Destination Schema Name}\"\n    $destinationTableName = \"{Destination Table Name}\"\n    $target = Get-AzureSqlJobTarget -CustomCollectionName $customCollectionName\n\n### 创建和启动用于数据收集方案的作业\n\n此脚本使用 [**Start-AzureSqlJobExecution**](https://msdn.microsoft.com/zh-cn/library/mt346055.aspx) cmdlet。\n \n    $job = New-AzureSqlJob -JobName $jobName \n    -CredentialName $executionCredentialName \n    -ContentName $scriptName \n    -ResultSetDestinationServerName $destinationServerName \n    -ResultSetDestinationDatabaseName $destinationDatabaseName \n    -ResultSetDestinationSchemaName $destinationSchemaName \n    -ResultSetDestinationTableName $destinationTableName \n    -ResultSetDestinationCredentialName $destinationCredentialName \n    -TargetId $target.TargetId\n    Write-Output $job\n    $jobExecution = Start-AzureSqlJobExecution -JobName $jobName\n    Write-Output $jobExecution\n\n## 计划作业执行触发器\n\n以下 PowerShell 脚本可用于创建重复计划。此脚本使用分钟间隔，但是 [**New-AzureSqlJobSchedule**](https://msdn.microsoft.com/zh-cn/library/mt346068.aspx) 也支持 -DayInterval、-HourInterval、-MonthInterval 和 -WeekInterval 参数。可以通过传递 -OneTime 来创建仅执行一次的计划。\n\n创建新计划：\n\n    $scheduleName = \"Every one minute\"\n    $minuteInterval = 1\n    $startTime = (Get-Date).ToUniversalTime()\n    $schedule = New-AzureSqlJobSchedule \n    -MinuteInterval $minuteInterval \n    -ScheduleName $scheduleName \n    -StartTime $startTime \n    Write-Output $schedule\n\n### 触发按时间计划执行的作业\n\n可以定义作业触发器，使作业根据时间计划执行。以下 PowerShell 脚本可用于创建作业触发器。\n\n使用 [New-AzureSqlJobTrigger](https://msdn.microsoft.com/zh-cn/library/mt346069.aspx)，根据所需作业和计划设置以下变量：\n\n    $jobName = \"{Job Name}\"\n    $scheduleName = \"{Schedule Name}\"\n    $jobTrigger = New-AzureSqlJobTrigger\n    -ScheduleName $scheduleName\n    –JobName $jobName\n    Write-Output $jobTrigger\n\n### 删除计划的关联，以停止按计划执行作业\n\n若要通过作业触发器中断作业重复执行，可以删除作业触发器。使用 [**Remove-AzureSqlJobTrigger cmdlet**](https://msdn.microsoft.com/zh-cn/library/mt346070.aspx) 删除作业触发器，以停止按计划执行作业。\n\n    $jobName = \"{Job Name}\"\n    $scheduleName = \"{Schedule Name}\"\n    Remove-AzureSqlJobTrigger \n    -ScheduleName $scheduleName \n    -JobName $jobName\n\n### 检索绑定到时间计划的作业触发器\n\n以下 PowerShell 脚本可用于获取并显示注册到特定时间计划的作业触发器。\n\n    $scheduleName = \"{Schedule Name}\"\n    $jobTriggers = Get-AzureSqlJobTrigger -ScheduleName $scheduleName\n    Write-Output $jobTriggers\n\n### 检索绑定到作业的作业触发器 \n\n使用 [Get-AzureSqlJobTrigger](https://msdn.microsoft.com/zh-cn/library/mt346067.aspx) 来获取并显示包含已注册作业的计划。\n\n    $jobName = \"{Job Name}\"\n    $jobTriggers = Get-AzureSqlJobTrigger -JobName $jobName\n    Write-Output $jobTriggers\n\n## 创建可以跨数据库执行的数据层应用程序 (DACPAC)\n\n若要创建 DACPAC，请参阅[数据层应用程序](https://msdn.microsoft.com/zh-cn/library/ee210546.aspx)。若要部署 DACPAC，请使用 [New-AzureSqlJobContent cmdlet](https://msdn.microsoft.com/zh-cn/library/mt346085.aspx)。DACPAC 必须可供服务访问。建议将创建的 DACPAC 上载到 Azure 存储空间，并创建 DACPAC 的[共享访问签名](/documentation/articles/storage-dotnet-shared-access-signature-part-1)。\n\n    $dacpacUri = \"{Uri}\"\n    $dacpacName = \"{Dacpac Name}\"\n    $dacpac = New-AzureSqlJobContent -DacpacUri $dacpacUri -ContentName $dacpacName \n    Write-Output $dacpac\n\n### 更新可以跨数据库执行的数据层应用程序 (DACPAC)\n\n弹性数据库作业中的现有已注册 DACPAC 可以更新为指向新的 URI。使用 [**Set-AzureSqlJobContentDefinition cmdlet**](https://msdn.microsoft.com/zh-cn/library/mt346074.aspx) 在现有的已注册 DACPAC 基础上更新 DACPAC URI：\n\n    $dacpacName = \"{Dacpac Name}\"\n    $newDacpacUri = \"{Uri}\"\n    $updatedDacpac = Set-AzureSqlJobDacpacDefinition -ContentName $dacpacName -DacpacUri $newDacpacUri\n    Write-Output $updatedDacpac\n\n## 创建一个作业，以便跨数据库应用数据层应用程序 (DACPAC)\n\n在弹性数据库作业中创建 DACPAC 之后，可以创建一个作业用于跨数据库组应用 DACPAC。以下 PowerShell 脚本可用于创建跨自定义数据库集合的 DACPAC 作业：\n\n    $jobName = \"{Job Name}\"\n    $dacpacName = \"{Dacpac Name}\"\n    $customCollectionName = \"{Custom Collection Name}\"\n    $credentialName = \"{Credential Name}\"\n    $target = Get-AzureSqlJobTarget \n    -CustomCollectionName $customCollectionName\n    $job = New-AzureSqlJob \n    -JobName $jobName \n    -CredentialName $credentialName \n    -ContentName $dacpacName -TargetId $target.TargetId\n    Write-Output $job \n\n[AZURE.INCLUDE [elastic-scale-include](../includes/elastic-scale-include.md)]\n\n<!--Image references-->\n[1]: ./media/sql-database-elastic-jobs-powershell/cmd-prompt.png\n[2]: ./media/sql-database-elastic-jobs-powershell/portal.png\n<!--anchors-->\n\n<!---HONumber=Mooncake_0118_2016-->\n"
}