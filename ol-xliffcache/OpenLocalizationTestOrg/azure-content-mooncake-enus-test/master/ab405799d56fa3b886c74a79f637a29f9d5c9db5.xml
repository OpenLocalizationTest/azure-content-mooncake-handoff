{
  "nodes": [
    {
      "content": "当您发送模板通知时，您只需提供一组属性，在本例中，我们将发送一组包含当前新闻的本地化版本的属性，例如：",
      "pos": [
        4,
        55
      ]
    },
    {
      "content": "本部分演示如何使用控制台应用发送通知",
      "pos": [
        220,
        238
      ]
    },
    {
      "content": "包括的代码将广播到 Windows 应用商店和 iOS 设备，因为该后端可广播到支持的任何设备。",
      "pos": [
        240,
        288
      ]
    },
    {
      "content": "使用 C# 控制台应用程序发送通知",
      "pos": [
        295,
        312
      ]
    },
    {
      "pos": [
        315,
        400
      ],
      "content": "使用以下代码修改前面创建的控制台应用中的 <ph id=\"ph1\">`SendTemplateNotificationAsync`</ph> 方法。请注意为何在本例中无需为不同的区域设置和平台发送多条通知。"
    },
    {
      "pos": [
        1971,
        2046
      ],
      "content": "请注意，此简单调用不管平台如何都会将本地化的新闻片段传递到<bpt id=\"p1\">**</bpt>所有<ept id=\"p1\">**</ept>设备，因为你的通知中心将生成正确的本机负载并将其传送到已订阅特定标记的所有设备。"
    },
    {
      "content": "使用移动服务发送通知",
      "pos": [
        2052,
        2062
      ]
    },
    {
      "content": "在移动服务计划程序中，可以使用以下脚本：",
      "pos": [
        2064,
        2084
      ]
    }
  ],
  "content": "\n\n\n\n当您发送模板通知时，您只需提供一组属性，在本例中，我们将发送一组包含当前新闻的本地化版本的属性，例如：\n\n    {\n        \"News_English\": \"World News in English!\",\n        \"News_French\": \"World News in French!\",\n        \"News_Mandarin\": \"World News in Mandarin!\"\n    }\n\n\n本部分演示如何使用控制台应用发送通知\n\n包括的代码将广播到 Windows 应用商店和 iOS 设备，因为该后端可广播到支持的任何设备。\n\n\n### 使用 C# 控制台应用程序发送通知 \n\n使用以下代码修改前面创建的控制台应用中的 `SendTemplateNotificationAsync` 方法。请注意为何在本例中无需为不同的区域设置和平台发送多条通知。\n\n        private static async void SendTemplateNotificationAsync()\n        {\n            // Define the notification hub.\n            NotificationHubClient hub = \n                NotificationHubClient.CreateClientFromConnectionString(\n                    \"<connection string with full access>\", \"<hub name>\");\n\n            // Sending the notification as a template notification. All template registrations that contain \n            // \"messageParam\" or \"News_<local selected>\" and the proper tags will receive the notifications. \n            // This includes APNS, GCM, WNS, and MPNS template registrations.\n            Dictionary<string, string> templateParams = new Dictionary<string, string>();\n\n            // Create an array of breaking news categories.\n            var categories = new string[] { \"World\", \"Politics\", \"Business\", \"Technology\", \"Science\", \"Sports\"};\n            var locales = new string[] { \"English\", \"French\", \"Mandarin\" };\n\n            foreach (var category in categories)\n            {\n                templateParams[\"messageParam\"] = \"Breaking \" + category + \" News!\";\n\n                // Sending localized News for each tag too...\n                foreach( var locale in locales)\n                {\n                    string key = \"News_\" + locale;\n\n                    // Your real localized news content would go here.\n                    templateParams[key] = \"Breaking \" + category + \" News in \" + locale + \"!\";\n                }\n\n                await hub.SendTemplateNotificationAsync(templateParams, category);\n            }\n        }\n\n\n请注意，此简单调用不管平台如何都会将本地化的新闻片段传递到**所有**设备，因为你的通知中心将生成正确的本机负载并将其传送到已订阅特定标记的所有设备。\n\n### 使用移动服务发送通知\n\n在移动服务计划程序中，可以使用以下脚本：\n\n    var azure = require('azure');\n    var notificationHubService = azure.createNotificationHubService('<hub name>', '<connection string with full access>');\n    var notification = {\n            \"News_English\": \"World News in English!\",\n            \"News_French\": \"World News in French!\",\n            \"News_Mandarin\", \"World News in Mandarin!\"\n    }\n    notificationHubService.send('World', notification, function(error) {\n        if (!error) {\n            console.warn(\"Notification successful\");\n        }\n    });\n    \n\n<!---HONumber=Mooncake_0104_2016-->"
}