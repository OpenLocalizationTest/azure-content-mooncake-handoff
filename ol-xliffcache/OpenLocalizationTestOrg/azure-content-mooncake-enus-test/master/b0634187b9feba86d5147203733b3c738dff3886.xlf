<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b0634187b9feba86d5147203733b3c738dff3886</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>如何通过 Ruby 使用队列存储 | Azure</source>
          <target state="new">如何通过 Ruby 使用队列存储 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何使用 Azure 队列服务创建和删除队列，以及插入、获取和删除消息。用 Ruby 编写的相关示例。</source>
          <target state="new">了解如何使用 Azure 队列服务创建和删除队列，以及插入、获取和删除消息。用 Ruby 编写的相关示例。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>如何通过 Ruby 使用队列存储</source>
          <target state="new">如何通过 Ruby 使用队列存储</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>概述</source>
          <target state="new">概述</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>本指南演示如何使用 Azure 队列存储服务执行常见方案。相关示例是使用 Ruby Azure API 编写的。介绍的方案包括“插入”、“扫视”、“获取”和“删除”队列消息以及“创建”和“删除”队列。</source>
          <target state="new">本指南演示如何使用 Azure 队列存储服务执行常见方案。相关示例是使用 Ruby Azure API 编写的。介绍的方案包括“插入”、“扫视”、“获取”和“删除”队列消息以及“创建”和“删除”队列。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>创建 Ruby 应用程序</source>
          <target state="new">创建 Ruby 应用程序</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>创建 Ruby 应用程序。有关说明，请参阅<bpt id="p1">[</bpt>在 Azure 上创建 Ruby 应用程序<ept id="p1">](/documentation/articles/virtual-machines-ruby-rails-web-app-linux)</ept>。</source>
          <target state="new">创建 Ruby 应用程序。有关说明，请参阅<bpt id="p1">[</bpt>在 Azure 上创建 Ruby 应用程序<ept id="p1">](/documentation/articles/virtual-machines-ruby-rails-web-app-linux)</ept>。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>配置应用程序以访问存储</source>
          <target state="new">配置应用程序以访问存储</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>要使用 Azure 存储空间，你需要下载和使用 Ruby azure 包，其中包括一组便于与存储 REST 服务进行通信的库。</source>
          <target state="new">要使用 Azure 存储空间，你需要下载和使用 Ruby azure 包，其中包括一组便于与存储 REST 服务进行通信的库。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>使用 RubyGems 获取该程序包</source>
          <target state="new">使用 RubyGems 获取该程序包</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>使用命令行接口，例如 <bpt id="p1">**</bpt>PowerShell<ept id="p1">**</ept> (Windows)、<bpt id="p2">**</bpt>Terminal<ept id="p2">**</ept> (Mac) 或 <bpt id="p3">**</bpt>Bash<ept id="p3">**</ept> (Unix)。</source>
          <target state="new">使用命令行接口，例如 <bpt id="p1">**</bpt>PowerShell<ept id="p1">**</ept> (Windows)、<bpt id="p2">**</bpt>Terminal<ept id="p2">**</ept> (Mac) 或 <bpt id="p3">**</bpt>Bash<ept id="p3">**</ept> (Unix)。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>在命令窗口中键入“gem install azure”以安装 gem 和依赖项。</source>
          <target state="new">在命令窗口中键入“gem install azure”以安装 gem 和依赖项。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>导入包</source>
          <target state="new">导入包</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>使用常用的文本编辑器将以下内容添加到你要在其中使用存储的 Ruby 文件的顶部：</source>
          <target state="new">使用常用的文本编辑器将以下内容添加到你要在其中使用存储的 Ruby 文件的顶部：</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>设置 Azure 存储连接</source>
          <target state="new">设置 Azure 存储连接</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Azure 模块将读取环境变量 <bpt id="p1">**</bpt>AZURE_STORAGE_ACCOUNT<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>AZURE_STORAGE_ACCESS_KEY<ept id="p2">**</ept>，以便获取连接到 Azure 存储帐户所需的信息。如果未设置这些环境变量，则在使用 <bpt id="p3">**</bpt>Azure::QueueService<ept id="p3">**</ept> 之前必须通过以下代码指定帐户信息：</source>
          <target state="new">Azure 模块将读取环境变量 <bpt id="p1">**</bpt>AZURE_STORAGE_ACCOUNT<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>AZURE_STORAGE_ACCESS_KEY<ept id="p2">**</ept>，以便获取连接到 Azure 存储帐户所需的信息。如果未设置这些环境变量，则在使用 <bpt id="p3">**</bpt>Azure::QueueService<ept id="p3">**</ept> 之前必须通过以下代码指定帐户信息：</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>获取这些值：</source>
          <target state="new">获取这些值：</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>登录到 <bpt id="p1">[</bpt>Azure 管理门户<ept id="p1">](https://manage.windowsazure.cn/)</ept>。</source>
          <target state="new">登录到 <bpt id="p1">[</bpt>Azure 管理门户<ept id="p1">](https://manage.windowsazure.cn/)</ept>。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>导航到要使用的存储帐户</source>
          <target state="new">导航到要使用的存储帐户</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>单击导航窗格底部的“管理密钥”。</source>
          <target state="new">单击导航窗格底部的“管理密钥”。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>在弹出对话框中，将会看到存储帐户名称、主访问密钥和辅助访问密钥。对于访问密钥，你可以选择主访问密钥，也可以选择辅助访问密钥。</source>
          <target state="new">在弹出对话框中，将会看到存储帐户名称、主访问密钥和辅助访问密钥。对于访问密钥，你可以选择主访问密钥，也可以选择辅助访问密钥。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>如何：创建队列</source>
          <target state="new">如何：创建队列</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>以下代码将创建一个 <bpt id="p1">**</bpt>Azure::QueueService<ept id="p1">**</ept> 对象，您可以通过该对象来操作队列。</source>
          <target state="new">以下代码将创建一个 <bpt id="p1">**</bpt>Azure::QueueService<ept id="p1">**</ept> 对象，您可以通过该对象来操作队列。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>使用 create_queue() 方法创建具有指定名称的队列。</source>
          <target state="new">使用 create_queue() 方法创建具有指定名称的队列。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>如何：在队列中插入消息</source>
          <target state="new">如何：在队列中插入消息</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>若要在队列中插入消息，可使用 create_message() 方法创建一条新消息并将其添加到队列中。</source>
          <target state="new">若要在队列中插入消息，可使用 create_message() 方法创建一条新消息并将其添加到队列中。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>如何：扫视下一条消息</source>
          <target state="new">如何：扫视下一条消息</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>通过调用 <bpt id="p1">**</bpt>peek_messages()<ept id="p1">**</ept> 方法，可以查看队列前面的消息，而不必从队列中将其删除。默认情况下，<bpt id="p2">**</bpt>peek_messages()<ept id="p2">**</ept> 扫视单条消息。也可以指定要扫视的消息数。</source>
          <target state="new">通过调用 <bpt id="p1">**</bpt>peek_messages()<ept id="p1">**</ept> 方法，可以查看队列前面的消息，而不必从队列中将其删除。默认情况下，<bpt id="p2">**</bpt>peek_messages()<ept id="p2">**</ept> 扫视单条消息。也可以指定要扫视的消息数。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>如何：取消对下一条消息的排队</source>
          <target state="new">如何：取消对下一条消息的排队</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>可通过两个步骤从队列中删除消息。</source>
          <target state="new">可通过两个步骤从队列中删除消息。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>在调用 <bpt id="p1">**</bpt>list_messages()<ept id="p1">**</ept> 时，默认情况下会获取队列中的下一条消息。也可以指定要获取的消息数。从 <bpt id="p2">**</bpt>list_messages()<ept id="p2">**</ept> 返回的消息变得对从此队列读取消息的任何其他代码不可见。你将传递以秒为单位的可见性超时值作为参数。</source>
          <target state="new">在调用 <bpt id="p1">**</bpt>list_messages()<ept id="p1">**</ept> 时，默认情况下会获取队列中的下一条消息。也可以指定要获取的消息数。从 <bpt id="p2">**</bpt>list_messages()<ept id="p2">**</ept> 返回的消息变得对从此队列读取消息的任何其他代码不可见。你将传递以秒为单位的可见性超时值作为参数。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>若要完成从队列中删除消息，您还必须调用 <bpt id="p1">**</bpt>delete_message()<ept id="p1">**</ept>。</source>
          <target state="new">若要完成从队列中删除消息，您还必须调用 <bpt id="p1">**</bpt>delete_message()<ept id="p1">**</ept>。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>此删除消息的两步过程可确保当您的代码因硬件或软件故障而无法处理消息时，您的其他代码实例可以获取同一消息并重试。你的代码在处理消息后会立即调用 <bpt id="p1">**</bpt>delete_message()<ept id="p1">**</ept>。</source>
          <target state="new">此删除消息的两步过程可确保当您的代码因硬件或软件故障而无法处理消息时，您的其他代码实例可以获取同一消息并重试。你的代码在处理消息后会立即调用 <bpt id="p1">**</bpt>delete_message()<ept id="p1">**</ept>。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>如何：更改已排队消息的内容</source>
          <target state="new">如何：更改已排队消息的内容</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>你可以更改队列中现有消息的内容。以下代码使用 <bpt id="p1">**</bpt>update_message()<ept id="p1">**</ept> 方法来更新消息。该方法将返回一个元组，其中包含队列消息的 pop 接收方，以及一个 UTC 日期时间值，表示消息将在队列中可见的时间。</source>
          <target state="new">你可以更改队列中现有消息的内容。以下代码使用 <bpt id="p1">**</bpt>update_message()<ept id="p1">**</ept> 方法来更新消息。该方法将返回一个元组，其中包含队列消息的 pop 接收方，以及一个 UTC 日期时间值，表示消息将在队列中可见的时间。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>如何：用于对消息取消排队的其他选项</source>
          <target state="new">如何：用于对消息取消排队的其他选项</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>你可以通过两种方式自定义队列中的消息检索。</source>
          <target state="new">你可以通过两种方式自定义队列中的消息检索。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>你可以获取一批消息。</source>
          <target state="new">你可以获取一批消息。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>你可以设置更长或更短的不可见超时时间，从而允许你的代码使用更多或更少的时间来完全处理每个消息。</source>
          <target state="new">你可以设置更长或更短的不可见超时时间，从而允许你的代码使用更多或更少的时间来完全处理每个消息。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>以下代码示例使用 <bpt id="p1">**</bpt>list_messages()<ept id="p1">**</ept> 方法通过一次调用获取 15 条消息。然后，它打印并删除每条消息。它还将每条消息的不可见超时时间设置为 5 分钟。</source>
          <target state="new">以下代码示例使用 <bpt id="p1">**</bpt>list_messages()<ept id="p1">**</ept> 方法通过一次调用获取 15 条消息。然后，它打印并删除每条消息。它还将每条消息的不可见超时时间设置为 5 分钟。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>如何：获取队列长度</source>
          <target state="new">如何：获取队列长度</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>你可以获取队列中消息数的估计值。<bpt id="p1">**</bpt>get_queue_metadata()<ept id="p1">**</ept> 方法要求队列服务返回有关队列的大概消息数和元数据。</source>
          <target state="new">你可以获取队列中消息数的估计值。<bpt id="p1">**</bpt>get_queue_metadata()<ept id="p1">**</ept> 方法要求队列服务返回有关队列的大概消息数和元数据。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>如何：删除队列</source>
          <target state="new">如何：删除队列</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>若要删除队列及其包含的所有消息，请对队列对象调用 <bpt id="p1">**</bpt>delete_queue()<ept id="p1">**</ept> 方法。</source>
          <target state="new">若要删除队列及其包含的所有消息，请对队列对象调用 <bpt id="p1">**</bpt>delete_queue()<ept id="p1">**</ept> 方法。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>现在，您已了解有关队列存储的基础知识，可单击下面的链接来了解更复杂的存储任务。</source>
          <target state="new">现在，您已了解有关队列存储的基础知识，可单击下面的链接来了解更复杂的存储任务。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>访问 <bpt id="p1">[</bpt>Azure 存储空间团队博客<ept id="p1">](http://blogs.msdn.com/b/windowsazurestorage/)</ept></source>
          <target state="new">访问 <bpt id="p1">[</bpt>Azure 存储空间团队博客<ept id="p1">](http://blogs.msdn.com/b/windowsazurestorage/)</ept></target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>访问 GitHub 上的 <bpt id="p1">[</bpt>Azure SDK for Ruby<ept id="p1">](https://github.com/WindowsAzure/azure-sdk-for-ruby)</ept> 存储库</source>
          <target state="new">访问 GitHub 上的 <bpt id="p1">[</bpt>Azure SDK for Ruby<ept id="p1">](https://github.com/WindowsAzure/azure-sdk-for-ruby)</ept> 存储库</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>有关本文中讨论的 Azure 队列服务与<bpt id="p1">[</bpt>如何使用 Service Bus 队列<ept id="p1">](/documentation/articles/service-bus-ruby-how-to-use-queues)</ept>一文中讨论的 Azure Service Bus 队列的比较，请参阅 <bpt id="p2">[</bpt>Azure 队列和 Azure Service Bus 队列 - 比较与对照<ept id="p2">](http://msdn.microsoft.com/zh-cn/library/azure/hh767287.aspx)</ept></source>
          <target state="new">有关本文中讨论的 Azure 队列服务与<bpt id="p1">[</bpt>如何使用 Service Bus 队列<ept id="p1">](/documentation/articles/service-bus-ruby-how-to-use-queues)</ept>一文中讨论的 Azure Service Bus 队列的比较，请参阅 <bpt id="p2">[</bpt>Azure 队列和 Azure Service Bus 队列 - 比较与对照<ept id="p2">](http://msdn.microsoft.com/zh-cn/library/azure/hh767287.aspx)</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>