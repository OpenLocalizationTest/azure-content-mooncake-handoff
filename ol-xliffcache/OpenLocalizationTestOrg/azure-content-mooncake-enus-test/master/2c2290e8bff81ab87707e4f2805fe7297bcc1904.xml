{
  "nodes": [
    {
      "content": "使用 Django 创建 Python Web 应用| Azure",
      "pos": [
        27,
        60
      ]
    },
    {
      "content": "本教程演示如何在 Azure 中使用 Windows Server 2012 R2 Datacenter 虚拟机托管基于 Django 的 Web 应用。",
      "pos": [
        79,
        156
      ]
    },
    {
      "content": "Django Hello World Web 应用",
      "pos": [
        389,
        414
      ]
    },
    {
      "content": "[AZURE.SELECTOR]",
      "pos": [
        418,
        434
      ]
    },
    {
      "content": "Windows",
      "pos": [
        438,
        445
      ]
    },
    {
      "content": "Mac/Linux",
      "pos": [
        529,
        538
      ]
    },
    {
      "content": "本教程介绍如何在 Azure 中使用 Windows Server 虚拟机托管基于 Django 的 Web 应用。本教程假定您之前未使用过 Azure。完成本教程之后，你将能够在云中启动和运行基于 Django 的应用程序。",
      "pos": [
        611,
        724
      ]
    },
    {
      "content": "你将了解如何执行以下操作：",
      "pos": [
        726,
        739
      ]
    },
    {
      "content": "设置 Azure 虚拟机以托管 Django。虽然本教程介绍如何在 Windows Server 下实现此目的，但也可以使用托管在 Azure 中的 Linux VM 实现相同目的。",
      "pos": [
        743,
        834
      ]
    },
    {
      "content": "从 Windows 创建新的 Django 应用程序。",
      "pos": [
        837,
        864
      ]
    },
    {
      "content": "通过按照本教程中的说明进行操作，您将构建一个简单的 Hello World Web 应用。该应用程序将托管在 Azure 虚拟机中。",
      "pos": [
        866,
        932
      ]
    },
    {
      "content": "接下来显示的是已完成应用程序的屏幕截图。",
      "pos": [
        934,
        954
      ]
    },
    {
      "content": "显示 Azure 上的 hello world 页面的浏览器窗口",
      "pos": [
        958,
        990
      ]
    },
    {
      "content": "创建并配置 Azure 虚拟机以托管 Django",
      "pos": [
        1090,
        1115
      ]
    },
    {
      "pos": [
        1120,
        1257
      ],
      "content": "按照<bpt id=\"p1\">[</bpt>此处<ept id=\"p1\">](/documentation/articles/virtual-machines-windows-tutorial-classic-portal)</ept>提供的说明可创建 Windows Server 2012 R2 Datacenter 分发的 Azure 虚拟机。"
    },
    {
      "content": "指示 Azure 将来自 Web 的端口 80 通信定向到虚拟机上的端口 80：",
      "pos": [
        1262,
        1302
      ]
    },
    {
      "content": "在 Azure 门户中导航到你新创建的虚拟机，然后单击“终结点”选项卡。",
      "pos": [
        1306,
        1342
      ]
    },
    {
      "pos": [
        1346,
        1470
      ],
      "content": "单击屏幕底部的“添加”按钮。\n ![添加终结点](./media/virtual-machines-python-django-web-app-windows-server/django-helloworld-addendpoint.png)",
      "leadings": [
        "",
        "   "
      ],
      "nodes": [
        {
          "content": "单击屏幕底部的“添加”按钮。",
          "pos": [
            0,
            14
          ]
        },
        {
          "content": "添加终结点",
          "pos": [
            18,
            23
          ]
        }
      ]
    },
    {
      "pos": [
        1475,
        1526
      ],
      "content": "打开 <bpt id=\"p1\">**</bpt>TCP<ept id=\"p1\">**</ept> 协议的<bpt id=\"p2\">**</bpt>公用端口 80<ept id=\"p2\">**</ept> 作为<bpt id=\"p3\">**</bpt>专用端口 80<ept id=\"p3\">**</ept>。<ph id=\"ph1\">![][port80]</ph>"
    },
    {
      "pos": [
        1530,
        1578
      ],
      "content": "在“仪表板”选项卡上，单击“连接”以使用<bpt id=\"p1\">**</bpt>远程桌面<ept id=\"p1\">**</ept>远程登录到新创建的 Azure 虚拟机。"
    },
    {
      "pos": [
        1582,
        1629
      ],
      "content": "<bpt id=\"p1\">**</bpt>重要说明：<ept id=\"p1\">**</ept>下面的所有说明假定你已正确登录到虚拟机并在那里而非在你的本地计算机发出命令。"
    },
    {
      "pos": [
        1634,
        1678
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"setup\"&gt;</ph> <ph id=\"ph2\">&lt;/a&gt;</ph>安装 Python、Django、WFastCGI"
    },
    {
      "pos": [
        1680,
        1789
      ],
      "content": "<bpt id=\"p1\">**</bpt>注意：<ept id=\"p1\">**</ept>若要使用 Internet Explorer 下载，可能需要配置 IE ESC 设置（单击“开始”/“管理工具”/“服务器管理器”/“本地服务器”，然后单击“IE 增强的安全配置”，将其设置为“关闭”）。"
    },
    {
      "pos": [
        1794,
        1834
      ],
      "content": "从 <bpt id=\"p1\">[</bpt>python.org<ept id=\"p1\">][]</ept> 安装最新的 Python 2.7 或 3.4。"
    },
    {
      "content": "使用 pip 安装 wfastcgi 和 django 包。",
      "pos": [
        1838,
        1868
      ]
    },
    {
      "content": "对于 Python 2.7，使用以下命令。",
      "pos": [
        1874,
        1895
      ]
    },
    {
      "content": "对于 Python 3.4，使用以下命令。",
      "pos": [
        1998,
        2019
      ]
    },
    {
      "content": "安装具有 FastCGI 的 IIS",
      "pos": [
        2121,
        2139
      ]
    },
    {
      "content": "安装具有 FastCGI 支持的 IIS。执行此操作可能需要几分钟。",
      "pos": [
        2144,
        2178
      ]
    },
    {
      "content": "创建新的 Django 应用程序",
      "pos": [
        2655,
        2671
      ]
    },
    {
      "pos": [
        2677,
        2724
      ],
      "content": "从 <bpt id=\"p1\">*</bpt>C:\\\\inetpub\\\\wwwroot<ept id=\"p1\">*</ept> 输入以下命令以创建新的 Django 项目："
    },
    {
      "content": "对于 Python 2.7，使用以下命令。",
      "pos": [
        2730,
        2751
      ]
    },
    {
      "content": "对于 Python 3.4，使用以下命令。",
      "pos": [
        2827,
        2848
      ]
    },
    {
      "content": "New-AzureService 命令的结果",
      "pos": [
        2926,
        2948
      ]
    },
    {
      "pos": [
        3062,
        3107
      ],
      "content": "<bpt id=\"p1\">**</bpt>django-admin<ept id=\"p1\">**</ept> 命令生成基于 Django 的 Web 应用的基本结构："
    },
    {
      "pos": [
        3115,
        3174
      ],
      "content": "<bpt id=\"p1\">**</bpt>helloworld\\\\manage.py<ept id=\"p1\">**</ept> 可帮助你启动托管和停止托管你的基于 Django 的 Web 应用"
    },
    {
      "pos": [
        3181,
        3241
      ],
      "content": "<bpt id=\"p1\">**</bpt>helloworld\\\\helloworld\\\\settings.py<ept id=\"p1\">**</ept> 包含你的应用程序的 Django 设置。"
    },
    {
      "pos": [
        3248,
        3305
      ],
      "content": "<bpt id=\"p1\">**</bpt>helloworld\\\\helloworld\\\\urls.py<ept id=\"p1\">**</ept> 包含每个 url 及其视图之间的映射代码。"
    },
    {
      "pos": [
        3311,
        3426
      ],
      "content": "在 <bpt id=\"p1\">*</bpt>C:\\\\inetpub\\\\wwwroot\\\\helloworld\\\\helloworld<ept id=\"p1\">*</ept> 目录中创建一个名为 <bpt id=\"p2\">**</bpt>views.py<ept id=\"p2\">**</ept> 的新文件。这会包含呈现“hello world”页面的视图。启动编辑器并输入以下代码："
    },
    {
      "content": "将 urls.py 文件的内容替换为以下代码。",
      "pos": [
        3603,
        3626
      ]
    },
    {
      "content": "配置 IIS",
      "pos": [
        3790,
        3796
      ]
    },
    {
      "content": "解锁全局 applicationhost.config 中的处理程序节。这将在 web.config 中启用 python 处理程序。",
      "pos": [
        3801,
        3868
      ]
    },
    {
      "content": "启用 WFastCGI。这会将应用程序添加到引用 Python 解释程序可执行文件和 wfastcgi.py 脚本的全局 applicationhost.config。",
      "pos": [
        3964,
        4048
      ]
    },
    {
      "content": "Python 2.7：",
      "pos": [
        4054,
        4065
      ]
    },
    {
      "content": "Python 3.4：",
      "pos": [
        4116,
        4127
      ]
    },
    {
      "pos": [
        4177,
        4315
      ],
      "content": "在 <bpt id=\"p1\">*</bpt>C:\\\\inetpub\\\\wwwroot\\\\helloworld<ept id=\"p1\">*</ept> 中创建 web.config 文件。<ph id=\"ph1\">`scriptProcessor`</ph> 属性的值应与上一步的输出相匹配。有关 wfastcgi 设置的更多信息，请参阅 pypi 上 <bpt id=\"p2\">[</bpt>wfastcgi<ept id=\"p2\">][]</ept> 的相关页。"
    },
    {
      "content": "Python 2.7：",
      "pos": [
        4321,
        4332
      ]
    },
    {
      "content": "Python 3.4：",
      "pos": [
        4981,
        4992
      ]
    },
    {
      "content": "更新 IIS 默认 Web 应用的位置以指向 django 项目文件夹。",
      "pos": [
        5639,
        5675
      ]
    },
    {
      "content": "最后，在你的浏览器中加载网页。",
      "pos": [
        5797,
        5812
      ]
    },
    {
      "content": "显示 Azure 上的 hello world 页面的浏览器窗口",
      "pos": [
        5816,
        5848
      ]
    },
    {
      "content": "关闭你的 Azure 虚拟机",
      "pos": [
        5858,
        5872
      ]
    },
    {
      "content": "完成本教程后，请关闭并/或删除你新创建的 Azure 虚拟机以为其他教程释放资源并避免产生 Azure 使用费。",
      "pos": [
        5874,
        5930
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"使用 Django 创建 Python Web 应用| Azure\"\n    description=\"本教程演示如何在 Azure 中使用 Windows Server 2012 R2 Datacenter 虚拟机托管基于 Django 的 Web 应用。\"\n    services=\"virtual-machines\"\n    documentationCenter=\"python\"\n    authors=\"huguesv\"\n    manager=\"wpickett\"\n    editor=\"\"/>\n\n\n<tags \n    ms.service=\"virtual-machines\" \n    ms.date=\"08/04/2015\" \n    wacn.date=\"01/21/2016\"/>\n\n\n\n\n# Django Hello World Web 应用\n\n> [AZURE.SELECTOR]\n- [Windows](/documentation/articles/virtual-machines-python-django-web-app-windows-server)\n- [Mac/Linux](/documentation/articles/virtual-machines-python-django-web-app-linux)\n\n本教程介绍如何在 Azure 中使用 Windows Server 虚拟机托管基于 Django 的 Web 应用。本教程假定您之前未使用过 Azure。完成本教程之后，你将能够在云中启动和运行基于 Django 的应用程序。\n\n你将了解如何执行以下操作：\n\n* 设置 Azure 虚拟机以托管 Django。虽然本教程介绍如何在 Windows Server 下实现此目的，但也可以使用托管在 Azure 中的 Linux VM 实现相同目的。\n* 从 Windows 创建新的 Django 应用程序。\n\n通过按照本教程中的说明进行操作，您将构建一个简单的 Hello World Web 应用。该应用程序将托管在 Azure 虚拟机中。\n\n接下来显示的是已完成应用程序的屏幕截图。\n\n![显示 Azure 上的 hello world 页面的浏览器窗口][1]\n\n[AZURE.INCLUDE [create-account-and-vms-note](../includes/create-account-and-vms-note.md)]\n\n## 创建并配置 Azure 虚拟机以托管 Django\n\n1. 按照[此处](/documentation/articles/virtual-machines-windows-tutorial-classic-portal)提供的说明可创建 Windows Server 2012 R2 Datacenter 分发的 Azure 虚拟机。\n\n1. 指示 Azure 将来自 Web 的端口 80 通信定向到虚拟机上的端口 80：\n - 在 Azure 门户中导航到你新创建的虚拟机，然后单击“终结点”选项卡。\n - 单击屏幕底部的“添加”按钮。\n    ![添加终结点](./media/virtual-machines-python-django-web-app-windows-server/django-helloworld-addendpoint.png)\n\n - 打开 **TCP** 协议的**公用端口 80** 作为**专用端口 80**。![][port80]\n1. 在“仪表板”选项卡上，单击“连接”以使用**远程桌面**远程登录到新创建的 Azure 虚拟机。  \n\n**重要说明：**下面的所有说明假定你已正确登录到虚拟机并在那里而非在你的本地计算机发出命令。\n\n## <a id=\"setup\"> </a>安装 Python、Django、WFastCGI\n\n**注意：**若要使用 Internet Explorer 下载，可能需要配置 IE ESC 设置（单击“开始”/“管理工具”/“服务器管理器”/“本地服务器”，然后单击“IE 增强的安全配置”，将其设置为“关闭”）。\n\n1. 从 [python.org][] 安装最新的 Python 2.7 或 3.4。\n1. 使用 pip 安装 wfastcgi 和 django 包。\n\n    对于 Python 2.7，使用以下命令。\n\n        c:\\python27\\scripts\\pip install wfastcgi\n        c:\\python27\\scripts\\pip install django\n\n    对于 Python 3.4，使用以下命令。\n\n        c:\\python34\\scripts\\pip install wfastcgi\n        c:\\python34\\scripts\\pip install django\n\n## 安装具有 FastCGI 的 IIS\n\n1. 安装具有 FastCGI 支持的 IIS。执行此操作可能需要几分钟。\n\n        start /wait %windir%\\System32\\PkgMgr.exe /iu:IIS-WebServerRole;IIS-WebServer;IIS-CommonHttpFeatures;IIS-StaticContent;IIS-DefaultDocument;IIS-DirectoryBrowsing;IIS-HttpErrors;IIS-HealthAndDiagnostics;IIS-HttpLogging;IIS-LoggingLibraries;IIS-RequestMonitor;IIS-Security;IIS-RequestFiltering;IIS-HttpCompressionStatic;IIS-WebServerManagementTools;IIS-ManagementConsole;WAS-WindowsActivationService;WAS-ProcessModel;WAS-NetFxEnvironment;WAS-ConfigurationAPI;IIS-CGI\n\n## 创建新的 Django 应用程序\n\n1.  从 *C:\\\\inetpub\\\\wwwroot* 输入以下命令以创建新的 Django 项目：\n\n    对于 Python 2.7，使用以下命令。\n\n        C:\\Python27\\Scripts\\django-admin.exe startproject helloworld\n\n    对于 Python 3.4，使用以下命令。\n\n        C:\\Python34\\Scripts\\django-admin.exe startproject helloworld\n\n    ![New-AzureService 命令的结果](./media/virtual-machines-python-django-web-app-windows-server/django-helloworld-cmd-new-azure-service.png)\n\n1.  **django-admin** 命令生成基于 Django 的 Web 应用的基本结构：\n\n  -   **helloworld\\\\manage.py** 可帮助你启动托管和停止托管你的基于 Django 的 Web 应用\n  -   **helloworld\\\\helloworld\\\\settings.py** 包含你的应用程序的 Django 设置。\n  -   **helloworld\\\\helloworld\\\\urls.py** 包含每个 url 及其视图之间的映射代码。\n\n1.  在 *C:\\\\inetpub\\\\wwwroot\\\\helloworld\\\\helloworld* 目录中创建一个名为 **views.py** 的新文件。这会包含呈现“hello world”页面的视图。启动编辑器并输入以下代码：\n\n        from django.http import HttpResponse\n        def home(request):\n            html = \"<html><body>Hello World!</body></html>\"\n            return HttpResponse(html)\n\n1.  将 urls.py 文件的内容替换为以下代码。\n\n        from django.conf.urls import patterns, url\n        urlpatterns = patterns('',\n            url(r'^$', 'helloworld.views.home', name='home'),\n        )\n\n## 配置 IIS\n\n1. 解锁全局 applicationhost.config 中的处理程序节。这将在 web.config 中启用 python 处理程序。\n\n        %windir%\\system32\\inetsrv\\appcmd unlock config -section:system.webServer/handlers\n\n1. 启用 WFastCGI。这会将应用程序添加到引用 Python 解释程序可执行文件和 wfastcgi.py 脚本的全局 applicationhost.config。\n\n    Python 2.7：\n\n        c:\\python27\\scripts\\wfastcgi-enable\n\n    Python 3.4：\n\n        c:\\python34\\scripts\\wfastcgi-enable\n\n1. 在 *C:\\\\inetpub\\\\wwwroot\\\\helloworld* 中创建 web.config 文件。`scriptProcessor` 属性的值应与上一步的输出相匹配。有关 wfastcgi 设置的更多信息，请参阅 pypi 上 [wfastcgi][] 的相关页。\n\n    Python 2.7：\n\n        <configuration>\n          <appSettings>\n            <add key=\"WSGI_HANDLER\" value=\"django.core.handlers.wsgi.WSGIHandler()\" />\n            <add key=\"PYTHONPATH\" value=\"C:\\inetpub\\wwwroot\\helloworld\" />\n            <add key=\"DJANGO_SETTINGS_MODULE\" value=\"helloworld.settings\" />\n          </appSettings>\n          <system.webServer>\n            <handlers>\n                <add name=\"Python FastCGI\" path=\"*\" verb=\"*\" modules=\"FastCgiModule\" scriptProcessor=\"C:\\Python27\\python.exe|C:\\Python27\\Lib\\site-packages\\wfastcgi.pyc\" resourceType=\"Unspecified\" />\n            </handlers>\n          </system.webServer>\n        </configuration>\n\n    Python 3.4：\n\n        <configuration>\n          <appSettings>\n            <add key=\"WSGI_HANDLER\" value=\"django.core.handlers.wsgi.WSGIHandler()\" />\n            <add key=\"PYTHONPATH\" value=\"C:\\inetpub\\wwwroot\\helloworld\" />\n            <add key=\"DJANGO_SETTINGS_MODULE\" value=\"helloworld.settings\" />\n          </appSettings>\n          <system.webServer>\n            <handlers>\n                <add name=\"Python FastCGI\" path=\"*\" verb=\"*\" modules=\"FastCgiModule\" scriptProcessor=\"C:\\Python34\\python.exe|C:\\Python34\\Lib\\site-packages\\wfastcgi.py\" resourceType=\"Unspecified\" />\n            </handlers>\n          </system.webServer>\n        </configuration>\n\n1. 更新 IIS 默认 Web 应用的位置以指向 django 项目文件夹。\n\n        %windir%\\system32\\inetsrv\\appcmd set vdir \"Default Web Site/\" -physicalPath:\"C:\\inetpub\\wwwroot\\helloworld\"\n\n1. 最后，在你的浏览器中加载网页。\n\n![显示 Azure 上的 hello world 页面的浏览器窗口][1]\n\n\n## 关闭你的 Azure 虚拟机\n\n完成本教程后，请关闭并/或删除你新创建的 Azure 虚拟机以为其他教程释放资源并避免产生 Azure 使用费。\n\n[1]: ./media/virtual-machines-python-django-web-app-windows-server/django-helloworld-browser-azure.png\n\n[port80]: ./media/virtual-machines-python-django-web-app-windows-server/django-helloworld-port80.png\n\n[Web Platform Installer]: http://www.microsoft.com/web/downloads/platform.aspx\n[python.org]: https://www.python.org/downloads/\n[wfastcgi]: https://pypi.python.org/pypi/wfastcgi\n\n<!---HONumber=70-->"
}