{
  "nodes": [
    {
      "content": "使用 REST 创建 ContentKey",
      "pos": [
        28,
        49
      ]
    },
    {
      "content": "了解如何创建提供对资产进行安全访问的内容密钥。",
      "pos": [
        69,
        92
      ]
    },
    {
      "content": "使用 REST 创建 ContentKey",
      "pos": [
        311,
        332
      ]
    },
    {
      "content": "[AZURE.SELECTOR]",
      "pos": [
        337,
        353
      ]
    },
    {
      "content": "REST",
      "pos": [
        357,
        361
      ]
    },
    {
      "content": ".NET",
      "pos": [
        429,
        433
      ]
    },
    {
      "pos": [
        501,
        552
      ],
      "content": "媒体服务允许你创建新资产和传送加密的资产。<bpt id=\"p1\">**</bpt>ContentKey<ept id=\"p1\">**</ept> 提供对<bpt id=\"p2\">**</bpt>资产<ept id=\"p2\">**</ept>的安全访问。"
    },
    {
      "pos": [
        554,
        728
      ],
      "content": "创建新资产时（例如，<bpt id=\"p1\">[</bpt>上载文件<ept id=\"p1\">](/documentation/articles/media-services-rest-upload-files)</ept>之前），可以指定以下加密选项：<bpt id=\"p2\">**</bpt>StorageEncrypted<ept id=\"p2\">**</ept>、<bpt id=\"p3\">**</bpt>CommonEncryptionProtected<ept id=\"p3\">**</ept> 或 <bpt id=\"p4\">**</bpt>EnvelopeEncryptionProtected<ept id=\"p4\">**</ept>。"
    },
    {
      "pos": [
        730,
        907
      ],
      "content": "将资产传送到你的客户端时，可以使用以下两个加密选项之一<bpt id=\"p1\">[</bpt>将资产配置为动态加密<ept id=\"p1\">](/documentation/articles/media-services-rest-configure-asset-delivery-policy)</ept>：<bpt id=\"p2\">**</bpt>DynamicEnvelopeEncryption<ept id=\"p2\">**</ept> 或 <bpt id=\"p3\">**</bpt>DynamicCommonEncryption<ept id=\"p3\">**</ept>。"
    },
    {
      "pos": [
        909,
        949
      ],
      "content": "加密的资产必须与 <bpt id=\"p1\">**</bpt>ContentKey<ept id=\"p1\">**</ept> 关联。本文介绍如何创建内容密钥。"
    },
    {
      "content": "以下是用于生成内容密钥的常规步骤，你会将这些内容密钥与你想要进行加密的资产关联。",
      "pos": [
        951,
        991
      ]
    },
    {
      "content": "随机生成一个 16 字节 AES 密钥（用于常规和信封加密）或 32 字节 AES 密钥（用于存储加密）。",
      "pos": [
        996,
        1049
      ]
    },
    {
      "content": "这将成为你资产的内容密钥，这意味着该资产的所有关联文件在解密过程中需要使用同一内容密钥。",
      "pos": [
        1056,
        1100
      ]
    },
    {
      "pos": [
        1106,
        1345
      ],
      "content": "调用 <bpt id=\"p1\">[</bpt>GetProtectionKeyId<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/azure/jj683097.aspx#getprotectionkeyid)</ept> 和 <bpt id=\"p2\">[</bpt>GetProtectionKey<ept id=\"p2\">](https://msdn.microsoft.com/zh-cn/library/azure/jj683097.aspx#getprotectionkey)</ept> 方法来获取正确的 X.509 证书，必须使用该证书加密你的内容密钥。"
    },
    {
      "content": "使用 X.509 证书的公钥来加密你的内容密钥。",
      "pos": [
        1350,
        1374
      ]
    },
    {
      "pos": [
        1381,
        1579
      ],
      "content": "媒体服务 .NET SDK 在加密时使用 RSA 和 OAEP。你可以参阅 <bpt id=\"p1\">[</bpt>EncryptSymmetricKeyData 函数<ept id=\"p1\">](https://github.com/Azure/azure-sdk-for-media-services/blob/dev/src/net/Client/Common/Common.FileEncryption/EncryptionUtils.cs)</ept>中的示例。"
    },
    {
      "pos": [
        1584,
        1744
      ],
      "content": "创建一个使用密钥标识符和内容密钥计算得出的校验和值（基于 PlayReady AES 密钥校验和算法）。有关详细信息，请参阅位于<bpt id=\"p1\">[</bpt>此处<ept id=\"p1\">](http://www.microsoft.com/playready/documents/)</ept>的 PlayReady 标头对象文档的“PlayReady AES 密钥校验和算法”部分。"
    },
    {
      "content": "下面的 .NET 示例将使用密钥标识符和明文内容密钥的 GUID 部分计算校验和。",
      "pos": [
        1750,
        1791
      ]
    },
    {
      "pos": [
        2608,
        2741
      ],
      "content": "创建具有 <bpt id=\"p1\">**</bpt>EncryptedContentKey<ept id=\"p1\">**</ept>（转换为 base64 编码的字符串）、<bpt id=\"p2\">**</bpt>ProtectionKeyId<ept id=\"p2\">**</ept>、<bpt id=\"p3\">**</bpt>ProtectionKeyType<ept id=\"p3\">**</ept>、<bpt id=\"p4\">**</bpt>ContentKeyType<ept id=\"p4\">**</ept> 和在前面步骤中收到的<bpt id=\"p5\">**</bpt>校验和<ept id=\"p5\">**</ept>值的内容密钥。"
    },
    {
      "pos": [
        2745,
        2792
      ],
      "content": "通过 $links 操作将 <bpt id=\"p1\">**</bpt>ContentKey<ept id=\"p1\">**</ept> 实体与你的 <bpt id=\"p2\">**</bpt>资产<ept id=\"p2\">**</ept>实体相关联。"
    },
    {
      "content": "请注意，本主题中省略了生成 AES 密钥、加密密钥以及计算校验和的示例。仅提供了演示如何与媒体服务进行交互的示例。",
      "pos": [
        2794,
        2851
      ]
    },
    {
      "pos": [
        2855,
        2893
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>使用媒体服务 REST API 时，需注意以下事项："
    },
    {
      "pos": [
        2897,
        3020
      ],
      "content": "访问媒体服务中的实体时，必须在 HTTP 请求中设置特定标头字段和值。有关详细信息，请参阅<bpt id=\"p1\">[</bpt>媒体服务 REST API 开发的设置<ept id=\"p1\">](/documentation/articles/media-services-rest-how-to-use)</ept>。"
    },
    {
      "pos": [
        3023,
        3207
      ],
      "content": "在成功连接到 https://media.chinacloudapi.cn 之后，你将接收到指定另一个媒体服务 URI 的 301 重定向。必须根据<bpt id=\"p1\">[</bpt>使用 REST API 连接到媒体服务<ept id=\"p1\">](/documentation/articles/media-services-rest-connect_programmatically/)</ept>中所述对新的 URI 执行后续调用。"
    },
    {
      "content": "检索 ProtectionKeyId",
      "pos": [
        3211,
        3229
      ]
    },
    {
      "content": "以下示例演示了如何检索证书的证书指纹 ProtectionKeyId，你在加密内容密钥时必须使用此指纹。执行此步骤以确保你的计算机已具备适当的证书。",
      "pos": [
        3234,
        3308
      ]
    },
    {
      "content": "请求：",
      "pos": [
        3311,
        3314
      ]
    },
    {
      "content": "响应：",
      "pos": [
        4164,
        4167
      ]
    },
    {
      "content": "检索 ProtectionKeyId 的 ProtectionKey",
      "pos": [
        4826,
        4860
      ]
    },
    {
      "content": "以下示例演示如何使用在上一步中收到的 ProtectionKeyId 来检索 X.509 证书。",
      "pos": [
        4862,
        4910
      ]
    },
    {
      "content": "请求：",
      "pos": [
        4912,
        4915
      ]
    },
    {
      "content": "响应：",
      "pos": [
        5866,
        5869
      ]
    },
    {
      "content": "创建 ContentKey",
      "pos": [
        7687,
        7700
      ]
    },
    {
      "pos": [
        7703,
        7765
      ],
      "content": "检索到 X.509 证书并使用其公钥加密你的内容密钥后，请创建一个 <bpt id=\"p1\">**</bpt>ContentKey<ept id=\"p1\">**</ept> 实体并相应地设置其属性值。"
    },
    {
      "content": "创建内容密钥时必须设置的值之一是内容密钥类型。选择以下值之一。",
      "pos": [
        7767,
        7798
      ]
    },
    {
      "pos": [
        8466,
        8588
      ],
      "content": "以下示例演示了如何创建一个 <bpt id=\"p1\">**</bpt>ContentKey<ept id=\"p1\">**</ept>，其中它的 <bpt id=\"p2\">**</bpt>ContentKeyType<ept id=\"p2\">**</ept> 设置为存储加密 (\"1\") 且 <bpt id=\"p3\">**</bpt>ProtectionKeyType<ept id=\"p3\">**</ept> 设置为“0”，以指示保护密钥 ID 是 X.509 证书指纹。"
    },
    {
      "content": "请求",
      "pos": [
        8591,
        8593
      ]
    },
    {
      "content": "响应：",
      "pos": [
        9729,
        9732
      ]
    },
    {
      "content": "将 ContentKey 与资产关联",
      "pos": [
        10863,
        10881
      ]
    },
    {
      "content": "创建 ContentKey 后，使用 $links 操作将其与你的资产关联，如以下示例所示：",
      "pos": [
        10883,
        10929
      ]
    },
    {
      "content": "请求：",
      "pos": [
        10935,
        10938
      ]
    },
    {
      "content": "响应：",
      "pos": [
        11985,
        11988
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"使用 REST 创建 ContentKey\" \n    description=\"了解如何创建提供对资产进行安全访问的内容密钥。\" \n    services=\"media-services\" \n    documentationCenter=\"\" \n    authors=\"Juliako\" \n    manager=\"dwrede\" \n    editor=\"\"/>\n\n<tags\n    ms.service=\"media-services\"\n    ms.date=\"12/05/2015\"\n    wacn.date=\"01/14/2016\"/>\n\n\n#使用 REST 创建 ContentKey\n\n\n> [AZURE.SELECTOR]\n- [REST](/documentation/articles/media-services-rest-create-contentkey)\n- [.NET](/documentation/articles/media-services-dotnet-create-contentkey)\n\n媒体服务允许你创建新资产和传送加密的资产。**ContentKey** 提供对**资产**的安全访问。\n\n创建新资产时（例如，[上载文件](/documentation/articles/media-services-rest-upload-files)之前），可以指定以下加密选项：**StorageEncrypted**、**CommonEncryptionProtected** 或 **EnvelopeEncryptionProtected**。\n\n将资产传送到你的客户端时，可以使用以下两个加密选项之一[将资产配置为动态加密](/documentation/articles/media-services-rest-configure-asset-delivery-policy)：**DynamicEnvelopeEncryption** 或 **DynamicCommonEncryption**。\n\n加密的资产必须与 **ContentKey** 关联。本文介绍如何创建内容密钥。\n\n以下是用于生成内容密钥的常规步骤，你会将这些内容密钥与你想要进行加密的资产关联。\n\n1. 随机生成一个 16 字节 AES 密钥（用于常规和信封加密）或 32 字节 AES 密钥（用于存储加密）。 \n\n    这将成为你资产的内容密钥，这意味着该资产的所有关联文件在解密过程中需要使用同一内容密钥。 \n2.  调用 [GetProtectionKeyId](https://msdn.microsoft.com/zh-cn/library/azure/jj683097.aspx#getprotectionkeyid) 和 [GetProtectionKey](https://msdn.microsoft.com/zh-cn/library/azure/jj683097.aspx#getprotectionkey) 方法来获取正确的 X.509 证书，必须使用该证书加密你的内容密钥。\n3.  使用 X.509 证书的公钥来加密你的内容密钥。 \n\n    媒体服务 .NET SDK 在加密时使用 RSA 和 OAEP。你可以参阅 [EncryptSymmetricKeyData 函数](https://github.com/Azure/azure-sdk-for-media-services/blob/dev/src/net/Client/Common/Common.FileEncryption/EncryptionUtils.cs)中的示例。\n4.  创建一个使用密钥标识符和内容密钥计算得出的校验和值（基于 PlayReady AES 密钥校验和算法）。有关详细信息，请参阅位于[此处](http://www.microsoft.com/playready/documents/)的 PlayReady 标头对象文档的“PlayReady AES 密钥校验和算法”部分。\n\n    下面的 .NET 示例将使用密钥标识符和明文内容密钥的 GUID 部分计算校验和。\n    \n        public static string CalculateChecksum(byte[] contentKey, Guid keyId)\n        {\n            byte[] array = null;\n            using (AesCryptoServiceProvider aesCryptoServiceProvider = new AesCryptoServiceProvider())\n            {\n                aesCryptoServiceProvider.Mode = CipherMode.ECB;\n                aesCryptoServiceProvider.Key = contentKey;\n                aesCryptoServiceProvider.Padding = PaddingMode.None;\n                ICryptoTransform cryptoTransform = aesCryptoServiceProvider.CreateEncryptor();\n                array = new byte[16];\n                cryptoTransform.TransformBlock(keyId.ToByteArray(), 0, 16, array, 0);\n            }\n            byte[] array2 = new byte[8];\n            Array.Copy(array, array2, 8);\n            return Convert.ToBase64String(array2);\n        }\n\n5. 创建具有 **EncryptedContentKey**（转换为 base64 编码的字符串）、**ProtectionKeyId**、**ProtectionKeyType**、**ContentKeyType** 和在前面步骤中收到的**校验和**值的内容密钥。\n6. 通过 $links 操作将 **ContentKey** 实体与你的 **资产**实体相关联。\n\n请注意，本主题中省略了生成 AES 密钥、加密密钥以及计算校验和的示例。仅提供了演示如何与媒体服务进行交互的示例。\n\n\n>[AZURE.NOTE]使用媒体服务 REST API 时，需注意以下事项：\n>\n>访问媒体服务中的实体时，必须在 HTTP 请求中设置特定标头字段和值。有关详细信息，请参阅[媒体服务 REST API 开发的设置](/documentation/articles/media-services-rest-how-to-use)。\n\n>在成功连接到 https://media.chinacloudapi.cn 之后，你将接收到指定另一个媒体服务 URI 的 301 重定向。必须根据[使用 REST API 连接到媒体服务](/documentation/articles/media-services-rest-connect_programmatically/)中所述对新的 URI 执行后续调用。\n\n##检索 ProtectionKeyId \n \n\n以下示例演示了如何检索证书的证书指纹 ProtectionKeyId，你在加密内容密钥时必须使用此指纹。执行此步骤以确保你的计算机已具备适当的证书。\n\n\n请求：\n    \n    \n    GET https://media.chinacloudapi.cn/api/GetProtectionKeyId?contentKeyType=0 HTTP/1.1\n    MaxDataServiceVersion: 3.0;NetFx\n    Accept: application/json\n    Accept-Charset: UTF-8\n    User-Agent: Microsoft ADO.NET Data Services\n    Authorization: Bearer http%3a%2f%2fschemas.xmlsoap.org%2fws%2f2005%2f05%2fidentity%2fclaims%2fnameidentifier=juliakoams1&urn%3aSubscriptionId=bbbef702-e769-477b-9f16-bc4d3aa97387&http%3a%2f%2fschemas.microsoft.com%2faccesscontrolservice%2f2010%2f07%2fclaims%2fidentityprovider=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.chinacloudapi.cn%2f&Audience=urn%3aWindowsAzureMediaServices&ExpiresOn=1423034908&Issuer=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.chinacloudapi.cn%2f&HMACSHA256=7eSLe1GHnxgilr3F2FPCGxdL2%2bwy%2f39XhMPGY9IizfU%3d\n    x-ms-version: 2.8\n    Host: media.chinacloudapi.cn\n    \n\n响应：\n    \n    HTTP/1.1 200 OK\n    Cache-Control: no-cache\n    Content-Length: 139\n    Content-Type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8\n    Server: Microsoft-IIS/8.5\n    request-id: 2b6aa7a4-3a09-4b08-b581-26b55667f817\n    x-ms-request-id: 2b6aa7a4-3a09-4b08-b581-26b55667f817\n    X-Content-Type-Options: nosniff\n    DataServiceVersion: 3.0;\n    X-Powered-By: ASP.NET\n    Strict-Transport-Security: max-age=31536000; includeSubDomains\n    Date: Wed, 04 Feb 2015 02:42:52 GMT\n    \n    {\"odata.metadata\":\"https://wamsbayclus001rest-hs.chinacloudapp.cn/api/$metadata#Edm.String\",\"value\":\"7D9BB04D9D0A4A24800CADBFEF232689E048F69C\"}\n\n##检索 ProtectionKeyId 的 ProtectionKey\n\n以下示例演示如何使用在上一步中收到的 ProtectionKeyId 来检索 X.509 证书。\n\n请求：\n        \n    GET https://media.chinacloudapi.cn/api/GetProtectionKey?ProtectionKeyId='7D9BB04D9D0A4A24800CADBFEF232689E048F69C' HTTP/1.1\n    MaxDataServiceVersion: 3.0;NetFx\n    Accept: application/json\n    Accept-Charset: UTF-8\n    User-Agent: Microsoft ADO.NET Data Services\n    Authorization: Bearer http%3a%2f%2fschemas.xmlsoap.org%2fws%2f2005%2f05%2fidentity%2fclaims%2fnameidentifier=juliakoams1&urn%3aSubscriptionId=bbbef702-e769-477b-9f16-bc4d3aa97387&http%3a%2f%2fschemas.microsoft.com%2faccesscontrolservice%2f2010%2f07%2fclaims%2fidentityprovider=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.chinacloudapi.cn%2f&Audience=urn%3aWindowsAzureMediaServices&ExpiresOn=1423141026&Issuer=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.chinacloudapi.cn%2f&HMACSHA256=lDBz5YXKiWe5L7eXOHsLHc9kKEUcUiFJvrNFFSksgkM%3d\n    x-ms-version: 2.8\n    x-ms-client-request-id: 78d1247a-58d7-40e5-96cc-70ff0dfa7382\n    Host: media.chinacloudapi.cn\n    \n\n\n响应：\n    \n    HTTP/1.1 200 OK\n    Cache-Control: no-cache\n    Content-Length: 1227\n    Content-Type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8\n    Server: Microsoft-IIS/8.5\n    x-ms-client-request-id: 78d1247a-58d7-40e5-96cc-70ff0dfa7382\n    request-id: 1523e8f3-8ed2-40fe-8a9a-5d81eb572cc8\n    x-ms-request-id: 1523e8f3-8ed2-40fe-8a9a-5d81eb572cc8\n    X-Content-Type-Options: nosniff\n    DataServiceVersion: 3.0;\n    X-Powered-By: ASP.NET\n    Strict-Transport-Security: max-age=31536000; includeSubDomains\n    Date: Thu, 05 Feb 2015 07:52:30 GMT\n    \n    {\"odata.metadata\":\"https://wamsbayclus001rest-hs.chinacloudapp.cn/api/$metadata#Edm.String\",\n    \"value\":\"MIIDSTCCAjGgAwIBAgIQqf92wku/HLJGCbMAU8GEnDANBgkqhkiG9w0BAQQFADAuMSwwKgYDVQQDEyN3YW1zYmx1cmVnMDAxZW5jcnlwdGFsbHNlY3JldHMtY2VydDAeFw0xMjA1MjkwNzAwMDBaFw0zMjA1MjkwNzAwMDBaMC4xLDAqBgNVBAMTI3dhbXNibHVyZWcwMDFlbmNyeXB0YWxsc2VjcmV0cy1jZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzR0SEbXefvUjb9wCUfkEiKtGQ5Gc328qFPrhMjSo+YHe0AVviZ9YaxPPb0m1AaaRV4dqWpST2+JtDhLOmGpWmmA60tbATJDdmRzKi2eYAyhhE76MgJgL3myCQLP42jDusWXWSMabui3/tMDQs+zfi1sJ4Ch/lm5EvksYsu6o8sCv29VRwxfDLJPBy2NlbV4GbWz5Qxp2tAmHoROnfaRhwp6WIbquk69tEtu2U50CpPN2goLAqx2PpXAqA+prxCZYGTHqfmFJEKtZHhizVBTFPGS3ncfnQC9QIEwFbPw6E5PO5yNaB68radWsp5uvDg33G1i8IT39GstMW6zaaG7cNQIDAQABo2MwYTBfBgNVHQEEWDBWgBCOGT2hPhsvQioZimw8M+jOoTAwLjEsMCoGA1UEAxMjd2Ftc2JsdXJlZzAwMWVuY3J5cHRhbGxzZWNyZXRzLWNlcnSCEKn/dsJLvxyyRgmzAFPBhJwwDQYJKoZIhvcNAQEEBQADggEBABcrQPma2ekNS3Wc5wGXL/aHyQaQRwFGymnUJ+VR8jVUZaC/U/f6lR98eTlwycjVwRL7D15BfClGEHw66QdHejaViJCjbEIJJ3p2c9fzBKhjLhzB3VVNiLIaH6RSI1bMPd2eddSCqhDIn3VBN605GcYXMzhYp+YA6g9+YMNeS1b+LxX3fqixMQIxSHOLFZ1G/H2xfNawv0VikH3djNui3EKT1w/8aRkUv/AAV0b3rYkP/jA1I0CPn0XFk7STYoiJ3gJoKq9EMXhit+Iwfz0sMkfhWG12/XO+TAWqsK1ZxEjuC9OzrY7pFnNxs4Mu4S8iinehduSpY+9mDd3dHynNwT4=\"}\n\n##创建 ContentKey \n\n检索到 X.509 证书并使用其公钥加密你的内容密钥后，请创建一个 **ContentKey** 实体并相应地设置其属性值。\n\n创建内容密钥时必须设置的值之一是内容密钥类型。选择以下值之一。\n\n    /// <summary>\n    /// Specifies the type of a content key.\n    /// </summary>\n    public enum ContentKeyType\n    {\n        /// <summary>\n        /// Specifies a content key for common encryption.\n        /// </summary>\n        /// <remarks>This is the default value.</remarks>\n        CommonEncryption = 0,\n\n        /// <summary>\n        /// Specifies a content key for storage encryption.\n        /// </summary>\n        StorageEncryption = 1,\n\n        /// <summary>\n        /// Specifies a content key for encrypting encoding configuration data that may contain sensitive preset information. \n        /// </summary>\n        ConfigurationEncryption = 2,\n    }\n\n\n以下示例演示了如何创建一个 **ContentKey**，其中它的 **ContentKeyType** 设置为存储加密 (\"1\") 且 **ProtectionKeyType** 设置为“0”，以指示保护密钥 ID 是 X.509 证书指纹。\n\n\n请求\n\n    POST https://media.chinacloudapi.cn/api/ContentKeys HTTP/1.1\n    Content-Type: application/json\n    DataServiceVersion: 1.0;NetFx\n    MaxDataServiceVersion: 3.0;NetFx\n    Accept: application/json\n    Accept-Charset: UTF-8\n    User-Agent: Microsoft ADO.NET Data Services\n    Authorization: Bearer http%3a%2f%2fschemas.xmlsoap.org%2fws%2f2005%2f05%2fidentity%2fclaims%2fnameidentifier=juliakoams1&urn%3aSubscriptionId=bbbef702-e769-477b-9f16-bc4d3aa97387&http%3a%2f%2fschemas.microsoft.com%2faccesscontrolservice%2f2010%2f07%2fclaims%2fidentityprovider=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.chinacloudapi.cn%2f&Audience=urn%3aWindowsAzureMediaServices&ExpiresOn=1423034908&Issuer=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.chinacloudapi.cn%2f&HMACSHA256=7eSLe1GHnxgilr3F2FPCGxdL2%2bwy%2f39XhMPGY9IizfU%3d\n    x-ms-version: 2.8\n    Host: media.chinacloudapi.cn\n    {\n    \"Name\":\"ContentKey\",\n    \"ProtectionKeyId\":\"7D9BB04D9D0A4A24800CADBFEF232689E048F69C\", \n    \"ContentKeyType\":\"1\", \n    \"ProtectionKeyType\":\"0\",\n    \"EncryptedContentKey\":\"your encrypted content key\",\n    \"Checksum\":\"calculated checksum\"\n    }\n\n\n响应：\n    \n    HTTP/1.1 201 Created\n    Cache-Control: no-cache\n    Content-Length: 777\n    Content-Type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8\n    Location: https://media.chinacloudapi.cn/api/ContentKeys('nb%3Akid%3AUUID%3A9c8ea9c6-52bd-4232-8a43-8e43d8564a99')\n    Server: Microsoft-IIS/8.5\n    request-id: 76e85e0f-5cf1-44cb-b689-b3455888682c\n    x-ms-request-id: 76e85e0f-5cf1-44cb-b689-b3455888682c\n    X-Content-Type-Options: nosniff\n    DataServiceVersion: 3.0;\n    X-Powered-By: ASP.NET\n    Strict-Transport-Security: max-age=31536000; includeSubDomains\n    Date: Wed, 04 Feb 2015 02:37:46 GMT\n    \n    {\"odata.metadata\":\"https://wamsbayclus001rest-hs.chinacloudapp.cn/api/$metadata#ContentKeys/@Element\",\n    \"Id\":\"nb:kid:UUID:9c8ea9c6-52bd-4232-8a43-8e43d8564a99\",\"Created\":\"2015-02-04T02:37:46.9684379Z\",\n    \"LastModified\":\"2015-02-04T02:37:46.9684379Z\",\n    \"ContentKeyType\":1,\n    \"EncryptedContentKey\":\"your encrypted content key\",\n    \"Name\":\"ContentKey\",\n    \"ProtectionKeyId\":\"7D9BB04D9D0A4A24800CADBFEF232689E048F69C\",\n    \"ProtectionKeyType\":0,\n    \"Checksum\":\"calculated checksum\"}\n\n##将 ContentKey 与资产关联\n\n创建 ContentKey 后，使用 $links 操作将其与你的资产关联，如以下示例所示：\n    \n请求：\n    \n    POST https://media.chinacloudapi.cn/api/Assets('nb%3Acid%3AUUID%3Afbd7ce05-1087-401b-aaae-29f16383c801')/$links/ContentKeys HTTP/1.1\n    DataServiceVersion: 1.0;NetFx\n    MaxDataServiceVersion: 3.0;NetFx\n    Accept: application/json\n    Accept-Charset: UTF-8\n    Content-Type: application/json\n    Authorization: Bearer http%3a%2f%2fschemas.xmlsoap.org%2fws%2f2005%2f05%2fidentity%2fclaims%2fnameidentifier=juliakoams1&urn%3aSubscriptionId=bbbef702-e769-477b-9f16-bc4d3aa97387&http%3a%2f%2fschemas.microsoft.com%2faccesscontrolservice%2f2010%2f07%2fclaims%2fidentityprovider=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.chinacloudapi.cn%2f&Audience=urn%3aWindowsAzureMediaServices&ExpiresOn=1423141026&Issuer=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.chinacloudapi.cn%2f&HMACSHA256=lDBz5YXKiWe5L7eXOHsLHc9kKEUcUiFJvrNFFSksgkM%3d\n    x-ms-version: 2.8\n    Host: media.chinacloudapi.cn\n\n    \n    {\"uri\":\"https://wamsbayclus001rest-hs.chinacloudapp.cn/api/ContentKeys('nb%3Akid%3AUUID%3A01e6ea36-2285-4562-91f1-82c45736047c')\"}\n\n响应：\n\n    HTTP/1.1 204 No Content\n\n<!---HONumber=76-->"
}