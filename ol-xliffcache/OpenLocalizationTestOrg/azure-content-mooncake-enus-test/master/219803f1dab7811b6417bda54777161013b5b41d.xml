{
  "nodes": [
    {
      "content": "Azure AD Connect Sync：了解声明性设置表达式",
      "pos": [
        27,
        59
      ]
    },
    {
      "content": "说明声明性设置表达式",
      "pos": [
        78,
        88
      ]
    },
    {
      "content": "Azure AD Connect 同步：了解声明性预配表达式",
      "pos": [
        309,
        339
      ]
    },
    {
      "content": "Azure AD Connect 同步构建在声明性预配的基础之上。该声明性预配是在 Forefront Identity Manager 2010 中首次引入的。利用该设置，你可以在无需编写编译代码的情况下，实现完整的标识集成业务逻辑。",
      "pos": [
        341,
        459
      ]
    },
    {
      "content": "声明性设置的一个重要组成部分是属性流中使用的表达式语言。所用的语言是 Microsoft® Visual Basic® for Applications (VBA) 的子集。Microsoft Office 中使用了这种语言，具有 VBScript 经验的用户都认识该语言。声明性设置表达式语言只使用函数，不属于结构化语言；它不提供任何方法或语句。函数将嵌套在表达式程序流中。",
      "pos": [
        461,
        649
      ]
    },
    {
      "pos": [
        651,
        757
      ],
      "content": "有关详细信息，请参阅<bpt id=\"p1\">[</bpt>欢迎使用适用于 Office 2013 的 Visual Basic 应用程序语言参考<ept id=\"p1\">](https://msdn.microsoft.com/library/gg264383.aspx)</ept>。"
    },
    {
      "content": "属性属于强类型。需要单值字符串属性的函数不接受多值或不同类型的属性。它也区分大小写。函数名称和属性名称都必须具有正确的大小写，否则会引发错误",
      "pos": [
        759,
        829
      ]
    },
    {
      "content": "语言定义和标识符",
      "pos": [
        838,
        846
      ]
    },
    {
      "content": "函数名称后跟加括号的参数：FunctionName(argument 1,argument N)。",
      "pos": [
        850,
        899
      ]
    },
    {
      "content": "属性采用方括号标识，如 [attributeName]。",
      "pos": [
        902,
        930
      ]
    },
    {
      "content": "参数通过百分比符号标识：%ParameterName%",
      "pos": [
        933,
        960
      ]
    },
    {
      "content": "字符串常量放在引号中：例如\"Contoso\"（注意：必须使用直引号 \"\"，而不能使用弯引号“”）",
      "pos": [
        963,
        1011
      ]
    },
    {
      "content": "数字值表示不带引号，并且应为十进制。十六进制值带有前缀 &amp;H。例如98052、&amp;HFF",
      "pos": [
        1014,
        1057
      ]
    },
    {
      "content": "表示布尔值的常量： True、 False。",
      "pos": [
        1060,
        1082
      ]
    },
    {
      "content": "内置常量仅采用其名称表示：NULL、CRLF、IgnoreThisFlow",
      "pos": [
        1085,
        1122
      ]
    },
    {
      "content": "函数",
      "pos": [
        1128,
        1130
      ]
    },
    {
      "content": "声明性预配使用许多函数来实现转换属性值的可能性。这些函数可以嵌套，因此，一个函数的结果将传递到另一个函数。",
      "pos": [
        1131,
        1184
      ]
    },
    {
      "pos": [
        1186,
        1286
      ],
      "content": "函数还可以处理多值属性。在这种情况下，函数将处理各个值，并向每个值应用同一个函数。例如，<ph id=\"ph1\">`Trim([proxyAddresses])`</ph> 将对 proxyAddress 属性中的每个值执行 Trim。"
    },
    {
      "pos": [
        1288,
        1385
      ],
      "content": "有关函数的完整列表，请参阅<bpt id=\"p1\">[</bpt>函数参考<ept id=\"p1\">](/documentation/articles/active-directory-aadconnectsync-functions-reference)</ept>。"
    },
    {
      "content": "Parameters",
      "pos": [
        1391,
        1401
      ]
    },
    {
      "content": "参数由连接器定义，或者由系统管理员使用 PowerShell 来设置。参数通常包含因系统不同而各异的值，例如用户所在域的名称。这些参数可在属性流中使用。",
      "pos": [
        1403,
        1479
      ]
    },
    {
      "content": "Active Directory 连接器为入站同步规则提供以下参数：",
      "pos": [
        1481,
        1515
      ]
    },
    {
      "content": "参数名称",
      "pos": [
        1519,
        1523
      ]
    },
    {
      "content": "注释",
      "pos": [
        1526,
        1528
      ]
    },
    {
      "content": "Domain.Netbios",
      "pos": [
        1547,
        1561
      ]
    },
    {
      "content": "当前正在导入的域的 Netbios 格式，例如 FABRIKAMSALES",
      "pos": [
        1564,
        1601
      ]
    },
    {
      "content": "Domain.FQDN",
      "pos": [
        1606,
        1617
      ]
    },
    {
      "content": "当前正在导入的域的 FQDN 格式，例如 sales.fabrikam.com",
      "pos": [
        1620,
        1659
      ]
    },
    {
      "content": "Domain.LDAP",
      "pos": [
        1664,
        1675
      ]
    },
    {
      "content": "当前正在导入的域的 LDAP 格式，例如 DC=sales,DC=fabrikam,DC=com",
      "pos": [
        1678,
        1726
      ]
    },
    {
      "content": "Forest.Netbios",
      "pos": [
        1731,
        1745
      ]
    },
    {
      "content": "当前正在导入的林名称的 Netbios 格式，例如 FABRIKAMCORP",
      "pos": [
        1748,
        1786
      ]
    },
    {
      "content": "Forest.FQDN",
      "pos": [
        1791,
        1802
      ]
    },
    {
      "content": "当前正在导入的林名称的 FQDN 格式，例如 fabrikam.com",
      "pos": [
        1805,
        1840
      ]
    },
    {
      "content": "Forest.LDAP",
      "pos": [
        1845,
        1856
      ]
    },
    {
      "content": "当前正在导入的林名称的 LDAP 格式，例如 DC=fabrikam,DC=com",
      "pos": [
        1859,
        1900
      ]
    },
    {
      "content": "系统提供以下参数用于获取当前正在运行的连接器的标识符：",
      "pos": [
        1904,
        1931
      ]
    },
    {
      "content": "使用用户所在域的 netbios 名称填充 Metaverse 属性域的示例：",
      "pos": [
        1949,
        1988
      ]
    },
    {
      "content": "运算符",
      "pos": [
        2024,
        2027
      ]
    },
    {
      "content": "可以使用以下运算符：",
      "pos": [
        2029,
        2039
      ]
    },
    {
      "pos": [
        2043,
        2064
      ],
      "content": "<bpt id=\"p1\">**</bpt>比较<ept id=\"p1\">**</ept>：&lt;、&lt;=、&lt;&gt;、=、&gt;、&gt;="
    },
    {
      "pos": [
        2067,
        2081
      ],
      "content": "<bpt id=\"p1\">**</bpt>数学<ept id=\"p1\">**</ept>：+、-、*、-"
    },
    {
      "pos": [
        2084,
        2097
      ],
      "content": "<bpt id=\"p1\">**</bpt>字符串<ept id=\"p1\">**</ept>：&amp;（连接）"
    },
    {
      "pos": [
        2100,
        2118
      ],
      "content": "<bpt id=\"p1\">**</bpt>逻辑<ept id=\"p1\">**</ept>：&amp;&amp;（和）、||（或）"
    },
    {
      "pos": [
        2121,
        2133
      ],
      "content": "<bpt id=\"p1\">**</bpt>计算顺序<ept id=\"p1\">**</ept>：( )"
    },
    {
      "pos": [
        2135,
        2235
      ],
      "content": "运算符从左到右进行求值，并具有相同的求值优先级。也就是说，<bpt id=\"p1\">*</bpt>（乘号）不会在 -（减号）之前求值。2<ept id=\"p1\">*</ept>(5+3) 与 2*5+3 不同。如果从左到右的求值顺序不适当，可以使用括号 () 来更改求值顺序。"
    },
    {
      "content": "常见方案",
      "pos": [
        2240,
        2244
      ]
    },
    {
      "content": "属性的长度",
      "pos": [
        2250,
        2255
      ]
    },
    {
      "content": "字符串属性在默认情况下设置为可编制索引，并且最大长度为 448 个字符。如果你正在使用其中可能包含更多字符的字符串属性，则请确保属性流中包括以下内容：",
      "pos": [
        2257,
        2332
      ]
    },
    {
      "content": "更改 userPrincipalSuffix",
      "pos": [
        2384,
        2406
      ]
    },
    {
      "content": "Active Directory 中的 userPrincipalName 属性并非始终被用户知晓，并且可能不适合作为登录名 ID。Azure AD Connect 同步安装向导允许选择不同的属性，例如 mail。但在某些情况下，必须计算该属性。例如：公司 Contoso 具有两个 Azure AD 目录，一个用于生产，另一个用于测试。他们希望测试租户中的用户只能更改登录 ID 中的后缀。",
      "pos": [
        2408,
        2604
      ]
    },
    {
      "content": "在此表达式中，我们首先使用左侧所有内容 @-sign (Word)，并与固定字符串连接。",
      "pos": [
        2683,
        2727
      ]
    },
    {
      "content": "将多值转换为单值",
      "pos": [
        2733,
        2741
      ]
    },
    {
      "content": "Active Directory 中的某些属性在架构中是多值，不过它们在 Active Directory 用户和计算机中看上去是单值。一个示例就是说明属性。",
      "pos": [
        2743,
        2822
      ]
    },
    {
      "content": "在此表达式中，如果属性具有值，我们会使用属性中的第一项 (Item)，删除前导空格和尾随空格 (Trim)，然后保留字符串中的前 448 个字符（左）。",
      "pos": [
        2919,
        2995
      ]
    },
    {
      "content": "高级概念",
      "pos": [
        3002,
        3006
      ]
    },
    {
      "content": "NULL 和 IgnoreThisFlow",
      "pos": [
        3012,
        3033
      ]
    },
    {
      "pos": [
        3035,
        3115
      ],
      "content": "对于入站同步规则，应始终使用常量 <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>。这表示流程没有要提供的值，并且另一个规则可以提供值。如果没有规则提供值，则会删除 metaverse 属性。"
    },
    {
      "content": "对于出站同步规则，有两个不同的常量可以使用：NULL 和 IgnoreThisFlow。两个常量均指示属性流没有要提供的内容，但不同之处是当其他规则都没有要提供的任何内容时会发生的情况。如果已连接目录中存在现有值，NULL 则会在删除它的属性上暂存删除，而 IgnoreThisFlow 则会保留现有值。",
      "pos": [
        3117,
        3269
      ]
    },
    {
      "content": "ImportedValue",
      "pos": [
        3278,
        3291
      ]
    },
    {
      "content": "函数 ImportedValues 不同于其他所有函数，因为属性名称必须放在引号内，而不是括在方括号中：ImportedValue(“proxyAddresses”)。",
      "pos": [
        3293,
        3377
      ]
    },
    {
      "content": "通常在同步期间，即使尚未导出或在导出过程中收到错误 (“top of the tower”)，属性也会使用预期值。入站同步会假定尚未到达已连接目录的属性最终会到达该目录。在某些情况下，仅同步由已连接目录已确认的值很重要，并且在这种情况下会使用函数 ImportedValue (“hologram and delta import tower”)。",
      "pos": [
        3379,
        3553
      ]
    },
    {
      "content": "可以从 Exchange 的现成同步规则 In from AD – User Common 中找到这种示例。其中，在混合 Exchange 中，如果已确认已成功导出由 Exchange Online 添加的值，则应该只同步该值：",
      "pos": [
        3555,
        3669
      ]
    },
    {
      "pos": [
        3749,
        3868
      ],
      "content": "有关函数的完整列表，请参阅 <bpt id=\"p1\">[</bpt>Azure AD Connect Sync：函数引用<ept id=\"p1\">](/documentation/articles/active-directory-aadconnectsync-functions-reference)</ept>"
    },
    {
      "content": "其他资源",
      "pos": [
        3874,
        3878
      ]
    },
    {
      "content": "Azure AD Connect Sync：自定义同步选项",
      "pos": [
        3883,
        3912
      ]
    },
    {
      "content": "将本地标识与 Azure Active Directory 集成",
      "pos": [
        3981,
        4013
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"Azure AD Connect Sync：了解声明性设置表达式\"\n    description=\"说明声明性设置表达式\"\n    services=\"active-directory\"\n    documentationCenter=\"\"\n    authors=\"markusvi\"\n    manager=\"swadhwa\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"active-directory\"\n    ms.date=\"11/10/2015\"\n    wacn.date=\"02/25/2016\"/>\n\n\n# Azure AD Connect 同步：了解声明性预配表达式\n\nAzure AD Connect 同步构建在声明性预配的基础之上。该声明性预配是在 Forefront Identity Manager 2010 中首次引入的。利用该设置，你可以在无需编写编译代码的情况下，实现完整的标识集成业务逻辑。\n\n声明性设置的一个重要组成部分是属性流中使用的表达式语言。所用的语言是 Microsoft® Visual Basic® for Applications (VBA) 的子集。Microsoft Office 中使用了这种语言，具有 VBScript 经验的用户都认识该语言。声明性设置表达式语言只使用函数，不属于结构化语言；它不提供任何方法或语句。函数将嵌套在表达式程序流中。\n\n有关详细信息，请参阅[欢迎使用适用于 Office 2013 的 Visual Basic 应用程序语言参考](https://msdn.microsoft.com/library/gg264383.aspx)。\n\n属性属于强类型。需要单值字符串属性的函数不接受多值或不同类型的属性。它也区分大小写。函数名称和属性名称都必须具有正确的大小写，否则会引发错误\n\n\n\n\n\n## 语言定义和标识符\n\n- 函数名称后跟加括号的参数：FunctionName(argument 1,argument N)。\n- 属性采用方括号标识，如 [attributeName]。\n- 参数通过百分比符号标识：%ParameterName%\n- 字符串常量放在引号中：例如\"Contoso\"（注意：必须使用直引号 \"\"，而不能使用弯引号“”）\n- 数字值表示不带引号，并且应为十进制。十六进制值带有前缀 &H。例如98052、&HFF\n- 表示布尔值的常量： True、 False。\n- 内置常量仅采用其名称表示：NULL、CRLF、IgnoreThisFlow\n\n### 函数\n声明性预配使用许多函数来实现转换属性值的可能性。这些函数可以嵌套，因此，一个函数的结果将传递到另一个函数。\n\n函数还可以处理多值属性。在这种情况下，函数将处理各个值，并向每个值应用同一个函数。例如，`Trim([proxyAddresses])` 将对 proxyAddress 属性中的每个值执行 Trim。\n\n有关函数的完整列表，请参阅[函数参考](/documentation/articles/active-directory-aadconnectsync-functions-reference)。\n\n### Parameters\n\n参数由连接器定义，或者由系统管理员使用 PowerShell 来设置。参数通常包含因系统不同而各异的值，例如用户所在域的名称。这些参数可在属性流中使用。\n\nActive Directory 连接器为入站同步规则提供以下参数：\n\n| 参数名称 | 注释 |\n| --- | --- |\n| Domain.Netbios | 当前正在导入的域的 Netbios 格式，例如 FABRIKAMSALES |\n| Domain.FQDN | 当前正在导入的域的 FQDN 格式，例如 sales.fabrikam.com |\n| Domain.LDAP | 当前正在导入的域的 LDAP 格式，例如 DC=sales,DC=fabrikam,DC=com |\n| Forest.Netbios | 当前正在导入的林名称的 Netbios 格式，例如 FABRIKAMCORP |\n| Forest.FQDN | 当前正在导入的林名称的 FQDN 格式，例如 fabrikam.com |\n| Forest.LDAP | 当前正在导入的林名称的 LDAP 格式，例如 DC=fabrikam,DC=com |\n\n系统提供以下参数用于获取当前正在运行的连接器的标识符：\n\n`Connector.ID`\n\n使用用户所在域的 netbios 名称填充 Metaverse 属性域的示例：\n\n`domain <- %Domain.Netbios%`\n\n### 运算符\n\n可以使用以下运算符：\n\n- **比较**：<、<=、<>、=、>、>=\n- **数学**：+、-、*、-\n- **字符串**：&（连接）\n- **逻辑**：&&（和）、||（或）\n- **计算顺序**：( )\n\n运算符从左到右进行求值，并具有相同的求值优先级。也就是说，*（乘号）不会在 -（减号）之前求值。2*(5+3) 与 2*5+3 不同。如果从左到右的求值顺序不适当，可以使用括号 () 来更改求值顺序。\n\n## 常见方案\n\n### 属性的长度\n\n字符串属性在默认情况下设置为可编制索引，并且最大长度为 448 个字符。如果你正在使用其中可能包含更多字符的字符串属性，则请确保属性流中包括以下内容：\n\n`attributeName <- Left([attributeName],448)`\n\n### 更改 userPrincipalSuffix\n\nActive Directory 中的 userPrincipalName 属性并非始终被用户知晓，并且可能不适合作为登录名 ID。Azure AD Connect 同步安装向导允许选择不同的属性，例如 mail。但在某些情况下，必须计算该属性。例如：公司 Contoso 具有两个 Azure AD 目录，一个用于生产，另一个用于测试。他们希望测试租户中的用户只能更改登录 ID 中的后缀。\n\n`userPrincipalName <- Word([userPrincipalName],1,\"@\") & \"@contosotest.com\"`\n\n在此表达式中，我们首先使用左侧所有内容 @-sign (Word)，并与固定字符串连接。\n\n### 将多值转换为单值\n\nActive Directory 中的某些属性在架构中是多值，不过它们在 Active Directory 用户和计算机中看上去是单值。一个示例就是说明属性。\n\n`description <- IIF(IsNullOrEmpty([description]),NULL,Left(Trim(Item([description],1)),448))`\n\n在此表达式中，如果属性具有值，我们会使用属性中的第一项 (Item)，删除前导空格和尾随空格 (Trim)，然后保留字符串中的前 448 个字符（左）。\n\n\n\n## 高级概念\n\n### NULL 和 IgnoreThisFlow\n\n对于入站同步规则，应始终使用常量 **NULL**。这表示流程没有要提供的值，并且另一个规则可以提供值。如果没有规则提供值，则会删除 metaverse 属性。\n\n对于出站同步规则，有两个不同的常量可以使用：NULL 和 IgnoreThisFlow。两个常量均指示属性流没有要提供的内容，但不同之处是当其他规则都没有要提供的任何内容时会发生的情况。如果已连接目录中存在现有值，NULL 则会在删除它的属性上暂存删除，而 IgnoreThisFlow 则会保留现有值。\n\n\n\n#### ImportedValue\n\n函数 ImportedValues 不同于其他所有函数，因为属性名称必须放在引号内，而不是括在方括号中：ImportedValue(“proxyAddresses”)。\n\n通常在同步期间，即使尚未导出或在导出过程中收到错误 (“top of the tower”)，属性也会使用预期值。入站同步会假定尚未到达已连接目录的属性最终会到达该目录。在某些情况下，仅同步由已连接目录已确认的值很重要，并且在这种情况下会使用函数 ImportedValue (“hologram and delta import tower”)。\n\n可以从 Exchange 的现成同步规则 In from AD – User Common 中找到这种示例。其中，在混合 Exchange 中，如果已确认已成功导出由 Exchange Online 添加的值，则应该只同步该值：\n\n`proxyAddresses <- RemoveDuplicates(Trim(ImportedValues(\"proxyAddresses\")))`\n\n有关函数的完整列表，请参阅 [Azure AD Connect Sync：函数引用](/documentation/articles/active-directory-aadconnectsync-functions-reference)\n\n\n## 其他资源\n\n* [Azure AD Connect Sync：自定义同步选项](/documentation/articles/active-directory-aadconnectsync-whatis)\n* [将本地标识与 Azure Active Directory 集成](/documentation/articles/active-directory-aadconnect)\n \n<!--Image references-->\n\n<!---HONumber=Mooncake_0215_2016-->"
}