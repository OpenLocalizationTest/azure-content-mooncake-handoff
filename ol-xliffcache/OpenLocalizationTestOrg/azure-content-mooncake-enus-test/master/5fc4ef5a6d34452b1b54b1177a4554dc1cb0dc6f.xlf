<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5fc4ef5a6d34452b1b54b1177a4554dc1cb0dc6f</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>如何通过 iOS 使用 Azure Blob 存储 | Azure</source>
          <target state="new">如何通过 iOS 使用 Azure Blob 存储 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何使用 Azure Blob 存储上载、下载、列出和删除 Blob 内容。示例是用 Objective-C 编写的。</source>
          <target state="new">了解如何使用 Azure Blob 存储上载、下载、列出和删除 Blob 内容。示例是用 Objective-C 编写的。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>如何通过 iOS 使用 Blob 存储</source>
          <target state="new">如何通过 iOS 使用 Blob 存储</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>概述</source>
          <target state="new">概述</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>本文将演示如何使用 Azure Blob 存储执行常见任务。示例用 Objective-C 编写，并使用 <bpt id="p1">[</bpt>Azure 存储空间 iOS 库<ept id="p1">](https://github.com/Azure/azure-storage-ios)</ept>。涉及的任务包括<bpt id="p2">**</bpt>上载<ept id="p2">**</ept>、<bpt id="p3">**</bpt>列出<ept id="p3">**</ept>、<bpt id="p4">**</bpt>下载<ept id="p4">**</ept>和<bpt id="p5">**</bpt>删除<ept id="p5">**</ept> Blob。有关 Blob 的详细信息，请参阅<bpt id="p6">[</bpt>后续步骤<ept id="p6">](#next-steps)</ept>部分。你也可以下载<bpt id="p7">[</bpt>示例应用<ept id="p7">](https://github.com/Azure/azure-storage-ios/tree/master/BlobSample)</ept>以快速了解如何在 iOS 应用程序中使用 Azure 存储空间。</source>
          <target state="new">本文将演示如何使用 Azure Blob 存储执行常见任务。示例用 Objective-C 编写，并使用 <bpt id="p1">[</bpt>Azure 存储空间 iOS 库<ept id="p1">](https://github.com/Azure/azure-storage-ios)</ept>。涉及的任务包括<bpt id="p2">**</bpt>上载<ept id="p2">**</ept>、<bpt id="p3">**</bpt>列出<ept id="p3">**</ept>、<bpt id="p4">**</bpt>下载<ept id="p4">**</ept>和<bpt id="p5">**</bpt>删除<ept id="p5">**</ept> Blob。有关 Blob 的详细信息，请参阅<bpt id="p6">[</bpt>后续步骤<ept id="p6">](#next-steps)</ept>部分。你也可以下载<bpt id="p7">[</bpt>示例应用<ept id="p7">](https://github.com/Azure/azure-storage-ios/tree/master/BlobSample)</ept>以快速了解如何在 iOS 应用程序中使用 Azure 存储空间。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>生成框架文件</source>
          <target state="new">生成框架文件</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>若要使用 Azure 存储空间 iOS 库，首先需要生成框架文件。</source>
          <target state="new">若要使用 Azure 存储空间 iOS 库，首先需要生成框架文件。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>首先，下载或克隆 <bpt id="p1">[</bpt>azure-storage-ios repo<ept id="p1">](https://github.com/azure/azure-storage-ios)</ept>。</source>
          <target state="new">首先，下载或克隆 <bpt id="p1">[</bpt>azure-storage-ios repo<ept id="p1">](https://github.com/azure/azure-storage-ios)</ept>。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>转到 <bpt id="p1">*</bpt>azure-storage-ios<ept id="p1">*</ept> -&gt; <bpt id="p2">*</bpt>Lib<ept id="p2">*</ept> -&gt; <bpt id="p3">*</bpt>Azure 存储客户端库<ept id="p3">*</ept> ，并在 Xcode 中打开 <ph id="ph1">`Azure Storage Client Library.xcodeproj`</ph>。</source>
          <target state="new">转到 <bpt id="p1">*</bpt>azure-storage-ios<ept id="p1">*</ept> -&gt; <bpt id="p2">*</bpt>Lib<ept id="p2">*</ept> -&gt; <bpt id="p3">*</bpt>Azure 存储客户端库<ept id="p3">*</ept> ，并在 Xcode 中打开 <ph id="ph1">`Azure Storage Client Library.xcodeproj`</ph>。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>在 Xcode 的左上方，将活动方案从“Azure Storage Client Library”更改为“Framework”。</source>
          <target state="new">在 Xcode 的左上方，将活动方案从“Azure Storage Client Library”更改为“Framework”。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>生成项目 (⌘+B)。这将在桌面上创建 <ph id="ph1">`Azure Storage Client Library.framework`</ph> 文件。</source>
          <target state="new">生成项目 (⌘+B)。这将在桌面上创建 <ph id="ph1">`Azure Storage Client Library.framework`</ph> 文件。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>将 Azure 存储空间 iOS 库导入到应用程序中</source>
          <target state="new">将 Azure 存储空间 iOS 库导入到应用程序中</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>可以通过执行以下操作将 Azure 存储空间 iOS 库导入到应用程序中：</source>
          <target state="new">可以通过执行以下操作将 Azure 存储空间 iOS 库导入到应用程序中：</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>在 Xcode 中创建一个新项目或打开现有项目。</source>
          <target state="new">在 Xcode 中创建一个新项目或打开现有项目。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>单击左侧导航栏中的项目，然后单击项目编辑器顶部的“常规”选项卡。</source>
          <target state="new">单击左侧导航栏中的项目，然后单击项目编辑器顶部的“常规”选项卡。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>在“链接的框架和库”部分下，单击“添加”按钮 (+)。</source>
          <target state="new">在“链接的框架和库”部分下，单击“添加”按钮 (+)。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>单击“添加其他...”。导航到刚创建的 <ph id="ph1">`Azure Storage Client Library.framework`</ph> 文件并添加它。</source>
          <target state="new">单击“添加其他...”。导航到刚创建的 <ph id="ph1">`Azure Storage Client Library.framework`</ph> 文件并添加它。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>在“链接的框架和库”部分下，再次单击“添加”按钮 (+)。</source>
          <target state="new">在“链接的框架和库”部分下，再次单击“添加”按钮 (+)。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>在已提供的库的列表中，搜索 <ph id="ph1">`libxml2.2.dylib`</ph> 并将其添加到你的项目。</source>
          <target state="new">在已提供的库的列表中，搜索 <ph id="ph1">`libxml2.2.dylib`</ph> 并将其添加到你的项目。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Import 语句</source>
          <target state="new">Import 语句</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>你需要在要调用 Azure 存储空间 API 的文件中添加以下 import 语句。</source>
          <target state="new">你需要在要调用 Azure 存储空间 API 的文件中添加以下 import 语句。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>配置你的应用程序以访问 Blob 存储</source>
          <target state="new">配置你的应用程序以访问 Blob 存储</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>有两种方法可以对要访问存储服务的应用程序进行身份验证：</source>
          <target state="new">有两种方法可以对要访问存储服务的应用程序进行身份验证：</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>共享密钥：使用共享密钥仅用于测试目的</source>
          <target state="new">共享密钥：使用共享密钥仅用于测试目的</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>共享访问签名 (SAS)：对于生产应用程序使用 SAS</source>
          <target state="new">共享访问签名 (SAS)：对于生产应用程序使用 SAS</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>共享密钥</source>
          <target state="new">共享密钥</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>共享密钥身份验证意味着你的应用程序将使用帐户名和帐户密钥访问存储服务。为了快速说明如何通过 iOS 使用 Blob 存储，我们将在此入门指南中使用共享密钥身份验证。</source>
          <target state="new">共享密钥身份验证意味着你的应用程序将使用帐户名和帐户密钥访问存储服务。为了快速说明如何通过 iOS 使用 Blob 存储，我们将在此入门指南中使用共享密钥身份验证。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>[AZURE.WARNING (仅将“共享密钥”身份验证用于测试目的！) ] 为关联的存储帐户提供完全读/写访问权限的帐户名和帐户密钥将分发给下载你的应用的每个人。这<bpt id="p1">**</bpt>不<ept id="p1">**</ept>是好的做法，因为你会冒着不受信任的客户端泄露你的密钥的风险。</source>
          <target state="new">[AZURE.WARNING (仅将“共享密钥”身份验证用于测试目的！) ] 为关联的存储帐户提供完全读/写访问权限的帐户名和帐户密钥将分发给下载你的应用的每个人。这<bpt id="p1">**</bpt>不<ept id="p1">**</ept>是好的做法，因为你会冒着不受信任的客户端泄露你的密钥的风险。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>使用共享密钥身份验证时，你将创建一个连接字符串。连接字符串由以下部分组成：</source>
          <target state="new">使用共享密钥身份验证时，你将创建一个连接字符串。连接字符串由以下部分组成：</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DefaultEndpointsProtocol<ept id="p1">**</ept> - 你可以选择 HTTP 或 HTTPS。但是，强烈建议使用 HTTPS。</source>
          <target state="new"><bpt id="p1">**</bpt>DefaultEndpointsProtocol<ept id="p1">**</ept> - 你可以选择 HTTP 或 HTTPS。但是，强烈建议使用 HTTPS。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>帐户名<ept id="p1">**</ept> - 存储帐户的名称</source>
          <target state="new"><bpt id="p1">**</bpt>帐户名<ept id="p1">**</ept> - 存储帐户的名称</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>帐户密钥<ept id="p1">**</ept> - 如果使用<bpt id="p2">[</bpt>管理门户<ept id="p2">](manage.windowsazure.cn)</ept>，你可以通过单击“管理访问密钥”找到此项。</source>
          <target state="new"><bpt id="p1">**</bpt>帐户密钥<ept id="p1">**</ept> - 如果使用<bpt id="p2">[</bpt>管理门户<ept id="p2">](manage.windowsazure.cn)</ept>，你可以通过单击“管理访问密钥”找到此项。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>下面是该密钥在你的应用程序中的显示方式：</source>
          <target state="new">下面是该密钥在你的应用程序中的显示方式：</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>共享访问签名 (SAS)</source>
          <target state="new">共享访问签名 (SAS)</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>对于 iOS 应用程序，客户端针对 Blob 存储对请求进行身份验证的建议方法是使用共享访问签名 (SAS)。SAS 允许你使用指定的权限集向客户端授予在指定的时间内对资源的访问权限。</source>
          <target state="new">对于 iOS 应用程序，客户端针对 Blob 存储对请求进行身份验证的建议方法是使用共享访问签名 (SAS)。SAS 允许你使用指定的权限集向客户端授予在指定的时间内对资源的访问权限。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>作为存储帐户所有者，你需要为 iOS 客户端生成要使用的 SAS。若要生成 SAS，你可能需要编写单独的服务，该服务生成要分发给客户端的 SAS。出于测试目的，你还可以使用 Azure CLI 来生成 SAS。请注意，共享密钥凭据用于生成 SAS，但客户端随后可以通过封装在 SAS URL 中的身份验证信息来使用 SAS。</source>
          <target state="new">作为存储帐户所有者，你需要为 iOS 客户端生成要使用的 SAS。若要生成 SAS，你可能需要编写单独的服务，该服务生成要分发给客户端的 SAS。出于测试目的，你还可以使用 Azure CLI 来生成 SAS。请注意，共享密钥凭据用于生成 SAS，但客户端随后可以通过封装在 SAS URL 中的身份验证信息来使用 SAS。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>创建 SAS 时，可以指定 SAS 有效的时间间隔，以及 SAS 授予客户端的权限。例如，对于 blob 容器，SAS 可以授予对容器中的 blob 的读取、写入或删除权限，以及列出容器中的 blob 的列出权限。</source>
          <target state="new">创建 SAS 时，可以指定 SAS 有效的时间间隔，以及 SAS 授予客户端的权限。例如，对于 blob 容器，SAS 可以授予对容器中的 blob 的读取、写入或删除权限，以及列出容器中的 blob 的列出权限。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>以下示例演示如何使用 Azure CLI 来生成 SAS 令牌，该令牌授予对容器 <bpt id="p1">*</bpt>sascontainer<ept id="p1">*</ept> 的读取和写入权限，这些权限截止于 2015 年 9 月 5 日上午 12:00 (UTC)。</source>
          <target state="new">以下示例演示如何使用 Azure CLI 来生成 SAS 令牌，该令牌授予对容器 <bpt id="p1">*</bpt>sascontainer<ept id="p1">*</ept> 的读取和写入权限，这些权限截止于 2015 年 9 月 5 日上午 12:00 (UTC)。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>首先，请阅读此<bpt id="p1">[</bpt>指南<ept id="p1">](../xplat-cli/#how-to-install-the-azure-cli)</ept>了解如何安装 Azure CLI 并连接到 Azure 订阅。</source>
          <target state="new">首先，请阅读此<bpt id="p1">[</bpt>指南<ept id="p1">](../xplat-cli/#how-to-install-the-azure-cli)</ept>了解如何安装 Azure CLI 并连接到 Azure 订阅。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>接下来，在 Azure CLI 中键入以下命令以获得帐户的连接字符串：</source>
          <target state="new">接下来，在 Azure CLI 中键入以下命令以获得帐户的连接字符串：</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>使用刚生成的连接字符串创建一个环境变量：</source>
          <target state="new">使用刚生成的连接字符串创建一个环境变量：</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>生成 SAS URL：</source>
          <target state="new">生成 SAS URL：</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>SAS URL 应类似于如下内容：</source>
          <target state="new">SAS URL 应类似于如下内容：</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>在 iOS 应用程序中，现在可以通过以下方式使用 SAS URL 获取对你的容器的引用：</source>
          <target state="new">在 iOS 应用程序中，现在可以通过以下方式使用 SAS URL 获取对你的容器的引用：</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>如你所见，使用 SAS 令牌时，不会在 iOS 应用程序中公开你的帐户名和帐户密钥。你可以通过查阅<bpt id="p1">[</bpt>共享访问签名教程<ept id="p1">](../storage-dotnet-shared-access-signature-part-1)</ept>了解有关 SAS 的更多信息。</source>
          <target state="new">如你所见，使用 SAS 令牌时，不会在 iOS 应用程序中公开你的帐户名和帐户密钥。你可以通过查阅<bpt id="p1">[</bpt>共享访问签名教程<ept id="p1">](../storage-dotnet-shared-access-signature-part-1)</ept>了解有关 SAS 的更多信息。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>异步操作</source>
          <target state="new">异步操作</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> 执行对服务的请求的所有方法都是异步操作。在代码示例中，你会发现这些方法都有完成处理程序。请求完成<bpt id="p1">**</bpt>后<ept id="p1">**</ept>，将运行完成处理程序内的代码。正在发出请求<bpt id="p2">**</bpt>时<ept id="p2">**</ept>，将运行完成处理程序后的代码。</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> 执行对服务的请求的所有方法都是异步操作。在代码示例中，你会发现这些方法都有完成处理程序。请求完成<bpt id="p1">**</bpt>后<ept id="p1">**</ept>，将运行完成处理程序内的代码。正在发出请求<bpt id="p2">**</bpt>时<ept id="p2">**</ept>，将运行完成处理程序后的代码。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>创建容器</source>
          <target state="new">创建容器</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Azure 存储空间中的每个 Blob 都必须驻留在一个容器中。以下示例演示如何在存储帐户中创建一个名为 <bpt id="p1">*</bpt>newcontainer<ept id="p1">*</ept> 的容器（如果它尚不存在）。在选择容器的名称时，请注意上面提到的命名规则。</source>
          <target state="new">Azure 存储空间中的每个 Blob 都必须驻留在一个容器中。以下示例演示如何在存储帐户中创建一个名为 <bpt id="p1">*</bpt>newcontainer<ept id="p1">*</ept> 的容器（如果它尚不存在）。在选择容器的名称时，请注意上面提到的命名规则。</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>你可以通过查看<bpt id="p1">[</bpt>管理门户<ept id="p1">](http://manage.windowsazure.cn)</ept>或任何<bpt id="p2">[</bpt>存储资源管理器<ept id="p2">](http://blogs.msdn.com/b/windowsazurestorage/archive/2014/03/11/windows-azure-storage-explorers-2014.aspx)</ept>并验证 <bpt id="p3">*</bpt>newcontainer<ept id="p3">*</ept> 是否在你的存储帐户的容器列表中来确认此操作是否正常工作。</source>
          <target state="new">你可以通过查看<bpt id="p1">[</bpt>管理门户<ept id="p1">](http://manage.windowsazure.cn)</ept>或任何<bpt id="p2">[</bpt>存储资源管理器<ept id="p2">](http://blogs.msdn.com/b/windowsazurestorage/archive/2014/03/11/windows-azure-storage-explorers-2014.aspx)</ept>并验证 <bpt id="p3">*</bpt>newcontainer<ept id="p3">*</ept> 是否在你的存储帐户的容器列表中来确认此操作是否正常工作。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>设置容器权限</source>
          <target state="new">设置容器权限</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>默认情况下，容器的权限配置为<bpt id="p1">**</bpt>私有<ept id="p1">**</ept>访问权限。但是，容器提供了几个不同的容器访问权限选项：</source>
          <target state="new">默认情况下，容器的权限配置为<bpt id="p1">**</bpt>私有<ept id="p1">**</ept>访问权限。但是，容器提供了几个不同的容器访问权限选项：</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>私有<ept id="p1">**</ept>：仅帐户所有者可读取容器和 Blob 数据。</source>
          <target state="new"><bpt id="p1">**</bpt>私有<ept id="p1">**</ept>：仅帐户所有者可读取容器和 Blob 数据。</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Blob<ept id="p1">**</ept>：可以通过匿名请求读取此容器中的 Blob 数据，但容器数据不可用。客户端无法通过匿名请求枚举容器中的 Blob。</source>
          <target state="new"><bpt id="p1">**</bpt>Blob<ept id="p1">**</ept>：可以通过匿名请求读取此容器中的 Blob 数据，但容器数据不可用。客户端无法通过匿名请求枚举容器中的 Blob。</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>容器<ept id="p1">**</ept>：可通过匿名请求读取容器和 Blob 数据。客户端可以通过匿名请求枚举容器中的 Blob，但无法枚举存储帐户中的容器。</source>
          <target state="new"><bpt id="p1">**</bpt>容器<ept id="p1">**</ept>：可通过匿名请求读取容器和 Blob 数据。客户端可以通过匿名请求枚举容器中的 Blob，但无法枚举存储帐户中的容器。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>以下示例演示如何创建一个具有<bpt id="p1">**</bpt>容器<ept id="p1">**</ept>访问权限的容器，这将允许 Internet 上的所有用户对其进行公共只读访问：</source>
          <target state="new">以下示例演示如何创建一个具有<bpt id="p1">**</bpt>容器<ept id="p1">**</ept>访问权限的容器，这将允许 Internet 上的所有用户对其进行公共只读访问：</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>将 Blob 上载到容器中</source>
          <target state="new">将 Blob 上载到容器中</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>如 <bpt id="p1">[</bpt>Blob 服务概念<ept id="p1">](#blob-service-concepts)</ept>部分中所述，Blob 存储提供了三种不同类型的 blob：块 blob、追加 blob 和页 blob。目前，Azure 存储空间 iOS 库只支持块 blob。大多数情况下，推荐使用块 Blob。</source>
          <target state="new">如 <bpt id="p1">[</bpt>Blob 服务概念<ept id="p1">](#blob-service-concepts)</ept>部分中所述，Blob 存储提供了三种不同类型的 blob：块 blob、追加 blob 和页 blob。目前，Azure 存储空间 iOS 库只支持块 blob。大多数情况下，推荐使用块 Blob。</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>以下示例演示如何从 NSString 上载块 blob。如果此容器中已存在同名的 blob，则将覆盖该 blob 的内容。</source>
          <target state="new">以下示例演示如何从 NSString 上载块 blob。如果此容器中已存在同名的 blob，则将覆盖该 blob 的内容。</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>你可以通过查看<bpt id="p1">[</bpt>管理门户<ept id="p1">](http://manage.windowsazure.cn)</ept>或任何<bpt id="p2">[</bpt>存储资源管理器<ept id="p2">](http://blogs.msdn.com/b/windowsazurestorage/archive/2014/03/11/windows-azure-storage-explorers-2014.aspx)</ept>并验证容器 <bpt id="p3">*</bpt>containerpublic<ept id="p3">*</ept> 是否包含该 blob <bpt id="p4">*</bpt>sampleblob<ept id="p4">*</ept> 来确认此操作是否正常工作。在此示例中，我们使用了公共容器，因此你还可以通过转到 blob URI 来验证此操作是否正常工作：</source>
          <target state="new">你可以通过查看<bpt id="p1">[</bpt>管理门户<ept id="p1">](http://manage.windowsazure.cn)</ept>或任何<bpt id="p2">[</bpt>存储资源管理器<ept id="p2">](http://blogs.msdn.com/b/windowsazurestorage/archive/2014/03/11/windows-azure-storage-explorers-2014.aspx)</ept>并验证容器 <bpt id="p3">*</bpt>containerpublic<ept id="p3">*</ept> 是否包含该 blob <bpt id="p4">*</bpt>sampleblob<ept id="p4">*</ept> 来确认此操作是否正常工作。在此示例中，我们使用了公共容器，因此你还可以通过转到 blob URI 来验证此操作是否正常工作：</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>除了从 NSString 上载块 blob 外，NSData、NSInputStream 或本地文件也存在类似的方法。</source>
          <target state="new">除了从 NSString 上载块 blob 外，NSData、NSInputStream 或本地文件也存在类似的方法。</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>列出容器中的 Blob</source>
          <target state="new">列出容器中的 Blob</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>以下示例演示如何列出容器中的所有 blob。执行此操作时，应注意以下参数：</source>
          <target state="new">以下示例演示如何列出容器中的所有 blob。执行此操作时，应注意以下参数：</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>continuationToken<ept id="p1">**</ept> - 继续标记表示列出操作应开始的位置。如果未提供标记，它将从开头列出 blob。可以列出任意数目的 blob，从零到最大集。即使此方法返回零个结果，如果 <ph id="ph1">`results.continuationToken`</ph> 不为空，则服务中也可能存在更多 blob 未列出。</source>
          <target state="new"><bpt id="p1">**</bpt>continuationToken<ept id="p1">**</ept> - 继续标记表示列出操作应开始的位置。如果未提供标记，它将从开头列出 blob。可以列出任意数目的 blob，从零到最大集。即使此方法返回零个结果，如果 <ph id="ph1">`results.continuationToken`</ph> 不为空，则服务中也可能存在更多 blob 未列出。</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>prefix<ept id="p1">**</ept> - 你可以指定要用于 blob 列出的前缀。将仅列出以该前缀开头的 blob。</source>
          <target state="new"><bpt id="p1">**</bpt>prefix<ept id="p1">**</ept> - 你可以指定要用于 blob 列出的前缀。将仅列出以该前缀开头的 blob。</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>useFlatBlobListing<ept id="p1">**</ept> - 如<bpt id="p2">[</bpt>命名和引用容器和 blob<ept id="p2">](#naming-and-referencing-containers-and-blobs)</ept> 部分中所述，虽然 Blob 服务是平面存储方案，但你可以通过命名具有路径信息的 blob 来创建虚拟层次结构。但是，目前不支持非平面列表；该功能即将推出。目前，此值应为 <ph id="ph1">`YES`</ph></source>
          <target state="new"><bpt id="p1">**</bpt>useFlatBlobListing<ept id="p1">**</ept> - 如<bpt id="p2">[</bpt>命名和引用容器和 blob<ept id="p2">](#naming-and-referencing-containers-and-blobs)</ept> 部分中所述，虽然 Blob 服务是平面存储方案，但你可以通过命名具有路径信息的 blob 来创建虚拟层次结构。但是，目前不支持非平面列表；该功能即将推出。目前，此值应为 <ph id="ph1">`YES`</ph></target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>blobListingDetails<ept id="p1">**</ept> - 你可以指定在列出 blob 时要包含哪些项</source>
          <target state="new"><bpt id="p1">**</bpt>blobListingDetails<ept id="p1">**</ept> - 你可以指定在列出 blob 时要包含哪些项</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AZSBlobListingDetailsNone`</ph>：仅列出已提交的 blob，并且不返回 blob 元数据。</source>
          <target state="new"><ph id="ph1">`AZSBlobListingDetailsNone`</ph>：仅列出已提交的 blob，并且不返回 blob 元数据。</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AZSBlobListingDetailsSnapshots`</ph>：列出已提交的 blob 和 blob 快照。</source>
          <target state="new"><ph id="ph1">`AZSBlobListingDetailsSnapshots`</ph>：列出已提交的 blob 和 blob 快照。</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AZSBlobListingDetailsMetadata`</ph>：检索列表中返回的每个 blob 的 blob 元数据。</source>
          <target state="new"><ph id="ph1">`AZSBlobListingDetailsMetadata`</ph>：检索列表中返回的每个 blob 的 blob 元数据。</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AZSBlobListingDetailsUncommittedBlobs`</ph>：列出已提交和未提交的 blob。</source>
          <target state="new"><ph id="ph1">`AZSBlobListingDetailsUncommittedBlobs`</ph>：列出已提交和未提交的 blob。</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AZSBlobListingDetailsCopy`</ph>：在列表中包含复制属性。</source>
          <target state="new"><ph id="ph1">`AZSBlobListingDetailsCopy`</ph>：在列表中包含复制属性。</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AZSBlobListingDetailsAll`</ph>：列出所有可用的已提交 blob、未提交 blob 和快照，并返回这些 blob 的所有元数据和复制状态。</source>
          <target state="new"><ph id="ph1">`AZSBlobListingDetailsAll`</ph>：列出所有可用的已提交 blob、未提交 blob 和快照，并返回这些 blob 的所有元数据和复制状态。</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>maxResults<ept id="p1">**</ept> - 此操作可返回的结果的最大数目。使用 -1 以不设置限制。</source>
          <target state="new"><bpt id="p1">**</bpt>maxResults<ept id="p1">**</ept> - 此操作可返回的结果的最大数目。使用 -1 以不设置限制。</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>completionHandler<ept id="p1">**</ept> - 要使用列表操作的结果执行的代码块。</source>
          <target state="new"><bpt id="p1">**</bpt>completionHandler<ept id="p1">**</ept> - 要使用列表操作的结果执行的代码块。</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>在此示例中，帮助器方法用于在每次返回继续标记时递归调用列出 blob 方法。</source>
          <target state="new">在此示例中，帮助器方法用于在每次返回继续标记时递归调用列出 blob 方法。</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>下载 Blob</source>
          <target state="new">下载 Blob</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>以下示例演示如何将 blob 下载到 NSString 对象中。</source>
          <target state="new">以下示例演示如何将 blob 下载到 NSString 对象中。</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>删除 Blob</source>
          <target state="new">删除 Blob</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>以下示例说明如何删除 blob。</source>
          <target state="new">以下示例说明如何删除 blob。</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>删除 Blob 容器</source>
          <target state="new">删除 Blob 容器</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>以下示例说明如何删除容器。</source>
          <target state="new">以下示例说明如何删除容器。</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>现在，你已了解有关 Blob 存储的基础知识，可单击下面的链接来了解更复杂的存储任务。</source>
          <target state="new">现在，你已了解有关 Blob 存储的基础知识，可单击下面的链接来了解更复杂的存储任务。</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Azure 存储空间 iOS 库</source>
          <target state="new">Azure 存储空间 iOS 库</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Azure 存储 REST API</source>
          <target state="new">Azure 存储 REST API</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>使用 AzCopy 命令行实用程序传输数据</source>
          <target state="new">使用 AzCopy 命令行实用程序传输数据</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Azure 存储团队博客</source>
          <target state="new">Azure 存储团队博客</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>如果你对此库有任何疑问，请随意将问题发布到我们的 <bpt id="p1">[</bpt>MSDN Azure 论坛<ept id="p1">](https://social.msdn.microsoft.com/forums/azure/zh-cn/home?forum=windowsazuredata)</ept>或<bpt id="p2">[</bpt>堆栈溢出<ept id="p2">](http://stackoverflow.com/questions/tagged/windows-azure-storage+or+windows-azure-storage+or+azure-storage-blobs+or+azure-storage-tables+or+azure-table-storage+or+windows-azure-queues+or+azure-storage-queues+or+azure-storage-emulator+or+azure-storage-files)</ept>。如果你有 Azure 存储空间的功能建议，请将建议发布到 <bpt id="p3">[</bpt>Azure 存储空间反馈<ept id="p3">](/product-feedback)</ept>。</source>
          <target state="new">如果你对此库有任何疑问，请随意将问题发布到我们的 <bpt id="p1">[</bpt>MSDN Azure 论坛<ept id="p1">](https://social.msdn.microsoft.com/forums/azure/zh-cn/home?forum=windowsazuredata)</ept>或<bpt id="p2">[</bpt>堆栈溢出<ept id="p2">](http://stackoverflow.com/questions/tagged/windows-azure-storage+or+windows-azure-storage+or+azure-storage-blobs+or+azure-storage-tables+or+azure-table-storage+or+windows-azure-queues+or+azure-storage-queues+or+azure-storage-emulator+or+azure-storage-files)</ept>。如果你有 Azure 存储空间的功能建议，请将建议发布到 <bpt id="p3">[</bpt>Azure 存储空间反馈<ept id="p3">](/product-feedback)</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>