<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d5c7a0afa0bc4f9ae133d910f409c097e4517f6</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>SQL 数据仓库中的循环 | Azure</source>
          <target state="new">SQL 数据仓库中的循环 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>有关在开发解决方案时使用 Azure SQL 数据仓库中的 Transact-SQL 循环和替换游标的技巧。</source>
          <target state="new">有关在开发解决方案时使用 Azure SQL 数据仓库中的 Transact-SQL 循环和替换游标的技巧。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>SQL 数据仓库中的循环</source>
          <target state="new">SQL 数据仓库中的循环</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SQL 数据仓库支持对重复执行的语句块使用 <bpt id="p1">[</bpt>WHILE<ept id="p1">][]</ept> 循环。只要指定的条件都成立，或者在代码专门使用 <ph id="ph1">`BREAK`</ph> 关键字终止循环之前，这些语句将不断继续。循环特别适合用于替换 SQL 代码中定义的游标。幸运的是，几乎所有以 SQL 代码编写的游标都是快进的只读变体。因此，如果你发现自己必须替换一个游标，<bpt id="p2">[</bpt><ept id="p2">WHILE]</ept> 循环是绝佳的替代方案。</source>
          <target state="new">SQL 数据仓库支持对重复执行的语句块使用 <bpt id="p1">[</bpt>WHILE<ept id="p1">][]</ept> 循环。只要指定的条件都成立，或者在代码专门使用 <ph id="ph1">`BREAK`</ph> 关键字终止循环之前，这些语句将不断继续。循环特别适合用于替换 SQL 代码中定义的游标。幸运的是，几乎所有以 SQL 代码编写的游标都是快进的只读变体。因此，如果你发现自己必须替换一个游标，<bpt id="p2">[</bpt><ept id="p2">WHILE]</ept> 循环是绝佳的替代方案。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>利用循环和替换 SQL 数据仓库中的游标</source>
          <target state="new">利用循环和替换 SQL 数据仓库中的游标</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>但是，在深入学习之前，你应该先自问以下问题：“此游标是否可重写以使用基于集的操作？”。在许多情况下，答案是肯定的，通常这也是最佳方法。基于集的操作的执行速度通常比迭代性的逐行方法要快得多。</source>
          <target state="new">但是，在深入学习之前，你应该先自问以下问题：“此游标是否可重写以使用基于集的操作？”。在许多情况下，答案是肯定的，通常这也是最佳方法。基于集的操作的执行速度通常比迭代性的逐行方法要快得多。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>可以轻松使用循环构造来替换快进只读游标。下面是一个简单的示例。此代码示例将更新数据库中每个表的统计信息。通过迭代循环中的表，我们就能够依次执行每个命令。</source>
          <target state="new">可以轻松使用循环构造来替换快进只读游标。下面是一个简单的示例。此代码示例将更新数据库中每个表的统计信息。通过迭代循环中的表，我们就能够依次执行每个命令。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>首先，创建一个临时表，其中包含用于标识各个语句的唯一行号：</source>
          <target state="new">首先，创建一个临时表，其中包含用于标识各个语句的唯一行号：</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>其次，初始化执行循环所需的变量：</source>
          <target state="new">其次，初始化执行循环所需的变量：</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>现在，每次对一个语句执行一次循环：</source>
          <target state="new">现在，每次对一个语句执行一次循环：</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>最后，将第一个步骤创建的临时表删除</source>
          <target state="new">最后，将第一个步骤创建的临时表删除</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>有关更多开发技巧，请参阅<bpt id="p1">[</bpt>开发概述<ept id="p1">][]</ept>。</source>
          <target state="new">有关更多开发技巧，请参阅<bpt id="p1">[</bpt>开发概述<ept id="p1">][]</ept>。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>