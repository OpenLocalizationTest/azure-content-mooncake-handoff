<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c12f5d4f2706b8d8015622222fd7dddeb5a0801f</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>创建队列</source>
          <target state="new">创建队列</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>利用 <bpt id="p1">**</bpt>CloudQueueClient<ept id="p1">**</ept> 对象，可以获取队列的引用对象。以下代码将创建 <bpt id="p2">**</bpt>CloudQueueClient<ept id="p2">**</ept> 对象。本主题中的所有代码都使用存储在 Azure 应用程序的服务配置中的存储连接字符串。还可采用其他方法创建 <bpt id="p3">**</bpt>CloudStorageAccount<ept id="p3">**</ept> 对象。请参阅 <bpt id="p4">[</bpt>CloudStorageAccount<ept id="p4">](http://msdn.microsoft.com/zh-cn/library/microsoft.windowsazure.cloudstorageaccount_methods.aspx "CloudStorageAccount")</ept> documentation for details.</source>
          <target state="new">利用 <bpt id="p1">**</bpt>CloudQueueClient<ept id="p1">**</ept> 对象，可以获取队列的引用对象。以下代码将创建 <bpt id="p2">**</bpt>CloudQueueClient<ept id="p2">**</ept> 对象。本主题中的所有代码都使用存储在 Azure 应用程序的服务配置中的存储连接字符串。还可采用其他方法创建 <bpt id="p3">**</bpt>CloudStorageAccount<ept id="p3">**</ept> 对象。请参阅 <bpt id="p4">[</bpt>CloudStorageAccount<ept id="p4">](http://msdn.microsoft.com/zh-cn/library/microsoft.windowsazure.cloudstorageaccount_methods.aspx "CloudStorageAccount")</ept> documentation for details.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>使用 <bpt id="p1">**</bpt>queueClient<ept id="p1">**</ept> 对象获取对要使用的队列的引用。该代码将尝试引用名为"myqueue"的队列。如果找不到该名称的队列，它将创建一个。</source>
          <target state="new">使用 <bpt id="p1">**</bpt>queueClient<ept id="p1">**</ept> 对象获取对要使用的队列的引用。该代码将尝试引用名为"myqueue"的队列。如果找不到该名称的队列，它将创建一个。</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>注意：<ept id="p1">**</ept>在接下来的部分中，将在代码的前面使用此代码块。</source>
          <target state="new"><bpt id="p1">**</bpt>注意：<ept id="p1">**</ept>在接下来的部分中，将在代码的前面使用此代码块。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>在队列中插入消息</source>
          <target state="new">在队列中插入消息</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>若要将消息插入现有队列，请先创建一个新的 <bpt id="p1">**</bpt>CloudQueueMessage<ept id="p1">**</ept> 对象。接下来，调用 AddMessage() 方法。可从字符串（UTF-8 格式）或字节数组创建 <bpt id="p2">**</bpt>CloudQueueMessage<ept id="p2">**</ept> 对象。以下代码将创建队列（如果队列不存在）并插入消息  'Hello, World'。</source>
          <target state="new">若要将消息插入现有队列，请先创建一个新的 <bpt id="p1">**</bpt>CloudQueueMessage<ept id="p1">**</ept> 对象。接下来，调用 AddMessage() 方法。可从字符串（UTF-8 格式）或字节数组创建 <bpt id="p2">**</bpt>CloudQueueMessage<ept id="p2">**</ept> 对象。以下代码将创建队列（如果队列不存在）并插入消息  'Hello, World'。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>扫视下一条消息</source>
          <target state="new">扫视下一条消息</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>通过调用 PeekMessage() 方法，可以查看队列前面的消息，而不必从队列中将其删除。</source>
          <target state="new">通过调用 PeekMessage() 方法，可以查看队列前面的消息，而不必从队列中将其删除。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>删除下一条消息</source>
          <target state="new">删除下一条消息</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>您的代码分两步从队列中删除消息（取消对消息的排队）。</source>
          <target state="new">您的代码分两步从队列中删除消息（取消对消息的排队）。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>调用 GetMessage() 以获取队列中的下一条消息。从 GetMessage() 返回的消息变得对从此队列读取消息的任何其他代码不可见。默认情况下，此消息将持续 30 秒不可见。</source>
          <target state="new">调用 GetMessage() 以获取队列中的下一条消息。从 GetMessage() 返回的消息变得对从此队列读取消息的任何其他代码不可见。默认情况下，此消息将持续 30 秒不可见。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>若要完成从队列中删除消息，请调用 DeleteMessage()。</source>
          <target state="new">若要完成从队列中删除消息，请调用 DeleteMessage()。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>此删除消息的两步过程可确保当您的代码因硬件或软件故障而无法处理消息时，您的其他代码实例可以获取同一消息并重试。以下代码将在处理消息后立即调用 DeleteMessage()。</source>
          <target state="new">此删除消息的两步过程可确保当您的代码因硬件或软件故障而无法处理消息时，您的其他代码实例可以获取同一消息并重试。以下代码将在处理消息后立即调用 DeleteMessage()。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>了解有关 Azure 存储的详细信息</source>
          <target state="new">了解有关 Azure 存储的详细信息</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>另请参阅<bpt id="p1">[</bpt>在服务器资源管理器中浏览存储资源<ept id="p1">](http://msdn.microsoft.com/zh-cn/library/azure/ff683677.aspx)</ept>.</source>
          <target state="new">另请参阅<bpt id="p1">[</bpt>在服务器资源管理器中浏览存储资源<ept id="p1">](http://msdn.microsoft.com/zh-cn/library/azure/ff683677.aspx)</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>