{
  "nodes": [
    {
      "content": "在 Azure 上运行时，有些软件包可能无法使用 pip 进行安装。可能只是该软件包在 Python 软件包索引中不可用。可能需要一个编译器（在运行 Azure Web 应用的计算机上未提供编译器）。",
      "pos": [
        0,
        100
      ]
    },
    {
      "content": "在此部分中，我们将考察解决此问题的方法。",
      "pos": [
        102,
        122
      ]
    },
    {
      "content": "请求轮",
      "pos": [
        128,
        131
      ]
    },
    {
      "content": "如果软件包安装需要编译器，您应尝试联系软件包所有者以请求为软件包提供轮。",
      "pos": [
        133,
        169
      ]
    },
    {
      "pos": [
        171,
        265
      ],
      "content": "现在使用最新提供的 <bpt id=\"p1\">[</bpt>Microsoft Visual C++ Compiler for Python 2.7<ept id=\"p1\">][]</ept>，就可以更轻松地构建具有针对 Python 2.7 的本机代码的软件包。"
    },
    {
      "content": "构建轮（需要 Windows）",
      "pos": [
        271,
        286
      ]
    },
    {
      "content": "注意：使用此选项时，确保使用匹配 Azure Web 应用上所用的平台/体系结构/版本（Windows/32 位/2.7 或 3.4）的 Python 环境来编译此软件包。",
      "pos": [
        288,
        374
      ]
    },
    {
      "content": "如果软件包由于需要编译器而未安装，您可以在本地计算机上安装编译器，然后为软件包构建轮，随后将轮包含在您的存储库中。",
      "pos": [
        376,
        433
      ]
    },
    {
      "pos": [
        435,
        545
      ],
      "content": "Mac/Linux 用户：如果您没有 Windows 计算机的访问权限，请参阅<bpt id=\"p1\">[</bpt>创建运行 Windows 的虚拟机<ept id=\"p1\">][]</ept>以了解如何在 Azure 上创建虚拟机。可以使用它来构建轮、将其添加到存储库以及在必要时放弃虚拟机。"
    },
    {
      "pos": [
        548,
        617
      ],
      "content": "对于 Python 2.7，您可以安装 <bpt id=\"p1\">[</bpt>Microsoft Visual C++ Compiler for Python 2.7<ept id=\"p1\">][]</ept>。"
    },
    {
      "pos": [
        619,
        677
      ],
      "content": "对于 Python 3.4，您可以安装 <bpt id=\"p1\">[</bpt>Microsoft Visual C++ 2010 Express<ept id=\"p1\">][]</ept>。"
    },
    {
      "content": "要构建轮，你需要轮软件包：",
      "pos": [
        679,
        692
      ]
    },
    {
      "pos": [
        729,
        754
      ],
      "content": "您将使用  <ph id=\"ph1\">`pip wheel`</ph> 来编译依赖项："
    },
    {
      "content": "这将在 \\wheelhouse 文件夹中创建 .whl 文件。将 \\wheelhouse 文件夹和轮文件添加到您的存储库。",
      "pos": [
        796,
        857
      ]
    },
    {
      "pos": [
        859,
        946
      ],
      "content": "编辑 requirements.txt 从而在顶部添加 <ph id=\"ph1\">`--find-links`</ph> 选项。这会让 pip 在本地文件夹中查找完全匹配项，然后转至 python 软件包索引。"
    },
    {
      "pos": [
        994,
        1104
      ],
      "content": "如果您想要将所有依赖项包含在 \\wheelhouse 文件夹中而根本不使用 python 软件包索引，则可以通过将 <ph id=\"ph1\">`--no-index`</ph> 添加到 requirements.txt 之上来强制 pip 忽略软件包索引。"
    },
    {
      "content": "自定义安装",
      "pos": [
        1126,
        1131
      ]
    },
    {
      "content": "您可以自定义部署脚本以在虚拟环境中使用备用安装程序（例如 easy\\_install）来安装软件包。请参阅 deploy.cmd 以了解注释掉的示例。确保此类软件包不列入 requirements.txt 中，从而防止 pip 将其安装。",
      "pos": [
        1133,
        1252
      ]
    },
    {
      "content": "将其添加到部署脚本：",
      "pos": [
        1254,
        1264
      ]
    },
    {
      "content": "您还可以使用 easy\\_install 从 exe 安装程序进行安装（有些兼容 zip，所以 easy\\_install 支持它们）。将安装程序添加到您的存储库，然后通过传递可执行文件的路径来调用 easy\\_install。",
      "pos": [
        1308,
        1422
      ]
    },
    {
      "content": "将其添加到部署脚本：",
      "pos": [
        1424,
        1434
      ]
    },
    {
      "content": "将虚拟环境包含在存储库中（需要 Windows）",
      "pos": [
        1519,
        1543
      ]
    },
    {
      "content": "注意：使用此选项时，确保使用匹配 Azure Web 应用上所用的平台/体系结构/版本（Windows/32 位/2.7 或 3.4）的虚拟环境。",
      "pos": [
        1545,
        1618
      ]
    },
    {
      "content": "如果存储库中包含虚拟环境，您可以通过创建一个空文件来防止部署脚本在 Azure 上执行虚拟环境管理：",
      "pos": [
        1620,
        1670
      ]
    },
    {
      "content": "我们建议您删除站点上的现有虚拟环境，从而防止在自动管理虚拟环境时出现剩余文件。",
      "pos": [
        1699,
        1738
      ]
    }
  ],
  "content": "在 Azure 上运行时，有些软件包可能无法使用 pip 进行安装。可能只是该软件包在 Python 软件包索引中不可用。可能需要一个编译器（在运行 Azure Web 应用的计算机上未提供编译器）。\n\n在此部分中，我们将考察解决此问题的方法。\n\n### 请求轮\n\n如果软件包安装需要编译器，您应尝试联系软件包所有者以请求为软件包提供轮。\n\n现在使用最新提供的 [Microsoft Visual C++ Compiler for Python 2.7][]，就可以更轻松地构建具有针对 Python 2.7 的本机代码的软件包。\n\n### 构建轮（需要 Windows）\n\n注意：使用此选项时，确保使用匹配 Azure Web 应用上所用的平台/体系结构/版本（Windows/32 位/2.7 或 3.4）的 Python 环境来编译此软件包。\n\n如果软件包由于需要编译器而未安装，您可以在本地计算机上安装编译器，然后为软件包构建轮，随后将轮包含在您的存储库中。\n\nMac/Linux 用户：如果您没有 Windows 计算机的访问权限，请参阅[创建运行 Windows 的虚拟机][]以了解如何在 Azure 上创建虚拟机。可以使用它来构建轮、将其添加到存储库以及在必要时放弃虚拟机。 \n\n对于 Python 2.7，您可以安装 [Microsoft Visual C++ Compiler for Python 2.7][]。\n\n对于 Python 3.4，您可以安装 [Microsoft Visual C++ 2010 Express][]。\n\n要构建轮，你需要轮软件包：\n\n    env\\scripts\\pip install wheel\n\n您将使用  `pip wheel` 来编译依赖项：\n\n    env\\scripts\\pip wheel azure==0.8.4\n\n这将在 \\wheelhouse 文件夹中创建 .whl 文件。将 \\wheelhouse 文件夹和轮文件添加到您的存储库。\n\n编辑 requirements.txt 从而在顶部添加 `--find-links` 选项。这会让 pip 在本地文件夹中查找完全匹配项，然后转至 python 软件包索引。\n\n    --find-links wheelhouse\n    azure==0.8.4\n\n如果您想要将所有依赖项包含在 \\wheelhouse 文件夹中而根本不使用 python 软件包索引，则可以通过将 `--no-index` 添加到 requirements.txt 之上来强制 pip 忽略软件包索引。\n\n    --no-index\n\n### 自定义安装\n\n您可以自定义部署脚本以在虚拟环境中使用备用安装程序（例如 easy\\_install）来安装软件包。请参阅 deploy.cmd 以了解注释掉的示例。确保此类软件包不列入 requirements.txt 中，从而防止 pip 将其安装。\n\n将其添加到部署脚本：\n\n    env\\scripts\\easy_install somepackage\n\n您还可以使用 easy\\_install 从 exe 安装程序进行安装（有些兼容 zip，所以 easy\\_install 支持它们）。将安装程序添加到您的存储库，然后通过传递可执行文件的路径来调用 easy\\_install。\n\n将其添加到部署脚本：\n\n    env\\scripts\\easy_install \"%DEPLOYMENT_SOURCE%\\installers\\somepackage.exe\"\n\n### 将虚拟环境包含在存储库中（需要 Windows）\n\n注意：使用此选项时，确保使用匹配 Azure Web 应用上所用的平台/体系结构/版本（Windows/32 位/2.7 或 3.4）的虚拟环境。\n\n如果存储库中包含虚拟环境，您可以通过创建一个空文件来防止部署脚本在 Azure 上执行虚拟环境管理：\n\n    .skipPythonDeployment\n\n我们建议您删除站点上的现有虚拟环境，从而防止在自动管理虚拟环境时出现剩余文件。\n\n\n[创建运行 Windows 的虚拟机]: /documentation/articles/virtual-machines-windows-tutorial-classic-portal/\n[Microsoft Visual C++ Compiler for Python 2.7]: http://aka.ms/vcpython27\n[Microsoft Visual C++ 2010 Express]: http://go.microsoft.com/?linkid=9709949\n"
}