{
  "nodes": [
    {
      "content": "将已链接的模版与 Azure 资源管理器配合使用",
      "pos": [
        26,
        50
      ]
    },
    {
      "content": "介绍如何使用 Azure 资源管理器模板中的链接模板创建一个模块化的模板的解决方案。演示如何传递参数值、指定参数文件和动态创建的 URL。",
      "pos": [
        68,
        137
      ]
    },
    {
      "content": "将已链接的模版与 Azure 资源管理器配合使用",
      "pos": [
        364,
        388
      ]
    },
    {
      "content": "从一个 Azure 资源管理器模板中，您可以链接到能使您将部署分解成一组有针对性并且有特定用途的模板的另一个模板。就像将一个应用程序分解为多个代码类那样，分解可提供测试、重用和可读性方面的好处。",
      "pos": [
        390,
        487
      ]
    },
    {
      "content": "可以将参数从主模板传递到链接的模板，并可以直接将这些参数映射到由调用模板公开提供的参数或变量。链接模板还可以将输出变量传递回源模板中，启用模板之间的双向数据交换。",
      "pos": [
        489,
        570
      ]
    },
    {
      "content": "链接到模板",
      "pos": [
        575,
        580
      ]
    },
    {
      "pos": [
        582,
        719
      ],
      "content": "通过在主模板内添加部署源，从而在两个模板间创建指向链接模板的链接。对链接模版的 URI 设置 <bpt id=\"p1\">**</bpt>templateLink<ept id=\"p1\">**</ept> 属性。您可以通过直接在您的模板中指定值或通过链接到参数文件，为链接模板提供参数值。以下示例使用 <bpt id=\"p2\">**</bpt>parameters<ept id=\"p2\">**</ept> 属性直接指定参数值。"
    },
    {
      "pos": [
        1265,
        1386
      ],
      "content": "资源管理器服务必须能够访问链接模板，这意味着，你不能为链接模板指定本地文件或只能在本地网络上使用的文件。只能提供包含 <bpt id=\"p1\">**</bpt>http<ept id=\"p1\">**</ept> 或 <bpt id=\"p2\">**</bpt>https<ept id=\"p2\">**</ept> 的 URI 值。一种做法是将链接模板放在存储帐户中并对该项使用 URI，如下所示。"
    },
    {
      "content": "链接到参数文件",
      "pos": [
        1551,
        1558
      ]
    },
    {
      "pos": [
        1560,
        1596
      ],
      "content": "以下示例使用 <bpt id=\"p1\">**</bpt>parametersLink<ept id=\"p1\">**</ept> 属性链接到参数文件。"
    },
    {
      "pos": [
        2179,
        2228
      ],
      "content": "链接参数文件的 URI 值不能是本地文件，并且必须包含 <bpt id=\"p1\">**</bpt>http<ept id=\"p1\">**</ept> 或 <bpt id=\"p2\">**</bpt>https<ept id=\"p2\">**</ept>。"
    },
    {
      "content": "使用变量来链接模板",
      "pos": [
        2233,
        2242
      ]
    },
    {
      "content": "前面的示例演示了用于模板链接的硬编码 URL 值。这种方法可能适用于简单的模板，但如果使用一组大型模块化模板时，将无法正常工作。相反，可以创建一个存储主模板的基 URL 的静态变量，然后从基 URL 动态创建用于链接模板的 URL。这种方法的好处是可以轻松地移动或派生模板，因为您只需在主模板中更改静态变量。主模板将在整个分解后的模板中传递正确的 URI。",
      "pos": [
        2244,
        2422
      ]
    },
    {
      "pos": [
        2424,
        2497
      ],
      "content": "以下示例演示如何使用基 URL 来创建两个用于链接模板的 URL（<bpt id=\"p1\">**</bpt>sharedTemplateUrl<ept id=\"p1\">**</ept> 和 <bpt id=\"p2\">**</bpt>vmTemplate<ept id=\"p2\">**</ept>）。"
    },
    {
      "pos": [
        3233,
        3399
      ],
      "content": "你还可以使用 <bpt id=\"p1\">[</bpt>deployment()<ept id=\"p1\">](../resource-group-template-functions/#deployment)</ept> 获取当前模板的基 URL，并使用该 URL 来获取同一位置其他模板的 URL。如果你的模板位置发生变化（原因可能是改版）或者你想要避免对模板文件中的 URL 进行硬编码，则此操作非常有用。"
    },
    {
      "content": "将值传递回链接模板",
      "pos": [
        3534,
        3543
      ]
    },
    {
      "pos": [
        3545,
        3587
      ],
      "content": "如果你需要将值从链接模板传递到主模板，则可以在链接模板的<bpt id=\"p1\">**</bpt>输出<ept id=\"p1\">**</ept>部分创建一个值。"
    },
    {
      "content": "后续步骤",
      "pos": [
        3592,
        3596
      ]
    },
    {
      "content": "创作模板",
      "pos": [
        3600,
        3604
      ]
    },
    {
      "content": "部署模板",
      "pos": [
        3669,
        3673
      ]
    }
  ],
  "content": "<properties\n   pageTitle=\"将已链接的模版与 Azure 资源管理器配合使用\"\n   description=\"介绍如何使用 Azure 资源管理器模板中的链接模板创建一个模块化的模板的解决方案。演示如何传递参数值、指定参数文件和动态创建的 URL。\"\n   services=\"azure-resource-manager\"\n   documentationCenter=\"na\"\n   authors=\"tfitzmac\"\n   manager=\"wpickett\"\n   editor=\"\"/>\n\n<tags\n   ms.service=\"azure-resource-manager\"\n   ms.date=\"12/07/2015\"\n   wacn.date=\"01/14/2016\"/>\n\n# 将已链接的模版与 Azure 资源管理器配合使用\n\n从一个 Azure 资源管理器模板中，您可以链接到能使您将部署分解成一组有针对性并且有特定用途的模板的另一个模板。就像将一个应用程序分解为多个代码类那样，分解可提供测试、重用和可读性方面的好处。\n\n可以将参数从主模板传递到链接的模板，并可以直接将这些参数映射到由调用模板公开提供的参数或变量。链接模板还可以将输出变量传递回源模板中，启用模板之间的双向数据交换。\n\n## 链接到模板\n\n通过在主模板内添加部署源，从而在两个模板间创建指向链接模板的链接。对链接模版的 URI 设置 **templateLink** 属性。您可以通过直接在您的模板中指定值或通过链接到参数文件，为链接模板提供参数值。以下示例使用 **parameters** 属性直接指定参数值。\n\n    \"resources\": [ \n      { \n         \"apiVersion\": \"2015-01-01\", \n         \"name\": \"nestedTemplate\", \n         \"type\": \"Microsoft.Resources/deployments\", \n         \"properties\": { \n           \"mode\": \"incremental\", \n           \"templateLink\": {\n              \"uri\": \"https://www.contoso.com/AzureTemplates/newStorageAccount.json\",\n              \"contentVersion\": \"1.0.0.0\"\n           }, \n           \"parameters\": { \n              \"StorageAccountName\":{\"value\": \"[parameters('StorageAccountName')]\"} \n           } \n         } \n      } \n    ] \n\n资源管理器服务必须能够访问链接模板，这意味着，你不能为链接模板指定本地文件或只能在本地网络上使用的文件。只能提供包含 **http** 或 **https** 的 URI 值。一种做法是将链接模板放在存储帐户中并对该项使用 URI，如下所示。\n\n    \"templateLink\": {\n        \"uri\": \"http://mystorageaccount.blob.core.chinacloudapi.cn/templates/template.json\",\n        \"contentVersion\": \"1.0.0.0\",\n    }\n\n\n## 链接到参数文件\n\n以下示例使用 **parametersLink** 属性链接到参数文件。\n\n    \"resources\": [ \n      { \n         \"apiVersion\": \"2015-01-01\", \n         \"name\": \"nestedTemplate\", \n         \"type\": \"Microsoft.Resources/deployments\", \n         \"properties\": { \n           \"mode\": \"incremental\", \n           \"templateLink\": {\n              \"uri\":\"https://www.contoso.com/AzureTemplates/newStorageAccount.json\",\n              \"contentVersion\":\"1.0.0.0\"\n           }, \n           \"parametersLink\": { \n              \"uri\":\"https://www.contoso.com/AzureTemplates/parameters.json\",\n              \"contentVersion\":\"1.0.0.0\"\n           } \n         } \n      } \n    ] \n\n链接参数文件的 URI 值不能是本地文件，并且必须包含 **http** 或 **https**。\n\n## 使用变量来链接模板\n\n前面的示例演示了用于模板链接的硬编码 URL 值。这种方法可能适用于简单的模板，但如果使用一组大型模块化模板时，将无法正常工作。相反，可以创建一个存储主模板的基 URL 的静态变量，然后从基 URL 动态创建用于链接模板的 URL。这种方法的好处是可以轻松地移动或派生模板，因为您只需在主模板中更改静态变量。主模板将在整个分解后的模板中传递正确的 URI。\n\n以下示例演示如何使用基 URL 来创建两个用于链接模板的 URL（**sharedTemplateUrl** 和 **vmTemplate**）。\n\n    \"variables\": {\n        \"templateBaseUrl\": \"https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/postgresql-on-ubuntu/\",\n        \"sharedTemplateUrl\": \"[concat(variables('templateBaseUrl'), 'shared-resources.json')]\",\n        \"tshirtSizeSmall\": {\n            \"vmSize\": \"Standard_A1\",\n            \"diskSize\": 1023,\n            \"vmTemplate\": \"[concat(variables('templateBaseUrl'), 'database-2disk-resources.json')]\",\n            \"vmCount\": 2,\n            \"slaveCount\": 1,\n            \"storage\": {\n                \"name\": \"[parameters('storageAccountNamePrefix')]\",\n                \"count\": 1,\n                \"pool\": \"db\",\n                \"map\": [0,0],\n                \"jumpbox\": 0\n            }\n        }\n    }\n\n你还可以使用 [deployment()](../resource-group-template-functions/#deployment) 获取当前模板的基 URL，并使用该 URL 来获取同一位置其他模板的 URL。如果你的模板位置发生变化（原因可能是改版）或者你想要避免对模板文件中的 URL 进行硬编码，则此操作非常有用。\n\n    \"variables\": {\n        \"sharedTemplateUrl\": \"[uri(deployment().properties.templateLink.uri, 'shared-resources.json')]\"\n    }\n\n## 将值传递回链接模板\n\n如果你需要将值从链接模板传递到主模板，则可以在链接模板的**输出**部分创建一个值。\n\n## 后续步骤\n- [创作模板](/documentation/articles/resource-group-authoring-templates)\n- [部署模板](/documentation/articles/resource-group-template-deploy)\n\n<!---HONumber=Mooncake_0104_2016-->"
}