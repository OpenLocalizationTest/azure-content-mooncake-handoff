{
  "nodes": [
    {
      "content": "打开共享项目文件 MainPage.cs 并将以下代码段添加到 MainPage 类：",
      "pos": [
        4,
        47
      ]
    },
    {
      "pos": [
        1252,
        1357
      ],
      "content": "使用 Facebook 登录对此用户进行身份验证。如果使用的标识提供商不是 Facebook，请将上述 <bpt id=\"p1\">**</bpt>MobileServiceAuthenticationProvider<ept id=\"p1\">**</ept> 的值更改为您的提供商的值。"
    },
    {
      "pos": [
        1362,
        1423
      ],
      "content": "注释掉或删除现有 <bpt id=\"p1\">**</bpt>OnNavigatedTo<ept id=\"p1\">**</ept> 方法覆盖中对 <bpt id=\"p2\">**</bpt>RefreshTodoItems<ept id=\"p2\">**</ept> 方法的调用。"
    },
    {
      "content": "这可以防止在对用户进行身份验证之前加载数据。",
      "pos": [
        1429,
        1451
      ]
    },
    {
      "pos": [
        1458,
        1600
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>若要成功地从 Windows Phone Store 8.1 应用进行身份验证，你必须在调用 <bpt id=\"p1\">**</bpt>OnNavigated<ept id=\"p1\">**</ept> 方法以及引发页面的 <bpt id=\"p2\">**</bpt>Loaded<ept id=\"p2\">**</ept> 事件之后调用 LoginAsync。在本教程中，这是通过将“登录”按钮添加到此应用而完成的。"
    },
    {
      "content": "将以下代码段添加到 MainPage 类：",
      "pos": [
        1605,
        1626
      ]
    },
    {
      "pos": [
        2048,
        2128
      ],
      "content": "在 Windows Store 应用项目中，打开 MainPage.xaml 项目文件，然后就在定义“保存”按钮的元素之前添加以下 <bpt id=\"p1\">**</bpt>Button<ept id=\"p1\">**</ept> 元素："
    },
    {
      "pos": [
        2258,
        2315
      ],
      "content": "在 Windows Phone 应用项目中，紧靠在定义“保存”按钮的元素前面添加以下 <bpt id=\"p1\">**</bpt>Button<ept id=\"p1\">**</ept> 元素："
    },
    {
      "content": "打开共享的 App.xaml.cs 项目文件并添加以下 using 语句（如果还没有此语句）：",
      "pos": [
        2497,
        2544
      ]
    },
    {
      "content": "在 App.xaml.cs 项目文件中，添加以下代码：",
      "pos": [
        2606,
        2633
      ]
    },
    {
      "pos": [
        3299,
        3349
      ],
      "content": "如果 <bpt id=\"p1\">**</bpt>OnActivated<ept id=\"p1\">**</ept> 方法已存在，只需添加 <ph id=\"ph1\">`#if...#endif`</ph>  代码块。"
    },
    {
      "content": "按 F5 键以运行 Windows 应用商店应用，单击“登录”按钮，然后使用所选的标识提供者来登录到此应用。",
      "pos": [
        3354,
        3408
      ]
    },
    {
      "content": "当您成功登录时，应用应该运行而不出现错误，您应该能够查询移动服务，并对数据进行更新。",
      "pos": [
        3414,
        3456
      ]
    },
    {
      "content": "右键单击 Windows Phone 应用商店应用项目，单击“设置为启动项目”，然后重复上一步来验证 Windows Phone 应用商店应用是否也正常运行。",
      "pos": [
        3462,
        3541
      ]
    }
  ],
  "content": "\n1. 打开共享项目文件 MainPage.cs 并将以下代码段添加到 MainPage 类：\n    \n        // Define a member variable for storing the signed-in user. \n        private MobileServiceUser user;\n\n        // Define a method that performs the authentication process\n        // using a Facebook sign-in. \n        private async System.Threading.Tasks.Task AuthenticateAsync()\n        {\n            while (user == null)\n            {\n                string message;\n                try\n                {\n                    // Change 'MobileService' to the name of your MobileServiceClient instance.\n                    // Sign-in using Facebook authentication.\n                    user = await App.MobileService\n                        .LoginAsync(MobileServiceAuthenticationProvider.Facebook);\n                    message = \n                        string.Format(\"You are now signed in - {0}\", user.UserId);\n                }\n                catch (InvalidOperationException)\n                {\n                    message = \"You must log in. Login Required\";\n                }\n                        \n                var dialog = new MessageDialog(message);\n                dialog.Commands.Add(new UICommand(\"OK\"));\n                await dialog.ShowAsync();\n            }\n        }\n\n    使用 Facebook 登录对此用户进行身份验证。如果使用的标识提供商不是 Facebook，请将上述 **MobileServiceAuthenticationProvider** 的值更改为您的提供商的值。\n\n3. 注释掉或删除现有 **OnNavigatedTo** 方法覆盖中对 **RefreshTodoItems** 方法的调用。\n\n    这可以防止在对用户进行身份验证之前加载数据。\n\n    >[AZURE.NOTE]若要成功地从 Windows Phone Store 8.1 应用进行身份验证，你必须在调用 **OnNavigated** 方法以及引发页面的 **Loaded** 事件之后调用 LoginAsync。在本教程中，这是通过将“登录”按钮添加到此应用而完成的。\n\n4. 将以下代码段添加到 MainPage 类：\n\n        private async void ButtonLogin_Click(object sender, RoutedEventArgs e)\n        {\n            // Login the user and then load data from the mobile service.\n            await AuthenticateAsync();\n\n            // Hide the login button and load items from the mobile service.\n            this.ButtonLogin.Visibility = Windows.UI.Xaml.Visibility.Collapsed;\n            await RefreshTodoItems();\n        }\n        \n5. 在 Windows Store 应用项目中，打开 MainPage.xaml 项目文件，然后就在定义“保存”按钮的元素之前添加以下 **Button** 元素：\n\n        <Button Name=\"ButtonLogin\" Click=\"ButtonLogin_Click\" \n                        Visibility=\"Visible\">Sign in</Button>\n\n6. 在 Windows Phone 应用项目中，紧靠在定义“保存”按钮的元素前面添加以下 **Button** 元素：\n\n        <Button Grid.Row =\"1\" Grid.Column=\"1\" Name=\"ButtonLogin\" Click=\"ButtonLogin_Click\" \n                        Visibility=\"Visible\" Margin=\"10, 0, 0, 0\">Sign in</Button> \n\n7. 打开共享的 App.xaml.cs 项目文件并添加以下 using 语句（如果还没有此语句）：\n\n        using Microsoft.WindowsAzure.MobileServices;  \n \n8. 在 App.xaml.cs 项目文件中，添加以下代码：\n\n        protected override void OnActivated(IActivatedEventArgs args)\n        {\n            // Windows Phone 8.1 requires you to handle the respose from the WebAuthenticationBroker.\n            #if WINDOWS_PHONE_APP\n            if (args.Kind == ActivationKind.WebAuthenticationBrokerContinuation)\n            {\n                // Completes the sign-in process started by LoginAsync.\n                // Change 'MobileService' to the name of your MobileServiceClient instance. \n                App.MobileService.LoginComplete(args as WebAuthenticationBrokerContinuationEventArgs);\n            }\n            #endif\n\n            base.OnActivated(args);\n        }\n\n    如果 **OnActivated** 方法已存在，只需添加 `#if...#endif`  代码块。\n\n9. 按 F5 键以运行 Windows 应用商店应用，单击“登录”按钮，然后使用所选的标识提供者来登录到此应用。\n\n    当您成功登录时，应用应该运行而不出现错误，您应该能够查询移动服务，并对数据进行更新。\n\n10. 右键单击 Windows Phone 应用商店应用项目，单击“设置为启动项目”，然后重复上一步来验证 Windows Phone 应用商店应用是否也正常运行。\n\n<!---HONumber=71-->"
}