{
  "nodes": [
    {
      "pos": [
        4,
        43
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"update-app\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>更新应用以调用自定义 API"
    },
    {
      "pos": [
        48,
        138
      ],
      "content": "在 Visual Studio 中，打开快速启动项目中的 default.html 文件，找到名为  <ph id=\"ph1\">`buttonRefresh`</ph> 的<bpt id=\"p1\">**</bpt>按钮<ept id=\"p1\">**</ept>元素，然后在其后添加以下新元素："
    },
    {
      "content": "这样可将新按钮添加到页。",
      "pos": [
        232,
        244
      ]
    },
    {
      "pos": [
        250,
        323
      ],
      "content": "打开  <ph id=\"ph1\">`js`</ph> 项目文件夹中的 default.js 代码文件，找到 <bpt id=\"p1\">**</bpt>refreshTodoItems<ept id=\"p1\">**</ept> 函数，并确认该函数包含以下代码："
    },
    {
      "content": "这样可以筛选项，使得查询不返回已完成的项。",
      "pos": [
        594,
        615
      ]
    },
    {
      "pos": [
        620,
        654
      ],
      "content": "在 <bpt id=\"p1\">**</bpt>refreshTodoItems<ept id=\"p1\">**</ept> 函数后，添加以下代码："
    },
    {
      "pos": [
        1710,
        1822
      ],
      "content": "此方法可处理新按钮的 <bpt id=\"p1\">**</bpt>Click<ept id=\"p1\">**</ept> 事件。在客户端上调用 <bpt id=\"p2\">**</bpt>InvokeApiAsync<ept id=\"p2\">**</ept> 方法，该客户端向新的自定义 API 发送 POST 请求。与任何错误相同，自定义 API 返回的结果也显示在消息对话框中。"
    },
    {
      "pos": [
        1827,
        1854
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"test-app\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>测试应用"
    },
    {
      "pos": [
        1859,
        1900
      ],
      "content": "在 Visual Studio 中，按 <bpt id=\"p1\">**</bpt>F5<ept id=\"p1\">**</ept> 键以重新生成项目并启动应用。"
    },
    {
      "content": "在应用的\"插入 TodoItem\"中键入一些文本，然后单击\"保存\"。",
      "pos": [
        1905,
        1939
      ]
    },
    {
      "content": "重复上述步骤，直至您将多个 ToDo 项添加到列表。",
      "pos": [
        1944,
        1970
      ]
    },
    {
      "content": "单击\"完成全部\"按钮。",
      "pos": [
        1975,
        1986
      ]
    },
    {
      "content": "此时会显示一个消息框，指示标记为完成的多个项，并再次执行筛选查询，将所有项从列表中清除。",
      "pos": [
        2113,
        2157
      ]
    }
  ],
  "content": "\n## <a name=\"update-app\"></a>更新应用以调用自定义 API\n\n1. 在 Visual Studio 中，打开快速启动项目中的 default.html 文件，找到名为  `buttonRefresh` 的**按钮**元素，然后在其后添加以下新元素： \n\n        <button id=\"buttonCompleteAll\" style=\"margin-left: 5px\">Complete All</button>\n\n    这样可将新按钮添加到页。 \n\n2. 打开  `js` 项目文件夹中的 default.js 代码文件，找到 **refreshTodoItems** 函数，并确认该函数包含以下代码：\n\n        todoTable.where({ complete: false })\n           .read()\n           .done(function (results) {\n               todoItems = new WinJS.Binding.List(results);\n               listItems.winControl.itemDataSource = todoItems.dataSource;\n           });            \n\n    这样可以筛选项，使得查询不返回已完成的项。\n\n3. 在 **refreshTodoItems** 函数后，添加以下代码：\n\n        var completeAllTodoItems = function () {\n            var okCommand = new Windows.UI.Popups.UICommand(\"OK\");\n        \n            // Asynchronously call the custom API using the POST method. \n            mobileService.invokeApi(\"completeall\", {\n                body: null,\n                method: \"post\"\n            }).done(function (results) {\n                var message = results.result.count + \" item(s) marked as complete.\";\n                var dialog = new Windows.UI.Popups.MessageDialog(message);\n                dialog.commands.append(okCommand);\n                dialog.showAsync().done(function () {\n                    refreshTodoItems();\n                });\n            }, function (error) {\n                var dialog = new Windows.UI.Popups\n                    .MessageDialog(error.message);\n                dialog.commands.append(okCommand);\n                dialog.showAsync().done();\n            });\n        };\n\n        buttonCompleteAll.addEventListener(\"click\", function () {\n            completeAllTodoItems();\n        });\n\n    此方法可处理新按钮的 **Click** 事件。在客户端上调用 **InvokeApiAsync** 方法，该客户端向新的自定义 API 发送 POST 请求。与任何错误相同，自定义 API 返回的结果也显示在消息对话框中。\n\n## <a name=\"test-app\"></a>测试应用\n\n1. 在 Visual Studio 中，按 **F5** 键以重新生成项目并启动应用。\n\n2. 在应用的\"插入 TodoItem\"中键入一些文本，然后单击\"保存\"。\n\n3. 重复上述步骤，直至您将多个 ToDo 项添加到列表。\n\n4. 单击\"完成全部\"按钮。\n\n    ![](./media/mobile-services-windows-store-javascript-call-custom-api/mobile-custom-api-windows-store-completed.png)\n\n    此时会显示一个消息框，指示标记为完成的多个项，并再次执行筛选查询，将所有项从列表中清除。\n"
}