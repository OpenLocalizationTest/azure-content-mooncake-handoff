{
  "nodes": [
    {
      "content": "事件中心身份验证和安全模型概述 | Azure",
      "pos": [
        27,
        50
      ]
    },
    {
      "content": "事件中心常见问题",
      "pos": [
        68,
        76
      ]
    },
    {
      "content": "事件中心身份验证和安全模型概述",
      "pos": [
        281,
        296
      ]
    },
    {
      "content": "事件中心安全模型满足以下要求：",
      "pos": [
        298,
        313
      ]
    },
    {
      "content": "只有可提供有效凭据的设备才能将数据发送到事件中心。",
      "pos": [
        317,
        342
      ]
    },
    {
      "content": "一台设备不能模拟另一台设备。",
      "pos": [
        346,
        360
      ]
    },
    {
      "content": "可以阻止恶意设备向事件中心发送数据。",
      "pos": [
        364,
        382
      ]
    },
    {
      "content": "设备身份验证",
      "pos": [
        387,
        393
      ]
    },
    {
      "pos": [
        395,
        533
      ],
      "content": "事件中心安全模型基于<bpt id=\"p1\">[</bpt>共享访问签名 (SAS)<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/dn170477.aspx)</ept> 令牌与发布者的组合。事件发布者定义事件中心的虚拟终结点。发布者只能用于将消息发送到事件中心。无法从发布者接收消息。"
    },
    {
      "content": "通常，事件中心为每个设备使用一个发布者。发送到事件中心的任何发布者的所有消息都将在该事件中心内排队。发布者允许进行精细的访问控制和限制。",
      "pos": [
        535,
        603
      ]
    },
    {
      "content": "为每个设备分配一个唯一令牌，该令牌将上载到该设备。生成令牌后，每个唯一令牌将授予对不同唯一发布者的访问权限。拥有令牌的设备只能向一个发布者发送消息，但不能向其他发布者发送消息。如果多个设备共享同一令牌，则其中每个设备将共享一个发布者。",
      "pos": [
        605,
        722
      ]
    },
    {
      "content": "可为设备配置令牌用于授予对事件中心的直接访问权限，但不建议这样做。持有此类令牌的任何设备都可以直接将消息发送到该事件中心内。此类设备将不会受到限制。此外，无法将设备列入方块列表，使其无法该事件中心发送消息。",
      "pos": [
        724,
        827
      ]
    },
    {
      "content": "所有令牌使用 SAS 密钥进行签名。通常，所有令牌使用同一密钥进行签名。设备不知道该密钥；这可以防止设备生成令牌。",
      "pos": [
        829,
        886
      ]
    },
    {
      "content": "创建密钥",
      "pos": [
        892,
        896
      ]
    },
    {
      "pos": [
        898,
        1057
      ],
      "content": "创建命名空间时，服务总线将生成名为 <bpt id=\"p1\">**</bpt>RootManageSharedAccessKey<ept id=\"p1\">**</ept> 的 256 位 SAS 密钥。此密钥授予对命名空间的发送、侦听和管理权限。你可以创建其他密钥。建议你生成一个密钥用于授予对特定事件中心的发送权限。本主题的余下内容假设你已将此密钥命名为 <ph id=\"ph1\">`EventHubSendKey`</ph>。"
    },
    {
      "content": "在创建事件中心时，以下示例将创建一个仅限发送的密钥：",
      "pos": [
        1059,
        1085
      ]
    },
    {
      "content": "生成令牌",
      "pos": [
        2104,
        2108
      ]
    },
    {
      "pos": [
        2110,
        2208
      ],
      "content": "可以使用 SAS 密钥生成令牌。对于每个设备，只能生成一个令牌。然后，可以使用以下方法生成令牌。所有令牌都使用 <bpt id=\"p1\">**</bpt>EventHubSendKey<ept id=\"p1\">**</ept> 密钥生成。将为每个令牌分配一个唯一 URI。"
    },
    {
      "pos": [
        2379,
        2562
      ],
      "content": "调用此方法时，应将 URI 指定为 <ph id=\"ph1\">`//&lt;NAMESPACE&gt;.servicebus.windows.net/&lt;EVENT_HUB_NAME&gt;/publishers/&lt;PUBLISHER_NAME&gt;`</ph>。所有令牌的 URI 都是相同的，但每个令牌的 <ph id=\"ph2\">`PUBLISHER_NAME`</ph> 应该不同。<ph id=\"ph3\">`PUBLISHER_NAME`</ph> 最好是表示要接收该令牌的设备的 ID。"
    },
    {
      "content": "此方法将生成具有以下结构的令牌：",
      "pos": [
        2564,
        2580
      ]
    },
    {
      "content": "令牌过期时间以从 1970 年 1 月 1 日开始算起的秒数指定。下面是一个令牌示例：",
      "pos": [
        2682,
        2725
      ]
    },
    {
      "content": "通常，令牌的使用期限相当于或长于设备的使用期限。如果设备能够获取新令牌，可以使用使用期限较短的令牌。",
      "pos": [
        2866,
        2916
      ]
    },
    {
      "content": "发送数据的设备",
      "pos": [
        2922,
        2929
      ]
    },
    {
      "content": "创建令牌后，将为每个设备设置其自身唯一的令牌。",
      "pos": [
        2931,
        2954
      ]
    },
    {
      "content": "当设备向事件中心发送数据时，设备会在发送请求中标记其令牌。为了防止攻击者窃听和盗取令牌，设备与事件中心之间的通信必须通过加密通道进行。",
      "pos": [
        2956,
        3023
      ]
    },
    {
      "content": "将设备列入方块列表",
      "pos": [
        3029,
        3038
      ]
    },
    {
      "content": "如果盗取了令牌，攻击者可以模拟令牌已失窃的设备。将设备列入方块列表会导致它不可用，直到为该设备提供了使用不同发布者的新令牌。",
      "pos": [
        3040,
        3102
      ]
    },
    {
      "content": "后端应用程序的身份验证",
      "pos": [
        3107,
        3118
      ]
    },
    {
      "content": "为了对使用设备生成的数据的后端应用程序进行身份验证，事件中心采用了与服务总线主题所用模型类似的安全模型。事件中心使用者组等效于服务总线主题的订阅。如果创建使用者组的请求附带了一个用于授予对事件中心或者对事件中心所属命名空间的管理权限的令牌，则客户端可以创建该使用者组。如果接收请求附带了一个用于授予对使用者组、事件中心或者事件中心所属命名空间的接收权限的令牌，则允许客户端使用该使用者组的数据。",
      "pos": [
        3120,
        3317
      ]
    },
    {
      "content": "当前版本的服务总线不支持针对单个订阅的 SAS 规则。对于事件中心使用者组也是如此。将来会添加对这两项功能的 SAS 支持。",
      "pos": [
        3319,
        3381
      ]
    },
    {
      "content": "在无法为单个使用者组进行 SAS 身份验证的情况下，使用 SAS 密钥来保护具有一个公用密钥的所有使用者组。此方法能使应用程序使用事件中心的所有使用者组的数据。",
      "pos": [
        3383,
        3463
      ]
    },
    {
      "content": "在 ACS 中创建服务标识、信赖方和规则",
      "pos": [
        3469,
        3489
      ]
    },
    {
      "pos": [
        3491,
        3619
      ],
      "content": "ACS 支持通过多种方法创建服务标识、信赖方和规则，但最简单的方法是使用 <bpt id=\"p1\">[</bpt>SBAZTool<ept id=\"p1\">](http://code.msdn.microsoft.com/windowsazure/Authorization-SBAzTool-6fd76d93)</ept>。例如："
    },
    {
      "pos": [
        3624,
        3672
      ],
      "content": "为 <bpt id=\"p1\">**</bpt>EventHubSender<ept id=\"p1\">**</ept> 创建服务标识。这将返回已创建的服务标识的名称及其密钥："
    },
    {
      "pos": [
        3750,
        3787
      ],
      "content": "授予 <bpt id=\"p1\">**</bpt>EventHubSender<ept id=\"p1\">**</ept> 对事件中心的“发送声明”权限。"
    },
    {
      "content": "为使用者组 1 的接收者创建服务标识：",
      "pos": [
        3882,
        3901
      ]
    },
    {
      "pos": [
        3986,
        4045
      ],
      "content": "授予 <ph id=\"ph1\">`consumergroup1receiver`</ph> 对 <bpt id=\"p1\">**</bpt>ConsumerGroup1<ept id=\"p1\">**</ept> 的“侦听声明”权限："
    },
    {
      "pos": [
        4165,
        4188
      ],
      "content": "为<bpt id=\"p1\">**</bpt>使用者组 2<ept id=\"p1\">**</ept> 的接收者创建服务标识："
    },
    {
      "pos": [
        4274,
        4333
      ],
      "content": "授予 <ph id=\"ph1\">`consumergroup2receiver`</ph> 对 <bpt id=\"p1\">**</bpt>ConsumerGroup2<ept id=\"p1\">**</ept> 的“侦听声明”权限："
    },
    {
      "content": "后续步骤",
      "pos": [
        4453,
        4457
      ]
    },
    {
      "content": "若要了解有关事件中心的详细信息，请访问以下主题：",
      "pos": [
        4459,
        4483
      ]
    },
    {
      "content": "事件中心概述",
      "pos": [
        4488,
        4494
      ]
    },
    {
      "pos": [
        4498,
        4516
      ],
      "content": "<bpt id=\"p1\">[</bpt><ept id=\"p1\">使用事件中心的完整示例应用程序]</ept>。"
    },
    {
      "pos": [
        4519,
        4539
      ],
      "content": "使用服务总线队列的<bpt id=\"p1\">[</bpt><ept id=\"p1\">队列消息解决方案]</ept>。"
    }
  ],
  "content": "<properties \n   pageTitle=\"事件中心身份验证和安全模型概述 | Azure\"\n   description=\"事件中心常见问题\"\n   services=\"event-hubs\"\n   documentationCenter=\"na\"\n   authors=\"sethmanheim\"\n   manager=\"timlt\"\n   editor=\"\" />\n<tags \n   ms.service=\"event-hubs\"\n   ms.date=\"10/07/2015\"\n   wacn.date=\"10/22/2015\" />\n\n# 事件中心身份验证和安全模型概述\n\n事件中心安全模型满足以下要求：\n\n- 只有可提供有效凭据的设备才能将数据发送到事件中心。\n\n- 一台设备不能模拟另一台设备。\n\n- 可以阻止恶意设备向事件中心发送数据。\n\n## 设备身份验证\n\n事件中心安全模型基于[共享访问签名 (SAS)](https://msdn.microsoft.com/zh-cn/library/dn170477.aspx) 令牌与发布者的组合。事件发布者定义事件中心的虚拟终结点。发布者只能用于将消息发送到事件中心。无法从发布者接收消息。\n\n通常，事件中心为每个设备使用一个发布者。发送到事件中心的任何发布者的所有消息都将在该事件中心内排队。发布者允许进行精细的访问控制和限制。\n\n为每个设备分配一个唯一令牌，该令牌将上载到该设备。生成令牌后，每个唯一令牌将授予对不同唯一发布者的访问权限。拥有令牌的设备只能向一个发布者发送消息，但不能向其他发布者发送消息。如果多个设备共享同一令牌，则其中每个设备将共享一个发布者。\n\n可为设备配置令牌用于授予对事件中心的直接访问权限，但不建议这样做。持有此类令牌的任何设备都可以直接将消息发送到该事件中心内。此类设备将不会受到限制。此外，无法将设备列入方块列表，使其无法该事件中心发送消息。\n\n所有令牌使用 SAS 密钥进行签名。通常，所有令牌使用同一密钥进行签名。设备不知道该密钥；这可以防止设备生成令牌。\n\n### 创建密钥\n\n创建命名空间时，服务总线将生成名为 **RootManageSharedAccessKey** 的 256 位 SAS 密钥。此密钥授予对命名空间的发送、侦听和管理权限。你可以创建其他密钥。建议你生成一个密钥用于授予对特定事件中心的发送权限。本主题的余下内容假设你已将此密钥命名为 `EventHubSendKey`。\n\n在创建事件中心时，以下示例将创建一个仅限发送的密钥：\n\n```C#\n\n// Create namespace manager.\nstring serviceNamespace = \"YOUR_NAMESPACE\";\nstring namespaceManageKeyName = \"RootManageSharedAccessKey\";\nstring namespaceManageKey = \"YOUR_ROOT_MANAGE_SHARED_ACCESS_KEY\";\nUri uri = ServiceBusEnvironment.CreateServiceUri(\"sb\", serviceNamespace, string.Empty);\nTokenProvider td = TokenProvider.CreateSharedAccessSignatureTokenProvider(namespaceManageKeyName, namespaceManageKey);\nNamespaceManager nm = new NamespaceManager(namespaceUri, namespaceManageTokenProvider);\n\n// Create Event Hub with a SAS rule that allows sending to that Event Hub.\nEventHubDescription ed = new EventHubDescription(\"MY_EVENT_HUB\") { PartitionCount = 32 };\nstring eventHubSendKeyName = \"EventHubSendKey\";\nstring eventHubSendKey = SharedAccessAuthorizationRule.GenerateRandomKey();\nSharedAccessAuthorizationRule eventHubSendRule = new SharedAccessAuthorizationRule(eventHubSendKeyName, eventHubSendKey, new[] { AccessRights.Send });\ned.Authorization.Add(eventHubSendRule); \nnm.CreateEventHub(ed);\n\n```\n\n### 生成令牌\n\n可以使用 SAS 密钥生成令牌。对于每个设备，只能生成一个令牌。然后，可以使用以下方法生成令牌。所有令牌都使用 **EventHubSendKey** 密钥生成。将为每个令牌分配一个唯一 URI。\n\n    public static string SharedAccessSignatureTokenProvider.GetSharedAccessSignature(string keyName, string sharedAccessKey, string resource, TimeSpan tokenTimeToLive)\n\n调用此方法时，应将 URI 指定为 `//<NAMESPACE>.servicebus.windows.net/<EVENT_HUB_NAME>/publishers/<PUBLISHER_NAME>`。所有令牌的 URI 都是相同的，但每个令牌的 `PUBLISHER_NAME` 应该不同。`PUBLISHER_NAME` 最好是表示要接收该令牌的设备的 ID。\n\n此方法将生成具有以下结构的令牌：\n\n    SharedAccessSignature sr={URI}&sig={HMAC_SHA256_SIGNATURE}&se={EXPIRATION_TIME}&skn={KEY_NAME}\n\n令牌过期时间以从 1970 年 1 月 1 日开始算起的秒数指定。下面是一个令牌示例：\n\n    SharedAccessSignature sr=contoso&sig=nPzdNN%2Gli0ifrfJwaK4mkK0RqAB%2byJUlt%2bGFmBHG77A%3d&se=1403130337&skn=RootManageSharedAccessKey\n\n通常，令牌的使用期限相当于或长于设备的使用期限。如果设备能够获取新令牌，可以使用使用期限较短的令牌。\n\n### 发送数据的设备\n\n创建令牌后，将为每个设备设置其自身唯一的令牌。\n\n当设备向事件中心发送数据时，设备会在发送请求中标记其令牌。为了防止攻击者窃听和盗取令牌，设备与事件中心之间的通信必须通过加密通道进行。\n\n### 将设备列入方块列表\n\n如果盗取了令牌，攻击者可以模拟令牌已失窃的设备。将设备列入方块列表会导致它不可用，直到为该设备提供了使用不同发布者的新令牌。\n\n## 后端应用程序的身份验证\n\n为了对使用设备生成的数据的后端应用程序进行身份验证，事件中心采用了与服务总线主题所用模型类似的安全模型。事件中心使用者组等效于服务总线主题的订阅。如果创建使用者组的请求附带了一个用于授予对事件中心或者对事件中心所属命名空间的管理权限的令牌，则客户端可以创建该使用者组。如果接收请求附带了一个用于授予对使用者组、事件中心或者事件中心所属命名空间的接收权限的令牌，则允许客户端使用该使用者组的数据。\n\n当前版本的服务总线不支持针对单个订阅的 SAS 规则。对于事件中心使用者组也是如此。将来会添加对这两项功能的 SAS 支持。\n\n在无法为单个使用者组进行 SAS 身份验证的情况下，使用 SAS 密钥来保护具有一个公用密钥的所有使用者组。此方法能使应用程序使用事件中心的所有使用者组的数据。\n\n### 在 ACS 中创建服务标识、信赖方和规则\n\nACS 支持通过多种方法创建服务标识、信赖方和规则，但最简单的方法是使用 [SBAZTool](http://code.msdn.microsoft.com/windowsazure/Authorization-SBAzTool-6fd76d93)。例如：\n\n1. 为 **EventHubSender** 创建服务标识。这将返回已创建的服务标识的名称及其密钥：\n\n        sbaztool.exe exe -n <namespace> -k <key>  makeid eventhubsender\n\n2. 授予 **EventHubSender** 对事件中心的“发送声明”权限。\n\n        sbaztool.exe -n <namespace> -k <key> grant Send /AuthTestEventHub eventhubsender\n\n3. 为使用者组 1 的接收者创建服务标识：\n\n        sbaztool.exe exe -n <namespace> -k <key> makeid consumergroup1receiver\n\n4. 授予 `consumergroup1receiver` 对 **ConsumerGroup1** 的“侦听声明”权限：\n\n        sbaztool.exe -n <namespace> -k <key> grant Listen /AuthTestEventHub/ConsumerGroup1 consumergroup1receiver\n\n5. 为**使用者组 2** 的接收者创建服务标识：\n\n        sbaztool.exe exe -n <namespace> -k <key>  makeid consumergroup2receiver\n\n6. 授予 `consumergroup2receiver` 对 **ConsumerGroup2** 的“侦听声明”权限：\n\n        sbaztool.exe -n <namespace> -k <key> grant Listen /AuthTestEventHub/ConsumerGroup2 consumergroup2receiver\n\n## 后续步骤\n\n若要了解有关事件中心的详细信息，请访问以下主题：\n\n- [事件中心概述]\n- [使用事件中心的完整示例应用程序]。\n- 使用服务总线队列的[队列消息解决方案]。\n\n[事件中心概述]: /documentation/articles/event-hubs-overview\n[使用事件中心的完整示例应用程序]: https://code.msdn.microsoft.com/windowsazure/Service-Bus-Event-Hub-286fd097\n[队列消息解决方案]: /documentation/articles/cloud-services-dotnet-multi-tier-app-using-service-bus-queues\n<!---HONumber=66-->"
}