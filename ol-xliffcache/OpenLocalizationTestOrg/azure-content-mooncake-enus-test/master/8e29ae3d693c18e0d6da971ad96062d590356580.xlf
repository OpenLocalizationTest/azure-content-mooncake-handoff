<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e29ae3d693c18e0d6da971ad96062d590356580</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>如何通过 Ruby 使用 Blob 存储 | Azure</source>
          <target state="new">如何通过 Ruby 使用 Blob 存储 | Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>了解如何使用 Azure Blob 服务上载、下载、列出和删除 Blob 内容。用 Ruby 编写的相关示例。</source>
          <target state="new">了解如何使用 Azure Blob 服务上载、下载、列出和删除 Blob 内容。用 Ruby 编写的相关示例。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>如何通过 Ruby 使用 Blob 存储</source>
          <target state="new">如何通过 Ruby 使用 Blob 存储</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>概述</source>
          <target state="new">概述</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>本指南将演示如何使用 Azure Blob 服务执行常见方案。相关示例是使用 Ruby API 编写的。涉及的任务包括“上载”、“列出”、“下载”和“删除”Blob。</source>
          <target state="new">本指南将演示如何使用 Azure Blob 服务执行常见方案。相关示例是使用 Ruby API 编写的。涉及的任务包括“上载”、“列出”、“下载”和“删除”Blob。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>创建 Ruby 应用程序</source>
          <target state="new">创建 Ruby 应用程序</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>创建 Ruby 应用程序。有关说明，请参阅<bpt id="p1">[</bpt>在 Azure 上创建 Ruby 应用程序<ept id="p1">](/documentation/articles/virtual-machines-ruby-rails-web-app-linux)</ept>。</source>
          <target state="new">创建 Ruby 应用程序。有关说明，请参阅<bpt id="p1">[</bpt>在 Azure 上创建 Ruby 应用程序<ept id="p1">](/documentation/articles/virtual-machines-ruby-rails-web-app-linux)</ept>。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>配置应用程序以访问存储</source>
          <target state="new">配置应用程序以访问存储</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>要使用 Azure 存储空间，你需要下载和使用 Ruby azure 包，其中包括一组便于与存储 REST 服务进行通信的库。</source>
          <target state="new">要使用 Azure 存储空间，你需要下载和使用 Ruby azure 包，其中包括一组便于与存储 REST 服务进行通信的库。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>使用 RubyGems 获取该程序包</source>
          <target state="new">使用 RubyGems 获取该程序包</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>使用命令行接口，例如 <bpt id="p1">**</bpt>PowerShell<ept id="p1">**</ept> (Windows)、<bpt id="p2">**</bpt>Terminal<ept id="p2">**</ept> (Mac) 或 <bpt id="p3">**</bpt>Bash<ept id="p3">**</ept> (Unix)。</source>
          <target state="new">使用命令行接口，例如 <bpt id="p1">**</bpt>PowerShell<ept id="p1">**</ept> (Windows)、<bpt id="p2">**</bpt>Terminal<ept id="p2">**</ept> (Mac) 或 <bpt id="p3">**</bpt>Bash<ept id="p3">**</ept> (Unix)。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>在命令窗口中键入“gem install azure”以安装 gem 和依赖项。</source>
          <target state="new">在命令窗口中键入“gem install azure”以安装 gem 和依赖项。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>导入包</source>
          <target state="new">导入包</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>使用常用的文本编辑器将以下内容添加到你要在其中使用存储的 Ruby 文件的顶部：</source>
          <target state="new">使用常用的文本编辑器将以下内容添加到你要在其中使用存储的 Ruby 文件的顶部：</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>设置 Azure 存储连接</source>
          <target state="new">设置 Azure 存储连接</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Azure 模块将读取环境变量 <bpt id="p1">**</bpt>AZURE_STORAGE_ACCOUNT<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>AZURE_STORAGE_ACCESS_KEY<ept id="p2">**</ept>，以便获取连接到 Azure 存储帐户所需的信息。如果未设置这些环境变量，则在使用 <bpt id="p3">**</bpt>Azure::Blob::BlobService<ept id="p3">**</ept> 之前必须通过以下代码指定帐户信息：</source>
          <target state="new">Azure 模块将读取环境变量 <bpt id="p1">**</bpt>AZURE_STORAGE_ACCOUNT<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>AZURE_STORAGE_ACCESS_KEY<ept id="p2">**</ept>，以便获取连接到 Azure 存储帐户所需的信息。如果未设置这些环境变量，则在使用 <bpt id="p3">**</bpt>Azure::Blob::BlobService<ept id="p3">**</ept> 之前必须通过以下代码指定帐户信息：</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>获取这些值：</source>
          <target state="new">获取这些值：</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>登录到 <bpt id="p1">[</bpt>Azure 管理门户<ept id="p1">](https://manage.windowsazure.cn/)</ept>。</source>
          <target state="new">登录到 <bpt id="p1">[</bpt>Azure 管理门户<ept id="p1">](https://manage.windowsazure.cn/)</ept>。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>导航到要使用的存储帐户</source>
          <target state="new">导航到要使用的存储帐户</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>单击导航窗格底部的“管理密钥”。</source>
          <target state="new">单击导航窗格底部的“管理密钥”。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>在弹出对话框中，将会看到存储帐户名称、主访问密钥和辅助访问密钥。对于访问密钥，您可以使用主访问密钥，也可以使用辅助访问密钥。</source>
          <target state="new">在弹出对话框中，将会看到存储帐户名称、主访问密钥和辅助访问密钥。对于访问密钥，您可以使用主访问密钥，也可以使用辅助访问密钥。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>创建容器</source>
          <target state="new">创建容器</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>使用 <bpt id="p1">**</bpt>Azure::Blob::BlobService<ept id="p1">**</ept> 对象可以对容器和 Blob 进行操作。若要创建容器，请使用 <bpt id="p2">**</bpt>create_container()<ept id="p2">**</ept> 方法。</source>
          <target state="new">使用 <bpt id="p1">**</bpt>Azure::Blob::BlobService<ept id="p1">**</ept> 对象可以对容器和 Blob 进行操作。若要创建容器，请使用 <bpt id="p2">**</bpt>create_container()<ept id="p2">**</ept> 方法。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>以下代码示例创建一个容器或输出存在的错误。</source>
          <target state="new">以下代码示例创建一个容器或输出存在的错误。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>若要将容器中的文件设为公用，你可以设置容器的权限。</source>
          <target state="new">若要将容器中的文件设为公用，你可以设置容器的权限。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>只需修改 <ph id="ph1">&lt;strong&gt;</ph>create_container()<ph id="ph2">&lt;/strong&gt;</ph> 调用即可传递 <bpt id="p1">**</bpt>:public_access_level<ept id="p1">**</ept> 选项：</source>
          <target state="new">只需修改 <ph id="ph1">&lt;strong&gt;</ph>create_container()<ph id="ph2">&lt;/strong&gt;</ph> 调用即可传递 <bpt id="p1">**</bpt>:public_access_level<ept id="p1">**</ept> 选项：</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>:public_access_level<ept id="p1">**</ept> 选项的有效值为：</source>
          <target state="new"><bpt id="p1">**</bpt>:public_access_level<ept id="p1">**</ept> 选项的有效值为：</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Blob：<ept id="p1">**</ept>指定对容器和 Blob 数据的完整公共读取权限。客户端可以通过匿名请求枚举容器中的 Blob，但无法枚举存储帐户中的容器。</source>
          <target state="new"><bpt id="p1">**</bpt>Blob：<ept id="p1">**</ept>指定对容器和 Blob 数据的完整公共读取权限。客户端可以通过匿名请求枚举容器中的 Blob，但无法枚举存储帐户中的容器。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>容器：<ept id="p1">**</ept>指定对 Blob 的公共读取权限。可以通过匿名请求读取此容器中的 Blob 数据，但容器数据不可用。客户端无法通过匿名请求枚举容器中的 Blob。</source>
          <target state="new"><bpt id="p1">**</bpt>容器：<ept id="p1">**</ept>指定对 Blob 的公共读取权限。可以通过匿名请求读取此容器中的 Blob 数据，但容器数据不可用。客户端无法通过匿名请求枚举容器中的 Blob。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>另外，还可以通过使用 <bpt id="p1">**</bpt>set_container_acl()<ept id="p1">**</ept> 方法指定公共访问级别来修改容器的公共访问级别。</source>
          <target state="new">另外，还可以通过使用 <bpt id="p1">**</bpt>set_container_acl()<ept id="p1">**</ept> 方法指定公共访问级别来修改容器的公共访问级别。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>以下代码示例将更改<bpt id="p1">**</bpt>容器<ept id="p1">**</ept>的公共访问级别：</source>
          <target state="new">以下代码示例将更改<bpt id="p1">**</bpt>容器<ept id="p1">**</ept>的公共访问级别：</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>将 Blob 上载到容器中</source>
          <target state="new">将 Blob 上载到容器中</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>若要将内容上载到 Blob，请使用 <bpt id="p1">**</bpt>create_block_blob()<ept id="p1">**</ept> 方法创建 Blob，将文件或字符串用作 Blob 的内容。</source>
          <target state="new">若要将内容上载到 Blob，请使用 <bpt id="p1">**</bpt>create_block_blob()<ept id="p1">**</ept> 方法创建 Blob，将文件或字符串用作 Blob 的内容。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>以下代码会将文件 <bpt id="p1">**</bpt>test.png<ept id="p1">**</ept> 作为名为“image-blob”的新 blob 上载到容器中。</source>
          <target state="new">以下代码会将文件 <bpt id="p1">**</bpt>test.png<ept id="p1">**</ept> 作为名为“image-blob”的新 blob 上载到容器中。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>列出容器中的 Blob</source>
          <target state="new">列出容器中的 Blob</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>若要列出容器，请使用 <bpt id="p1">**</bpt>list_containers()<ept id="p1">**</ept> 方法。若要列出容器中的 Blob，请使用 <bpt id="p2">**</bpt>list_blobs()<ept id="p2">**</ept> 方法。</source>
          <target state="new">若要列出容器，请使用 <bpt id="p1">**</bpt>list_containers()<ept id="p1">**</ept> 方法。若要列出容器中的 Blob，请使用 <bpt id="p2">**</bpt>list_blobs()<ept id="p2">**</ept> 方法。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>这将输出帐户的所有容器中的所有 Blog 的 URL。</source>
          <target state="new">这将输出帐户的所有容器中的所有 Blog 的 URL。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>下载 Blob</source>
          <target state="new">下载 Blob</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>若要下载 Blob，请使用 <bpt id="p1">**</bpt>get_blob()<ept id="p1">**</ept> 方法来检索内容。</source>
          <target state="new">若要下载 Blob，请使用 <bpt id="p1">**</bpt>get_blob()<ept id="p1">**</ept> 方法来检索内容。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>以下代码示例演示了如何使用 <bpt id="p1">**</bpt>get_blob()<ept id="p1">**</ept> 下载“image-blob”的内容并将其写入本地文件中。</source>
          <target state="new">以下代码示例演示了如何使用 <bpt id="p1">**</bpt>get_blob()<ept id="p1">**</ept> 下载“image-blob”的内容并将其写入本地文件中。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>删除 Blob</source>
          <target state="new">删除 Blob</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>最后，若要删除 Blob，请使用 <bpt id="p1">**</bpt>delete_blob()<ept id="p1">**</ept> 方法。以下代码示例演示了如何删除 Blob。</source>
          <target state="new">最后，若要删除 Blob，请使用 <bpt id="p1">**</bpt>delete_blob()<ept id="p1">**</ept> 方法。以下代码示例演示了如何删除 Blob。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>后续步骤</source>
          <target state="new">后续步骤</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>若要了解有关更复杂存储任务的信息，请访问下面的链接：</source>
          <target state="new">若要了解有关更复杂存储任务的信息，请访问下面的链接：</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Azure 存储团队博客</source>
          <target state="new">Azure 存储团队博客</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>GitHub 上的 <bpt id="p1">[</bpt>Azure SDK for Ruby<ept id="p1">](https://github.com/WindowsAzure/azure-sdk-for-ruby)</ept> 存储库</source>
          <target state="new">GitHub 上的 <bpt id="p1">[</bpt>Azure SDK for Ruby<ept id="p1">](https://github.com/WindowsAzure/azure-sdk-for-ruby)</ept> 存储库</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>使用 AzCopy 命令行实用程序传输数据</source>
          <target state="new">使用 AzCopy 命令行实用程序传输数据</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>