{
  "nodes": [
    {
      "content": "在 Windows 上使用 Ruby 和 TinyTDS 连接到 SQL 数据库",
      "pos": [
        27,
        67
      ]
    },
    {
      "content": "提供可在 Windows 上运行的，用于连接到 Azure SQL 数据库的 Ruby 代码示例。",
      "pos": [
        86,
        135
      ]
    },
    {
      "content": "在 Windows上使用 Ruby 连接到 SQL 数据库",
      "pos": [
        354,
        383
      ]
    },
    {
      "content": "[AZURE.SELECTOR]",
      "pos": [
        616,
        632
      ]
    },
    {
      "content": "C",
      "pos": [
        636,
        637
      ]
    },
    {
      "content": "PHP",
      "pos": [
        703,
        706
      ]
    },
    {
      "content": "Python",
      "pos": [
        776,
        782
      ]
    },
    {
      "content": "Ruby",
      "pos": [
        855,
        859
      ]
    },
    {
      "content": "Java",
      "pos": [
        930,
        934
      ]
    },
    {
      "content": "Node.js",
      "pos": [
        1005,
        1012
      ]
    },
    {
      "content": "本主题演示了一个在使用 Windows 8.1 的 Windows 计算机上运行的，用于连接到 Azure SQL 数据库的 Ruby 代码示例。",
      "pos": [
        1084,
        1157
      ]
    },
    {
      "content": "先决条件",
      "pos": [
        1162,
        1166
      ]
    },
    {
      "content": "安装所需的模块",
      "pos": [
        1171,
        1178
      ]
    },
    {
      "content": "打开终端并安装以下组件：",
      "pos": [
        1180,
        1192
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>1) Ruby：<ept id=\"p1\">**</ept>如果你的计算机上没有 Ruby，请安装它。若是新的 Ruby 用户，建议使用 Ruby 2.1.X 安装程序。这些安装程序提供兼容且更新的稳定语言和扩展的包列表 (gem)。<bpt id=\"p2\">[</bpt>转到 Ruby 下载页<ept id=\"p2\">](http://rubyinstaller.org/downloads)</ept>并下载适当的 2.1.x 安装程序。例如，如果你使用 64 位计算机，请下载 <bpt id=\"p3\">**</bpt>Ruby 2.1.6 (x64)<ept id=\"p3\">**</ept> 安装程序。",
      "pos": [
        1194,
        1407
      ]
    },
    {
      "content": "下载安装程序后，请执行以下操作：",
      "pos": [
        1418,
        1434
      ]
    },
    {
      "content": "双击安装文件启动安装程序。",
      "pos": [
        1439,
        1452
      ]
    },
    {
      "content": "选择你的语言，并同意接受条款。",
      "pos": [
        1456,
        1471
      ]
    },
    {
      "content": "在安装设置屏幕上，选中“将 Ruby 可执行文件添加到你的路径”及“将 .rb 和 .rbw 文件与此 Ruby 安装相关联”旁边的复选框。",
      "pos": [
        1475,
        1545
      ]
    },
    {
      "pos": [
        1548,
        1626
      ],
      "content": "<bpt id=\"p1\">**</bpt>2) DevKit：<ept id=\"p1\">**</ept>从 <bpt id=\"p2\">[</bpt>RubyInstaller 页<ept id=\"p2\">](http://rubyinstaller.org/downloads)</ept>下载 DevKit"
    },
    {
      "content": "下载完成后，执行以下操作：",
      "pos": [
        1628,
        1641
      ]
    },
    {
      "content": "双击安装证书。系统将询问你要文件解压缩到哪个位置。",
      "pos": [
        1646,
        1671
      ]
    },
    {
      "content": "单击“...”按钮，然后选择“C:\\\\DevKit”。你可能事先需要通过单击“新建文件夹”来创建此文件夹。",
      "pos": [
        1675,
        1728
      ]
    },
    {
      "content": "单击“确定”，然后单击“解压缩”以解压缩文件。",
      "pos": [
        1732,
        1755
      ]
    },
    {
      "content": "现在，请打开命令提示符并输入以下命令：",
      "pos": [
        1758,
        1777
      ]
    },
    {
      "content": "现在，你已安装了全功能的 Ruby 和 RubyGems！",
      "pos": [
        1849,
        1878
      ]
    },
    {
      "pos": [
        1881,
        1942
      ],
      "content": "<bpt id=\"p1\">**</bpt>3) TinyTDS：<ept id=\"p1\">**</ept>导航到 C:\\\\DevKit 并从终端运行以下命令。这将在你的计算机上安装 TinyTDS。"
    },
    {
      "content": "SQL 数据库",
      "pos": [
        1977,
        1984
      ]
    },
    {
      "pos": [
        1986,
        2126
      ],
      "content": "请参阅<bpt id=\"p1\">[</bpt>入门页<ept id=\"p1\">](/documentation/articles/sql-database-get-started)</ept>，以了解如何创建示例数据库。必须根据指南创建 <bpt id=\"p2\">**</bpt>AdventureWorks 数据库模板<ept id=\"p2\">**</ept>。下面所示的示例只适用于 <bpt id=\"p3\">**</bpt>AdventureWorks 架构<ept id=\"p3\">**</ept>。"
    },
    {
      "content": "步骤 1：获取连接详细信息",
      "pos": [
        2132,
        2145
      ]
    },
    {
      "content": "步骤 2：连接",
      "pos": [
        2309,
        2316
      ]
    },
    {
      "pos": [
        2318,
        2397
      ],
      "content": "<bpt id=\"p1\">[</bpt>TinyTDS::Client<ept id=\"p1\">](https://github.com/rails-sqlserver/tiny_tds)</ept> 函数用于连接到 SQL 数据库。"
    },
    {
      "content": "步骤 3：执行查询",
      "pos": [
        2627,
        2636
      ]
    },
    {
      "content": "复制以下代码并将它粘贴到空文件中。将文件命名为 test.rb。然后，在命令提示符下输入以下命令以执行该文件：",
      "pos": [
        2638,
        2693
      ]
    },
    {
      "pos": [
        2713,
        2907
      ],
      "content": "在代码示例中，<bpt id=\"p1\">[</bpt>TinyTds::Result<ept id=\"p1\">](https://github.com/rails-sqlserver/tiny_tds)</ept> 函数用于检索针对 SQL 数据库执行的查询所返回的结果集。此函数接受查询并返回结果集。可以使用 <bpt id=\"p2\">[</bpt>result.each do |row|<ept id=\"p2\">](https://github.com/rails-sqlserver/tiny_tds)</ept> 循环访问结果集。"
    },
    {
      "content": "步骤 4：插入行",
      "pos": [
        3483,
        3491
      ]
    },
    {
      "pos": [
        3493,
        3749
      ],
      "content": "在本示例中，你将了解如何安全地执行 <bpt id=\"p1\">[</bpt>INSERT<ept id=\"p1\">](https://msdn.microsoft.com/zh-cn/library/ms174335.aspx)</ept> 语句，传递参数以保护应用程序免遭 <bpt id=\"p2\">[</bpt>SQL 注入<ept id=\"p2\">](https://technet.microsoft.com/zh-cn/library/ms161953(v=sql.105).aspx)</ept> 漏洞的危害，然后检索自动生成的<bpt id=\"p3\">[</bpt>主键<ept id=\"p3\">](https://msdn.microsoft.com/zh-cn/library/ms179610.aspx)</ept>值。"
    },
    {
      "pos": [
        3751,
        3897
      ],
      "content": "若要配合使用 TinyTDS 和 Azure，建议你运行多个 <ph id=\"ph1\">`SET`</ph> 语句来更改当前会话处理特定信息的方式。建议使用代码示例中所提供的 <ph id=\"ph2\">`SET`</ph> 语句。例如，即使未显式指定列的可为 null 状态，<ph id=\"ph3\">`SET ANSI_NULL_DFLT_ON`</ph> 也可以让你创建新列来允许 null 值。"
    },
    {
      "pos": [
        3899,
        4079
      ],
      "content": "为了符合 Microsoft SQL Server <bpt id=\"p1\">[</bpt>日期时间<ept id=\"p1\">](http://msdn.microsoft.com/zh-cn/library/ms187819.aspx)</ept>格式，请使用 <bpt id=\"p2\">[</bpt>strftime<ept id=\"p2\">](http://ruby-doc.org/core-2.2.0/Time.html#method-i-strftime)</ept> 函数转换成对应的日期时间格式。"
    }
  ],
  "content": "<properties\n    pageTitle=\"在 Windows 上使用 Ruby 和 TinyTDS 连接到 SQL 数据库\"\n    description=\"提供可在 Windows 上运行的，用于连接到 Azure SQL 数据库的 Ruby 代码示例。\"\n    services=\"sql-database\"\n    documentationCenter=\"\"\n    authors=\"meet-bhagdev\"\n    manager=\"jeffreyg\"\n    editor=\"\"/>\n\n\n<tags\n    ms.service=\"sql-database\"\n    ms.date=\"12/17/2015\"\n    wacn.date=\"01/29/2016\"/>\n\n\n# 在 Windows上使用 Ruby 连接到 SQL 数据库\n\n\n<!--\nOlder Selector technique, with dynamic drop-down lists.\n [AZURE.INCLUDE [sql-database-develop-includes-selector-language-platform-depth](../includes/sql-database-develop-includes-selector-language-platform-depth.md)]\n-->\n\n\n> [AZURE.SELECTOR]\n- [C#](/documentation/articles/sql-database-develop-dotnet-simple)\n- [PHP](/documentation/articles/sql-database-develop-php-simple-windows)\n- [Python](/documentation/articles/sql-database-develop-python-simple-windows)\n- [Ruby](/documentation/articles/sql-database-develop-ruby-simple-windows)\n- [Java](/documentation/articles/sql-database-develop-java-simple-windows)\n- [Node.js](/documentation/articles/sql-database-develop-nodejs-simple-windows)\n\n\n本主题演示了一个在使用 Windows 8.1 的 Windows 计算机上运行的，用于连接到 Azure SQL 数据库的 Ruby 代码示例。\n\n## 先决条件\n\n###安装所需的模块\n\n打开终端并安装以下组件：\n\n**1) Ruby：**如果你的计算机上没有 Ruby，请安装它。若是新的 Ruby 用户，建议使用 Ruby 2.1.X 安装程序。这些安装程序提供兼容且更新的稳定语言和扩展的包列表 (gem)。[转到 Ruby 下载页](http://rubyinstaller.org/downloads)并下载适当的 2.1.x 安装程序。例如，如果你使用 64 位计算机，请下载 **Ruby 2.1.6 (x64)** 安装程序。\n<br/><br/>下载安装程序后，请执行以下操作：\n\n\n- 双击安装文件启动安装程序。\n\n- 选择你的语言，并同意接受条款。\n\n- 在安装设置屏幕上，选中“将 Ruby 可执行文件添加到你的路径”及“将 .rb 和 .rbw 文件与此 Ruby 安装相关联”旁边的复选框。\n\n\n**2) DevKit：**从 [RubyInstaller 页](http://rubyinstaller.org/downloads)下载 DevKit\n\n下载完成后，执行以下操作：\n\n\n- 双击安装证书。系统将询问你要文件解压缩到哪个位置。\n\n- 单击“...”按钮，然后选择“C:\\\\DevKit”。你可能事先需要通过单击“新建文件夹”来创建此文件夹。\n\n- 单击“确定”，然后单击“解压缩”以解压缩文件。\n\n\n现在，请打开命令提示符并输入以下命令：\n\n    > chdir C:\\DevKit\n    > ruby dk.rb init\n    > ruby dk.rb install\n\n现在，你已安装了全功能的 Ruby 和 RubyGems！\n\n\n**3) TinyTDS：**导航到 C:\\\\DevKit 并从终端运行以下命令。这将在你的计算机上安装 TinyTDS。\n\n    gem inst tiny_tds --pre\n\n### SQL 数据库\n\n请参阅[入门页](/documentation/articles/sql-database-get-started)，以了解如何创建示例数据库。必须根据指南创建 **AdventureWorks 数据库模板**。下面所示的示例只适用于 **AdventureWorks 架构**。\n\n\n## 步骤 1：获取连接详细信息\n\n[AZURE.INCLUDE [sql-database-include-connection-string-details-20-portalshots](../includes/sql-database-include-connection-string-details-20-portalshots.md)]\n\n## 步骤 2：连接\n\n[TinyTDS::Client](https://github.com/rails-sqlserver/tiny_tds) 函数用于连接到 SQL 数据库。\n\n    require 'tiny_tds'\n    client = TinyTds::Client.new username: 'yourusername@yourserver', password: 'yourpassword',\n    host: 'yourserver.database.chinacloudapi.cn', port: 1433,\n    database: 'AdventureWorks', azure:true\n\n## 步骤 3：执行查询\n\n复制以下代码并将它粘贴到空文件中。将文件命名为 test.rb。然后，在命令提示符下输入以下命令以执行该文件：\n\n    ruby test.rb\n\n在代码示例中，[TinyTds::Result](https://github.com/rails-sqlserver/tiny_tds) 函数用于检索针对 SQL 数据库执行的查询所返回的结果集。此函数接受查询并返回结果集。可以使用 [result.each do |row|](https://github.com/rails-sqlserver/tiny_tds) 循环访问结果集。\n\n    require 'tiny_tds'  \n    print 'test'     \n    client = TinyTds::Client.new username: 'yourusername@yourserver', password: 'yourpassword',\n    host: 'yourserver.database.chinacloudapi.cn', port: 1433,\n    database: 'AdventureWorks', azure:true\n    results = client.execute(\"SELECT c.CustomerID, c.CompanyName,COUNT(soh.SalesOrderID) AS OrderCount FROM SalesLT.Customer AS c LEFT OUTER JOIN SalesLT.SalesOrderHeader AS soh ON c.CustomerID = soh.CustomerID GROUP BY c.CustomerID, c.CompanyName ORDER BY OrderCount DESC\")\n    results.each do |row|\n    puts row\n    end\n\n## 步骤 4：插入行\n\n在本示例中，你将了解如何安全地执行 [INSERT](https://msdn.microsoft.com/zh-cn/library/ms174335.aspx) 语句，传递参数以保护应用程序免遭 [SQL 注入](https://technet.microsoft.com/zh-cn/library/ms161953(v=sql.105).aspx) 漏洞的危害，然后检索自动生成的[主键](https://msdn.microsoft.com/zh-cn/library/ms179610.aspx)值。\n\n若要配合使用 TinyTDS 和 Azure，建议你运行多个 `SET` 语句来更改当前会话处理特定信息的方式。建议使用代码示例中所提供的 `SET` 语句。例如，即使未显式指定列的可为 null 状态，`SET ANSI_NULL_DFLT_ON` 也可以让你创建新列来允许 null 值。\n\n为了符合 Microsoft SQL Server [日期时间](http://msdn.microsoft.com/zh-cn/library/ms187819.aspx)格式，请使用 [strftime](http://ruby-doc.org/core-2.2.0/Time.html#method-i-strftime) 函数转换成对应的日期时间格式。\n\n    require 'tiny_tds'\n    client = TinyTds::Client.new username: 'yourusername@yourserver', password: 'yourpassword',\n    host: 'yourserver.database.chinacloudapi.cn', port: 1433,\n    database: 'AdventureWorks', azure:true\n    results = client.execute(\"SET ANSI_NULLS ON\")\n    results = client.execute(\"SET CURSOR_CLOSE_ON_COMMIT OFF\")\n    results = client.execute(\"SET ANSI_NULL_DFLT_ON ON\")\n    results = client.execute(\"SET IMPLICIT_TRANSACTIONS OFF\")\n    results = client.execute(\"SET ANSI_PADDING ON\")\n    results = client.execute(\"SET QUOTED_IDENTIFIER ON\")\n    results = client.execute(\"SET ANSI_WARNINGS ON\")\n    results = client.execute(\"SET CONCAT_NULL_YIELDS_NULL ON\")\n    require 'date'\n    t = Time.now\n    curr_date = t.strftime(\"%Y-%m-%d %H:%M:%S.%L\")\n    results = client.execute(\"INSERT SalesLT.Product (Name, ProductNumber, StandardCost, ListPrice, SellStartDate)\n    OUTPUT INSERTED.ProductID VALUES ('SQL Server Express New', 'SQLEXPRESS New', 0, 0, '#{curr_date}' )\")\n    results.each do |row|\n    puts row\n    end\n\n<!---HONumber=Mooncake_0118_2016-->\n"
}