{
  "nodes": [
    {
      "content": "使用 Azure 创建 LAMP 堆栈 | Azure",
      "pos": [
        27,
        54
      ]
    },
    {
      "content": "了解如何在 Azure 中使用运行 Linux 的 Azure 虚拟机 (VM) 创建 LAMP 堆栈。",
      "pos": [
        73,
        125
      ]
    },
    {
      "content": "如何使用 Azure 创建 LAMP 堆栈",
      "pos": [
        408,
        429
      ]
    },
    {
      "content": "“LAMP”堆栈是一组开源软件，通常一起安装，使服务器可以托管动态网站和 Web 应用程序。此术语实际上首字母缩写词，表示带 Apache Web 服务器的 Linux 操作系统。站点数据将存储在 MySQL 数据库中，而动态内容将由 PHP 进行处理。",
      "pos": [
        431,
        558
      ]
    },
    {
      "pos": [
        560,
        643
      ],
      "content": "[AZURE.INCLUDE <bpt id=\"p1\">[</bpt>了解部署模型<ept id=\"p1\">](../includes/learn-about-deployment-models-both-include.md)</ept>]"
    },
    {
      "content": "在本指南中，我们将获取 Linux 映像上安装的 LAMP 堆栈，并将其部署在 Azure 上。",
      "pos": [
        646,
        694
      ]
    },
    {
      "content": "你将学习以下内容：",
      "pos": [
        696,
        705
      ]
    },
    {
      "content": "如何创建 Azure 虚拟机。",
      "pos": [
        711,
        726
      ]
    },
    {
      "content": "如何准备用于 LAMP 堆栈的虚拟机。",
      "pos": [
        731,
        750
      ]
    },
    {
      "content": "如何安装虚拟机上的 LAMP 服务器所需的软件。",
      "pos": [
        755,
        779
      ]
    },
    {
      "pos": [
        781,
        861
      ],
      "content": "假定读者已拥有 Azure 订阅。如果没有，你可以在 <bpt id=\"p1\">[</bpt>https://www.azure.cn/<ept id=\"p1\">](/pricing/1rmb-trial/)</ept> 中注册试用版。"
    },
    {
      "pos": [
        863,
        1021
      ],
      "content": "如果你已有虚拟机，并且只想查找在不同 linux 分发上安装 LAMP 堆栈的基础知识，则除了本主题外，还可以参阅<bpt id=\"p1\">[</bpt>在 Azure 中的 Linux 虚拟机上安装 LAMP 堆栈<ept id=\"p1\">](/documentation/articles/virtual-machines-linux-install-lamp-stack)</ept>。"
    },
    {
      "content": "阶段 1：创建映像",
      "pos": [
        1026,
        1035
      ]
    },
    {
      "content": "在此阶段中，你将在 Azure 中使用 Linux 映像创建虚拟机。",
      "pos": [
        1036,
        1070
      ]
    },
    {
      "content": "步骤 1：生成 SSH 身份验证密钥",
      "pos": [
        1075,
        1093
      ]
    },
    {
      "content": "SSH 是面向系统管理员的重要工具。但是，依赖于人工确定的密码来确保安全并不总是明智的做法。使用强 SSH 密钥，可让远程访问保持打开状态，而无需担心密码。此方法包括使用非对称加密进行身份验证。用户的私钥是授予身份验证的密钥。你甚至可以锁定用户的帐户，以完全禁止密码身份验证。",
      "pos": [
        1094,
        1232
      ]
    },
    {
      "content": "按照下列步骤进行操作可生成 SSH 身份验证密钥。",
      "pos": [
        1234,
        1259
      ]
    },
    {
      "pos": [
        1265,
        1412
      ],
      "content": "从 <bpt id=\"p1\">[</bpt>http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html<ept id=\"p1\">](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html)</ept> 下载并安装 puttygen"
    },
    {
      "content": "运行 puttygen.exe。",
      "pos": [
        1417,
        1433
      ]
    },
    {
      "content": "单击<bpt id=\"p1\">**</bpt>“生成”<ept id=\"p1\">**</ept>按钮以生成密钥。在此过程中，可以通过将鼠标放在窗口中的空白区域上来增加随机性。",
      "pos": [
        1438,
        1487
      ]
    },
    {
      "content": "在生成过程结束后，puttygen.exe 将显示生成的密钥。例如：",
      "pos": [
        1501,
        1535
      ]
    },
    {
      "pos": [
        1549,
        1639
      ],
      "content": "在<bpt id=\"p1\">**</bpt>“密钥”<ept id=\"p1\">**</ept>中选择并复制公钥，并将它保存在一个名为 <bpt id=\"p2\">**</bpt>publicKey.pem<ept id=\"p2\">**</ept> 的文件中。不要单击<bpt id=\"p3\">**</bpt>“保存公钥”<ept id=\"p3\">**</ept>，因为保存的公钥的文件格式不同于我们所需的公钥。"
    },
    {
      "pos": [
        1644,
        1690
      ],
      "content": "单击<bpt id=\"p1\">**</bpt>“保存私钥”<ept id=\"p1\">**</ept>，并将其保存到名为 <bpt id=\"p2\">**</bpt>privateKey.ppk<ept id=\"p2\">**</ept> 的文件中。"
    },
    {
      "content": "步骤 2：在 Azure 门户中创建映像。",
      "pos": [
        1695,
        1716
      ]
    },
    {
      "content": "在 <bpt id=\"p1\">[</bpt>Azure 门户<ept id=\"p1\">](https://manage.windowsazure.cn/)</ept>中，单击任务栏中的<bpt id=\"p2\">**</bpt>“新建”<ept id=\"p2\">**</ept>，按照这些说明创建映像，并根据你的需要选择 Linux 映像。此示例使用 Ubuntu 14.04 映像。",
      "pos": [
        1717,
        1832
      ]
    },
    {
      "pos": [
        1842,
        1961
      ],
      "content": "对于<bpt id=\"p1\">**</bpt>“主机名”<ept id=\"p1\">**</ept>，指定你的 Internet 客户端将用于访问此虚拟机的 URL 的名称。定义 DNS 名称的最后部分（例如 LAMPDemo），Azure 将生成 Lampdemo.chinacloudapp.cn 作为 URL。"
    },
    {
      "pos": [
        1963,
        1992
      ],
      "content": "对于<bpt id=\"p1\">**</bpt>“用户名”<ept id=\"p1\">**</ept>，选取稍后将用于登录到虚拟机的名称。"
    },
    {
      "pos": [
        1994,
        2063
      ],
      "content": "对于<bpt id=\"p1\">**</bpt>“SSH 身份验证密钥”<ept id=\"p1\">**</ept>，从 <bpt id=\"p2\">**</bpt>publicKey.pem<ept id=\"p2\">**</ept> 文件中复制密钥值，其中包含由 puttygen 生成的公钥。"
    },
    {
      "pos": [
        2073,
        2097
      ],
      "content": "根据需要配置其他设置，然后单击<bpt id=\"p1\">**</bpt>“创建”<ept id=\"p1\">**</ept>。"
    },
    {
      "content": "阶段 2：准备用于 LAMP 堆栈的虚拟机",
      "pos": [
        2101,
        2122
      ]
    },
    {
      "content": "在此阶段中，将为 Web 流量配置终结点，然后连接到新的虚拟机。",
      "pos": [
        2123,
        2155
      ]
    },
    {
      "content": "步骤 1：打开 HTTP 端口，以允许 Web 访问",
      "pos": [
        2160,
        2186
      ]
    },
    {
      "content": "Azure 中的终结点由协议（TCP 或 UDP）以及公用和专用端口组成。专用端口是服务侦听虚拟机的端口。公用端口是 Azure 云服务从外部侦听基于 Internet 的通信的端口。在某些情况下，这是同一端口号。",
      "pos": [
        2187,
        2294
      ]
    },
    {
      "content": "TCP 端口 80 是 Apache 侦听的默认端口号。使用 Azure 终结点打开此端口将允许你和其他 Internet 客户端访问 Apache Web 服务器。",
      "pos": [
        2296,
        2379
      ]
    },
    {
      "content": "在 Azure 门户中，单击“浏览”-&gt;“虚拟机”，然后单击你创建的虚拟机。",
      "pos": [
        2381,
        2419
      ]
    },
    {
      "pos": [
        2429,
        2457
      ],
      "content": "若要将终结点添加到虚拟机，请单击<bpt id=\"p1\">**</bpt>“终结点”<ept id=\"p1\">**</ept> 框。"
    },
    {
      "pos": [
        2467,
        2503
      ],
      "content": "单击<bpt id=\"p1\">**</bpt>“添加”<ept id=\"p1\">**</ept>。在设置新的虚拟机时，可以根据需要启用或禁用终结点。"
    },
    {
      "content": "配置终结点：",
      "pos": [
        2505,
        2511
      ]
    },
    {
      "pos": [
        2517,
        2537
      ],
      "content": "在<bpt id=\"p1\">**</bpt>“终结点”<ept id=\"p1\">**</ept>中键入终结点的名称。"
    },
    {
      "pos": [
        2542,
        2608
      ],
      "content": "在<bpt id=\"p1\">**</bpt>“公用端口”<ept id=\"p1\">**</ept>中键入 80。如果你更改了 Apache 的默认侦听端口，则应将专用端口更新为与 Apache 侦听端口相同。"
    },
    {
      "pos": [
        2613,
        2840
      ],
      "content": "在<bpt id=\"p1\">**</bpt>“公用端口”<ept id=\"p1\">**</ept>中键入 80。默认情况下，HTTP 通信使用端口 80。如果将其设置为 80，则无需在 URL 中包括端口号即可允许你访问 Apache Web 服务。例如，http://lampdemo.chinacloudapp.cn。如果将 Apache 侦听端口设为另一个值（例如 81），则需要将端口号添加到 URL 中才能访问 Apache Web 服务。例如，http://lampdemo.chinacloudapp.cn:81/。"
    },
    {
      "pos": [
        2850,
        2874
      ],
      "content": "单击<bpt id=\"p1\">**</bpt>“确定”<ept id=\"p1\">**</ept>将该终结点添加到你的虚拟机。"
    },
    {
      "content": "步骤 2：连接到你创建的映像",
      "pos": [
        2882,
        2896
      ]
    },
    {
      "content": "你可以选择用于连接到新虚拟机的任何 SSH 工具。在此示例中，我们使用 Putty。",
      "pos": [
        2897,
        2939
      ]
    },
    {
      "pos": [
        2941,
        3037
      ],
      "content": "首先，从 Azure 门户获取你的虚拟机的 DNS 名称。依次单击<bpt id=\"p1\">**</bpt>“浏览”-&gt;“虚拟机”-&gt;<ept id=\"p1\">**</ept>、你的虚拟机的名称<bpt id=\"p2\">**</bpt>-&gt;“属性”<ept id=\"p2\">**</ept>，然后查看<bpt id=\"p3\">**</bpt>“属性”<ept id=\"p3\">**</ept>磁贴的<bpt id=\"p4\">**</bpt>“域名”<ept id=\"p4\">**</ept>字段。"
    },
    {
      "pos": [
        3039,
        3073
      ],
      "content": "从 <bpt id=\"p1\">**</bpt>SSH<ept id=\"p1\">**</ept> 字段获取 SSH 连接的端口号。下面是一个示例。"
    },
    {
      "pos": [
        3083,
        3120
      ],
      "content": "从<bpt id=\"p1\">[</bpt>此处<ept id=\"p1\">](http://www.putty.org/)</ept>下载 Putty。"
    },
    {
      "content": "下载后，单击可执行文件 PUTTY.EXE。使用从虚拟机的属性获取的主机名和端口号配置基本选项。下面是一个示例：",
      "pos": [
        3122,
        3178
      ]
    },
    {
      "pos": [
        3188,
        3304
      ],
      "content": "在左窗格中，单击<bpt id=\"p1\">**</bpt>“连接”-&gt; SSH-&gt;“身份验证”<ept id=\"p1\">**</ept>，然后单击<bpt id=\"p2\">**</bpt>“浏览”<ept id=\"p2\">**</ept>以指定 <bpt id=\"p3\">**</bpt>privateKey.ppk<ept id=\"p3\">**</ept> 文件（其中包含在“第 1 阶段：创建映像”中 puttygen 生成的私钥）的位置。下面是一个示例："
    },
    {
      "pos": [
        3315,
        3373
      ],
      "content": "单击<bpt id=\"p1\">**</bpt>“打开”<ept id=\"p1\">**</ept>。此时可能会通过一个消息框提醒你。如果你已正确配置 DNS 名称和端口号，请单击<bpt id=\"p2\">**</bpt>“是”<ept id=\"p2\">**</ept>。"
    },
    {
      "content": "你应该会看到以下内容。",
      "pos": [
        3385,
        3396
      ]
    },
    {
      "content": "输入在“第 1 阶段：创建映像”中创建虚拟机时指定的用户名。你将看到如下内容：",
      "pos": [
        3407,
        3446
      ]
    },
    {
      "content": "第 3 阶段：安装 LAMP 堆栈",
      "pos": [
        3459,
        3476
      ]
    },
    {
      "content": "根据用于创建虚拟机的 Linux 分发，有不同方法可安装 LAMP 堆栈。以下部分包含针对一些常见 Linux 操作系统的典型步骤。",
      "pos": [
        3478,
        3544
      ]
    },
    {
      "content": "Red Hat、CentOS base",
      "pos": [
        3549,
        3568
      ]
    },
    {
      "content": "安装 Apache",
      "pos": [
        3574,
        3583
      ]
    },
    {
      "content": "若要安装 Apache，请打开终端并执行此命令：",
      "pos": [
        3584,
        3608
      ]
    },
    {
      "content": "安装后，使用此命令启动 Apache：",
      "pos": [
        3638,
        3657
      ]
    },
    {
      "content": "测试 Apache",
      "pos": [
        3693,
        3702
      ]
    },
    {
      "content": "若要检查 Apache 是否已成功安装，请浏览到 Apache 服务器的 DNS 名称（对于本文中的示例 URL，为 http://lampdemo.chinacloudapp.cn/)。 该页应显示单词“It works!”",
      "pos": [
        3703,
        3816
      ]
    },
    {
      "content": "故障排除",
      "pos": [
        3830,
        3834
      ]
    },
    {
      "content": "如果 Apache 正在运行，但你看不到上面的 Apache 默认页，则需要检查以下项：",
      "pos": [
        3835,
        3879
      ]
    },
    {
      "content": "Apache Web 服务侦听地址/端口",
      "pos": [
        3885,
        3905
      ]
    },
    {
      "content": "检查 Azure 虚拟机的终结点设置。确保终结点的配置适用。查看本文中“第 1 阶段：创建映像”中的说明。",
      "pos": [
        3914,
        3967
      ]
    },
    {
      "content": "打开 /etc/httpd/conf/httpd.conf，然后搜索字符串“Listen”。确保 Apache 侦听端口与你为终结点配置的专用端口相同。Apache 的默认端口为 80。下面是一个示例。",
      "pos": [
        3976,
        4077
      ]
    },
    {
      "content": "防火墙 iptables 配置，",
      "pos": [
        4392,
        4408
      ]
    },
    {
      "content": "如果你可以在本地主机上看到 Apache 默认页，则问题可能出在 Apache 所侦听的端口被防火墙阻止。可以使用 w3m 工具来浏览 Apache 网页。以下命令安装 w3m 并浏览到 Apache 默认页：",
      "pos": [
        4411,
        4516
      ]
    },
    {
      "content": "如果此问题是由防火墙或 iptables 导致的，请将以下行添加到 /etc/sysconfig/iptables：",
      "pos": [
        4592,
        4650
      ]
    },
    {
      "content": "请注意，只有 https 通信才需要第二行。",
      "pos": [
        4762,
        4784
      ]
    },
    {
      "content": "请确保这些行在全局限制访问权限的所有行上方，如下所示：",
      "pos": [
        4790,
        4817
      ]
    },
    {
      "content": "要使新设置生效，请使用以下命令：",
      "pos": [
        4888,
        4904
      ]
    },
    {
      "content": "安装 MySQL",
      "pos": [
        4944,
        4952
      ]
    },
    {
      "content": "若要安装 MySQL，请打开终端并运行这些命令：",
      "pos": [
        4953,
        4977
      ]
    },
    {
      "content": "在安装过程中，MySQL 将两次要求你提供权限。当你确认这两个查询后，将安装 MySQL。",
      "pos": [
        5044,
        5089
      ]
    },
    {
      "content": "配置 MySQL",
      "pos": [
        5095,
        5103
      ]
    },
    {
      "content": "在安装完成后，可以使用以下项设置 MySQL 根密码：",
      "pos": [
        5104,
        5131
      ]
    },
    {
      "content": "此提示将要求你提供当前根密码。",
      "pos": [
        5180,
        5195
      ]
    },
    {
      "content": "由于你刚安装 MySQL，很可能没有该密码，因此可通过按 ENTER 将其留空。",
      "pos": [
        5197,
        5237
      ]
    },
    {
      "content": "系统将提示你设置根密码。继续操作并选择 Y，然后按照说明进行操作。",
      "pos": [
        5345,
        5378
      ]
    },
    {
      "content": "CentOS 将自动执行设置 MySQL 的过程，询问你一系列 yes 或 no 问题。这些问题如下所示。为你的配置选择 Y 或 N。在结束时，MySQL 将重新加载并实现新更改。",
      "pos": [
        5380,
        5470
      ]
    },
    {
      "content": "安装 PHP",
      "pos": [
        6764,
        6770
      ]
    },
    {
      "content": "PHP 是广泛用于生成动态网页的开源 Web 脚本语言。",
      "pos": [
        6771,
        6799
      ]
    },
    {
      "content": "若要在虚拟机上安装 PHP，请打开终端并运行此命令：",
      "pos": [
        6801,
        6827
      ]
    },
    {
      "content": "回答“y”以下载软件程序包。然后，回答“y”以导入 GPG 密钥 0xE8562897 \"CentOS-5 密钥（CentOS 5 正式签名密钥）。此时将安装 PHP。",
      "pos": [
        6867,
        6951
      ]
    },
    {
      "content": "Debian、Ubuntu base",
      "pos": [
        7416,
        7434
      ]
    },
    {
      "content": "这已在 Ubuntu 14.04 上进行了测试。",
      "pos": [
        7435,
        7459
      ]
    },
    {
      "content": "Ubuntu 基于 Debian。可以用安装 Red Hat 系列的相同方式来安装 LAMP 堆栈。若要简化步骤，请使用 Tasksel 工具。",
      "pos": [
        7461,
        7533
      ]
    },
    {
      "pos": [
        7535,
        7662
      ],
      "content": "Tasksel 是一个 Debian/Ubuntu 工具，它将多个相关包作为协调任务安装到你的系统中。有关详细信息，请参阅 <bpt id=\"p1\">[</bpt>Tasksel - 社区帮助 Wiki<ept id=\"p1\">](https://help.ubuntu.com/community/Tasksel)</ept>。"
    },
    {
      "content": "使用 Tasksel 安装 LAMP 堆栈所需的软件。",
      "pos": [
        7664,
        7691
      ]
    },
    {
      "content": "若要从存储库中下载程序包列表并更新它们以获取有关最新版本的程序包及其依赖项的信息：",
      "pos": [
        7695,
        7736
      ]
    },
    {
      "content": "若要使用 Tasksel 安装 Ubuntu LAMP 堆栈，请执行以下操作：",
      "pos": [
        7772,
        7811
      ]
    },
    {
      "pos": [
        7894,
        7923
      ],
      "content": "接下来，完成该向导并选择你的 <bpt id=\"p1\">**</bpt>MySQL 根密码<ept id=\"p1\">**</ept>。"
    },
    {
      "content": "在你的服务器上上测试 LAMP",
      "pos": [
        7937,
        7952
      ]
    },
    {
      "content": "可以通过创建 php 快速信息页来测试 LAMP 系统。",
      "pos": [
        7953,
        7981
      ]
    },
    {
      "content": "首先，创建一个新文件：",
      "pos": [
        7983,
        7994
      ]
    },
    {
      "content": "添加以下行：",
      "pos": [
        8036,
        8042
      ]
    },
    {
      "content": "然后，保存并退出。",
      "pos": [
        8079,
        8088
      ]
    },
    {
      "content": "重启 Apache，以便所有更改都在你的计算机上生效。如果你的虚拟机的操作系统是 CentOS，则使用以下命令重启 Apache：",
      "pos": [
        8090,
        8155
      ]
    },
    {
      "content": "如果你的虚拟机的操作系统是 Ubuntu，则使用以下命令重启 Apache：",
      "pos": [
        8189,
        8227
      ]
    },
    {
      "content": "通过浏览到 php 信息页（对于本主题中的示例 Web 服务器，URL 将为 http://lampdemo.chinacloudapp.cn/info.php)）来完成此过程。",
      "pos": [
        8265,
        8354
      ]
    },
    {
      "content": "你的浏览器应如下所示：",
      "pos": [
        8356,
        8367
      ]
    },
    {
      "content": "附加步骤",
      "pos": [
        8380,
        8384
      ]
    },
    {
      "content": "常规做法是，你将更改某些默认设置以准备进行 Web 应用程序部署。",
      "pos": [
        8386,
        8419
      ]
    },
    {
      "content": "允许远程访问 MySQL",
      "pos": [
        8424,
        8436
      ]
    },
    {
      "content": "如果你随 MySQL 一起安装了多个虚拟机，并且这些虚拟机需要交换数据，则应启用 MySQL 远程访问并授予相应权限。",
      "pos": [
        8437,
        8496
      ]
    },
    {
      "content": "命令参考格式：",
      "pos": [
        8500,
        8507
      ]
    },
    {
      "content": "示例：",
      "pos": [
        8620,
        8623
      ]
    },
    {
      "content": "你还应更改 /etc/mysql/my.cnf 配置文件。如果你有如下代码行：",
      "pos": [
        8725,
        8764
      ]
    },
    {
      "content": "应将它们注释掉（在这些行开头添加 #），然后重启 MySQL。",
      "pos": [
        8818,
        8849
      ]
    },
    {
      "content": "若要添加终结点以允许远程访问，请参阅“第 1 阶段：创建映像”中的说明创建新终结点。MySQL 的默认远程访问 TCP 端口号为 3306。下面是一个示例：",
      "pos": [
        8851,
        8929
      ]
    },
    {
      "content": "将 Web 应用程序部署到 Apache 服务器",
      "pos": [
        8943,
        8967
      ]
    },
    {
      "content": "成功安装 LAMP 堆栈后，便可以将现有 Web 应用程序部署到 Apache Web 服务器（你的虚拟机）了。这些步骤与在物理 Web 服务器上部署现有 Web 应用程序的步骤相同。",
      "pos": [
        8968,
        9060
      ]
    },
    {
      "pos": [
        9066,
        9174
      ],
      "content": "Web 服务器的根位于 <bpt id=\"p1\">**</bpt>/var/www/html<ept id=\"p1\">**</ept>。你应向需要将文件上载到此文件夹的用户授予特权。以下示例演示如何将写权限添加到名为 lampappgroup 的组并在此组中放置 azureuser 用户名："
    },
    {
      "pos": [
        9533,
        9579
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>你可能需要重新登录才能修改 /var/www/html/ 中的文件。"
    },
    {
      "content": "使用任何 SFTP 客户端（例如 FileZilla）连接到你的虚拟机（例如，lampdemo.chinacloudapp.cn）的 DNS 名称，并导航到 /<bpt id=\"p1\">**</bpt>var/www/html<ept id=\"p1\">**</ept> 以发布站点。",
      "pos": [
        9584,
        9687
      ]
    },
    {
      "content": "常见问题和故障排除",
      "pos": [
        9703,
        9712
      ]
    },
    {
      "content": "无法通过 Internet 使用 Apache 和 Moodle 访问虚拟机",
      "pos": [
        9717,
        9755
      ]
    },
    {
      "pos": [
        9761,
        9802
      ],
      "content": "<bpt id=\"p1\">**</bpt>症状<ept id=\"p1\">**</ept> Apache 正在运行，但你使用浏览器看不到 Apache 默认页。"
    },
    {
      "content": "可能的根本原因",
      "pos": [
        9809,
        9816
      ]
    },
    {
      "pos": [
        9827,
        10083
      ],
      "content": "Apache 侦听端口与用于 Web 通信的虚拟机终结点的专用端口不同。</br>\n检查你的公用端口和专用端口终结点设置，并确保专用端口与 Apache 侦听端口相同。有关如何为你的虚拟机配置终结点的说明，请参阅“第 1 阶段：创建映像”。</br>\n若要确定 Apache 侦听端口，请打开 /etc/httpd/conf/httpd.conf （Red Hat 发行版）或 /etc/apache2/ports.conf（Debian 发行版），搜索字符串“Listen”。默认端口为 80。",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Apache 侦听端口与用于 Web 通信的虚拟机终结点的专用端口不同。",
          "pos": [
            0,
            36
          ]
        },
        {
          "content": "检查你的公用端口和专用端口终结点设置，并确保专用端口与 Apache 侦听端口相同。有关如何为你的虚拟机配置终结点的说明，请参阅“第 1 阶段：创建映像”。",
          "pos": [
            42,
            120
          ]
        },
        {
          "content": "若要确定 Apache 侦听端口，请打开 /etc/httpd/conf/httpd.conf （Red Hat 发行版）或 /etc/apache2/ports.conf（Debian 发行版），搜索字符串“Listen”。默认端口为 80。",
          "pos": [
            126,
            248
          ]
        }
      ]
    },
    {
      "pos": [
        10093,
        10222
      ],
      "content": "防火墙已禁用 Apache 侦听端口。</br>  \n如果你可以在本地主机上看到 Apache 默认页，则问题很可能出在 Apache 所侦听的端口被防火墙阻止。可以使用 w3m 工具来浏览网页。以下命令安装 w3m 并浏览到 Apache 默认页：",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "防火墙已禁用 Apache 侦听端口。",
          "pos": [
            0,
            19
          ]
        },
        {
          "content": "如果你可以在本地主机上看到 Apache 默认页，则问题很可能出在 Apache 所侦听的端口被防火墙阻止。可以使用 w3m 工具来浏览网页。以下命令安装 w3m 并浏览到 Apache 默认页：",
          "pos": [
            27,
            125
          ]
        }
      ]
    },
    {
      "content": "解决方案",
      "pos": [
        10308,
        10312
      ]
    },
    {
      "content": "如果 Apache 侦听端口与虚拟机上用于 Web 通信的终结点专用端口不同，则需要将终结点专用端口更改为与 Apache 侦听端口相同。",
      "pos": [
        10324,
        10393
      ]
    },
    {
      "content": "如果此问题是由防火墙/iptables 导致的，请将以下行添加到 /etc/sysconfig/iptables：",
      "pos": [
        10402,
        10459
      ]
    },
    {
      "content": "请注意，只有 https 通信才需要第二行。",
      "pos": [
        10585,
        10607
      ]
    },
    {
      "content": "请确保该行在全局限制访问权限的所有行上方，如下所示：",
      "pos": [
        10617,
        10643
      ]
    },
    {
      "content": "若要重新加载 iptables，请运行以下命令：",
      "pos": [
        10722,
        10746
      ]
    },
    {
      "content": "这已在 CentOS 6.3 上进行了测试。",
      "pos": [
        10796,
        10818
      ]
    },
    {
      "content": "将项目文件上载到 /var/www/html/ 时，权限被拒绝",
      "pos": [
        10823,
        10854
      ]
    },
    {
      "content": "症状",
      "pos": [
        10864,
        10866
      ]
    },
    {
      "content": "当你使用任何 SFTP 客户端（例如 FileZilla）连接到虚拟机并导航到 /var/www/html 来发布站点时，你收到如下错误消息：",
      "pos": [
        10871,
        10942
      ]
    },
    {
      "content": "可能的根本原因",
      "pos": [
        11181,
        11188
      ]
    },
    {
      "content": "你无权访问 /var/www/html 文件夹。",
      "pos": [
        11191,
        11215
      ]
    },
    {
      "content": "解决方案",
      "pos": [
        11222,
        11226
      ]
    },
    {
      "content": "你需要获得根帐户权限。你可以将该文件夹的所有权从 root 更改为在设置计算机时使用的用户名。下面是使用 azureuser 帐户名称的示例：",
      "pos": [
        11231,
        11302
      ]
    },
    {
      "content": "也使用 -R 选项对目录内的所有文件应用权限。",
      "pos": [
        11359,
        11382
      ]
    },
    {
      "content": "请注意，此命令也适用于目录。-R 选项可更改目录内的所有文件和目录的权限。下面是一个示例：",
      "pos": [
        11388,
        11433
      ]
    },
    {
      "content": "此命令将更改目录内的所有文件和目录以及目录本身的所有权（用户和组）。",
      "pos": [
        11489,
        11523
      ]
    },
    {
      "content": "以下命令只会更改文件夹目录的权限，但不会更改目录内的文件和文件夹的权限。",
      "pos": [
        11529,
        11565
      ]
    },
    {
      "content": "无法可靠地确定服务器的完全限定域名",
      "pos": [
        11617,
        11634
      ]
    },
    {
      "content": "症状",
      "pos": [
        11642,
        11644
      ]
    },
    {
      "content": "使用以下命令之一重启 Apache 服务器时：",
      "pos": [
        11649,
        11672
      ]
    },
    {
      "content": "或",
      "pos": [
        11742,
        11743
      ]
    },
    {
      "content": "如果你收到以下错误：",
      "pos": [
        11811,
        11821
      ]
    },
    {
      "pos": [
        12126,
        12162
      ],
      "content": "**可能的根本原因**\n你尚未设置 Apache 的服务器名称。",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "可能的根本原因",
          "pos": [
            2,
            9
          ]
        },
        {
          "content": "你尚未设置 Apache 的服务器名称。",
          "pos": [
            12,
            32
          ]
        }
      ]
    },
    {
      "pos": [
        12168,
        12293
      ],
      "content": "**解决方案**  \n在 httpd.conf（Red Hat 发行版）或 apache2.conf（Debian 发行版）的 /etc/apache2 中插入“ServerName localhost”行，并重启 Apache。注意将消失。",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "解决方案",
          "pos": [
            2,
            6
          ]
        },
        {
          "content": "在 httpd.conf（Red Hat 发行版）或 apache2.conf（Debian 发行版）的 /etc/apache2 中插入“ServerName localhost”行，并重启 Apache。注意将消失。",
          "pos": [
            11,
            121
          ]
        }
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"使用 Azure 创建 LAMP 堆栈 | Azure\"\n    description=\"了解如何在 Azure 中使用运行 Linux 的 Azure 虚拟机 (VM) 创建 LAMP 堆栈。\"\n    services=\"virtual-machines\"\n    documentationCenter=\"\"\n    authors=\"NingKuang\"\n    manager=\"timlt\"\n    editor=\"tysonn\"\n    tags=\"azure-service-management,azure-resource-manager\"/>\n\n<tags\n    ms.service=\"virtual-machines\"\n    ms.date=\"12/15/2015\"\n    wacn.date=\"01/29/2016\"/>\n\n#如何使用 Azure 创建 LAMP 堆栈\n\n“LAMP”堆栈是一组开源软件，通常一起安装，使服务器可以托管动态网站和 Web 应用程序。此术语实际上首字母缩写词，表示带 Apache Web 服务器的 Linux 操作系统。站点数据将存储在 MySQL 数据库中，而动态内容将由 PHP 进行处理。\n\n[AZURE.INCLUDE [了解部署模型](../includes/learn-about-deployment-models-both-include.md)]\n\n\n在本指南中，我们将获取 Linux 映像上安装的 LAMP 堆栈，并将其部署在 Azure 上。\n\n你将学习以下内容：\n\n-   如何创建 Azure 虚拟机。\n-   如何准备用于 LAMP 堆栈的虚拟机。\n-   如何安装虚拟机上的 LAMP 服务器所需的软件。\n\n假定读者已拥有 Azure 订阅。如果没有，你可以在 [https://www.azure.cn/](/pricing/1rmb-trial/) 中注册试用版。\n\n如果你已有虚拟机，并且只想查找在不同 linux 分发上安装 LAMP 堆栈的基础知识，则除了本主题外，还可以参阅[在 Azure 中的 Linux 虚拟机上安装 LAMP 堆栈](/documentation/articles/virtual-machines-linux-install-lamp-stack)。\n\n\n##阶段 1：创建映像\n在此阶段中，你将在 Azure 中使用 Linux 映像创建虚拟机。\n\n###步骤 1：生成 SSH 身份验证密钥\nSSH 是面向系统管理员的重要工具。但是，依赖于人工确定的密码来确保安全并不总是明智的做法。使用强 SSH 密钥，可让远程访问保持打开状态，而无需担心密码。此方法包括使用非对称加密进行身份验证。用户的私钥是授予身份验证的密钥。你甚至可以锁定用户的帐户，以完全禁止密码身份验证。\n\n按照下列步骤进行操作可生成 SSH 身份验证密钥。\n\n-   从 [http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html) 下载并安装 puttygen\n-   运行 puttygen.exe。\n-   单击**“生成”**按钮以生成密钥。在此过程中，可以通过将鼠标放在窗口中的空白区域上来增加随机性。  \n![][1]\n-   在生成过程结束后，puttygen.exe 将显示生成的密钥。例如：  \n![][2]\n-   在**“密钥”**中选择并复制公钥，并将它保存在一个名为 **publicKey.pem** 的文件中。不要单击**“保存公钥”**，因为保存的公钥的文件格式不同于我们所需的公钥。\n-   单击**“保存私钥”**，并将其保存到名为 **privateKey.ppk** 的文件中。\n\n###步骤 2：在 Azure 门户中创建映像。\n在 [Azure 门户](https://manage.windowsazure.cn/)中，单击任务栏中的**“新建”**，按照这些说明创建映像，并根据你的需要选择 Linux 映像。此示例使用 Ubuntu 14.04 映像。\n\n![][3]\n\n对于**“主机名”**，指定你的 Internet 客户端将用于访问此虚拟机的 URL 的名称。定义 DNS 名称的最后部分（例如 LAMPDemo），Azure 将生成 Lampdemo.chinacloudapp.cn 作为 URL。\n\n对于**“用户名”**，选取稍后将用于登录到虚拟机的名称。\n\n对于**“SSH 身份验证密钥”**，从 **publicKey.pem** 文件中复制密钥值，其中包含由 puttygen 生成的公钥。\n\n![][4]\n\n根据需要配置其他设置，然后单击**“创建”**。\n\n##阶段 2：准备用于 LAMP 堆栈的虚拟机\n在此阶段中，将为 Web 流量配置终结点，然后连接到新的虚拟机。\n\n###步骤 1：打开 HTTP 端口，以允许 Web 访问\nAzure 中的终结点由协议（TCP 或 UDP）以及公用和专用端口组成。专用端口是服务侦听虚拟机的端口。公用端口是 Azure 云服务从外部侦听基于 Internet 的通信的端口。在某些情况下，这是同一端口号。\n\nTCP 端口 80 是 Apache 侦听的默认端口号。使用 Azure 终结点打开此端口将允许你和其他 Internet 客户端访问 Apache Web 服务器。\n\n在 Azure 门户中，单击“浏览”->“虚拟机”，然后单击你创建的虚拟机。\n\n![][5]\n\n若要将终结点添加到虚拟机，请单击**“终结点”** 框。\n\n![][6]\n\n单击**“添加”**。在设置新的虚拟机时，可以根据需要启用或禁用终结点。\n\n配置终结点：\n\n1.  在**“终结点”**中键入终结点的名称。\n2.  在**“公用端口”**中键入 80。如果你更改了 Apache 的默认侦听端口，则应将专用端口更新为与 Apache 侦听端口相同。\n3.  在**“公用端口”**中键入 80。默认情况下，HTTP 通信使用端口 80。如果将其设置为 80，则无需在 URL 中包括端口号即可允许你访问 Apache Web 服务。例如，http://lampdemo.chinacloudapp.cn。如果将 Apache 侦听端口设为另一个值（例如 81），则需要将端口号添加到 URL 中才能访问 Apache Web 服务。例如，http://lampdemo.chinacloudapp.cn:81/。\n\n![][7]\n\n单击**“确定”**将该终结点添加到你的虚拟机。\n\n\n\n\n###步骤 2：连接到你创建的映像\n你可以选择用于连接到新虚拟机的任何 SSH 工具。在此示例中，我们使用 Putty。\n\n首先，从 Azure 门户获取你的虚拟机的 DNS 名称。依次单击**“浏览”->“虚拟机”->**、你的虚拟机的名称**->“属性”**，然后查看**“属性”**磁贴的**“域名”**字段。\n\n从 **SSH** 字段获取 SSH 连接的端口号。下面是一个示例。\n\n![][8]\n\n从[此处](http://www.putty.org/)下载 Putty。\n\n下载后，单击可执行文件 PUTTY.EXE。使用从虚拟机的属性获取的主机名和端口号配置基本选项。下面是一个示例：\n\n![][9]\n\n在左窗格中，单击**“连接”-> SSH->“身份验证”**，然后单击**“浏览”**以指定 **privateKey.ppk** 文件（其中包含在“第 1 阶段：创建映像”中 puttygen 生成的私钥）的位置。下面是一个示例：\n\n![][10]\n\n单击**“打开”**。此时可能会通过一个消息框提醒你。如果你已正确配置 DNS 名称和端口号，请单击**“是”**。\n\n![][11]\n\n\n你应该会看到以下内容。\n\n![][12]\n\n输入在“第 1 阶段：创建映像”中创建虚拟机时指定的用户名。你将看到如下内容：\n\n![][13]\n\n##第 3 阶段：安装 LAMP 堆栈\n\n根据用于创建虚拟机的 Linux 分发，有不同方法可安装 LAMP 堆栈。以下部分包含针对一些常见 Linux 操作系统的典型步骤。\n\n###Red Hat、CentOS base\n\n####安装 Apache\n若要安装 Apache，请打开终端并执行此命令：\n\n    sudo yum install httpd\n\n安装后，使用此命令启动 Apache：\n\n    sudo service httpd start\n\n####测试 Apache\n若要检查 Apache 是否已成功安装，请浏览到 Apache 服务器的 DNS 名称（对于本文中的示例 URL，为 http://lampdemo.chinacloudapp.cn/)。 该页应显示单词“It works!”\n![][14]\n\n####故障排除\n如果 Apache 正在运行，但你看不到上面的 Apache 默认页，则需要检查以下项：\n\n-   Apache Web 服务侦听地址/端口\n    -   检查 Azure 虚拟机的终结点设置。确保终结点的配置适用。查看本文中“第 1 阶段：创建映像”中的说明。\n    -   打开 /etc/httpd/conf/httpd.conf，然后搜索字符串“Listen”。确保 Apache 侦听端口与你为终结点配置的专用端口相同。Apache 的默认端口为 80。下面是一个示例。  \n\n            ……\n            ......\n                # prevent Apache from glomming onto all bound IP addresses (0.0.0.0)\n                #\n                #Listen 12.34.56.78:80\n                Listen 80\n                #\n                # Dynamic Shared Object (DSO) Support\n            ……\n            ……  \n\n-   防火墙 iptables 配置，  \n如果你可以在本地主机上看到 Apache 默认页，则问题可能出在 Apache 所侦听的端口被防火墙阻止。可以使用 w3m 工具来浏览 Apache 网页。以下命令安装 w3m 并浏览到 Apache 默认页：\n\n        sudo yum  install w3m w3m-img  \n        w3m http://localhost\n\n    如果此问题是由防火墙或 iptables 导致的，请将以下行添加到 /etc/sysconfig/iptables：\n\n        -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT\n        -A INPUT -p tcp -m tcp --dport 443 -j ACCEPT\n\n    请注意，只有 https 通信才需要第二行。\n\n    请确保这些行在全局限制访问权限的所有行上方，如下所示：\n\n        -A INPUT -j REJECT --reject-with icmp-host-prohibited  \n\n    要使新设置生效，请使用以下命令：\n\n        service iptables restart\n\n####安装 MySQL\n若要安装 MySQL，请打开终端并运行这些命令：\n\n    sudo yum install mysql-server\n    sudo service mysqld start\n\n在安装过程中，MySQL 将两次要求你提供权限。当你确认这两个查询后，将安装 MySQL。\n\n####配置 MySQL\n在安装完成后，可以使用以下项设置 MySQL 根密码：\n\n    sudo /usr/bin/mysql_secure_installation  \n\n此提示将要求你提供当前根密码。\n\n由于你刚安装 MySQL，很可能没有该密码，因此可通过按 ENTER 将其留空。\n\n    Enter current password for root (enter for none):\n    OK, successfully used password, moving on...  \n\n系统将提示你设置根密码。继续操作并选择 Y，然后按照说明进行操作。\n\nCentOS 将自动执行设置 MySQL 的过程，询问你一系列 yes 或 no 问题。这些问题如下所示。为你的配置选择 Y 或 N。在结束时，MySQL 将重新加载并实现新更改。\n\n    By default, a MySQL installation has an anonymous user, allowing anyone\n    to log into MySQL without having to have a user account created for\n    them.  This is intended only for testing, and to make the installation\n    go a bit smoother.  You should remove them before moving into a\n    production environment.\n\n    Remove anonymous users? [Y/n] y\n     ... Success!\n\n    Normally, root should only be allowed to connect from 'localhost'.  This\n    ensures that someone cannot guess at the root password from the network.\n\n    Disallow root login remotely? [Y/n] y\n    ... Success!\n\n    By default, MySQL comes with a database named 'test' that anyone can\n    access.  This is also intended only for testing, and should be removed\n    before moving into a production environment.\n\n    Remove test database and access to it? [Y/n] y\n     - Dropping test database...\n     ... Success!\n     - Removing privileges on test database...\n     ... Success!\n\n    Reloading the privilege tables will ensure that all changes made so far\n    will take effect immediately.\n\n    Reload privilege tables now? [Y/n] y\n     ... Success!\n\n    Cleaning up...\n\n    All done!  If you've completed all of the above steps, your MySQL\n    installation should now be secure.\n\n    Thanks for using MySQL!  \n\n####安装 PHP\nPHP 是广泛用于生成动态网页的开源 Web 脚本语言。\n\n若要在虚拟机上安装 PHP，请打开终端并运行此命令：\n\n    sudo yum install php php-mysql  \n\n回答“y”以下载软件程序包。然后，回答“y”以导入 GPG 密钥 0xE8562897 \"CentOS-5 密钥（CentOS 5 正式签名密钥）。此时将安装 PHP。\n\n    warning: rpmts_HdrFromFdno: Header V3 DSA signature: NOKEY, key ID e8562897\n    updates/gpgkey                                                                                                                                                                       | 1.5 kB     00:00\n    Importing GPG key 0xE8562897 \"CentOS-5 Key (CentOS 5 Official Signing Key) <centos-5-key@centos.org>\" from /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5\n    Is this ok [y/N]: y  \n\n###Debian、Ubuntu base\n这已在 Ubuntu 14.04 上进行了测试。\n\nUbuntu 基于 Debian。可以用安装 Red Hat 系列的相同方式来安装 LAMP 堆栈。若要简化步骤，请使用 Tasksel 工具。\n\nTasksel 是一个 Debian/Ubuntu 工具，它将多个相关包作为协调任务安装到你的系统中。有关详细信息，请参阅 [Tasksel - 社区帮助 Wiki](https://help.ubuntu.com/community/Tasksel)。\n\n使用 Tasksel 安装 LAMP 堆栈所需的软件。\n\n- 若要从存储库中下载程序包列表并更新它们以获取有关最新版本的程序包及其依赖项的信息：  \n\n        sudo apt-get update\n-   若要使用 Tasksel 安装 Ubuntu LAMP 堆栈，请执行以下操作：  \n\n        sudo apt-get install tasksel\n        sudo tasksel install lamp-server\n\n接下来，完成该向导并选择你的 **MySQL 根密码**。\n\n![][15]\n\n\n##在你的服务器上上测试 LAMP\n可以通过创建 php 快速信息页来测试 LAMP 系统。\n\n首先，创建一个新文件：\n\n    sudo nano /var/www/html/info.php  \n\n添加以下行：\n\n    <?php\n    phpinfo();\n    ?>  \n\n然后，保存并退出。\n\n重启 Apache，以便所有更改都在你的计算机上生效。如果你的虚拟机的操作系统是 CentOS，则使用以下命令重启 Apache：\n\n    sudo service httpd restart\n\n如果你的虚拟机的操作系统是 Ubuntu，则使用以下命令重启 Apache：\n\n    sudo service apache2 restart  \n\n通过浏览到 php 信息页（对于本主题中的示例 Web 服务器，URL 将为 http://lampdemo.chinacloudapp.cn/info.php)）来完成此过程。\n\n你的浏览器应如下所示：\n\n![][16]\n\n##附加步骤\n\n常规做法是，你将更改某些默认设置以准备进行 Web 应用程序部署。\n\n###允许远程访问 MySQL\n如果你随 MySQL 一起安装了多个虚拟机，并且这些虚拟机需要交换数据，则应启用 MySQL 远程访问并授予相应权限。\n\n**命令参考格式：**\n\n    grant [authority] on [databaseName].[tableName] to [username]@[login host] identified by \"[passwd]\"  \n\n**示例：**\n\n    grant select,insert,update,delete on studentManage.student to user1@\"%\" Identified by \"abc\";\n\n你还应更改 /etc/mysql/my.cnf 配置文件。如果你有如下代码行：\n\n    skip-networking\n    bind-address = 127.0.0.1  \n\n应将它们注释掉（在这些行开头添加 #），然后重启 MySQL。\n\n若要添加终结点以允许远程访问，请参阅“第 1 阶段：创建映像”中的说明创建新终结点。MySQL 的默认远程访问 TCP 端口号为 3306。下面是一个示例：\n\n![][17]\n\n###将 Web 应用程序部署到 Apache 服务器\n成功安装 LAMP 堆栈后，便可以将现有 Web 应用程序部署到 Apache Web 服务器（你的虚拟机）了。这些步骤与在物理 Web 服务器上部署现有 Web 应用程序的步骤相同。\n\n-   Web 服务器的根位于 **/var/www/html**。你应向需要将文件上载到此文件夹的用户授予特权。以下示例演示如何将写权限添加到名为 lampappgroup 的组并在此组中放置 azureuser 用户名：  \n\n        sudo groupadd lampappgroup                      # Create a group\n        sudo gpasswd -a azureuser lampappgroup    # Add azureuser to lampappgroup\n        sudo chgrp lampappgroup /var/www/html/  # Change the ownership to group lampappgroup\n        sudo chmod g+w /var/www/html/                 # grant write permission to group lampappgroup\n\n    >[AZURE.NOTE]你可能需要重新登录才能修改 /var/www/html/ 中的文件。\n-   使用任何 SFTP 客户端（例如 FileZilla）连接到你的虚拟机（例如，lampdemo.chinacloudapp.cn）的 DNS 名称，并导航到 /**var/www/html** 以发布站点。  \n![][18]\n\n\n\n##常见问题和故障排除\n\n###无法通过 Internet 使用 Apache 和 Moodle 访问虚拟机\n\n-   **症状** Apache 正在运行，但你使用浏览器看不到 Apache 默认页。\n-   **可能的根本原因**\n    1.  Apache 侦听端口与用于 Web 通信的虚拟机终结点的专用端口不同。</br>\n    检查你的公用端口和专用端口终结点设置，并确保专用端口与 Apache 侦听端口相同。有关如何为你的虚拟机配置终结点的说明，请参阅“第 1 阶段：创建映像”。</br>\n    若要确定 Apache 侦听端口，请打开 /etc/httpd/conf/httpd.conf （Red Hat 发行版）或 /etc/apache2/ports.conf（Debian 发行版），搜索字符串“Listen”。默认端口为 80。\n\n    2.  防火墙已禁用 Apache 侦听端口。</br>  \n    如果你可以在本地主机上看到 Apache 默认页，则问题很可能出在 Apache 所侦听的端口被防火墙阻止。可以使用 w3m 工具来浏览网页。以下命令安装 w3m 并浏览到 Apache 默认页：  \n\n            sudo yum  install w3m w3m-img\n            w3m http://localhost\n\n-   **解决方案**\n\n    1.  如果 Apache 侦听端口与虚拟机上用于 Web 通信的终结点专用端口不同，则需要将终结点专用端口更改为与 Apache 侦听端口相同。\n    2.  如果此问题是由防火墙/iptables 导致的，请将以下行添加到 /etc/sysconfig/iptables：  \n\n            -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT\n            -A INPUT -p tcp -m tcp --dport 443 -j ACCEPT\n\n        请注意，只有 https 通信才需要第二行。\n\n        请确保该行在全局限制访问权限的所有行上方，如下所示：\n\n            -A INPUT -j REJECT --reject-with icmp-host-prohibited  \n\n        若要重新加载 iptables，请运行以下命令：\n\n            service iptables restart  \n\n        这已在 CentOS 6.3 上进行了测试。\n\n###将项目文件上载到 /var/www/html/ 时，权限被拒绝  \n\n-   **症状**  \n当你使用任何 SFTP 客户端（例如 FileZilla）连接到虚拟机并导航到 /var/www/html 来发布站点时，你收到如下错误消息：  \n\n        status: Listing directory /var/www/html\n        Command:    put \"C:\\Users\\liang\\Desktop\\info.php\" \"info.php\"\n        Error:  /var/www/html/info.php: open for write: permission denied\n        Error:  File transfer failed\n\n-   **可能的根本原因**\n你无权访问 /var/www/html 文件夹。\n-   **解决方案**  \n你需要获得根帐户权限。你可以将该文件夹的所有权从 root 更改为在设置计算机时使用的用户名。下面是使用 azureuser 帐户名称的示例：  \n\n        sudo chown azureuser -R /var/www/html  \n\n    也使用 -R 选项对目录内的所有文件应用权限。\n\n    请注意，此命令也适用于目录。-R 选项可更改目录内的所有文件和目录的权限。下面是一个示例：\n\n        sudo chown -R username:group directory  \n\n    此命令将更改目录内的所有文件和目录以及目录本身的所有权（用户和组）。\n\n    以下命令只会更改文件夹目录的权限，但不会更改目录内的文件和文件夹的权限。\n\n        sudo chown username:group directory  \n\n###无法可靠地确定服务器的完全限定域名\n\n-   **症状**  \n使用以下命令之一重启 Apache 服务器时：  \n\n        sudo /etc/init.d/apache2 restart  # Debian release  \n\n    或\n\n        sudo /etc/init.d/httpd restart   # Red Hat release  \n\n    如果你收到以下错误：\n\n        Restarting web server apache2\n        apache2: Could not reliably determine the server's fully qualified domain name, using 127.0.1.1 for ServerName\n        ... waiting apache2:\n        Could not reliably determine the server's fully qualified domain name, using 127.0.1.1 for ServerName  \n\n-   **可能的根本原因**\n    你尚未设置 Apache 的服务器名称。\n\n-   **解决方案**  \n    在 httpd.conf（Red Hat 发行版）或 apache2.conf（Debian 发行版）的 /etc/apache2 中插入“ServerName localhost”行，并重启 Apache。注意将消失。\n\n\n\n[1]: ./media/virtual-machines-linux-create-lamp-stack/virtual-machines-linux-create-lamp-stack-01.png\n[2]: ./media/virtual-machines-linux-create-lamp-stack/virtual-machines-linux-create-lamp-stack-02.png\n[3]: ./media/virtual-machines-linux-create-lamp-stack/virtual-machines-linux-create-lamp-stack-03.png\n[4]: ./media/virtual-machines-linux-create-lamp-stack/virtual-machines-linux-create-lamp-stack-04.png\n[5]: ./media/virtual-machines-linux-create-lamp-stack/virtual-machines-linux-create-lamp-stack-05.png\n[6]: ./media/virtual-machines-linux-create-lamp-stack/virtual-machines-linux-create-lamp-stack-06.png\n[7]: ./media/virtual-machines-linux-create-lamp-stack/virtual-machines-linux-create-lamp-stack-07.png\n[8]: ./media/virtual-machines-linux-create-lamp-stack/virtual-machines-linux-create-lamp-stack-08.png\n[9]: ./media/virtual-machines-linux-create-lamp-stack/virtual-machines-linux-create-lamp-stack-09.png\n[10]: ./media/virtual-machines-linux-create-lamp-stack/virtual-machines-linux-create-lamp-stack-10.png\n[11]: ./media/virtual-machines-linux-create-lamp-stack/virtual-machines-linux-create-lamp-stack-11.png\n[12]: ./media/virtual-machines-linux-create-lamp-stack/virtual-machines-linux-create-lamp-stack-12.png\n[13]: ./media/virtual-machines-linux-create-lamp-stack/virtual-machines-linux-create-lamp-stack-13.png\n[14]: ./media/virtual-machines-linux-create-lamp-stack/virtual-machines-linux-create-lamp-stack-14.png\n[15]: ./media/virtual-machines-linux-create-lamp-stack/virtual-machines-linux-create-lamp-stack-15.png\n[16]: ./media/virtual-machines-linux-create-lamp-stack/virtual-machines-linux-create-lamp-stack-16.png\n[17]: ./media/virtual-machines-linux-create-lamp-stack/virtual-machines-linux-create-lamp-stack-17.png\n[18]: ./media/virtual-machines-linux-create-lamp-stack/virtual-machines-linux-create-lamp-stack-18.jpg\n\n<!---HONumber=Mooncake_0118_2016-->"
}