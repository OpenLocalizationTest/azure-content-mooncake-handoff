{
  "nodes": [
    {
      "content": "如何通过 Ruby 使用 Blob 存储 | Azure",
      "pos": [
        28,
        56
      ]
    },
    {
      "content": "了解如何使用 Azure Blob 服务上载、下载、列出和删除 Blob 内容。用 Ruby 编写的相关示例。",
      "pos": [
        76,
        131
      ]
    },
    {
      "content": "如何通过 Ruby 使用 Blob 存储",
      "pos": [
        346,
        366
      ]
    },
    {
      "content": "概述",
      "pos": [
        466,
        468
      ]
    },
    {
      "content": "本指南将演示如何使用 Azure Blob 服务执行常见方案。相关示例是使用 Ruby API 编写的。涉及的任务包括“上载”、“列出”、“下载”和“删除”Blob。",
      "pos": [
        470,
        553
      ]
    },
    {
      "content": "创建 Ruby 应用程序",
      "pos": [
        750,
        762
      ]
    },
    {
      "pos": [
        764,
        876
      ],
      "content": "创建 Ruby 应用程序。有关说明，请参阅<bpt id=\"p1\">[</bpt>在 Azure 上创建 Ruby 应用程序<ept id=\"p1\">](/documentation/articles/virtual-machines-ruby-rails-web-app-linux)</ept>。"
    },
    {
      "content": "配置应用程序以访问存储",
      "pos": [
        881,
        892
      ]
    },
    {
      "content": "要使用 Azure 存储空间，你需要下载和使用 Ruby azure 包，其中包括一组便于与存储 REST 服务进行通信的库。",
      "pos": [
        894,
        957
      ]
    },
    {
      "content": "使用 RubyGems 获取该程序包",
      "pos": [
        963,
        981
      ]
    },
    {
      "pos": [
        986,
        1059
      ],
      "content": "使用命令行接口，例如 <bpt id=\"p1\">**</bpt>PowerShell<ept id=\"p1\">**</ept> (Windows)、<bpt id=\"p2\">**</bpt>Terminal<ept id=\"p2\">**</ept> (Mac) 或 <bpt id=\"p3\">**</bpt>Bash<ept id=\"p3\">**</ept> (Unix)。"
    },
    {
      "content": "在命令窗口中键入“gem install azure”以安装 gem 和依赖项。",
      "pos": [
        1064,
        1104
      ]
    },
    {
      "content": "导入包",
      "pos": [
        1110,
        1113
      ]
    },
    {
      "content": "使用常用的文本编辑器将以下内容添加到你要在其中使用存储的 Ruby 文件的顶部：",
      "pos": [
        1115,
        1155
      ]
    },
    {
      "content": "设置 Azure 存储连接",
      "pos": [
        1181,
        1194
      ]
    },
    {
      "pos": [
        1196,
        1356
      ],
      "content": "Azure 模块将读取环境变量 <bpt id=\"p1\">**</bpt>AZURE_STORAGE_ACCOUNT<ept id=\"p1\">**</ept> 和 <bpt id=\"p2\">**</bpt>AZURE_STORAGE_ACCESS_KEY<ept id=\"p2\">**</ept>，以便获取连接到 Azure 存储帐户所需的信息。如果未设置这些环境变量，则在使用 <bpt id=\"p3\">**</bpt>Azure::Blob::BlobService<ept id=\"p3\">**</ept> 之前必须通过以下代码指定帐户信息："
    },
    {
      "content": "获取这些值：",
      "pos": [
        1503,
        1509
      ]
    },
    {
      "pos": [
        1514,
        1564
      ],
      "content": "登录到 <bpt id=\"p1\">[</bpt>Azure 管理门户<ept id=\"p1\">](https://manage.windowsazure.cn/)</ept>。"
    },
    {
      "content": "导航到要使用的存储帐户",
      "pos": [
        1568,
        1579
      ]
    },
    {
      "content": "单击导航窗格底部的“管理密钥”。",
      "pos": [
        1583,
        1599
      ]
    },
    {
      "content": "在弹出对话框中，将会看到存储帐户名称、主访问密钥和辅助访问密钥。对于访问密钥，您可以使用主访问密钥，也可以使用辅助访问密钥。",
      "pos": [
        1603,
        1665
      ]
    },
    {
      "content": "创建容器",
      "pos": [
        1670,
        1674
      ]
    },
    {
      "pos": [
        1789,
        1877
      ],
      "content": "使用 <bpt id=\"p1\">**</bpt>Azure::Blob::BlobService<ept id=\"p1\">**</ept> 对象可以对容器和 Blob 进行操作。若要创建容器，请使用 <bpt id=\"p2\">**</bpt>create_container()<ept id=\"p2\">**</ept> 方法。"
    },
    {
      "content": "以下代码示例创建一个容器或输出存在的错误。",
      "pos": [
        1879,
        1900
      ]
    },
    {
      "content": "若要将容器中的文件设为公用，你可以设置容器的权限。",
      "pos": [
        2072,
        2097
      ]
    },
    {
      "pos": [
        2099,
        2175
      ],
      "content": "只需修改 <ph id=\"ph1\">&lt;strong&gt;</ph>create_container()<ph id=\"ph2\">&lt;/strong&gt;</ph> 调用即可传递 <bpt id=\"p1\">**</bpt>:public_access_level<ept id=\"p1\">**</ept> 选项："
    },
    {
      "pos": [
        2304,
        2337
      ],
      "content": "<bpt id=\"p1\">**</bpt>:public_access_level<ept id=\"p1\">**</ept> 选项的有效值为："
    },
    {
      "pos": [
        2341,
        2411
      ],
      "content": "<bpt id=\"p1\">**</bpt>Blob：<ept id=\"p1\">**</ept>指定对容器和 Blob 数据的完整公共读取权限。客户端可以通过匿名请求枚举容器中的 Blob，但无法枚举存储帐户中的容器。"
    },
    {
      "pos": [
        2415,
        2495
      ],
      "content": "<bpt id=\"p1\">**</bpt>容器：<ept id=\"p1\">**</ept>指定对 Blob 的公共读取权限。可以通过匿名请求读取此容器中的 Blob 数据，但容器数据不可用。客户端无法通过匿名请求枚举容器中的 Blob。"
    },
    {
      "pos": [
        2497,
        2555
      ],
      "content": "另外，还可以通过使用 <bpt id=\"p1\">**</bpt>set_container_acl()<ept id=\"p1\">**</ept> 方法指定公共访问级别来修改容器的公共访问级别。"
    },
    {
      "pos": [
        2557,
        2580
      ],
      "content": "以下代码示例将更改<bpt id=\"p1\">**</bpt>容器<ept id=\"p1\">**</ept>的公共访问级别："
    },
    {
      "content": "将 Blob 上载到容器中",
      "pos": [
        2658,
        2671
      ]
    },
    {
      "pos": [
        2673,
        2744
      ],
      "content": "若要将内容上载到 Blob，请使用 <bpt id=\"p1\">**</bpt>create_block_blob()<ept id=\"p1\">**</ept> 方法创建 Blob，将文件或字符串用作 Blob 的内容。"
    },
    {
      "pos": [
        2747,
        2800
      ],
      "content": "以下代码会将文件 <bpt id=\"p1\">**</bpt>test.png<ept id=\"p1\">**</ept> 作为名为“image-blob”的新 blob 上载到容器中。"
    },
    {
      "content": "列出容器中的 Blob",
      "pos": [
        2981,
        2992
      ]
    },
    {
      "pos": [
        2994,
        3068
      ],
      "content": "若要列出容器，请使用 <bpt id=\"p1\">**</bpt>list_containers()<ept id=\"p1\">**</ept> 方法。若要列出容器中的 Blob，请使用 <bpt id=\"p2\">**</bpt>list_blobs()<ept id=\"p2\">**</ept> 方法。"
    },
    {
      "content": "这将输出帐户的所有容器中的所有 Blog 的 URL。",
      "pos": [
        3070,
        3097
      ]
    },
    {
      "content": "下载 Blob",
      "pos": [
        3320,
        3327
      ]
    },
    {
      "pos": [
        3329,
        3366
      ],
      "content": "若要下载 Blob，请使用 <bpt id=\"p1\">**</bpt>get_blob()<ept id=\"p1\">**</ept> 方法来检索内容。"
    },
    {
      "pos": [
        3369,
        3426
      ],
      "content": "以下代码示例演示了如何使用 <bpt id=\"p1\">**</bpt>get_blob()<ept id=\"p1\">**</ept> 下载“image-blob”的内容并将其写入本地文件中。"
    },
    {
      "content": "删除 Blob",
      "pos": [
        3567,
        3574
      ]
    },
    {
      "pos": [
        3575,
        3632
      ],
      "content": "最后，若要删除 Blob，请使用 <bpt id=\"p1\">**</bpt>delete_blob()<ept id=\"p1\">**</ept> 方法。以下代码示例演示了如何删除 Blob。"
    },
    {
      "content": "后续步骤",
      "pos": [
        3703,
        3707
      ]
    },
    {
      "content": "若要了解有关更复杂存储任务的信息，请访问下面的链接：",
      "pos": [
        3709,
        3735
      ]
    },
    {
      "content": "Azure 存储团队博客",
      "pos": [
        3740,
        3752
      ]
    },
    {
      "pos": [
        3802,
        3888
      ],
      "content": "GitHub 上的 <bpt id=\"p1\">[</bpt>Azure SDK for Ruby<ept id=\"p1\">](https://github.com/WindowsAzure/azure-sdk-for-ruby)</ept> 存储库"
    },
    {
      "content": "使用 AzCopy 命令行实用程序传输数据",
      "pos": [
        3892,
        3913
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"如何通过 Ruby 使用 Blob 存储 | Azure\" \n    description=\"了解如何使用 Azure Blob 服务上载、下载、列出和删除 Blob 内容。用 Ruby 编写的相关示例。\" \n    services=\"storage\" \n    documentationCenter=\"ruby\" \n    authors=\"tfitzmac\" \n    manager=\"wpickett\" \n    editor=\"\"/>\n\n<tags \n    ms.service=\"storage\" \n    ms.date=\"12/16/2015\"\n    wacn.date=\"01/14/2016\"/>\n\n\n# 如何通过 Ruby 使用 Blob 存储\n\n[AZURE.INCLUDE [storage-selector-blob-include](../includes/storage-selector-blob-include.md)]\n\n## 概述\n\n本指南将演示如何使用 Azure Blob 服务执行常见方案。相关示例是使用 Ruby API 编写的。涉及的任务包括“上载”、“列出”、“下载”和“删除”Blob。\n\n[AZURE.INCLUDE [storage-blob-concepts-include](../includes/storage-blob-concepts-include.md)]\n\n[AZURE.INCLUDE [storage-create-account-include](../includes/storage-create-account-include.md)]\n\n## 创建 Ruby 应用程序\n\n创建 Ruby 应用程序。有关说明，请参阅[在 Azure 上创建 Ruby 应用程序](/documentation/articles/virtual-machines-ruby-rails-web-app-linux)。\n\n## 配置应用程序以访问存储\n\n要使用 Azure 存储空间，你需要下载和使用 Ruby azure 包，其中包括一组便于与存储 REST 服务进行通信的库。\n\n### 使用 RubyGems 获取该程序包\n\n1. 使用命令行接口，例如 **PowerShell** (Windows)、**Terminal** (Mac) 或 **Bash** (Unix)。\n\n2. 在命令窗口中键入“gem install azure”以安装 gem 和依赖项。\n\n### 导入包\n\n使用常用的文本编辑器将以下内容添加到你要在其中使用存储的 Ruby 文件的顶部：\n\n    require \"azure\"\n\n## 设置 Azure 存储连接\n\nAzure 模块将读取环境变量 **AZURE_STORAGE_ACCOUNT** 和 **AZURE_STORAGE_ACCESS_KEY**，以便获取连接到 Azure 存储帐户所需的信息。如果未设置这些环境变量，则在使用 **Azure::Blob::BlobService** 之前必须通过以下代码指定帐户信息：\n\n    Azure.config.storage_account_name = \"<your azure storage account>\"\n    Azure.config.storage_access_key = \"<your azure storage access key>\"\n\n\n获取这些值：\n\n1. 登录到 [Azure 管理门户](https://manage.windowsazure.cn/)。\n2. 导航到要使用的存储帐户\n3. 单击导航窗格底部的“管理密钥”。\n4. 在弹出对话框中，将会看到存储帐户名称、主访问密钥和辅助访问密钥。对于访问密钥，您可以使用主访问密钥，也可以使用辅助访问密钥。\n\n## 创建容器\n\n[AZURE.INCLUDE [storage-container-naming-rules-include](../includes/storage-container-naming-rules-include.md)]\n\n使用 **Azure::Blob::BlobService** 对象可以对容器和 Blob 进行操作。若要创建容器，请使用 **create_container()** 方法。\n\n以下代码示例创建一个容器或输出存在的错误。\n\n    azure_blob_service = Azure::Blob::BlobService.new\n    begin\n      container = azure_blob_service.create_container(\"test-container\")\n    rescue\n      puts $!\n    end\n\n若要将容器中的文件设为公用，你可以设置容器的权限。\n\n只需修改 <strong>create_container()</strong> 调用即可传递 **:public_access_level** 选项：\n\n    container = azure_blob_service.create_container(\"test-container\",\n      :public_access_level => \"<public access level>\")\n\n\n**:public_access_level** 选项的有效值为：\n\n* **Blob：**指定对容器和 Blob 数据的完整公共读取权限。客户端可以通过匿名请求枚举容器中的 Blob，但无法枚举存储帐户中的容器。\n\n* **容器：**指定对 Blob 的公共读取权限。可以通过匿名请求读取此容器中的 Blob 数据，但容器数据不可用。客户端无法通过匿名请求枚举容器中的 Blob。\n\n另外，还可以通过使用 **set_container_acl()** 方法指定公共访问级别来修改容器的公共访问级别。\n\n以下代码示例将更改**容器**的公共访问级别：\n\n    azure_blob_service.set_container_acl('test-container', \"container\")\n\n## 将 Blob 上载到容器中\n\n若要将内容上载到 Blob，请使用 **create_block_blob()** 方法创建 Blob，将文件或字符串用作 Blob 的内容。 \n\n以下代码会将文件 **test.png** 作为名为“image-blob”的新 blob 上载到容器中。\n\n    content = File.open(\"test.png\", \"rb\") { |file| file.read }\n    blob = azure_blob_service.create_block_blob(container.name,\n      \"image-blob\", content)\n    puts blob.name\n\n## 列出容器中的 Blob\n\n若要列出容器，请使用 **list_containers()** 方法。若要列出容器中的 Blob，请使用 **list_blobs()** 方法。\n\n这将输出帐户的所有容器中的所有 Blog 的 URL。\n\n    containers = azure_blob_service.list_containers()\n    containers.each do |container|\n      blobs = azure_blob_service.list_blobs(container.name)\n      blobs.each do |blob|\n        puts blob.name\n      end\n    end\n\n## 下载 Blob\n\n若要下载 Blob，请使用 **get_blob()** 方法来检索内容。 \n\n以下代码示例演示了如何使用 **get_blob()** 下载“image-blob”的内容并将其写入本地文件中。\n\n    blob, content = azure_blob_service.get_blob(container.name,\"image-blob\")\n    File.open(\"download.png\",\"wb\") {|f| f.write(content)}\n\n## 删除 Blob\n最后，若要删除 Blob，请使用 **delete_blob()** 方法。以下代码示例演示了如何删除 Blob。\n\n    azure_blob_service.delete_blob(container.name, \"image-blob\")\n\n## 后续步骤\n\n若要了解有关更复杂存储任务的信息，请访问下面的链接：\n\n- [Azure 存储团队博客](http://blogs.msdn.com/b/windowsazurestorage/)\n- GitHub 上的 [Azure SDK for Ruby](https://github.com/WindowsAzure/azure-sdk-for-ruby) 存储库\n- [使用 AzCopy 命令行实用程序传输数据](/documentation/articles/storage-use-azcopy)\n\n<!---HONumber=Mooncake_0104_2016-->"
}