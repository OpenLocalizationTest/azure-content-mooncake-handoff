<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24db62d6218a25fbf7d6d9aad5175aca7fef049e</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>通过使用 Visual Studio 连接服务添加移动服务后开始使用 Javascript 移动应用 | Microsoft Azure</source>
          <target state="new">通过使用 Visual Studio 连接服务添加移动服务后开始使用 Javascript 移动应用 | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>如何在 Visual Studio 中的 JavaScript 项目内开始使用 Azure 移动服务</source>
          <target state="new">如何在 Visual Studio 中的 JavaScript 项目内开始使用 Azure 移动服务</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>通过使用 Visual Studio 连接服务添加 Azure 移动服务后开始使用 Javascript 移动应用</source>
          <target state="new">通过使用 Visual Studio 连接服务添加 Azure 移动服务后开始使用 Javascript 移动应用</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>为了跟踪这些代码，您需要首先执行的步骤取决于您连接的移动服务类型。</source>
          <target state="new">为了跟踪这些代码，您需要首先执行的步骤取决于您连接的移动服务类型。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>对于 JavaScript 后端移动服务，需创建一个名为“TodoItem”表。创建表的方法：在服务器资源管理器中的 Azure node 下定位移动服务，右键单击该移动服务的 Node 打开上下文菜单，然后选择<bpt id="p1">**</bpt>创建表<ept id="p1">**</ept>。输入“TodoItem”作为表名称。</source>
          <target state="new">对于 JavaScript 后端移动服务，需创建一个名为“TodoItem”表。创建表的方法：在服务器资源管理器中的 Azure node 下定位移动服务，右键单击该移动服务的 Node 打开上下文菜单，然后选择<bpt id="p1">**</bpt>创建表<ept id="p1">**</ept>。输入“TodoItem”作为表名称。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>如果您使用的是 .NET 后端移动服务，那么 Visual Studio 为您创建的默认项目模板中已经有一个 TodoItem 表，但您需要将其发布到 Azure。发布方法：在解决方案资源管理器中打开移动服务项目的上下文菜单，然后选择<bpt id="p1">**</bpt>发布 Web<ept id="p1">**</ept>。接受默认设置，然后选择<bpt id="p2">**</bpt>发布<ept id="p2">**</ept>。</source>
          <target state="new">如果您使用的是 .NET 后端移动服务，那么 Visual Studio 为您创建的默认项目模板中已经有一个 TodoItem 表，但您需要将其发布到 Azure。发布方法：在解决方案资源管理器中打开移动服务项目的上下文菜单，然后选择<bpt id="p1">**</bpt>发布 Web<ept id="p1">**</ept>。接受默认设置，然后选择<bpt id="p2">**</bpt>发布<ept id="p2">**</ept>。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>获取对表的引用</source>
          <target state="new">获取对表的引用</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>客户端对象已添加到您的项目。其名称是移动服务的名称，后面附加“Client”。以下代码将获取对表（包含 TodoItem 数据）的引用，您可以将该引用用于后续操作以便读取和更新数据表。</source>
          <target state="new">客户端对象已添加到您的项目。其名称是移动服务的名称，后面附加“Client”。以下代码将获取对表（包含 TodoItem 数据）的引用，您可以将该引用用于后续操作以便读取和更新数据表。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>添加条目</source>
          <target state="new">添加条目</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>将新的项目插入数据表。ID（类型字符串的 GUID）将自动创建为新行的主密钥。不要更改 ID 列的类型，因为移动服务基础结构将使用它。</source>
          <target state="new">将新的项目插入数据表。ID（类型字符串的 GUID）将自动创建为新行的主密钥。不要更改 ID 列的类型，因为移动服务基础结构将使用它。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>读取/查询表</source>
          <target state="new">读取/查询表</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>以下代码将查询表以获取所有项目、更新本地集合并将结果绑定到 UI 元素 listItems。</source>
          <target state="new">以下代码将查询表以获取所有项目、更新本地集合并将结果绑定到 UI 元素 listItems。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>您可以使用 where 方法来修改查询。下面是筛选出已完成项目的示例。</source>
          <target state="new">您可以使用 where 方法来修改查询。下面是筛选出已完成项目的示例。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>有关您可以使用的查询的更多示例，请参阅<bpt id="p1">[</bpt>查询对象<ept id="p1">](http://msdn.microsoft.com/zh-cn/library/azure/jj613353.aspx)</ept>。</source>
          <target state="new">有关您可以使用的查询的更多示例，请参阅<bpt id="p1">[</bpt>查询对象<ept id="p1">](http://msdn.microsoft.com/zh-cn/library/azure/jj613353.aspx)</ept>。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>更新条目</source>
          <target state="new">更新条目</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>更新数据表中的行。在此示例中，<bpt id="p1">*</bpt>todoItem<ept id="p1">*</ept> 是更新的项目，而 <bpt id="p2">*</bpt>item<ept id="p2">*</ept> 是从移动服务中返回的同一项目。移动服务响应时，本地 todoItems 列表中的项目将使用 <bpt id="p3">[</bpt>splice<ept id="p3">](http://msdn.microsoft.com/zh-cn/library/windows/apps/Hh700810.aspx)</ept> 方法进行更新。对返回的 <bpt id="p4">[</bpt>Promise<ept id="p4">](https://msdn.microsoft.com/zh-cn/library/dn802826.aspx)</ept> 对象调用  <bpt id="p5">**</bpt>done<ept id="p5">**</ept> 方法以获取插入对象的副本并处理任何错误。</source>
          <target state="new">更新数据表中的行。在此示例中，<bpt id="p1">*</bpt>todoItem<ept id="p1">*</ept> 是更新的项目，而 <bpt id="p2">*</bpt>item<ept id="p2">*</ept> 是从移动服务中返回的同一项目。移动服务响应时，本地 todoItems 列表中的项目将使用 <bpt id="p3">[</bpt>splice<ept id="p3">](http://msdn.microsoft.com/zh-cn/library/windows/apps/Hh700810.aspx)</ept> 方法进行更新。对返回的 <bpt id="p4">[</bpt>Promise<ept id="p4">](https://msdn.microsoft.com/zh-cn/library/dn802826.aspx)</ept> 对象调用  <bpt id="p5">**</bpt>done<ept id="p5">**</ept> 方法以获取插入对象的副本并处理任何错误。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>删除条目</source>
          <target state="new">删除条目</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>删除数据表中的行。对返回的 <bpt id="p1">[</bpt>Promise<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/dn802826.aspx)</ept> 对象调用 <bpt id="p2">[</bpt>done<ept id="p2">]()</ept> 方法以获取插入对象的副本并处理任何错误。</source>
          <target state="new">删除数据表中的行。对返回的 <bpt id="p1">[</bpt>Promise<ept id="p1">](https://msdn.microsoft.com/zh-cn/library/dn802826.aspx)</ept> 对象调用 <bpt id="p2">[</bpt>done<ept id="p2">]()</ept> 方法以获取插入对象的副本并处理任何错误。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>详细了解移动服务</source>
          <target state="new">详细了解移动服务</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>