{
  "nodes": [
    {
      "content": "Azure 通知中心入门（Kindle 应用）| Winodws Azure",
      "pos": [
        27,
        65
      ]
    },
    {
      "content": "在本教程中，你将了解如何使用 Azure 通知中心将推送通知发送到 Kindle 应用程序。",
      "pos": [
        84,
        130
      ]
    },
    {
      "content": "通知中心入门（Kindle 应用）",
      "pos": [
        352,
        369
      ]
    },
    {
      "content": "概述",
      "pos": [
        486,
        488
      ]
    },
    {
      "content": "本教程演示如何使用 Azure 通知中心将推送通知发送到 Kindle 应用程序。你将创建一个空白 Kindle 应用，它使用 Amazon Device Messaging (ADM) 接收推送通知。",
      "pos": [
        490,
        591
      ]
    },
    {
      "content": "先决条件",
      "pos": [
        595,
        599
      ]
    },
    {
      "content": "本教程需要的内容如下：",
      "pos": [
        601,
        612
      ]
    },
    {
      "pos": [
        616,
        721
      ],
      "content": "从 <ph id=\"ph1\">&lt;a href=\"http://go.microsoft.com/fwlink/?LinkId=389797\"&gt;</ph>Android 站点<ph id=\"ph2\">&lt;/a&gt;</ph>获取 Android SDK（我们假设你要使用 Eclipse）。"
    },
    {
      "pos": [
        724,
        902
      ],
      "content": "按照<ph id=\"ph1\">&lt;a href=\"https://developer.amazon.com/appsandservices/resources/development-tools/ide-tools/tech-docs/01-setting-up-your-development-environment\"&gt;</ph>设置开发环境<ph id=\"ph2\">&lt;/a&gt;</ph>中的步骤设置 Kindle 的开发环境。"
    },
    {
      "content": "向开发人员门户添加新应用程序",
      "pos": [
        906,
        920
      ]
    },
    {
      "pos": [
        925,
        954
      ],
      "content": "首先，请在 <bpt id=\"p1\">[</bpt><ept id=\"p1\">Amazon 开发人员门户]</ept>中创建一个应用。"
    },
    {
      "content": "复制“应用程序密钥”。",
      "pos": [
        971,
        982
      ]
    },
    {
      "content": "在门户中单击应用的名称，然后单击“设备消息”选项卡。",
      "pos": [
        999,
        1025
      ]
    },
    {
      "pos": [
        1042,
        1114
      ],
      "content": "单击“创建新的安全配置文件”，然后创建一个新的安全配置文件（例如 <bpt id=\"p1\">**</bpt>TestAdm security profile<ept id=\"p1\">**</ept>）。然后单击“保存”。"
    },
    {
      "content": "单击“安全配置文件”以查看你刚刚创建的安全配置文件。复制“客户端 ID”和“客户端密码”值以供稍后使用。",
      "pos": [
        1131,
        1183
      ]
    },
    {
      "content": "创建 API 密钥",
      "pos": [
        1200,
        1209
      ]
    },
    {
      "content": "使用管理员特权打开命令提示符。",
      "pos": [
        1214,
        1229
      ]
    },
    {
      "content": "导航到 Android SDK 文件夹。",
      "pos": [
        1233,
        1253
      ]
    },
    {
      "content": "输入以下命令：",
      "pos": [
        1257,
        1264
      ]
    },
    {
      "pos": [
        1358,
        1384
      ],
      "content": "对于“密钥库”密码，请键入 <bpt id=\"p1\">**</bpt>android<ept id=\"p1\">**</ept>。"
    },
    {
      "pos": [
        1390,
        1404
      ],
      "content": "复制 <bpt id=\"p1\">**</bpt>MD5<ept id=\"p1\">**</ept> 指纹。"
    },
    {
      "pos": [
        1409,
        1523
      ],
      "content": "返回到开发人员门户，在“消息”选项卡中，单击“Android/Kindle”，输入应用包的名称（例如 <bpt id=\"p1\">**</bpt>com.sample.notificationhubtest<ept id=\"p1\">**</ept>）和 <bpt id=\"p2\">**</bpt>MD5<ept id=\"p2\">**</ept> 值，然后单击“生成 API 密钥”。"
    },
    {
      "content": "将凭据添加到中心",
      "pos": [
        1528,
        1536
      ]
    },
    {
      "content": "在门户中，将客户端密码和客户端 ID 添加到通知中心的“配置”选项卡。",
      "pos": [
        1538,
        1573
      ]
    },
    {
      "content": "设置应用程序",
      "pos": [
        1578,
        1584
      ]
    },
    {
      "pos": [
        1588,
        1624
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>创建应用程序时，请至少使用 API 级别 17。"
    },
    {
      "content": "将 ADM 库添加到你的 Eclipse 项目：",
      "pos": [
        1626,
        1650
      ]
    },
    {
      "pos": [
        1655,
        1691
      ],
      "content": "若要获取 ADM 库，请<bpt id=\"p1\">[</bpt><ept id=\"p1\">下载 SDK]</ept>。解压缩 SDK zip 文件。"
    },
    {
      "pos": [
        1695,
        1858
      ],
      "content": "在 Eclipse 中右键单击你的项目，然后单击“属性”。在左侧选择“Java 生成路径”，然后选择顶部的“库”选项卡。单击“添加外部 Jar”，并从提取 Amazon SDK 的目录中选择文件 <ph id=\"ph1\">`\\SDK\\Android\\DeviceMessaging\\lib\\amazon-device-messaging-*.jar`</ph>。"
    },
    {
      "content": "下载 NotificationHubs Android SDK（链接）。",
      "pos": [
        1862,
        1898
      ]
    },
    {
      "pos": [
        1902,
        1969
      ],
      "content": "解压缩该包，然后在 Eclipse 中将文件 <ph id=\"ph1\">`notification-hubs-sdk.jar`</ph> 拖放到 <ph id=\"ph2\">`libs`</ph> 文件夹中。"
    },
    {
      "content": "编辑你的应用程序清单以支持 ADM：",
      "pos": [
        1971,
        1989
      ]
    },
    {
      "content": "在根清单元素中添加 Amazon 命名空间：",
      "pos": [
        1994,
        2016
      ]
    },
    {
      "pos": [
        2087,
        2143
      ],
      "content": "在清单元素下添加权限作为第一个元素。将 <bpt id=\"p1\">**</bpt>[YOUR PACKAGE NAME]<ept id=\"p1\">**</ept> 替换为用于创建应用的包。"
    },
    {
      "pos": [
        2826,
        2951
      ],
      "content": "插入以下元素作为应用程序元素的第一个子级。请记得将 <bpt id=\"p1\">**</bpt>[YOUR SERVICE NAME]<ept id=\"p1\">**</ept> 替换为你在下一部分中创建的 ADM 消息处理程序的名称（包括包），并将 <bpt id=\"p2\">**</bpt>[YOUR PACKAGE NAME]<ept id=\"p2\">**</ept> 替换为创建应用时所用的包名称。"
    },
    {
      "content": "创建 ADM 消息处理程序",
      "pos": [
        3969,
        3982
      ]
    },
    {
      "pos": [
        3987,
        4084
      ],
      "content": "创建继承自 <ph id=\"ph1\">`com.amazon.device.messaging.ADMMessageHandlerBase`</ph> 的新类并将其命名为 <ph id=\"ph2\">`MyADMMessageHandler`</ph>，如下图中所示："
    },
    {
      "pos": [
        4102,
        4119
      ],
      "content": "添加以下 <ph id=\"ph1\">`import`</ph> 语句："
    },
    {
      "content": "在创建的类中添加以下代码。请记得替换中心名称和连接字符串 (listen)：",
      "pos": [
        4484,
        4522
      ]
    },
    {
      "pos": [
        6239,
        6266
      ],
      "content": "将以下代码添加到 <ph id=\"ph1\">`OnMessage()`</ph> 方法中："
    },
    {
      "pos": [
        6378,
        6406
      ],
      "content": "将以下代码添加到 <ph id=\"ph1\">`OnRegistered`</ph> 方法中："
    },
    {
      "pos": [
        6638,
        6668
      ],
      "content": "将以下代码添加到 <ph id=\"ph1\">`OnUnregistered`</ph> 方法中："
    },
    {
      "pos": [
        6905,
        6940
      ],
      "content": "在 <ph id=\"ph1\">`MainActivity`</ph> 方法中添加以下 import 语句："
    },
    {
      "pos": [
        7007,
        7032
      ],
      "content": "在 <ph id=\"ph1\">`OnCreate`</ph> 方法的末尾添加以下代码："
    },
    {
      "content": "将 API 密钥添加到应用",
      "pos": [
        7760,
        7773
      ]
    },
    {
      "pos": [
        7778,
        7826
      ],
      "content": "在 Eclipse 中，在项目的目录资产中创建名为 <bpt id=\"p1\">**</bpt>api\\_key.txt<ept id=\"p1\">**</ept> 的新文件。"
    },
    {
      "pos": [
        7830,
        7871
      ],
      "content": "打开该文件，并复制你在 Amazon 开发人员门户中生成的 <bpt id=\"p1\">**</bpt>API 密钥<ept id=\"p1\">**</ept>。"
    },
    {
      "content": "运行应用程序",
      "pos": [
        7876,
        7882
      ]
    },
    {
      "content": "启动模拟器。",
      "pos": [
        7887,
        7893
      ]
    },
    {
      "content": "在模拟器中，从顶部往下轻扫，单击“设置”，然后单击“我的帐户”并使用有效的 Amazon 帐户注册。",
      "pos": [
        7897,
        7947
      ]
    },
    {
      "content": "在 Eclipse 中运行应用程序。",
      "pos": [
        7951,
        7969
      ]
    },
    {
      "pos": [
        7973,
        8075
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>如果出现了问题，请检查模拟器（或设备）的时间。时间值必须准确。若要更改 Kindle 模拟器的时间，可以从 Android SDK platform-tools 目录运行以下命令："
    },
    {
      "content": "发送消息",
      "pos": [
        8126,
        8130
      ]
    },
    {
      "content": "若要使用 .NET 发送消息：",
      "pos": [
        8132,
        8147
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"Azure 通知中心入门（Kindle 应用）| Winodws Azure\"\n    description=\"在本教程中，你将了解如何使用 Azure 通知中心将推送通知发送到 Kindle 应用程序。\"\n    services=\"notification-hubs\"\n    documentationCenter=\"\"\n    authors=\"wesmc7777\"\n    manager=\"dwrede\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"notification-hubs\"\n    ms.date=\"11/04/2015\"\n    wacn.date=\"01/14/2016\"/>\n\n# 通知中心入门（Kindle 应用）\n\n[AZURE.INCLUDE [notification-hubs-selector-get-started](../includes/notification-hubs-selector-get-started.md)]\n\n##概述\n\n本教程演示如何使用 Azure 通知中心将推送通知发送到 Kindle 应用程序。你将创建一个空白 Kindle 应用，它使用 Amazon Device Messaging (ADM) 接收推送通知。\n\n##先决条件\n\n本教程需要的内容如下：\n\n+ 从 <a href=\"http://go.microsoft.com/fwlink/?LinkId=389797\">Android 站点</a>获取 Android SDK（我们假设你要使用 Eclipse）。\n+ 按照<a href=\"https://developer.amazon.com/appsandservices/resources/development-tools/ide-tools/tech-docs/01-setting-up-your-development-environment\">设置开发环境</a>中的步骤设置 Kindle 的开发环境。\n\n##向开发人员门户添加新应用程序\n\n1. 首先，请在 [Amazon 开发人员门户]中创建一个应用。\n\n    ![][0]\n\n2. 复制“应用程序密钥”。\n\n    ![][1]\n\n3. 在门户中单击应用的名称，然后单击“设备消息”选项卡。\n\n    ![][2]\n\n4. 单击“创建新的安全配置文件”，然后创建一个新的安全配置文件（例如 **TestAdm security profile**）。然后单击“保存”。\n\n    ![][3]\n\n5. 单击“安全配置文件”以查看你刚刚创建的安全配置文件。复制“客户端 ID”和“客户端密码”值以供稍后使用。\n\n    ![][4]\n\n## 创建 API 密钥\n\n1. 使用管理员特权打开命令提示符。\n2. 导航到 Android SDK 文件夹。\n3. 输入以下命令：\n\n        keytool -list -v -alias androiddebugkey -keystore ./debug.keystore\n\n    ![][5]\n\n4.  对于“密钥库”密码，请键入 **android**。\n\n5.  复制 **MD5** 指纹。\n6.  返回到开发人员门户，在“消息”选项卡中，单击“Android/Kindle”，输入应用包的名称（例如 **com.sample.notificationhubtest**）和 **MD5** 值，然后单击“生成 API 密钥”。\n\n## 将凭据添加到中心\n\n在门户中，将客户端密码和客户端 ID 添加到通知中心的“配置”选项卡。\n\n## 设置应用程序\n\n> [AZURE.NOTE]创建应用程序时，请至少使用 API 级别 17。\n\n将 ADM 库添加到你的 Eclipse 项目：\n\n1. 若要获取 ADM 库，请[下载 SDK]。解压缩 SDK zip 文件。\n2. 在 Eclipse 中右键单击你的项目，然后单击“属性”。在左侧选择“Java 生成路径”，然后选择顶部的“库”选项卡。单击“添加外部 Jar”，并从提取 Amazon SDK 的目录中选择文件 `\\SDK\\Android\\DeviceMessaging\\lib\\amazon-device-messaging-*.jar`。\n3. 下载 NotificationHubs Android SDK（链接）。\n4. 解压缩该包，然后在 Eclipse 中将文件 `notification-hubs-sdk.jar` 拖放到 `libs` 文件夹中。\n\n编辑你的应用程序清单以支持 ADM：\n\n1. 在根清单元素中添加 Amazon 命名空间：\n\n        xmlns:amazon=\"http://schemas.amazon.com/apk/res/android\"\n\n2. 在清单元素下添加权限作为第一个元素。将 **[YOUR PACKAGE NAME]** 替换为用于创建应用的包。\n\n        <permission\n         android:name=\"[YOUR PACKAGE NAME].permission.RECEIVE_ADM_MESSAGE\"\n         android:protectionLevel=\"signature\" />\n\n        <uses-permission android:name=\"android.permission.INTERNET\"/>\n\n        <uses-permission android:name=\"[YOUR PACKAGE NAME].permission.RECEIVE_ADM_MESSAGE\" />\n\n        <!-- This permission allows your app access to receive push notifications\n        from ADM. -->\n        <uses-permission android:name=\"com.amazon.device.messaging.permission.RECEIVE\" />\n\n        <!-- ADM uses WAKE_LOCK to keep the processor from sleeping when a message is received. -->\n        <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\n\n3. 插入以下元素作为应用程序元素的第一个子级。请记得将 **[YOUR SERVICE NAME]** 替换为你在下一部分中创建的 ADM 消息处理程序的名称（包括包），并将 **[YOUR PACKAGE NAME]** 替换为创建应用时所用的包名称。\n\n        <amazon:enable-feature\n              android:name=\"com.amazon.device.messaging\"\n                     android:required=\"true\"/>\n        <service\n            android:name=\"[YOUR SERVICE NAME]\"\n            android:exported=\"false\" />\n         \n        <receiver\n            android:name=\"[YOUR SERVICE NAME]$Receiver\" />\n         \n            <!-- This permission ensures that only ADM can send your app registration broadcasts. -->\n            android:permission=\"com.amazon.device.messaging.permission.SEND\" >\n         \n            <!-- To interact with ADM, your app must listen for the following intents. -->\n            <intent-filter>\n          <action android:name=\"com.amazon.device.messaging.intent.REGISTRATION\" />\n          <action android:name=\"com.amazon.device.messaging.intent.RECEIVE\" />\n         \n          <!-- Replace the name in the category tag with your app's package name. -->\n          <category android:name=\"[YOUR PACKAGE NAME]\" />\n            </intent-filter>\n        </receiver>\n\n## 创建 ADM 消息处理程序\n\n1. 创建继承自 `com.amazon.device.messaging.ADMMessageHandlerBase` 的新类并将其命名为 `MyADMMessageHandler`，如下图中所示：\n\n    ![][6]\n\n2.  添加以下 `import` 语句：\n\n        import android.app.NotificationManager;\n        import android.app.PendingIntent;\n        import android.content.Context;\n        import android.content.Intent;\n        import android.support.v4.app.NotificationCompat;\n        import com.amazon.device.messaging.ADMMessageReceiver;\n        import com.microsoft.windowsazure.messaging.NotificationHub\n\n3.  在创建的类中添加以下代码。请记得替换中心名称和连接字符串 (listen)：\n\n        public static final int NOTIFICATION_ID = 1;\n        private NotificationManager mNotificationManager;\n        NotificationCompat.Builder builder;\n        private static NotificationHub hub;\n        public static NotificationHub getNotificationHub(Context context) {\n            Log.v(\"com.wa.hellokindlefire\", \"getNotificationHub\");\n            if (hub == null) {\n                hub = new NotificationHub(\"[hub name]\", \"[listen connection string]\", context);\n            }\n            return hub;\n        }\n\n        public MyADMMessageHandler() {\n                super(\"MyADMMessageHandler\");\n            }\n\n            public static class Receiver extends ADMMessageReceiver\n            {\n                public Receiver()\n                {\n                    super(MyADMMessageHandler.class);\n                }\n            }\n\n            private void sendNotification(String msg) {\n                Context ctx = getApplicationContext();\n\n             mNotificationManager = (NotificationManager)\n                    ctx.getSystemService(Context.NOTIFICATION_SERVICE);\n\n            PendingIntent contentIntent = PendingIntent.getActivity(ctx, 0,\n                new Intent(ctx, MainActivity.class), 0);\n\n            NotificationCompat.Builder mBuilder =\n                new NotificationCompat.Builder(ctx)\n                .setSmallIcon(R.mipmap.ic_launcher)\n                .setContentTitle(\"Notification Hub Demo\")\n                .setStyle(new NotificationCompat.BigTextStyle()\n                         .bigText(msg))\n                .setContentText(msg);\n\n            mBuilder.setContentIntent(contentIntent);\n            mNotificationManager.notify(NOTIFICATION_ID, mBuilder.build());\n        }\n\n4. 将以下代码添加到 `OnMessage()` 方法中：\n    \n        String nhMessage = intent.getExtras().getString(\"msg\");\n        sendNotification(nhMessage);\n \n5. 将以下代码添加到 `OnRegistered` 方法中：\n\n            try {\n        getNotificationHub(getApplicationContext()).register(registrationId);\n            } catch (Exception e) {\n        Log.e(\"[your package name]\", \"Fail onRegister: \" + e.getMessage(), e);\n            }\n\n6.  将以下代码添加到 `OnUnregistered` 方法中：\n\n            try {\n                getNotificationHub(getApplicationContext()).unregister();\n            } catch (Exception e) {\n                Log.e(\"[your package name]\", \"Fail onUnregister: \" + e.getMessage(), e);\n            }\n\n7. 在 `MainActivity` 方法中添加以下 import 语句：\n\n        import com.amazon.device.messaging.ADM;             \n\n8. 在 `OnCreate` 方法的末尾添加以下代码：\n\n        final ADM adm = new ADM(this);\n        if (adm.getRegistrationId() == null)\n        {\n           adm.startRegister();\n        } else {\n            new AsyncTask() {\n                  @Override\n                  protected Object doInBackground(Object... params) {\n                     try {                       MyADMMessageHandler.getNotificationHub(getApplicationContext()).register(adm.getRegistrationId());\n                     } catch (Exception e) {\n                         Log.e(\"com.wa.hellokindlefire\", \"Failed registration with hub\", e);\n                         return e;\n                     }\n                     return null;\n                 }\n               }.execute(null, null, null);\n        }\n\n## 将 API 密钥添加到应用\n\n1. 在 Eclipse 中，在项目的目录资产中创建名为 **api\\_key.txt** 的新文件。\n2. 打开该文件，并复制你在 Amazon 开发人员门户中生成的 **API 密钥**。\n\n## 运行应用程序\n\n1. 启动模拟器。\n2. 在模拟器中，从顶部往下轻扫，单击“设置”，然后单击“我的帐户”并使用有效的 Amazon 帐户注册。\n3. 在 Eclipse 中运行应用程序。\n\n> [AZURE.NOTE]如果出现了问题，请检查模拟器（或设备）的时间。时间值必须准确。若要更改 Kindle 模拟器的时间，可以从 Android SDK platform-tools 目录运行以下命令：\n\n        adb shell  date -s \"yyyymmdd.hhmmss\"\n\n## 发送消息\n\n若要使用 .NET 发送消息：\n\n        static void Main(string[] args)\n        {\n            NotificationHubClient hub = NotificationHubClient.CreateClientFromConnectionString(\"[conn string]\", \"[hub name]\");\n\n            hub.SendAdmNativeNotificationAsync(\"{\"data\":{\"msg\" : \"Hello from .NET!\"}}\").Wait();\n        }\n\n![][7]\n\n<!-- URLs. -->\n[Amazon 开发人员门户]: https://developer.amazon.com/home.html\n[下载 SDK]: https://developer.amazon.com/public/resources/development-tools/sdk\n\n[0]: ./media/notification-hubs-kindle-get-started/notification-hub-kindle-portal1.png\n[1]: ./media/notification-hubs-kindle-get-started/notification-hub-kindle-portal2.png\n[2]: ./media/notification-hubs-kindle-get-started/notification-hub-kindle-portal3.png\n[3]: ./media/notification-hubs-kindle-get-started/notification-hub-kindle-portal4.png\n[4]: ./media/notification-hubs-kindle-get-started/notification-hub-kindle-portal5.png\n[5]: ./media/notification-hubs-kindle-get-started/notification-hub-kindle-cmd-window.png\n[6]: ./media/notification-hubs-kindle-get-started/notification-hub-kindle-new-java-class.png\n[7]: ./media/notification-hubs-kindle-get-started/notification-hub-kindle-notification.png\n\n<!---HONumber=Mooncake_0104_2016-->"
}