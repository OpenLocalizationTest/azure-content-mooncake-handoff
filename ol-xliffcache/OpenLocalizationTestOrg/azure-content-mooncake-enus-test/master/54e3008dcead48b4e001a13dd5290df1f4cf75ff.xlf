<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="en-us">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54e3008dcead48b4e001a13dd5290df1f4cf75ff</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>既然需要经过身份验证才能访问 TodoItem 表中的数据，您可以使用移动服务分配的 userID 值来过滤返回的数据。</source>
          <target state="new">既然需要经过身份验证才能访问 TodoItem 表中的数据，您可以使用移动服务分配的 userID 值来过滤返回的数据。</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>[WACOM.NOTE]以下方法要求在"用户"的"授权级别"上应用"AuthorizeLevel"属性。这样可以仅允许经过身份验证的用户访问表。</source>
          <target state="new">[WACOM.NOTE]以下方法要求在"用户"的"授权级别"上应用"AuthorizeLevel"属性。这样可以仅允许经过身份验证的用户访问表。</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>在 Visual Studio 2013 中，打开您的移动服务项目，展开 DataObjects 文件夹，然后打开 TodoItem.cs 项目文件。</source>
          <target state="new">在 Visual Studio 2013 中，打开您的移动服务项目，展开 DataObjects 文件夹，然后打开 TodoItem.cs 项目文件。</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>TodoItem 类定义数据对象，您需要添加用于筛选的 UserId 属性。</source>
          <target state="new">TodoItem 类定义数据对象，您需要添加用于筛选的 UserId 属性。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>将下面的新 UserId 属性添加到 <bpt id="p1">**</bpt>TodoItem<ept id="p1">**</ept> 类：</source>
          <target state="new">将下面的新 UserId 属性添加到 <bpt id="p1">**</bpt>TodoItem<ept id="p1">**</ept> 类：</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>[WACOM.NOTE] 使用默认数据库初始值设定项时，只要实体框架在代码优先模型定义中检测到数据模型更改，它就会删除并重新创建数据库。若要进行此数据模型更改并维护数据库中的现有数据，必须使用代码优先迁移。不能为 Azure 中的 SQL 数据库 使用默认的初始值设定项。有关更多信息，请参阅<bpt id="p1">[</bpt>如何使用代码优先迁移来更新数据模型<ept id="p1">](/zh-cn/documentation/articles/mobile-services-dotnet-backend-how-to-use-code-first-migrations)</ept>。</source>
          <target state="new">[WACOM.NOTE] 使用默认数据库初始值设定项时，只要实体框架在代码优先模型定义中检测到数据模型更改，它就会删除并重新创建数据库。若要进行此数据模型更改并维护数据库中的现有数据，必须使用代码优先迁移。不能为 Azure 中的 SQL 数据库 使用默认的初始值设定项。有关更多信息，请参阅<bpt id="p1">[</bpt>如何使用代码优先迁移来更新数据模型<ept id="p1">](/zh-cn/documentation/articles/mobile-services-dotnet-backend-how-to-use-code-first-migrations)</ept>。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>在"解决方案资源管理器"中，展开 Controllers 文件夹，打开 TodoItemController.cs 项目文件，然后添加下面的 <bpt id="p1">**</bpt>using<ept id="p1">**</ept> 语句：</source>
          <target state="new">在"解决方案资源管理器"中，展开 Controllers 文件夹，打开 TodoItemController.cs 项目文件，然后添加下面的 <bpt id="p1">**</bpt>using<ept id="p1">**</ept> 语句：</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TodoItemController<ept id="p1">**</ept> 类可为 TodoItem 表实现数据访问。</source>
          <target state="new"><bpt id="p1">**</bpt>TodoItemController<ept id="p1">**</ept> 类可为 TodoItem 表实现数据访问。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>找到 <bpt id="p1">**</bpt>PostTodoItem<ept id="p1">**</ept> 方法，并在末尾的 <bpt id="p2">**</bpt>return<ept id="p2">**</ept> 语句之前添加以下代码：</source>
          <target state="new">找到 <bpt id="p1">**</bpt>PostTodoItem<ept id="p1">**</ept> 方法，并在末尾的 <bpt id="p2">**</bpt>return<ept id="p2">**</ept> 语句之前添加以下代码：</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>在将 UserId 值插入 TodoItem 表之前，这段代码将 UserId 值添加到项，该值是经过身份验证的用户的用户 ID。</source>
          <target state="new">在将 UserId 值插入 TodoItem 表之前，这段代码将 UserId 值添加到项，该值是经过身份验证的用户的用户 ID。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>找到 <bpt id="p1">**</bpt>GetAllTodoItems<ept id="p1">**</ept> 方法，并将现有的 <bpt id="p2">**</bpt>return<ept id="p2">**</ept> 语句替换为以下代码行：</source>
          <target state="new">找到 <bpt id="p1">**</bpt>GetAllTodoItems<ept id="p1">**</ept> 方法，并将现有的 <bpt id="p2">**</bpt>return<ept id="p2">**</ept> 语句替换为以下代码行：</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>此查询可筛选返回的 TodoItem 对象，使得每个用户只收到他们插入的项。您可以选择</source>
          <target state="new">此查询可筛选返回的 TodoItem 对象，使得每个用户只收到他们插入的项。您可以选择</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>将移动服务项目重新发布到 Azure。</source>
          <target state="new">将移动服务项目重新发布到 Azure。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>