{
  "nodes": [
    {
      "content": "在 Azure 存储空间中设置和检索对象的属性和元数据 | Azure",
      "pos": [
        26,
        61
      ]
    },
    {
      "content": "在 Azure 存储空间中存储对象的自定义元数据，并设置和检索系统属性。",
      "pos": [
        79,
        115
      ]
    },
    {
      "content": "设置和检索属性与元数据",
      "pos": [
        307,
        318
      ]
    },
    {
      "content": "概述",
      "pos": [
        325,
        327
      ]
    },
    {
      "content": "Azure 存储中的对象支持系统属性和用户定义的元数据，除了该数据以外，它们还包含：",
      "pos": [
        329,
        371
      ]
    },
    {
      "pos": [
        377,
        476
      ],
      "content": "<bpt id=\"p1\">**</bpt>系统属性。<ept id=\"p1\">**</ept> 系统属性存在于每个存储资源上。其中一些属性是可以读取或设置的，而另一些属性是只读的。事实上，有些系统属性与某些标准 HTTP 标头对应。Azure 存储客户端库为您维护这些内容。"
    },
    {
      "pos": [
        484,
        572
      ],
      "content": "<bpt id=\"p1\">**</bpt>用户定义的元数据。<ept id=\"p1\">**</ept> 用户定义的元数据是在给定资源上以名称/值对的形式指定的元数据。您可以使用元数据来存储存储资源其他值；这些值仅用于您个人目的，不会影响资源的行为方式。"
    },
    {
      "pos": [
        574,
        642
      ],
      "content": "检索资源的属性和元数据值的过程分为两步。在可以读取这些值之前，你必须通过调用 <bpt id=\"p1\">**</bpt>FetchAttributes<ept id=\"p1\">**</ept> 方法显式获取它们。"
    },
    {
      "pos": [
        646,
        711
      ],
      "content": "<ph id=\"ph1\">[AZURE.IMPORTANT]</ph> 不会填充存储资源的属性和元数据值，除非调用 <bpt id=\"p1\">**</bpt>FetchAttributes<ept id=\"p1\">**</ept> 方法之一。"
    },
    {
      "content": "设置和检索属性",
      "pos": [
        716,
        723
      ]
    },
    {
      "pos": [
        725,
        781
      ],
      "content": "若要检索属性值，请对 blob 或容器调用 <bpt id=\"p1\">**</bpt>FetchAttributes<ept id=\"p1\">**</ept> 方法以填充属性，然后读取值。"
    },
    {
      "pos": [
        783,
        827
      ],
      "content": "若要在对象上设置属性，请指定属性值，然后调用 <bpt id=\"p1\">**</bpt>SetProperties<ept id=\"p1\">**</ept> 方法。"
    },
    {
      "content": "以下代码示例创建容器并将它的一些属性值写入到控制台窗口：",
      "pos": [
        829,
        857
      ]
    },
    {
      "content": "设置和检索元数据",
      "pos": [
        1842,
        1850
      ]
    },
    {
      "pos": [
        1852,
        1957
      ],
      "content": "你可以在 Blob 或容器资源上指定元数据作为一个或多个名称/值对。若要设置元数据，请将名称/值对添加到资源上的 <bpt id=\"p1\">**</bpt>Metadata<ept id=\"p1\">**</ept> 集合，然后调用 <bpt id=\"p2\">**</bpt>SetMetadata<ept id=\"p2\">**</ept> 方法以将值保存到服务。"
    },
    {
      "pos": [
        1961,
        1996
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>：元数据的名称必须符合 C# 标识符命名约定。"
    },
    {
      "pos": [
        1999,
        2066
      ],
      "content": "以下代码示例在容器上设置元数据。一个值是使用集合的 <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept> 方法设置的。另一个值是使用隐式键/值语法设置的。这两种方法都有效。"
    },
    {
      "pos": [
        2388,
        2467
      ],
      "content": "若要检索元数据，请对 Blob 或容器调用 <bpt id=\"p1\">**</bpt>FetchAttributes<ept id=\"p1\">**</ept> 方法以填充 <bpt id=\"p2\">**</bpt>Metadata<ept id=\"p2\">**</ept> 集合，然后读取值，如下面的示例所示。"
    },
    {
      "content": "另请参阅",
      "pos": [
        3000,
        3004
      ]
    },
    {
      "content": "适用于 .NET 的 Azure 存储客户端库参考",
      "pos": [
        3011,
        3036
      ]
    },
    {
      "content": "适用于 .NET 的 Azure 存储客户端库包",
      "pos": [
        3122,
        3146
      ]
    }
  ],
  "content": "\n<properties\n  pageTitle=\"在 Azure 存储空间中设置和检索对象的属性和元数据 | Azure\" \n  description=\"在 Azure 存储空间中存储对象的自定义元数据，并设置和检索系统属性。\" \n  services=\"storage\" \n  documentationCenter=\"\" \n  authors=\"tamram\" \n  manager=\"adinah\" \n  editor=\"\"/>\n\n<tags \n  ms.service=\"storage\" \n  ms.date=\"01/05/2016\" \n  wacn.date=\"02/25/2016\"/>\n\n\n# 设置和检索属性与元数据 #\n\n## 概述\n\nAzure 存储中的对象支持系统属性和用户定义的元数据，除了该数据以外，它们还包含：\n\n*   **系统属性。** 系统属性存在于每个存储资源上。其中一些属性是可以读取或设置的，而另一些属性是只读的。事实上，有些系统属性与某些标准 HTTP 标头对应。Azure 存储客户端库为您维护这些内容。  \n\n*   **用户定义的元数据。** 用户定义的元数据是在给定资源上以名称/值对的形式指定的元数据。您可以使用元数据来存储存储资源其他值；这些值仅用于您个人目的，不会影响资源的行为方式。\n\n检索资源的属性和元数据值的过程分为两步。在可以读取这些值之前，你必须通过调用 **FetchAttributes** 方法显式获取它们。\n\n> [AZURE.IMPORTANT] 不会填充存储资源的属性和元数据值，除非调用 **FetchAttributes** 方法之一。\n\n## 设置和检索属性\n\n若要检索属性值，请对 blob 或容器调用 **FetchAttributes** 方法以填充属性，然后读取值。\n\n若要在对象上设置属性，请指定属性值，然后调用 **SetProperties** 方法。\n\n以下代码示例创建容器并将它的一些属性值写入到控制台窗口：\n\n    //Parse the connection string for the storage account.\n    CloudStorageAccount storageAccount = CloudStorageAccount.Parse(\n        Microsoft.Azure.CloudConfigurationManager.GetSetting(\"StorageConnectionString\"));\n    \n    //Create the service client object for credentialed access to the Blob service.\n    CloudBlobClient blobClient = storageAccount.CreateCloudBlobClient();\n\n    // Retrieve a reference to a container. \n    CloudBlobContainer container = blobClient.GetContainerReference(\"mycontainer\");\n\n    // Create the container if it does not already exist.\n    container.CreateIfNotExists();\n\n    // Fetch container properties and write out their values.\n    container.FetchAttributes();\n    Console.WriteLine(\"Properties for container {0}\", container.StorageUri.PrimaryUri.ToString());\n    Console.WriteLine(\"LastModifiedUTC: {0}\", container.Properties.LastModified.ToString());\n    Console.WriteLine(\"ETag: {0}\", container.Properties.ETag);\n    Console.WriteLine();\n\n## 设置和检索元数据\n\n你可以在 Blob 或容器资源上指定元数据作为一个或多个名称/值对。若要设置元数据，请将名称/值对添加到资源上的 **Metadata** 集合，然后调用 **SetMetadata** 方法以将值保存到服务。\n\n> [AZURE.NOTE]：元数据的名称必须符合 C# 标识符命名约定。\n \n以下代码示例在容器上设置元数据。一个值是使用集合的 **Add** 方法设置的。另一个值是使用隐式键/值语法设置的。这两种方法都有效。\n\n    public static void AddContainerMetadata(CloudBlobContainer container)\n    {\n        //Add some metadata to the container.\n        container.Metadata.Add(\"docType\", \"textDocuments\");\n        container.Metadata[\"category\"] = \"guidance\";\n\n        //Set the container's metadata.\n        container.SetMetadata();\n    }\n\n若要检索元数据，请对 Blob 或容器调用 **FetchAttributes** 方法以填充 **Metadata** 集合，然后读取值，如下面的示例所示。\n\n    public static void ListContainerMetadata(CloudBlobContainer container)\n    {\n        //Fetch container attributes in order to populate the container's properties and metadata.\n        container.FetchAttributes();\n\n        //Enumerate the container's metadata.\n        Console.WriteLine(\"Container metadata:\");\n        foreach (var metadataItem in container.Metadata)\n        {\n            Console.WriteLine(\"\\tKey: {0}\", metadataItem.Key);\n            Console.WriteLine(\"\\tValue: {0}\", metadataItem.Value);\n        }\n    }\n\n## 另请参阅  \n\n- [适用于 .NET 的 Azure 存储客户端库参考](http://msdn.microsoft.com/zh-cn/library/azure/wa_storage_30_reference_home.aspx)\n- [适用于 .NET 的 Azure 存储客户端库包](https://www.nuget.org/packages/WindowsAzure.Storage/)  \n\n<!---HONumber=Mooncake_0215_2016-->"
}