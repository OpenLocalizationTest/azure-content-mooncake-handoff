{"nodes":[{"content":"在 Azure 中使用 Django 创建 Web 应用","pos":[27,55]},{"content":"本教程介绍在 Azure Web 应用上运行 Python Web 应用。","pos":[74,111]},{"content":"在 Azure 中使用 Django 创建 Web 应用","pos":[350,378]},{"content":"本教程描述如何开始在 <bpt id=\"p1\">[</bpt>Azure Web 应用<ept id=\"p1\">](/documentation/services/web-sites/)</ept>上运行 Python。","pos":[380,452],"source":"本教程描述如何开始在 [Azure Web 应用](/documentation/services/web-sites/)上运行 Python。"},{"content":"Web 应用提供有限的免费托管和快速部署功能，现在，您可以使用 Python！","pos":[453,492]},{"content":"随着您的应用增长，可以切换到付费托管，并且还可以与所有其他 Azure 服务集成。","pos":[493,534]},{"content":"你将使用 Django Web 框架创建应用程序（请参阅本教程针对 <bpt id=\"p1\">[</bpt>Flask<ept id=\"p1\">](/documentation/articles/web-sites-python-create-deploy-flask-app)</ept> 和 <bpt id=\"p2\">[</bpt>Bottle<ept id=\"p2\">](/documentation/articles/web-sites-python-create-deploy-bottle-app)</ept> 的备选版本）。","pos":[536,729],"source":"你将使用 Django Web 框架创建应用程序（请参阅本教程针对 [Flask](/documentation/articles/web-sites-python-create-deploy-flask-app) 和 [Bottle](/documentation/articles/web-sites-python-create-deploy-bottle-app) 的备选版本）。"},{"content":"你将创建 Web 应用，设置 Git 部署以及在本地克隆存储库。","pos":[729,761]},{"content":"然后将本地运行应用程序，将其更改、 提交和推送到 Azure。","pos":[761,792]},{"content":"本教程演示如何从 Windows 或 Mac/Linux 执行此操作。","pos":[792,827]},{"content":"先决条件","pos":[962,966]},{"content":"Windows、 Mac 或 Linux","pos":[970,990]},{"content":"Python 2.7 或 3.4","pos":[993,1009]},{"content":"setuptools, pip, virtualenv（仅限 Python 2.7）","pos":[1012,1054]},{"content":"Git","pos":[1057,1060]},{"pos":[1063,1108],"content":"<bpt id=\"p1\">[</bpt>Python Tools for Visual Studio<ept id=\"p1\">][]</ept> - 注意：这是可选的","source":"[Python Tools for Visual Studio][] - 注意：这是可选的"},{"pos":[1110,1139],"content":"<bpt id=\"p1\">**</bpt>注意<ept id=\"p1\">**</ept>：Python 项目目前不支持 TFS 发布。","source":"**注意**：Python 项目目前不支持 TFS 发布。"},{"content":"Windows","pos":[1145,1152]},{"content":"如果您还没有 Python 2.7 或 3.4 安装（32 位），我们建议使用 Web 平台安装程序来安装 <bpt id=\"p1\">[</bpt>Azure SDK for Python 2.7<ept id=\"p1\">]</ept> 或 <bpt id=\"p2\">[</bpt>Azure SDK for Python 3.4<ept id=\"p2\">]</ept>。","pos":[1154,1264],"source":"如果您还没有 Python 2.7 或 3.4 安装（32 位），我们建议使用 Web 平台安装程序来安装 [Azure SDK for Python 2.7] 或 [Azure SDK for Python 3.4]。"},{"content":"这将安装 32 位版本的 Python、setuptools、pip、virtualenv 等（32 位 Python 是在 Azure 主机计算机上安装的）。","pos":[1264,1344]},{"content":"或者，您可以从 <bpt id=\"p1\">[</bpt>python.org<ept id=\"p1\">]</ept> 获取 Python。","pos":[1344,1375],"source":"或者，您可以从 [python.org] 获取 Python。"},{"content":"对于 Git，我们建议 <bpt id=\"p1\">[</bpt>Git for Windows<ept id=\"p1\">]</ept> 或 <bpt id=\"p2\">[</bpt>GitHub for Windows<ept id=\"p2\">]</ept>。","pos":[1377,1430],"source":"对于 Git，我们建议 [Git for Windows] 或 [GitHub for Windows]。"},{"content":"如果您使用 Visual Studio，可以使用集成的 Git 支持。","pos":[1430,1465]},{"content":"我们还建议你安装 <bpt id=\"p1\">[</bpt>Python Tools 2.2 for Visual Studio<ept id=\"p1\">]</ept>。","pos":[1467,1513],"source":"我们还建议你安装 [Python Tools 2.2 for Visual Studio]。"},{"content":"这是可选的，但是如果您有 <bpt id=\"p1\">[</bpt>Visual Studio<ept id=\"p1\">]</ept>（包括免费 Visual Studio Community 2013 或 Visual Studio Express 2013 for Web），则这将为您提供很好的 Python IDE。","pos":[1513,1636],"source":"这是可选的，但是如果您有 [Visual Studio]（包括免费 Visual Studio Community 2013 或 Visual Studio Express 2013 for Web），则这将为您提供很好的 Python IDE。"},{"content":"Mac/Linux","pos":[1642,1651]},{"content":"您应安装了 Python 和 Git ，但请确保您具有 Python 2.7 或 3.4。","pos":[1653,1698]},{"content":"在门户中创建 Web 应用","pos":[1746,1759]},{"content":"创建你的应用程序的第一步是通过 Azure 管理门户创建 Web 应用。","pos":[1761,1797]},{"content":"为此，你将需要登录到该门户，然后单击左下角的新建按钮。","pos":[1797,1824]},{"content":"将出现一个窗口。","pos":[1824,1832]},{"content":"单击“快速创建”，输入 URL，然后选择“创建 Web 应用”。","pos":[1832,1864]},{"content":"将快速设置 Web 应用。","pos":[1940,1953]},{"content":"接下来，你要为通过 Git 进行发布提供相应支持。","pos":[1953,1978]},{"content":"这一点可通过选择<bpt id=\"p1\">**</bpt>从源代码控制设置部署<ept id=\"p1\">**</ept>来完成。","pos":[1978,2004],"source":"这一点可通过选择**从源代码控制设置部署**来完成。"},{"content":"从“设置部署”对话框中，向下滚动并选择“本地 Git”选项。","pos":[2080,2110]},{"content":"单击向右箭头以继续。","pos":[2110,2120]},{"content":"在设置 Git 发布之后，你将立即看到通知你正在创建存储库的页面。","pos":[2196,2229]},{"content":"在存储库就绪时，会将你转至“部署”选项卡。","pos":[2229,2250]},{"content":"“部署”选项卡包括有关如何连接的说明。","pos":[2250,2269]},{"content":"应用程序概述","pos":[2384,2390]},{"content":"Git 存储库内容","pos":[2401,2410]},{"content":"下面是您会在初始 Git 存储库找到的文件的概览，我们将在下一节中予以克隆。","pos":[2412,2450]},{"content":"应用程序的的主要来源。","pos":[2937,2948]},{"content":"包含具有母版布局的 3 页（索引、关于、联系人）。","pos":[2948,2973]},{"content":"静态内容和脚本包括启动、 jquery、 modernizr 和响应。","pos":[2973,3008]},{"content":"本地管理和开发服务器支持。","pos":[3026,3039]},{"content":"使用此功能可在本地运行应用程序，同步数据库，等等。","pos":[3039,3064]},{"content":"默认数据库。","pos":[3083,3089]},{"content":"包括应用程序运行所必需的表，但不包含任何用户（同步数据库以创建用户）。","pos":[3089,3124]},{"pos":[3182,3224],"content":"用于 <bpt id=\"p1\">[</bpt>Python Tools for Visual Studio<ept id=\"p1\">]</ept> 的项目文件。","source":"用于 [Python Tools for Visual Studio] 的项目文件。"},{"content":"虚拟环境的 IIS 代理和 PTVS 远程调试支持。","pos":[3257,3283]},{"content":"此应用程序所需的外部软件包。","pos":[3308,3322]},{"content":"部署脚本将对在此文件中列出的包进行 pip 安装。","pos":[3322,3347]},{"content":"IIS 配置文件。","pos":[3391,3400]},{"content":"部署脚本将使用适当的 web.x.y.config，并将其复制为 web.config。","pos":[3400,3444]},{"content":"可选文件 - 自定义部署","pos":[3450,3462]},{"pos":[3464,3577],"content":"[WACOM.INCLUDE <bpt id=\"p1\">[</bpt>web-sites-python-customizing-deployment<ept id=\"p1\">](../includes/web-sites-python-customizing-deployment.md)</ept>]","source":"[WACOM.INCLUDE [web-sites-python-customizing-deployment](../includes/web-sites-python-customizing-deployment.md)]"},{"content":"可选文件 - Python 运行时","pos":[3583,3600]},{"pos":[3602,3709],"content":"[WACOM.INCLUDE <bpt id=\"p1\">[</bpt>web-sites-python-customizing-runtime<ept id=\"p1\">](../includes/web-sites-python-customizing-runtime.md)</ept>]","source":"[WACOM.INCLUDE [web-sites-python-customizing-runtime](../includes/web-sites-python-customizing-runtime.md)]"},{"content":"服务器上的其他文件","pos":[3715,3724]},{"content":"某些文件存在于服务器上，但不会添加到 git 存储库。","pos":[3726,3753]},{"content":"这些是由部署脚本创建的。","pos":[3753,3765]},{"content":"IIS 配置文件。","pos":[3784,3793]},{"content":"每次部署中从 web.x.y.config 创建","pos":[3793,3817]},{"content":"Python 虚拟环境。","pos":[3830,3842]},{"content":"如果在站点上尚不存在兼容的虚拟环境，请在部署期间创建。","pos":[3842,3869]},{"content":"在 requirements.txt 中列出的软件包是 pip 安装的，但如果已安装软件包，pip 将跳过安装。","pos":[3869,3925]},{"content":"后续 3 节描述如何在 3 个不同的环境下继续进行 Web 应用开发：","pos":[3927,3962]},{"content":"Windows，具有 Python Tools for Visual Studio","pos":[3966,4007]},{"content":"Windows，具有命令行","pos":[4010,4023]},{"content":"Mac/Linux，具有命令行","pos":[4026,4041]},{"content":"Web 应用开发 - Windows - Python Tools for Visual Studio","pos":[4095,4146]},{"content":"克隆存储库","pos":[4152,4157]},{"content":"首先，使用 Azure 门户 Web 应用上提供的 url 来克隆存储库。","pos":[4159,4196]},{"content":"打开包含在存储库根中的解决方案文件 (.sln) 。","pos":[4273,4299]},{"content":"创建虚拟环境","pos":[4386,4392]},{"content":"现在，我们将创建本地开发的虚拟环境。","pos":[4394,4412]},{"content":"右键单击 <bpt id=\"p1\">**</bpt>Python 环境<ept id=\"p1\">**</ept>，选择<bpt id=\"p2\">**</bpt>添加虚拟环境...<ept id=\"p2\">**</ept>。","pos":[4412,4447],"source":"右键单击 **Python 环境**，选择**添加虚拟环境...**。"},{"pos":[4451,4467],"content":"请确保环境的名称是 <ph id=\"ph1\">`env`</ph>。","source":"请确保环境的名称是 `env`。"},{"content":"选择基解释器。","pos":[4471,4478]},{"content":"请确保使用为您的 Web 应用选择的相同版本 Python（在 runtime.txt 或站点配置页中）。","pos":[4478,4531]},{"content":"请确保选中此选项以下载并安装软件包。","pos":[4535,4553]},{"content":"单击“创建”。","pos":[4639,4646]},{"content":"这会创建虚拟环境，并安装 requirements.txt 中列出的依赖项。","pos":[4646,4684]},{"content":"创建超级用户","pos":[4690,4696]},{"content":"应用程序随附的数据库没有定义任何超级用户。","pos":[4698,4719]},{"content":"若要使用应用程序的登录功能或 Django 管理界面（如果您决定将其启用），则需创建超级用户。","pos":[4719,4766]},{"content":"通过命令行从项目文件夹运行此命令：","pos":[4768,4785]},{"content":"按提示设置用户名、密码等。","pos":[4837,4850]},{"content":"使用开发服务器运行","pos":[4856,4865]},{"content":"按 F5 开始调试，您的 web 浏览器会自动打开到本地运行的页面。","pos":[4867,4901]},{"content":"您可以在源中设置断点，使用监视窗口等。","pos":[4986,5005]},{"content":"请参阅 <bpt id=\"p1\">[</bpt>Python Tools for Visual Studio 文档<ept id=\"p1\">]</ept>以了解有关各种功能的更多信息。","pos":[5005,5059],"source":"请参阅 [Python Tools for Visual Studio 文档]以了解有关各种功能的更多信息。"},{"content":"进行更改","pos":[5065,5069]},{"content":"现在您可以通过更改应用程序源和/或模板进行试验。","pos":[5071,5095]},{"content":"您测试您的更改后，将其提交到 Git 存储库：","pos":[5097,5120]},{"content":"安装多个软件包","pos":[5205,5212]},{"content":"您应用程序可能具有除 Python 和 Django 以外的其他依赖项。","pos":[5214,5250]},{"content":"您可以使用 pip 安装其他软件包。","pos":[5252,5270]},{"content":"要安装包，请右键单击虚拟环境，然后选择<bpt id=\"p1\">**</bpt>安装 Python 软件包<ept id=\"p1\">**</ept>。","pos":[5270,5307],"source":"要安装包，请右键单击虚拟环境，然后选择**安装 Python 软件包**。"},{"pos":[5309,5383],"content":"例如，要安装 Azure SDK for Python（使您可以访问 Azure 存储、服务总线和其他 Azure 服务），请输入 <ph id=\"ph1\">`azure`</ph>：","source":"例如，要安装 Azure SDK for Python（使您可以访问 Azure 存储、服务总线和其他 Azure 服务），请输入 `azure`："},{"pos":[5473,5531],"content":"在虚拟环境上右键单击并选择<bpt id=\"p1\">**</bpt>生成 requirements.txt<ept id=\"p1\">**</ept> 以更新 requirements.txt。","source":"在虚拟环境上右键单击并选择**生成 requirements.txt** 以更新 requirements.txt。"},{"content":"然后，将 requirements.txt 的更改落实到 Git 存储库。","pos":[5533,5570]},{"content":"部署到 Azure","pos":[5576,5585]},{"content":"要触发部署操作，请单击<bpt id=\"p1\">**</bpt>同步<ept id=\"p1\">**</ept>或<bpt id=\"p2\">**</bpt>推送<ept id=\"p2\">**</ept>。","pos":[5587,5612],"source":"要触发部署操作，请单击**同步**或**推送**。"},{"content":"同步执行推送和拉取。","pos":[5612,5622]},{"content":"首次部署将需要一些时间，因为它将创建虚拟环境、 安装包等。","pos":[5698,5727]},{"content":"Visual Studio 不会显示部署的进度。","pos":[5729,5753]},{"content":"如果您想要查看输出，请参阅<bpt id=\"p1\">[</bpt>故障排除 - 部署<ept id=\"p1\">](#troubleshooting-deployment)</ept>上的相关部分。","pos":[5753,5813],"source":"如果您想要查看输出，请参阅[故障排除 - 部署](#troubleshooting-deployment)上的相关部分。"},{"content":"浏览到 Azure URL 要查看您的更改。","pos":[5815,5837]},{"content":"Web 应用开发 - Windows - 命令行","pos":[5898,5922]},{"content":"克隆存储库","pos":[5928,5933]},{"content":"首先，使用在 Azure 门户中提供的 URL 来克隆存储库，并将 Azure 存储库添加为远程。","pos":[5935,5984]},{"content":"有关详细信息，请参阅<bpt id=\"p1\">[</bpt>在 Azure 中使用 GIT 进行连续部署<ept id=\"p1\">](/documentation/articles/web-sites-publish-source-control)</ept>。","pos":[5984,6077],"source":"有关详细信息，请参阅[在 Azure 中使用 GIT 进行连续部署](/documentation/articles/web-sites-publish-source-control)。"},{"content":"创建虚拟环境","pos":[6167,6173]},{"content":"我们将为开发目的创建新的虚拟环境 （不要将其添加到存储库）。","pos":[6175,6205]},{"content":"Python 中的虚拟环境是可重定位，因此使用该应用程序的每个开发人员将在本地创建自己的环境。","pos":[6205,6252]},{"content":"请确保使用为您的 Web 应用选择的相同版本 Python（在 runtime.txt 或站点配置页中）。","pos":[6254,6307]},{"content":"对于 Python 2.7：","pos":[6309,6323]},{"content":"对于 Python 3.4：","pos":[6371,6385]},{"content":"安装应用程序所需的任何外部软件包。","pos":[6427,6444]},{"content":"可以使用该存储库的根处 requirements.txt 文件在虚拟环境中安装软件包：","pos":[6444,6487]},{"content":"创建超级用户","pos":[6542,6548]},{"content":"应用程序随附的数据库没有定义任何超级用户。","pos":[6550,6571]},{"content":"若要使用应用程序的登录功能或 Django 管理界面（如果您决定将其启用），则需创建超级用户。","pos":[6571,6618]},{"content":"通过命令行从项目文件夹运行此命令：","pos":[6620,6637]},{"content":"按提示设置用户名、密码等。","pos":[6689,6702]},{"content":"使用开发服务器运行","pos":[6708,6717]},{"content":"您可以使用以下命令在开发服务器下启用应用程序：","pos":[6719,6742]},{"content":"控制台将显示服务器侦听的 URL 和端口：","pos":[6788,6809]},{"content":"然后，将 web 浏览器打开到该 URL。","pos":[6896,6917]},{"content":"进行更改","pos":[7006,7010]},{"content":"现在您可以通过更改应用程序源和/或模板进行试验。","pos":[7012,7036]},{"content":"您测试您的更改后，将其提交到 Git 存储库：","pos":[7038,7061]},{"content":"安装多个软件包","pos":[7133,7140]},{"content":"您应用程序可能具有除 Python 和 Django 以外的其他依赖项。","pos":[7142,7178]},{"content":"您可以使用 pip 安装其他软件包。","pos":[7180,7198]},{"content":"例如，要安装 Azure SDK for Python（使您可以访问 Azure 存储、 服务总线和其他 Azure 服务），请输入：","pos":[7198,7265]},{"content":"请确保更新 requirements.txt：","pos":[7302,7325]},{"content":"落实更改：","pos":[7374,7379]},{"content":"部署到 Azure","pos":[7455,7464]},{"content":"要触发部署，请将更改推送到 Azure：","pos":[7466,7486]},{"content":"您将看到部署脚本的输出，包括虚拟环境创建，安装软件包，创建 web.config。","pos":[7515,7556]},{"content":"浏览到 Azure URL 要查看您的更改。","pos":[7558,7580]},{"content":"Web 应用开发 - Mac/Linux - 命令行","pos":[7643,7669]},{"content":"克隆存储库","pos":[7675,7680]},{"content":"首先，使用在 Azure 门户中提供的 URL 来克隆存储库，并将 Azure 存储库添加为远程。","pos":[7682,7731]},{"content":"有关详细信息，请参阅<bpt id=\"p1\">[</bpt>在 Azure 中使用 GIT 进行连续部署<ept id=\"p1\">](/documentation/articles/web-sites-publish-source-control)</ept>。","pos":[7731,7824],"source":"有关详细信息，请参阅[在 Azure 中使用 GIT 进行连续部署](/documentation/articles/web-sites-publish-source-control)。"},{"content":"创建虚拟环境","pos":[7914,7920]},{"content":"我们将为开发目的创建新的虚拟环境 （不要将其添加到存储库）。","pos":[7922,7952]},{"content":"Python 中的虚拟环境是可重定位，因此使用该应用程序的每个开发人员将在本地创建自己的环境。","pos":[7952,7999]},{"content":"请确保使用为您的 Web 应用选择的相同版本 Python（在 runtime.txt 或站点配置页中）。","pos":[8001,8054]},{"content":"对于 Python 2.7：","pos":[8056,8070]},{"content":"对于 Python 3.4：","pos":[8102,8116]},{"content":"安装应用程序所需的任何外部软件包。","pos":[8142,8159]},{"content":"可以使用该存储库的根处 requirements.txt 文件在虚拟环境中安装软件包：","pos":[8159,8202]},{"content":"创建超级用户","pos":[8253,8259]},{"content":"应用程序随附的数据库没有定义任何超级用户。","pos":[8261,8282]},{"content":"若要使用应用程序的登录功能或 Django 管理界面（如果您决定将其启用），则需创建超级用户。","pos":[8282,8329]},{"content":"通过命令行从项目文件夹运行此命令：","pos":[8331,8348]},{"content":"按提示设置用户名、密码等。","pos":[8396,8409]},{"content":"使用开发服务器运行","pos":[8415,8424]},{"content":"您可以使用以下命令在开发服务器下启用应用程序：","pos":[8426,8449]},{"content":"控制台将显示服务器侦听的 URL 和端口：","pos":[8491,8512]},{"content":"然后，将 web 浏览器打开到该 URL。","pos":[8595,8616]},{"content":"进行更改","pos":[8701,8705]},{"content":"现在您可以通过更改应用程序源和/或模板进行试验。","pos":[8707,8731]},{"content":"您测试您的更改后，将其提交到 Git 存储库：","pos":[8733,8756]},{"content":"安装多个软件包","pos":[8828,8835]},{"content":"您应用程序可能具有除 Python 和 Django 以外的其他依赖项。","pos":[8837,8873]},{"content":"您可以使用 pip 安装其他软件包。","pos":[8875,8893]},{"content":"例如，要安装 Azure SDK for Python（使您可以访问 Azure 存储、 服务总线和其他 Azure 服务），请输入：","pos":[8893,8960]},{"content":"请确保更新 requirements.txt：","pos":[8993,9016]},{"content":"落实更改：","pos":[9061,9066]},{"content":"部署到 Azure","pos":[9142,9151]},{"content":"要触发部署，请将更改推送到 Azure：","pos":[9195,9215]},{"content":"您将看到部署脚本的输出，包括虚拟环境创建，安装软件包，创建 web.config。","pos":[9244,9285]},{"content":"浏览到 Azure URL 要查看您的更改。","pos":[9287,9309]},{"content":"故障排除 - 软件包安装","pos":[9366,9378]},{"pos":[9380,9521],"content":"[WACOM.INCLUDE <bpt id=\"p1\">[</bpt>web-sites-python-troubleshooting-package-installation<ept id=\"p1\">](../includes/web-sites-python-troubleshooting-package-installation.md)</ept>]","source":"[WACOM.INCLUDE [web-sites-python-troubleshooting-package-installation](../includes/web-sites-python-troubleshooting-package-installation.md)]"},{"content":"故障排除 - 虚拟环境","pos":[9577,9588]},{"pos":[9590,9729],"content":"[WACOM.INCLUDE <bpt id=\"p1\">[</bpt>web-sites-python-troubleshooting-virtual-environment<ept id=\"p1\">](../includes/web-sites-python-troubleshooting-virtual-environment.md)</ept>]","source":"[WACOM.INCLUDE [web-sites-python-troubleshooting-virtual-environment](../includes/web-sites-python-troubleshooting-virtual-environment.md)]"},{"content":"疑难解答 — 静态文件","pos":[9778,9789]},{"content":"Django 有收集静态文件的概念。","pos":[9791,9809]},{"content":"这将从原始位置取用所有静态文件，并将其复制到单个文件夹。","pos":[9809,9837]},{"content":"对于此应用程序，将其复制到 <ph id=\"ph1\">`/static`</ph>。","pos":[9837,9861],"source":"对于此应用程序，将其复制到 `/static`。"},{"content":"这样做是因为静态文件可能来自不同的 Django“应用”。","pos":[9863,9892]},{"content":"例如，Django 管理界面中的静态文件位于虚拟环境中的 Django 库子文件夹中。","pos":[9892,9935]},{"content":"此应用程序定义的静态文件位于 <ph id=\"ph1\">`/app/static`</ph> 中。","pos":[9935,9966],"source":"此应用程序定义的静态文件位于 `/app/static` 中。"},{"content":"随着 Django“应用”使用量的增加，将会在多个位置有静态文件。","pos":[9966,9999]},{"content":"在调试模式下运行应用程序时，应用程序将为来自原始位置的静态文件提供服务。","pos":[10001,10037]},{"content":"在发布模式下运行应用程序时，应用程序<bpt id=\"p1\">**</bpt>不<ept id=\"p1\">**</ept>为静态文件服务。","pos":[10039,10070],"source":"在发布模式下运行应用程序时，应用程序**不**为静态文件服务。"},{"content":"Web 服务器负责提供文件服务。","pos":[10070,10086]},{"content":"对于此应用程序，IIS 将为来自 <ph id=\"ph1\">`/static`</ph> 的静态文件提供服务。","pos":[10086,10123],"source":"对于此应用程序，IIS 将为来自 `/static` 的静态文件提供服务。"},{"content":"静态文件收集是在部署脚本中自动完成的，将清除以前收集的文件。","pos":[10125,10155]},{"content":"这意味着每次部署时都会发生收集，这对部署速度会有点影响，但可确保不使用过时文件，从而避免潜在的安全问题。","pos":[10155,10207]},{"content":"如果您想要跳过为 Django 应用程序收集静态文件的操作：","pos":[10209,10239]},{"content":"然后，您将需要在本地计算机上手动收集：","pos":[10260,10279]},{"pos":[10329,10380],"content":"然后，从 <ph id=\"ph1\">`.gitignore`</ph> 中删除 <ph id=\"ph2\">`\\static`</ph> 文件夹，并将其添加到 Git 存储库。","source":"然后，从 `.gitignore` 中删除 `\\static` 文件夹，并将其添加到 Git 存储库。"},{"content":"疑难解答 — 设置","pos":[10425,10434]},{"pos":[10436,10484],"content":"可以在 <ph id=\"ph1\">`DjangoWebProject/settings.py`</ph> 中更改应用程序的各种设置。","source":"可以在 `DjangoWebProject/settings.py` 中更改应用程序的各种设置。"},{"content":"为开发人员方便起见，已启用调试模式。","pos":[10486,10504]},{"content":"这样做的一个额外好处是在本地运行时可以看到图像和其他静态内容，而无需收集静态文件。","pos":[10504,10545]},{"content":"若要禁用调试模式：","pos":[10547,10556]},{"content":"禁用调试后，需要更新 <ph id=\"ph1\">`ALLOWED_HOSTS`</ph> 的值，使之包括 Azure 主机名。","pos":[10577,10622],"source":"禁用调试后，需要更新 `ALLOWED_HOSTS` 的值，使之包括 Azure 主机名。"},{"content":"例如：","pos":[10622,10625]},{"content":"或者启用以下任一项：","pos":[10696,10706]},{"content":"在实践中，可能需要做一些更复杂的事来处理调试和发布模式间的切换以及获取主机名。","pos":[10751,10790]},{"content":"可以通过 Azure 门户“配置”页上的“应用设置”部分设置环境变量。","pos":[10792,10827]},{"content":"这可用于设置可能不希望其出现在源（连接字符串、密码等）的值，或者希望在 Azure 与本地计算机间进行不同设置的值。","pos":[10827,10885]},{"content":"在 <ph id=\"ph1\">`settings.py`</ph> 中，可以使用 <ph id=\"ph2\">`os.getenv`</ph> 查询环境变量。","pos":[10885,10927],"source":"在 `settings.py` 中，可以使用 `os.getenv` 查询环境变量。"},{"content":"使用数据库","pos":[10964,10969]},{"content":"应用程序随附的数据库是一个 sqlite 数据库。","pos":[10971,10996]},{"content":"这是可用于开发的方便且有用的默认数据库，因为它几乎不需要任何设置。","pos":[10996,11029]},{"content":"该数据库存储在项目文件夹下的 db.sqlite3 文件中。","pos":[11029,11059]},{"content":"Azure 提供可以从 Django 应用程序方便地使用的数据库服务。","pos":[11061,11096]},{"content":"从 Django 应用程序使用 <bpt id=\"p1\">[</bpt>SQL 数据库<ept id=\"p1\">](/documentation/articles/web-sites-python-ptvs-django-sql)</ept>和 <bpt id=\"p2\">[</bpt>MySQL<ept id=\"p2\">](/documentation/articles/web-sites-python-ptvs-django-mysql)</ept> 的教程展示了创建数据库服务、更改 <ph id=\"ph1\">`DjangoWebProject/settings.py`</ph> 中的数据库设置所需的步骤以及安装所需的库。","pos":[11096,11318],"source":"从 Django 应用程序使用 [SQL 数据库](/documentation/articles/web-sites-python-ptvs-django-sql)和 [MySQL](/documentation/articles/web-sites-python-ptvs-django-mysql) 的教程展示了创建数据库服务、更改 `DjangoWebProject/settings.py` 中的数据库设置所需的步骤以及安装所需的库。"},{"content":"当然，如果想要管理您自己的数据库服务器，您可以使用在 Azure 上运行的 Windows 或 Linux 虚拟机来执行此操作。","pos":[11320,11384]},{"content":"Django 管理界面","pos":[11427,11438]},{"content":"开始构建您的模型后，您将需要使用一些数据来填充数据库。","pos":[11440,11467]},{"content":"交互方式添加和编辑的一种简便方法是使用 Django 管理界面。","pos":[11467,11499]},{"content":"该管理界面的代码在应用程序源中已被注释掉，但有清楚的标记，可以方便地将其启用（搜索“admin”）。","pos":[11501,11551]},{"pos":[11553,11586],"content":"将其启用后，请同步数据库、运行应用程序并导航到 <ph id=\"ph1\">`/admin`</ph>。","source":"将其启用后，请同步数据库、运行应用程序并导航到 `/admin`。"},{"content":"后续步骤","pos":[11617,11621]},{"content":"通过下面的链接，可了解有关 Django 和 Python Tools for Visual Studio的详细信息：","pos":[11623,11682]},{"content":"Django 文档","pos":[11688,11697]},{"content":"Python Tools for Visual Studio 文档","pos":[11704,11737]},{"content":"有关使用 SQL 数据库和 MySQL 的信息：","pos":[11743,11767]},{"content":"具有 Python Tools for Visual Studio 的 Azure 上的 Django 和 MySQL","pos":[11772,11831]},{"content":"具有 Python Tools for Visual Studio 的 Azure 上的 Django 和 SQL 数据库","pos":[11836,11897]},{"content":"具有 Python Tools for Visual Studio 的 Azure 上的 Django 和 MySQL","pos":[11925,11984]},{"content":"具有 Python Tools for Visual Studio 的 Azure 上的 Django 和 SQL 数据库","pos":[12047,12108]},{"content":"Azure SDK for Python 2.7","pos":[12338,12362]},{"content":"Azure SDK for Python 3.4","pos":[12412,12436]},{"content":"python.org","pos":[12486,12496]},{"content":"Git for Windows","pos":[12523,12538]},{"content":"GitHub for Windows","pos":[12568,12586]},{"content":"Python Tools for Visual Studio","pos":[12618,12648]},{"content":"Python Tools 2.2 for Visual Studio","pos":[12671,12705]},{"content":"Visual Studio","pos":[12755,12768]},{"content":"Python Tools for Visual Studio 文档","pos":[12801,12834]},{"content":"Django 文档","pos":[12861,12870]}],"content":"<properties\n    pageTitle=\"在 Azure 中使用 Django 创建 Web 应用\"\n    description=\"本教程介绍在 Azure Web 应用上运行 Python Web 应用。\"\n    services=\"app-service\\web\"\n    documentationCenter=\"python\"\n    tags=\"python\"\n    authors=\"huguesv\" \n    manager=\"wpickett\" \n    editor=\"\"/>\n\n<tags\n    ms.service=\"web-sites\"\n    ms.date=\"11/16/2015\"\n    wacn.date=\"01/21/2016\"/>\n\n\n# 在 Azure 中使用 Django 创建 Web 应用\n\n本教程描述如何开始在 [Azure Web 应用](/documentation/services/web-sites/)上运行 Python。 Web 应用提供有限的免费托管和快速部署功能，现在，您可以使用 Python！ 随着您的应用增长，可以切换到付费托管，并且还可以与所有其他 Azure 服务集成。\n\n你将使用 Django Web 框架创建应用程序（请参阅本教程针对 [Flask](/documentation/articles/web-sites-python-create-deploy-flask-app) 和 [Bottle](/documentation/articles/web-sites-python-create-deploy-bottle-app) 的备选版本）。你将创建 Web 应用，设置 Git 部署以及在本地克隆存储库。然后将本地运行应用程序，将其更改、 提交和推送到 Azure。本教程演示如何从 Windows 或 Mac/Linux 执行此操作。\n\n[AZURE.INCLUDE [create-account-and-websites-note](../includes/create-account-and-websites-note.md)]\n\n<a name=\"prerequisites\"></a>\n## 先决条件\n\n- Windows、 Mac 或 Linux\n- Python 2.7 或 3.4\n- setuptools, pip, virtualenv（仅限 Python 2.7）\n- Git\n- [Python Tools for Visual Studio][] - 注意：这是可选的\n\n**注意**：Python 项目目前不支持 TFS 发布。\n\n### Windows\n\n如果您还没有 Python 2.7 或 3.4 安装（32 位），我们建议使用 Web 平台安装程序来安装 [Azure SDK for Python 2.7] 或 [Azure SDK for Python 3.4]。这将安装 32 位版本的 Python、setuptools、pip、virtualenv 等（32 位 Python 是在 Azure 主机计算机上安装的）。或者，您可以从 [python.org] 获取 Python。\n\n对于 Git，我们建议 [Git for Windows] 或 [GitHub for Windows]。如果您使用 Visual Studio，可以使用集成的 Git 支持。\n\n我们还建议你安装 [Python Tools 2.2 for Visual Studio]。这是可选的，但是如果您有 [Visual Studio]（包括免费 Visual Studio Community 2013 或 Visual Studio Express 2013 for Web），则这将为您提供很好的 Python IDE。\n\n### Mac/Linux\n\n您应安装了 Python 和 Git ，但请确保您具有 Python 2.7 或 3.4。\n\n\n<a name=\"website-creation-on-portal\"></a>\n## 在门户中创建 Web 应用\n\n创建你的应用程序的第一步是通过 Azure 管理门户创建 Web 应用。为此，你将需要登录到该门户，然后单击左下角的新建按钮。将出现一个窗口。单击“快速创建”，输入 URL，然后选择“创建 Web 应用”。\n\n![](./media/web-sites-python-create-deploy-django-app/django-ws-003.png)\n\n将快速设置 Web 应用。接下来，你要为通过 Git 进行发布提供相应支持。这一点可通过选择**从源代码控制设置部署**来完成。\n\n![](./media/web-sites-python-create-deploy-django-app/django-ws-004.png)\n\n从“设置部署”对话框中，向下滚动并选择“本地 Git”选项。单击向右箭头以继续。\n\n![](./media/web-sites-python-create-deploy-django-app/django-ws-005.png)\n\n在设置 Git 发布之后，你将立即看到通知你正在创建存储库的页面。在存储库就绪时，会将你转至“部署”选项卡。“部署”选项卡包括有关如何连接的说明。\n\n![](./media/web-sites-python-create-deploy-django-app/django-ws-006.png)\n\n<h2><a name=\"application-overview\"></a>应用程序概述</h2>\n\n### Git 存储库内容\n\n下面是您会在初始 Git 存储库找到的文件的概览，我们将在下一节中予以克隆。\n\n    \\app\\__init__.py\n    \\app\\forms.py\n    \\app\\models.py\n    \\app\\tests.py\n    \\app\\views.py\n    \\app\\static\\content\\\n    \\app\\static\\fonts\\\n    \\app\\static\\scripts\\\n    \\app\\templates\\about.html\n    \\app\\templates\\contact.html\n    \\app\\templates\\index.html\n    \\app\\templates\\layout.html\n    \\app\\templates\\login.html\n    \\app\\templates\\loginpartial.html\n    \\DjangoWebProject__init__.py\n    \\DjangoWebProject\\settings.py\n    \\DjangoWebProject\\urls.py\n    \\DjangoWebProject\\wsgi.py\n\n应用程序的的主要来源。包含具有母版布局的 3 页（索引、关于、联系人）。静态内容和脚本包括启动、 jquery、 modernizr 和响应。\n\n    \\manage.py\n\n本地管理和开发服务器支持。使用此功能可在本地运行应用程序，同步数据库，等等。\n\n    \\db.sqlite3\n\n默认数据库。包括应用程序运行所必需的表，但不包含任何用户（同步数据库以创建用户）。\n\n    \\DjangoWebProject.pyproj\n    \\DjangoWebProject.sln\n\n用于 [Python Tools for Visual Studio] 的项目文件。\n\n    \\ptvs_virtualenv_proxy.py\n\n虚拟环境的 IIS 代理和 PTVS 远程调试支持。\n\n    \\requirements.txt\n\n此应用程序所需的外部软件包。部署脚本将对在此文件中列出的包进行 pip 安装。\n \n    \\web.2.7.config\n    \\web.3.4.config\n\nIIS 配置文件。部署脚本将使用适当的 web.x.y.config，并将其复制为 web.config。\n\n### 可选文件 - 自定义部署\n\n[WACOM.INCLUDE [web-sites-python-customizing-deployment](../includes/web-sites-python-customizing-deployment.md)]\n\n### 可选文件 - Python 运行时\n\n[WACOM.INCLUDE [web-sites-python-customizing-runtime](../includes/web-sites-python-customizing-runtime.md)]\n\n### 服务器上的其他文件\n\n某些文件存在于服务器上，但不会添加到 git 存储库。这些是由部署脚本创建的。\n\n    \\web.config\n\nIIS 配置文件。每次部署中从 web.x.y.config 创建\n\n    \\env\\\n\nPython 虚拟环境。如果在站点上尚不存在兼容的虚拟环境，请在部署期间创建。在 requirements.txt 中列出的软件包是 pip 安装的，但如果已安装软件包，pip 将跳过安装。\n\n后续 3 节描述如何在 3 个不同的环境下继续进行 Web 应用开发：\n\n- Windows，具有 Python Tools for Visual Studio\n- Windows，具有命令行\n- Mac/Linux，具有命令行\n\n\n<a name=\"website-development-windows-ptvs\"></a>\n## Web 应用开发 - Windows - Python Tools for Visual Studio\n\n### 克隆存储库\n\n首先，使用 Azure 门户 Web 应用上提供的 url 来克隆存储库。\n\n![](./media/web-sites-python-create-deploy-django-app/ptvs-git-clone.png)\n\n打开包含在存储库根中的解决方案文件 (.sln) 。\n\n![](./media/web-sites-python-create-deploy-django-app/ptvs-solution-django.png)\n\n### 创建虚拟环境\n\n现在，我们将创建本地开发的虚拟环境。右键单击 **Python 环境**，选择**添加虚拟环境...**。\n\n- 请确保环境的名称是 `env`。\n\n- 选择基解释器。请确保使用为您的 Web 应用选择的相同版本 Python（在 runtime.txt 或站点配置页中）。\n\n- 请确保选中此选项以下载并安装软件包。\n\n![](./media/web-sites-python-create-deploy-django-app/ptvs-add-virtual-env-27.png)\n\n单击“创建”。这会创建虚拟环境，并安装 requirements.txt 中列出的依赖项。\n\n### 创建超级用户\n\n应用程序随附的数据库没有定义任何超级用户。若要使用应用程序的登录功能或 Django 管理界面（如果您决定将其启用），则需创建超级用户。\n\n通过命令行从项目文件夹运行此命令：\n\n    env\\scripts\\python manage.py createsuperuser\n\n按提示设置用户名、密码等。\n\n### 使用开发服务器运行\n\n按 F5 开始调试，您的 web 浏览器会自动打开到本地运行的页面。\n\n![](./media/web-sites-python-create-deploy-django-app/windows-browser-django.png)\n\n您可以在源中设置断点，使用监视窗口等。请参阅 [Python Tools for Visual Studio 文档]以了解有关各种功能的更多信息。\n\n### 进行更改\n\n现在您可以通过更改应用程序源和/或模板进行试验。\n\n您测试您的更改后，将其提交到 Git 存储库：\n\n![](./media/web-sites-python-create-deploy-django-app/ptvs-commit-django.png)\n\n### 安装多个软件包\n\n您应用程序可能具有除 Python 和 Django 以外的其他依赖项。\n\n您可以使用 pip 安装其他软件包。要安装包，请右键单击虚拟环境，然后选择**安装 Python 软件包**。\n\n例如，要安装 Azure SDK for Python（使您可以访问 Azure 存储、服务总线和其他 Azure 服务），请输入 `azure`：\n\n![](./media/web-sites-python-create-deploy-django-app/ptvs-install-package-dialog.png)\n\n在虚拟环境上右键单击并选择**生成 requirements.txt** 以更新 requirements.txt。\n\n然后，将 requirements.txt 的更改落实到 Git 存储库。\n\n### 部署到 Azure\n\n要触发部署操作，请单击**同步**或**推送**。同步执行推送和拉取。\n\n![](./media/web-sites-python-create-deploy-django-app/ptvs-git-push.png)\n\n首次部署将需要一些时间，因为它将创建虚拟环境、 安装包等。\n\nVisual Studio 不会显示部署的进度。如果您想要查看输出，请参阅[故障排除 - 部署](#troubleshooting-deployment)上的相关部分。\n\n浏览到 Azure URL 要查看您的更改。\n\n<a name=\"website-development-windows-command-line\"></a>\n## Web 应用开发 - Windows - 命令行\n\n### 克隆存储库\n\n首先，使用在 Azure 门户中提供的 URL 来克隆存储库，并将 Azure 存储库添加为远程。有关详细信息，请参阅[在 Azure 中使用 GIT 进行连续部署](/documentation/articles/web-sites-publish-source-control)。\n\n    git clone <repo-url>\n    cd <repo-folder>\n    git remote add azure <repo-url> \n\n### 创建虚拟环境\n\n我们将为开发目的创建新的虚拟环境 （不要将其添加到存储库）。Python 中的虚拟环境是可重定位，因此使用该应用程序的每个开发人员将在本地创建自己的环境。\n\n请确保使用为您的 Web 应用选择的相同版本 Python（在 runtime.txt 或站点配置页中）。\n\n对于 Python 2.7：\n\n    c:\\python27\\python.exe -m virtualenv env\n\n对于 Python 3.4：\n\n    c:\\python34\\python.exe -m venv env\n\n安装应用程序所需的任何外部软件包。可以使用该存储库的根处 requirements.txt 文件在虚拟环境中安装软件包：\n\n    env\\scripts\\pip install -r requirements.txt\n\n### 创建超级用户\n\n应用程序随附的数据库没有定义任何超级用户。若要使用应用程序的登录功能或 Django 管理界面（如果您决定将其启用），则需创建超级用户。\n\n通过命令行从项目文件夹运行此命令：\n\n    env\\scripts\\python manage.py createsuperuser\n\n按提示设置用户名、密码等。\n\n### 使用开发服务器运行\n\n您可以使用以下命令在开发服务器下启用应用程序：\n\n    env\\scripts\\python manage.py runserver\n\n控制台将显示服务器侦听的 URL 和端口：\n\n![](./media/web-sites-python-create-deploy-django-app/windows-run-local-django.png)\n\n然后，将 web 浏览器打开到该 URL。\n\n![](./media/web-sites-python-create-deploy-django-app/windows-browser-django.png)\n\n### 进行更改\n\n现在您可以通过更改应用程序源和/或模板进行试验。\n\n您测试您的更改后，将其提交到 Git 存储库：\n\n    git add <modified-file>\n    git commit -m \"<commit-comment>\"\n\n### 安装多个软件包\n\n您应用程序可能具有除 Python 和 Django 以外的其他依赖项。\n\n您可以使用 pip 安装其他软件包。例如，要安装 Azure SDK for Python（使您可以访问 Azure 存储、 服务总线和其他 Azure 服务），请输入：\n\n    env\\scripts\\pip install azure\n\n请确保更新 requirements.txt：\n\n    env\\scripts\\pip freeze > requirements.txt\n\n落实更改：\n\n    git add requirements.txt\n    git commit -m \"Added azure package\"\n\n### 部署到 Azure\n\n要触发部署，请将更改推送到 Azure：\n\n    git push azure master\n\n您将看到部署脚本的输出，包括虚拟环境创建，安装软件包，创建 web.config。\n\n浏览到 Azure URL 要查看您的更改。\n\n<a name=\"website-development-mac-linux-command-line\"></a>\n## Web 应用开发 - Mac/Linux - 命令行\n\n### 克隆存储库\n\n首先，使用在 Azure 门户中提供的 URL 来克隆存储库，并将 Azure 存储库添加为远程。有关详细信息，请参阅[在 Azure 中使用 GIT 进行连续部署](/documentation/articles/web-sites-publish-source-control)。\n\n    git clone <repo-url>\n    cd <repo-folder>\n    git remote add azure <repo-url> \n\n### 创建虚拟环境\n\n我们将为开发目的创建新的虚拟环境 （不要将其添加到存储库）。Python 中的虚拟环境是可重定位，因此使用该应用程序的每个开发人员将在本地创建自己的环境。\n\n请确保使用为您的 Web 应用选择的相同版本 Python（在 runtime.txt 或站点配置页中）。\n\n对于 Python 2.7：\n\n    python -m virtualenv env\n\n对于 Python 3.4：\n\n    python -m venv env\n\n安装应用程序所需的任何外部软件包。可以使用该存储库的根处 requirements.txt 文件在虚拟环境中安装软件包：\n\n    env/bin/pip install -r requirements.txt\n\n### 创建超级用户\n\n应用程序随附的数据库没有定义任何超级用户。若要使用应用程序的登录功能或 Django 管理界面（如果您决定将其启用），则需创建超级用户。\n\n通过命令行从项目文件夹运行此命令：\n\n    env/bin/python manage.py createsuperuser\n\n按提示设置用户名、密码等。\n\n### 使用开发服务器运行\n\n您可以使用以下命令在开发服务器下启用应用程序：\n\n    env/bin/python manage.py runserver\n\n控制台将显示服务器侦听的 URL 和端口：\n\n![](./media/web-sites-python-create-deploy-django-app/mac-run-local-django.png)\n\n然后，将 web 浏览器打开到该 URL。\n\n![](./media/web-sites-python-create-deploy-django-app/mac-browser-django.png)\n\n### 进行更改\n\n现在您可以通过更改应用程序源和/或模板进行试验。\n\n您测试您的更改后，将其提交到 Git 存储库：\n\n    git add <modified-file>\n    git commit -m \"<commit-comment>\"\n\n### 安装多个软件包\n\n您应用程序可能具有除 Python 和 Django 以外的其他依赖项。\n\n您可以使用 pip 安装其他软件包。例如，要安装 Azure SDK for Python（使您可以访问 Azure 存储、 服务总线和其他 Azure 服务），请输入：\n\n    env/bin/pip install azure\n\n请确保更新 requirements.txt：\n\n    env/bin/pip freeze > requirements.txt\n\n落实更改：\n\n    git add requirements.txt\n    git commit -m \"Added azure package\"\n\n### 部署到 Azure\n<a name=\"troubleshooting-deployment\"></a>\n\n要触发部署，请将更改推送到 Azure：\n\n    git push azure master\n\n您将看到部署脚本的输出，包括虚拟环境创建，安装软件包，创建 web.config。\n\n浏览到 Azure URL 要查看您的更改。\n\n<a name=\"troubleshooting-package-installation\"></a>\n## 故障排除 - 软件包安装\n\n[WACOM.INCLUDE [web-sites-python-troubleshooting-package-installation](../includes/web-sites-python-troubleshooting-package-installation.md)]\n\n<a name=\"troubleshooting-virtual-environment\"></a>\n## 故障排除 - 虚拟环境\n\n[WACOM.INCLUDE [web-sites-python-troubleshooting-virtual-environment](../includes/web-sites-python-troubleshooting-virtual-environment.md)]\n\n<a name=\"troubleshooting-static-files\"></a>\n## 疑难解答 — 静态文件\n\nDjango 有收集静态文件的概念。这将从原始位置取用所有静态文件，并将其复制到单个文件夹。对于此应用程序，将其复制到 `/static`。\n\n这样做是因为静态文件可能来自不同的 Django“应用”。例如，Django 管理界面中的静态文件位于虚拟环境中的 Django 库子文件夹中。此应用程序定义的静态文件位于 `/app/static` 中。随着 Django“应用”使用量的增加，将会在多个位置有静态文件。\n\n在调试模式下运行应用程序时，应用程序将为来自原始位置的静态文件提供服务。\n\n在发布模式下运行应用程序时，应用程序**不**为静态文件服务。Web 服务器负责提供文件服务。对于此应用程序，IIS 将为来自 `/static` 的静态文件提供服务。\n\n静态文件收集是在部署脚本中自动完成的，将清除以前收集的文件。这意味着每次部署时都会发生收集，这对部署速度会有点影响，但可确保不使用过时文件，从而避免潜在的安全问题。\n\n如果您想要跳过为 Django 应用程序收集静态文件的操作：\n\n    \\.skipDjango \n\n然后，您将需要在本地计算机上手动收集：\n\n    env\\scripts\\python manage.py collectstatic\n\n然后，从 `.gitignore` 中删除 `\\static` 文件夹，并将其添加到 Git 存储库。\n\n<a name=\"troubleshooting-settings\"></a>\n## 疑难解答 — 设置\n\n可以在 `DjangoWebProject/settings.py` 中更改应用程序的各种设置。\n\n为开发人员方便起见，已启用调试模式。这样做的一个额外好处是在本地运行时可以看到图像和其他静态内容，而无需收集静态文件。\n\n若要禁用调试模式：\n\n    DEBUG = False\n\n禁用调试后，需要更新 `ALLOWED_HOSTS` 的值，使之包括 Azure 主机名。例如：\n\n    ALLOWED_HOSTS = (\n        'pythonapp.chinacloudsites.cn',\n    )\n\n或者启用以下任一项：\n\n    ALLOWED_HOSTS = (\n        '*',\n    )\n \n在实践中，可能需要做一些更复杂的事来处理调试和发布模式间的切换以及获取主机名。\n\n可以通过 Azure 门户“配置”页上的“应用设置”部分设置环境变量。这可用于设置可能不希望其出现在源（连接字符串、密码等）的值，或者希望在 Azure 与本地计算机间进行不同设置的值。在 `settings.py` 中，可以使用 `os.getenv` 查询环境变量。\n\n<a name=\"using-a-database\"></a>\n## 使用数据库\n\n应用程序随附的数据库是一个 sqlite 数据库。这是可用于开发的方便且有用的默认数据库，因为它几乎不需要任何设置。该数据库存储在项目文件夹下的 db.sqlite3 文件中。\n\nAzure 提供可以从 Django 应用程序方便地使用的数据库服务。从 Django 应用程序使用 [SQL 数据库](/documentation/articles/web-sites-python-ptvs-django-sql)和 [MySQL](/documentation/articles/web-sites-python-ptvs-django-mysql) 的教程展示了创建数据库服务、更改 `DjangoWebProject/settings.py` 中的数据库设置所需的步骤以及安装所需的库。\n\n当然，如果想要管理您自己的数据库服务器，您可以使用在 Azure 上运行的 Windows 或 Linux 虚拟机来执行此操作。\n\n<a name=\"django-admin-interface\"></a>\n## Django 管理界面\n\n开始构建您的模型后，您将需要使用一些数据来填充数据库。交互方式添加和编辑的一种简便方法是使用 Django 管理界面。\n\n该管理界面的代码在应用程序源中已被注释掉，但有清楚的标记，可以方便地将其启用（搜索“admin”）。\n\n将其启用后，请同步数据库、运行应用程序并导航到 `/admin`。\n\n<a name=\"next-steps\"></a>\n## 后续步骤\n\n通过下面的链接，可了解有关 Django 和 Python Tools for Visual Studio的详细信息：\n \n- [Django 文档][]\n- [Python Tools for Visual Studio 文档][] \n\n有关使用 SQL 数据库和 MySQL 的信息：\n\n- [具有 Python Tools for Visual Studio 的 Azure 上的 Django 和 MySQL]\n- [具有 Python Tools for Visual Studio 的 Azure 上的 Django 和 SQL 数据库]\n\n\n<!--Link references-->\n[具有 Python Tools for Visual Studio 的 Azure 上的 Django 和 MySQL]: /documentation/articles/web-sites-python-ptvs-django-mysql\n[具有 Python Tools for Visual Studio 的 Azure 上的 Django 和 SQL 数据库]: /documentation/articles/web-sites-python-ptvs-django-sql\n[SQL 数据库]: /documentation/articles/web-sites-python-ptvs-django-sql\n[MySQL]: /documentation/articles/web-sites-python-ptvs-django-mysql\n\n<!--External Link references-->\n[Azure SDK for Python 2.7]: http://go.microsoft.com/fwlink/?linkid=254281\n[Azure SDK for Python 3.4]: http://go.microsoft.com/fwlink/?linkid=516990\n[python.org]: http://www.python.org/\n[Git for Windows]: http://msysgit.github.io/\n[GitHub for Windows]: https://windows.github.com/\n[Python Tools for Visual Studio]: http://aka.ms/ptvs\n[Python Tools 2.2 for Visual Studio]: http://go.microsoft.com/fwlink/?LinkID=624025\n[Visual Studio]: http://www.visualstudio.com/\n[Python Tools for Visual Studio 文档]: http://aka.ms/ptvsdocs\n[Django 文档]: https://www.djangoproject.com/\n\n<!---HONumber=76-->"}